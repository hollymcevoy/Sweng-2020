declare type CardActionWithImageAndTitle = {
    image: string;
} | {
    title: string;
} | {
    image: string;
    title: string;
};
/**
 * A `call` action represents a telephone number that may be called.
 *
 * https://github.com/Microsoft/botframework-sdk/blob/main/specs/botframework-activity/botframework-activity.md#call
 */
declare type CallCardAction = CardActionWithImageAndTitle & {
    type: 'call';
    value: string;
};
/**
 * A `downloadFile` action represents a hyperlink to be downloaded.
 *
 * https://github.com/Microsoft/botframework-sdk/blob/main/specs/botframework-activity/botframework-activity.md#download-file-actions
 */
declare type DownloadFileCardAction = CardActionWithImageAndTitle & {
    type: 'downloadFile';
    value: string;
};
/**
 * An `imBack` action represents a text response that is added to the chat feed.
 *
 * https://github.com/Microsoft/botframework-sdk/blob/main/specs/botframework-activity/botframework-activity.md#im-back
 */
declare type IMBackCardAction = CardActionWithImageAndTitle & {
    type: 'imBack';
    value: string;
};
/**
 * A `messageBack` action represents a text response to be sent via the chat system.
 *
 * https://github.com/Microsoft/botframework-sdk/blob/main/specs/botframework-activity/botframework-activity.md#message-back
 */
declare type MessageBackCardAction = CardActionWithImageAndTitle & {
    displayText?: string;
    text?: string;
    type: 'messageBack';
    value?: {
        [key: string]: any;
    };
};
/**
 * An `openUrl` action represents a hyperlink to be handled by the client.
 *
 * https://github.com/Microsoft/botframework-sdk/blob/main/specs/botframework-activity/botframework-activity.md#open-url-actions
 */
declare type OpenURLCardAction = CardActionWithImageAndTitle & {
    type: 'openUrl';
    value: string;
};
/**
 * A `playAudio` action represents audio media that may be played.
 *
 * https://github.com/Microsoft/botframework-sdk/blob/main/specs/botframework-activity/botframework-activity.md#play-audio
 */
declare type PlayAudioCardAction = CardActionWithImageAndTitle & {
    type: 'playAudio';
    value: string;
};
/**
 * A `playVideo` action represents video media that may be played.
 *
 * https://github.com/Microsoft/botframework-sdk/blob/main/specs/botframework-activity/botframework-activity.md#play-video
 */
declare type PlayVideoCardAction = CardActionWithImageAndTitle & {
    type: 'playVideo';
    value: string;
};
/**
 * A `postBack` action represents a text response that is not added to the chat feed.
 *
 * https://github.com/Microsoft/botframework-sdk/blob/main/specs/botframework-activity/botframework-activity.md#post-back
 */
declare type PostBackCardAction = CardActionWithImageAndTitle & {
    type: 'postBack';
    value: any;
};
/**
 * A `showImage` action represents an image that may be displayed.
 *
 * https://github.com/Microsoft/botframework-sdk/blob/main/specs/botframework-activity/botframework-activity.md#show-image-file-actions
 */
declare type ShowImageCardAction = CardActionWithImageAndTitle & {
    type: 'showImage';
    value: string;
};
/**
 * A `signin` action represents a hyperlink to be handled by the client's signin system.
 *
 * https://github.com/Microsoft/botframework-sdk/blob/main/specs/botframework-activity/botframework-activity.md#signin
 */
declare type SignInCardAction = CardActionWithImageAndTitle & {
    type: 'signin';
    value: string;
};
/**
 * A card action represents a clickable or interactive button for use within cards or as suggested actions. They are used to solicit input from users. Despite their name, card actions are not limited to use solely on cards.
 *
 * https://github.com/Microsoft/botframework-sdk/blob/main/specs/botframework-activity/botframework-activity.md#card-action
 */
declare type DirectLineCardAction = CallCardAction | DownloadFileCardAction | IMBackCardAction | MessageBackCardAction | OpenURLCardAction | PlayAudioCardAction | PlayVideoCardAction | PostBackCardAction | ShowImageCardAction | SignInCardAction;
export default DirectLineCardAction;
//# sourceMappingURL=DirectLineCardAction.d.ts.map