"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = createStore;
exports.withDevTools = withDevTools;

var _redux = require("redux");

var _reduxDevtoolsExtension = require("redux-devtools-extension");

var _reduxSaga = _interopRequireDefault(require("redux-saga"));

var _reducer = _interopRequireDefault(require("./reducer"));

var _sagaError = _interopRequireDefault(require("./actions/sagaError"));

var _sagas = _interopRequireDefault(require("./sagas"));

function createEnhancerAndSagaMiddleware(getStore) {
  var sagaMiddleware = (0, _reduxSaga["default"])({
    onError: function onError() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      var err = args[0];
      console.error(err);
      var store = getStore();
      store && store.dispatch((0, _sagaError["default"])());
    }
  });

  for (var _len = arguments.length, middlewares = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    middlewares[_key - 1] = arguments[_key];
  }

  return {
    enhancer: _redux.applyMiddleware.apply(void 0, middlewares.concat([sagaMiddleware])),
    sagaMiddleware: sagaMiddleware
  };
}

function createStore(initialState) {
  for (var _len3 = arguments.length, middlewares = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
    middlewares[_key3 - 1] = arguments[_key3];
  }

  // We are sure the "getStore" (first argument) is not called on "createEnhancerAndSagaMiddleware()".
  // eslint-disable-next-line @typescript-eslint/no-use-before-define
  var _createEnhancerAndSag = createEnhancerAndSagaMiddleware.apply(void 0, [function () {
    return store;
  }].concat(middlewares)),
      enhancer = _createEnhancerAndSag.enhancer,
      sagaMiddleware = _createEnhancerAndSag.sagaMiddleware;

  var store = (0, _redux.createStore)(_reducer["default"], initialState || {}, enhancer);
  sagaMiddleware.run(_sagas["default"]);
  return store;
}

function withDevTools(initialState) {
  for (var _len4 = arguments.length, middlewares = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
    middlewares[_key4 - 1] = arguments[_key4];
  }

  // We are sure the "getStore" (first argument) is not called on "createEnhancerAndSagaMiddleware()".
  // eslint-disable-next-line @typescript-eslint/no-use-before-define
  var _createEnhancerAndSag2 = createEnhancerAndSagaMiddleware.apply(void 0, [function () {
    return store;
  }].concat(middlewares)),
      enhancer = _createEnhancerAndSag2.enhancer,
      sagaMiddleware = _createEnhancerAndSag2.sagaMiddleware;

  var store = (0, _redux.createStore)(_reducer["default"], initialState || {}, (0, _reduxDevtoolsExtension.composeWithDevTools)(enhancer));
  sagaMiddleware.run(_sagas["default"]);
  return store;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jcmVhdGVTdG9yZS50cyJdLCJuYW1lcyI6WyJjcmVhdGVFbmhhbmNlckFuZFNhZ2FNaWRkbGV3YXJlIiwiZ2V0U3RvcmUiLCJzYWdhTWlkZGxld2FyZSIsIm9uRXJyb3IiLCJhcmdzIiwiZXJyIiwiY29uc29sZSIsImVycm9yIiwic3RvcmUiLCJkaXNwYXRjaCIsIm1pZGRsZXdhcmVzIiwiZW5oYW5jZXIiLCJhcHBseU1pZGRsZXdhcmUiLCJjcmVhdGVTdG9yZSIsImluaXRpYWxTdGF0ZSIsInJlZHVjZXIiLCJydW4iLCJzYWdhcyIsIndpdGhEZXZUb29scyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOztBQUNBOztBQUVBLFNBQVNBLCtCQUFULENBQXlDQyxRQUF6QyxFQUFtRTtBQUNqRSxNQUFNQyxjQUFjLEdBQUcsMkJBQXFCO0FBQzFDQyxJQUFBQSxPQUFPLEVBQUUsbUJBQWE7QUFBQSx5Q0FBVEMsSUFBUztBQUFUQSxRQUFBQSxJQUFTO0FBQUE7O0FBQ3BCLFVBQU9DLEdBQVAsR0FBY0QsSUFBZDtBQUVBRSxNQUFBQSxPQUFPLENBQUNDLEtBQVIsQ0FBY0YsR0FBZDtBQUVBLFVBQU1HLEtBQUssR0FBR1AsUUFBUSxFQUF0QjtBQUVBTyxNQUFBQSxLQUFLLElBQUlBLEtBQUssQ0FBQ0MsUUFBTixDQUFlLDRCQUFmLENBQVQ7QUFDRDtBQVR5QyxHQUFyQixDQUF2Qjs7QUFEaUUsb0NBQWJDLFdBQWE7QUFBYkEsSUFBQUEsV0FBYTtBQUFBOztBQWFqRSxTQUFPO0FBQ0xDLElBQUFBLFFBQVEsRUFBRUMscUNBQW1CRixXQUFuQixTQUFnQ1IsY0FBaEMsR0FETDtBQUVMQSxJQUFBQSxjQUFjLEVBQWRBO0FBRkssR0FBUDtBQUlEOztBQUVjLFNBQVNXLFdBQVQsQ0FBcUJDLFlBQXJCLEVBQTJEO0FBQUEscUNBQXBCSixXQUFvQjtBQUFwQkEsSUFBQUEsV0FBb0I7QUFBQTs7QUFDeEU7QUFDQTtBQUNBLDhCQUFxQ1YsK0JBQStCLE1BQS9CLFVBQWdDO0FBQUEsV0FBTVEsS0FBTjtBQUFBLEdBQWhDLFNBQWdERSxXQUFoRCxFQUFyQztBQUFBLE1BQVFDLFFBQVIseUJBQVFBLFFBQVI7QUFBQSxNQUFrQlQsY0FBbEIseUJBQWtCQSxjQUFsQjs7QUFDQSxNQUFNTSxLQUFLLEdBQUcsd0JBQWlCTyxtQkFBakIsRUFBMEJELFlBQVksSUFBSSxFQUExQyxFQUE4Q0gsUUFBOUMsQ0FBZDtBQUVBVCxFQUFBQSxjQUFjLENBQUNjLEdBQWYsQ0FBbUJDLGlCQUFuQjtBQUVBLFNBQU9ULEtBQVA7QUFDRDs7QUFFTSxTQUFTVSxZQUFULENBQXNCSixZQUF0QixFQUE0RDtBQUFBLHFDQUFwQkosV0FBb0I7QUFBcEJBLElBQUFBLFdBQW9CO0FBQUE7O0FBQ2pFO0FBQ0E7QUFDQSwrQkFBcUNWLCtCQUErQixNQUEvQixVQUFnQztBQUFBLFdBQU1RLEtBQU47QUFBQSxHQUFoQyxTQUFnREUsV0FBaEQsRUFBckM7QUFBQSxNQUFRQyxRQUFSLDBCQUFRQSxRQUFSO0FBQUEsTUFBa0JULGNBQWxCLDBCQUFrQkEsY0FBbEI7O0FBQ0EsTUFBTU0sS0FBSyxHQUFHLHdCQUFpQk8sbUJBQWpCLEVBQTBCRCxZQUFZLElBQUksRUFBMUMsRUFBOEMsaURBQW9CSCxRQUFwQixDQUE5QyxDQUFkO0FBRUFULEVBQUFBLGNBQWMsQ0FBQ2MsR0FBZixDQUFtQkMsaUJBQW5CO0FBRUEsU0FBT1QsS0FBUDtBQUNEIiwic291cmNlUm9vdCI6ImNvcmU6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXBwbHlNaWRkbGV3YXJlLCBjcmVhdGVTdG9yZSBhcyBjcmVhdGVSZWR1eFN0b3JlLCBTdG9yZSB9IGZyb20gJ3JlZHV4JztcbmltcG9ydCB7IGNvbXBvc2VXaXRoRGV2VG9vbHMgfSBmcm9tICdyZWR1eC1kZXZ0b29scy1leHRlbnNpb24nO1xuaW1wb3J0IGNyZWF0ZVNhZ2FNaWRkbGV3YXJlIGZyb20gJ3JlZHV4LXNhZ2EnO1xuXG5pbXBvcnQgcmVkdWNlciBmcm9tICcuL3JlZHVjZXInO1xuaW1wb3J0IHNhZ2FFcnJvciBmcm9tICcuL2FjdGlvbnMvc2FnYUVycm9yJztcbmltcG9ydCBzYWdhcyBmcm9tICcuL3NhZ2FzJztcblxuZnVuY3Rpb24gY3JlYXRlRW5oYW5jZXJBbmRTYWdhTWlkZGxld2FyZShnZXRTdG9yZSwgLi4ubWlkZGxld2FyZXMpIHtcbiAgY29uc3Qgc2FnYU1pZGRsZXdhcmUgPSBjcmVhdGVTYWdhTWlkZGxld2FyZSh7XG4gICAgb25FcnJvcjogKC4uLmFyZ3MpID0+IHtcbiAgICAgIGNvbnN0IFtlcnJdID0gYXJncztcblxuICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xuXG4gICAgICBjb25zdCBzdG9yZSA9IGdldFN0b3JlKCk7XG5cbiAgICAgIHN0b3JlICYmIHN0b3JlLmRpc3BhdGNoKHNhZ2FFcnJvcigpKTtcbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiB7XG4gICAgZW5oYW5jZXI6IGFwcGx5TWlkZGxld2FyZSguLi5taWRkbGV3YXJlcywgc2FnYU1pZGRsZXdhcmUpLFxuICAgIHNhZ2FNaWRkbGV3YXJlXG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZVN0b3JlKGluaXRpYWxTdGF0ZT8sIC4uLm1pZGRsZXdhcmVzKTogU3RvcmUge1xuICAvLyBXZSBhcmUgc3VyZSB0aGUgXCJnZXRTdG9yZVwiIChmaXJzdCBhcmd1bWVudCkgaXMgbm90IGNhbGxlZCBvbiBcImNyZWF0ZUVuaGFuY2VyQW5kU2FnYU1pZGRsZXdhcmUoKVwiLlxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVzZS1iZWZvcmUtZGVmaW5lXG4gIGNvbnN0IHsgZW5oYW5jZXIsIHNhZ2FNaWRkbGV3YXJlIH0gPSBjcmVhdGVFbmhhbmNlckFuZFNhZ2FNaWRkbGV3YXJlKCgpID0+IHN0b3JlLCAuLi5taWRkbGV3YXJlcyk7XG4gIGNvbnN0IHN0b3JlID0gY3JlYXRlUmVkdXhTdG9yZShyZWR1Y2VyLCBpbml0aWFsU3RhdGUgfHwge30sIGVuaGFuY2VyKTtcblxuICBzYWdhTWlkZGxld2FyZS5ydW4oc2FnYXMpO1xuXG4gIHJldHVybiBzdG9yZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHdpdGhEZXZUb29scyhpbml0aWFsU3RhdGU/LCAuLi5taWRkbGV3YXJlcyk6IFN0b3JlIHtcbiAgLy8gV2UgYXJlIHN1cmUgdGhlIFwiZ2V0U3RvcmVcIiAoZmlyc3QgYXJndW1lbnQpIGlzIG5vdCBjYWxsZWQgb24gXCJjcmVhdGVFbmhhbmNlckFuZFNhZ2FNaWRkbGV3YXJlKClcIi5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11c2UtYmVmb3JlLWRlZmluZVxuICBjb25zdCB7IGVuaGFuY2VyLCBzYWdhTWlkZGxld2FyZSB9ID0gY3JlYXRlRW5oYW5jZXJBbmRTYWdhTWlkZGxld2FyZSgoKSA9PiBzdG9yZSwgLi4ubWlkZGxld2FyZXMpO1xuICBjb25zdCBzdG9yZSA9IGNyZWF0ZVJlZHV4U3RvcmUocmVkdWNlciwgaW5pdGlhbFN0YXRlIHx8IHt9LCBjb21wb3NlV2l0aERldlRvb2xzKGVuaGFuY2VyKSk7XG5cbiAgc2FnYU1pZGRsZXdhcmUucnVuKHNhZ2FzKTtcblxuICByZXR1cm4gc3RvcmU7XG59XG4iXX0=