"use strict";

var _regeneratorRuntime2 = require("@babel/runtime/regenerator");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = markAllAsSpokenOnStopSpeakActivitySaga;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _effects = require("redux-saga/effects");

var _activities = require("../selectors/activities");

var _stopSpeakingActivity = require("../actions/stopSpeakingActivity");

var _markActivity = _interopRequireDefault(require("../actions/markActivity"));

var _speakingActivity = _interopRequireDefault(require("../definitions/speakingActivity"));

var _marked = /*#__PURE__*/_regeneratorRuntime2.mark(markAllAsSpoken),
    _marked2 = /*#__PURE__*/_regeneratorRuntime2.mark(markAllAsSpokenOnStopSpeakActivitySaga);

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function markAllAsSpoken() {
  var speakingActivities, _iterator, _step, activity;

  return _regenerator["default"].wrap(function markAllAsSpoken$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return (0, _effects.select)((0, _activities.of)(_speakingActivity["default"]));

        case 2:
          speakingActivities = _context.sent;
          _iterator = _createForOfIteratorHelper(speakingActivities);
          _context.prev = 4;

          _iterator.s();

        case 6:
          if ((_step = _iterator.n()).done) {
            _context.next = 12;
            break;
          }

          activity = _step.value;
          _context.next = 10;
          return (0, _effects.put)((0, _markActivity["default"])(activity, 'speak', false));

        case 10:
          _context.next = 6;
          break;

        case 12:
          _context.next = 17;
          break;

        case 14:
          _context.prev = 14;
          _context.t0 = _context["catch"](4);

          _iterator.e(_context.t0);

        case 17:
          _context.prev = 17;

          _iterator.f();

          return _context.finish(17);

        case 20:
        case "end":
          return _context.stop();
      }
    }
  }, _marked, null, [[4, 14, 17, 20]]);
} // TODO: [P4] We should turn this into a reducer instead


function markAllAsSpokenOnStopSpeakActivitySaga() {
  return _regenerator["default"].wrap(function markAllAsSpokenOnStopSpeakActivitySaga$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          _context2.next = 2;
          return (0, _effects.takeEvery)(_stopSpeakingActivity.STOP_SPEAKING_ACTIVITY, markAllAsSpoken);

        case 2:
        case "end":
          return _context2.stop();
      }
    }
  }, _marked2);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zYWdhcy9tYXJrQWxsQXNTcG9rZW5PblN0b3BTcGVha0FjdGl2aXR5U2FnYS5qcyJdLCJuYW1lcyI6WyJtYXJrQWxsQXNTcG9rZW4iLCJtYXJrQWxsQXNTcG9rZW5PblN0b3BTcGVha0FjdGl2aXR5U2FnYSIsInNwZWFraW5nQWN0aXZpdHkiLCJzcGVha2luZ0FjdGl2aXRpZXMiLCJhY3Rpdml0eSIsIlNUT1BfU1BFQUtJTkdfQUNUSVZJVFkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7cURBRVVBLGU7c0RBU2VDLHNDOzs7Ozs7OztBQVR6QixTQUFVRCxlQUFWO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUM2QixpQkFBTSxxQkFBTyxvQkFBYUUsNEJBQWIsQ0FBUCxDQUFOOztBQUQ3QjtBQUNRQyxVQUFBQSxrQkFEUjtBQUFBLGlEQUd5QkEsa0JBSHpCO0FBQUE7O0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFHYUMsVUFBQUEsUUFIYjtBQUFBO0FBSUksaUJBQU0sa0JBQUksOEJBQWFBLFFBQWIsRUFBdUIsT0FBdkIsRUFBZ0MsS0FBaEMsQ0FBSixDQUFOOztBQUpKO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBOztBQUFBOztBQUFBO0FBQUE7O0FBQUE7O0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsQyxDQVFBOzs7QUFDZSxTQUFVSCxzQ0FBVjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDYixpQkFBTSx3QkFBVUksNENBQVYsRUFBa0NMLGVBQWxDLENBQU47O0FBRGE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEiLCJzb3VyY2VSb290IjoiY29yZTovLy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwdXQsIHNlbGVjdCwgdGFrZUV2ZXJ5IH0gZnJvbSAncmVkdXgtc2FnYS9lZmZlY3RzJztcblxuaW1wb3J0IHsgb2YgYXMgYWN0aXZpdGllc09mIH0gZnJvbSAnLi4vc2VsZWN0b3JzL2FjdGl2aXRpZXMnO1xuaW1wb3J0IHsgU1RPUF9TUEVBS0lOR19BQ1RJVklUWSB9IGZyb20gJy4uL2FjdGlvbnMvc3RvcFNwZWFraW5nQWN0aXZpdHknO1xuaW1wb3J0IG1hcmtBY3Rpdml0eSBmcm9tICcuLi9hY3Rpb25zL21hcmtBY3Rpdml0eSc7XG5pbXBvcnQgc3BlYWtpbmdBY3Rpdml0eSBmcm9tICcuLi9kZWZpbml0aW9ucy9zcGVha2luZ0FjdGl2aXR5JztcblxuZnVuY3Rpb24qIG1hcmtBbGxBc1Nwb2tlbigpIHtcbiAgY29uc3Qgc3BlYWtpbmdBY3Rpdml0aWVzID0geWllbGQgc2VsZWN0KGFjdGl2aXRpZXNPZihzcGVha2luZ0FjdGl2aXR5KSk7XG5cbiAgZm9yIChjb25zdCBhY3Rpdml0eSBvZiBzcGVha2luZ0FjdGl2aXRpZXMpIHtcbiAgICB5aWVsZCBwdXQobWFya0FjdGl2aXR5KGFjdGl2aXR5LCAnc3BlYWsnLCBmYWxzZSkpO1xuICB9XG59XG5cbi8vIFRPRE86IFtQNF0gV2Ugc2hvdWxkIHR1cm4gdGhpcyBpbnRvIGEgcmVkdWNlciBpbnN0ZWFkXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiogbWFya0FsbEFzU3Bva2VuT25TdG9wU3BlYWtBY3Rpdml0eVNhZ2EoKSB7XG4gIHlpZWxkIHRha2VFdmVyeShTVE9QX1NQRUFLSU5HX0FDVElWSVRZLCBtYXJrQWxsQXNTcG9rZW4pO1xufVxuIl19