"use strict";

require("core-js/modules/es.object.define-property.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = normalizeStyleOptions;
var DOT_BOX_SIZE = 20;
var DOT_SIZE = 6;
var FLIPPER_BOX_WIDTH = 60;
var FLIPPER_SIZE = 40;
var SCROLL_BAR_HEIGHT = 8;
var SCROLL_BAR_MARGIN = 4;

function normalizeStyleOptions() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      autoCenter = _ref.autoCenter,
      autoHide = _ref.autoHide,
      autoHideFlipperOnEdge = _ref.autoHideFlipperOnEdge,
      cursor = _ref.cursor,
      dir = _ref.dir,
      dotBoxSize = _ref.dotBoxSize,
      dotSize = _ref.dotSize,
      flipperBlurFocusOnClick = _ref.flipperBlurFocusOnClick,
      flipperBoxWidth = _ref.flipperBoxWidth,
      flipperSize = _ref.flipperSize,
      leftFlipperText = _ref.leftFlipperText,
      rightFlipperText = _ref.rightFlipperText,
      scrollBarHeight = _ref.scrollBarHeight,
      scrollBarMargin = _ref.scrollBarMargin,
      showDots = _ref.showDots,
      showFlipper = _ref.showFlipper,
      showScrollBar = _ref.showScrollBar;

  var rtl = dir === 'rtl';
  return {
    autoCenter: autoCenter !== false,
    autoHide: autoHide !== false,
    autoHideFlipperOnEdge: autoHideFlipperOnEdge !== false,
    cursor: typeof cursor === 'undefined' ? 'pointer' : cursor,
    dotBoxSize: typeof dotBoxSize === 'number' ? dotBoxSize : DOT_BOX_SIZE,
    dotSize: typeof dotSize === 'number' ? dotSize : DOT_SIZE,
    flipperBlurFocusOnClick: flipperBlurFocusOnClick === true,
    flipperBoxWidth: typeof flipperBoxWidth === 'number' ? flipperBoxWidth : FLIPPER_BOX_WIDTH,
    flipperSize: typeof flipperSize === 'number' ? flipperSize : FLIPPER_SIZE,
    leftFlipperText: leftFlipperText || (rtl ? '>' : '<'),
    rightFlipperText: rightFlipperText || (rtl ? '<' : '>'),
    scrollBarHeight: typeof scrollBarHeight === 'number' ? scrollBarHeight : SCROLL_BAR_HEIGHT,
    scrollBarMargin: typeof scrollBarMargin === 'number' ? scrollBarMargin : SCROLL_BAR_MARGIN,
    showDots: showDots !== false,
    showFlipper: showFlipper !== false,
    showScrollBar: showScrollBar !== false
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9wYXRjaFN0eWxlT3B0aW9ucy5qcyJdLCJuYW1lcyI6WyJET1RfQk9YX1NJWkUiLCJET1RfU0laRSIsIkZMSVBQRVJfQk9YX1dJRFRIIiwiRkxJUFBFUl9TSVpFIiwiU0NST0xMX0JBUl9IRUlHSFQiLCJTQ1JPTExfQkFSX01BUkdJTiIsIm5vcm1hbGl6ZVN0eWxlT3B0aW9ucyIsImF1dG9DZW50ZXIiLCJhdXRvSGlkZSIsImF1dG9IaWRlRmxpcHBlck9uRWRnZSIsImN1cnNvciIsImRpciIsImRvdEJveFNpemUiLCJkb3RTaXplIiwiZmxpcHBlckJsdXJGb2N1c09uQ2xpY2siLCJmbGlwcGVyQm94V2lkdGgiLCJmbGlwcGVyU2l6ZSIsImxlZnRGbGlwcGVyVGV4dCIsInJpZ2h0RmxpcHBlclRleHQiLCJzY3JvbGxCYXJIZWlnaHQiLCJzY3JvbGxCYXJNYXJnaW4iLCJzaG93RG90cyIsInNob3dGbGlwcGVyIiwic2hvd1Njcm9sbEJhciIsInJ0bCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxJQUFNQSxZQUFZLEdBQUcsRUFBckI7QUFDQSxJQUFNQyxRQUFRLEdBQUcsQ0FBakI7QUFFQSxJQUFNQyxpQkFBaUIsR0FBRyxFQUExQjtBQUNBLElBQU1DLFlBQVksR0FBRyxFQUFyQjtBQUVBLElBQU1DLGlCQUFpQixHQUFHLENBQTFCO0FBQ0EsSUFBTUMsaUJBQWlCLEdBQUcsQ0FBMUI7O0FBRWUsU0FBU0MscUJBQVQsR0FrQlA7QUFBQSxpRkFBSixFQUFJO0FBQUEsTUFqQk5DLFVBaUJNLFFBakJOQSxVQWlCTTtBQUFBLE1BaEJOQyxRQWdCTSxRQWhCTkEsUUFnQk07QUFBQSxNQWZOQyxxQkFlTSxRQWZOQSxxQkFlTTtBQUFBLE1BZE5DLE1BY00sUUFkTkEsTUFjTTtBQUFBLE1BYk5DLEdBYU0sUUFiTkEsR0FhTTtBQUFBLE1BWk5DLFVBWU0sUUFaTkEsVUFZTTtBQUFBLE1BWE5DLE9BV00sUUFYTkEsT0FXTTtBQUFBLE1BVk5DLHVCQVVNLFFBVk5BLHVCQVVNO0FBQUEsTUFUTkMsZUFTTSxRQVROQSxlQVNNO0FBQUEsTUFSTkMsV0FRTSxRQVJOQSxXQVFNO0FBQUEsTUFQTkMsZUFPTSxRQVBOQSxlQU9NO0FBQUEsTUFOTkMsZ0JBTU0sUUFOTkEsZ0JBTU07QUFBQSxNQUxOQyxlQUtNLFFBTE5BLGVBS007QUFBQSxNQUpOQyxlQUlNLFFBSk5BLGVBSU07QUFBQSxNQUhOQyxRQUdNLFFBSE5BLFFBR007QUFBQSxNQUZOQyxXQUVNLFFBRk5BLFdBRU07QUFBQSxNQUROQyxhQUNNLFFBRE5BLGFBQ007O0FBQ04sTUFBTUMsR0FBRyxHQUFHYixHQUFHLEtBQUssS0FBcEI7QUFFQSxTQUFPO0FBQ0xKLElBQUFBLFVBQVUsRUFBRUEsVUFBVSxLQUFLLEtBRHRCO0FBRUxDLElBQUFBLFFBQVEsRUFBRUEsUUFBUSxLQUFLLEtBRmxCO0FBR0xDLElBQUFBLHFCQUFxQixFQUFFQSxxQkFBcUIsS0FBSyxLQUg1QztBQUlMQyxJQUFBQSxNQUFNLEVBQUUsT0FBT0EsTUFBUCxLQUFrQixXQUFsQixHQUFnQyxTQUFoQyxHQUE0Q0EsTUFKL0M7QUFLTEUsSUFBQUEsVUFBVSxFQUFFLE9BQU9BLFVBQVAsS0FBc0IsUUFBdEIsR0FBaUNBLFVBQWpDLEdBQThDWixZQUxyRDtBQU1MYSxJQUFBQSxPQUFPLEVBQUUsT0FBT0EsT0FBUCxLQUFtQixRQUFuQixHQUE4QkEsT0FBOUIsR0FBd0NaLFFBTjVDO0FBT0xhLElBQUFBLHVCQUF1QixFQUFFQSx1QkFBdUIsS0FBSyxJQVBoRDtBQVFMQyxJQUFBQSxlQUFlLEVBQUUsT0FBT0EsZUFBUCxLQUEyQixRQUEzQixHQUFzQ0EsZUFBdEMsR0FBd0RiLGlCQVJwRTtBQVNMYyxJQUFBQSxXQUFXLEVBQUUsT0FBT0EsV0FBUCxLQUF1QixRQUF2QixHQUFrQ0EsV0FBbEMsR0FBZ0RiLFlBVHhEO0FBVUxjLElBQUFBLGVBQWUsRUFBRUEsZUFBZSxLQUFLTyxHQUFHLEdBQUcsR0FBSCxHQUFTLEdBQWpCLENBVjNCO0FBV0xOLElBQUFBLGdCQUFnQixFQUFFQSxnQkFBZ0IsS0FBS00sR0FBRyxHQUFHLEdBQUgsR0FBUyxHQUFqQixDQVg3QjtBQVlMTCxJQUFBQSxlQUFlLEVBQUUsT0FBT0EsZUFBUCxLQUEyQixRQUEzQixHQUFzQ0EsZUFBdEMsR0FBd0RmLGlCQVpwRTtBQWFMZ0IsSUFBQUEsZUFBZSxFQUFFLE9BQU9BLGVBQVAsS0FBMkIsUUFBM0IsR0FBc0NBLGVBQXRDLEdBQXdEZixpQkFicEU7QUFjTGdCLElBQUFBLFFBQVEsRUFBRUEsUUFBUSxLQUFLLEtBZGxCO0FBZUxDLElBQUFBLFdBQVcsRUFBRUEsV0FBVyxLQUFLLEtBZnhCO0FBZ0JMQyxJQUFBQSxhQUFhLEVBQUVBLGFBQWEsS0FBSztBQWhCNUIsR0FBUDtBQWtCRCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IERPVF9CT1hfU0laRSA9IDIwO1xuY29uc3QgRE9UX1NJWkUgPSA2O1xuXG5jb25zdCBGTElQUEVSX0JPWF9XSURUSCA9IDYwO1xuY29uc3QgRkxJUFBFUl9TSVpFID0gNDA7XG5cbmNvbnN0IFNDUk9MTF9CQVJfSEVJR0hUID0gODtcbmNvbnN0IFNDUk9MTF9CQVJfTUFSR0lOID0gNDtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbm9ybWFsaXplU3R5bGVPcHRpb25zKHtcbiAgYXV0b0NlbnRlcixcbiAgYXV0b0hpZGUsXG4gIGF1dG9IaWRlRmxpcHBlck9uRWRnZSxcbiAgY3Vyc29yLFxuICBkaXIsXG4gIGRvdEJveFNpemUsXG4gIGRvdFNpemUsXG4gIGZsaXBwZXJCbHVyRm9jdXNPbkNsaWNrLFxuICBmbGlwcGVyQm94V2lkdGgsXG4gIGZsaXBwZXJTaXplLFxuICBsZWZ0RmxpcHBlclRleHQsXG4gIHJpZ2h0RmxpcHBlclRleHQsXG4gIHNjcm9sbEJhckhlaWdodCxcbiAgc2Nyb2xsQmFyTWFyZ2luLFxuICBzaG93RG90cyxcbiAgc2hvd0ZsaXBwZXIsXG4gIHNob3dTY3JvbGxCYXJcbn0gPSB7fSkge1xuICBjb25zdCBydGwgPSBkaXIgPT09ICdydGwnO1xuXG4gIHJldHVybiB7XG4gICAgYXV0b0NlbnRlcjogYXV0b0NlbnRlciAhPT0gZmFsc2UsXG4gICAgYXV0b0hpZGU6IGF1dG9IaWRlICE9PSBmYWxzZSxcbiAgICBhdXRvSGlkZUZsaXBwZXJPbkVkZ2U6IGF1dG9IaWRlRmxpcHBlck9uRWRnZSAhPT0gZmFsc2UsXG4gICAgY3Vyc29yOiB0eXBlb2YgY3Vyc29yID09PSAndW5kZWZpbmVkJyA/ICdwb2ludGVyJyA6IGN1cnNvcixcbiAgICBkb3RCb3hTaXplOiB0eXBlb2YgZG90Qm94U2l6ZSA9PT0gJ251bWJlcicgPyBkb3RCb3hTaXplIDogRE9UX0JPWF9TSVpFLFxuICAgIGRvdFNpemU6IHR5cGVvZiBkb3RTaXplID09PSAnbnVtYmVyJyA/IGRvdFNpemUgOiBET1RfU0laRSxcbiAgICBmbGlwcGVyQmx1ckZvY3VzT25DbGljazogZmxpcHBlckJsdXJGb2N1c09uQ2xpY2sgPT09IHRydWUsXG4gICAgZmxpcHBlckJveFdpZHRoOiB0eXBlb2YgZmxpcHBlckJveFdpZHRoID09PSAnbnVtYmVyJyA/IGZsaXBwZXJCb3hXaWR0aCA6IEZMSVBQRVJfQk9YX1dJRFRILFxuICAgIGZsaXBwZXJTaXplOiB0eXBlb2YgZmxpcHBlclNpemUgPT09ICdudW1iZXInID8gZmxpcHBlclNpemUgOiBGTElQUEVSX1NJWkUsXG4gICAgbGVmdEZsaXBwZXJUZXh0OiBsZWZ0RmxpcHBlclRleHQgfHwgKHJ0bCA/ICc+JyA6ICc8JyksXG4gICAgcmlnaHRGbGlwcGVyVGV4dDogcmlnaHRGbGlwcGVyVGV4dCB8fCAocnRsID8gJzwnIDogJz4nKSxcbiAgICBzY3JvbGxCYXJIZWlnaHQ6IHR5cGVvZiBzY3JvbGxCYXJIZWlnaHQgPT09ICdudW1iZXInID8gc2Nyb2xsQmFySGVpZ2h0IDogU0NST0xMX0JBUl9IRUlHSFQsXG4gICAgc2Nyb2xsQmFyTWFyZ2luOiB0eXBlb2Ygc2Nyb2xsQmFyTWFyZ2luID09PSAnbnVtYmVyJyA/IHNjcm9sbEJhck1hcmdpbiA6IFNDUk9MTF9CQVJfTUFSR0lOLFxuICAgIHNob3dEb3RzOiBzaG93RG90cyAhPT0gZmFsc2UsXG4gICAgc2hvd0ZsaXBwZXI6IHNob3dGbGlwcGVyICE9PSBmYWxzZSxcbiAgICBzaG93U2Nyb2xsQmFyOiBzaG93U2Nyb2xsQmFyICE9PSBmYWxzZVxuICB9O1xufVxuIl19