"use strict";

require("core-js/modules/es.object.keys.js");

require("core-js/modules/es.symbol.js");

require("core-js/modules/es.array.filter.js");

require("core-js/modules/es.object.get-own-property-descriptor.js");

require("core-js/modules/es.array.for-each.js");

require("core-js/modules/web.dom-collections.for-each.js");

require("core-js/modules/es.object.get-own-property-descriptors.js");

require("core-js/modules/es.object.define-properties.js");

require("core-js/modules/es.object.define-property.js");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.object.to-string.js");

require("core-js/modules/es.string.iterator.js");

require("core-js/modules/es.weak-map.js");

require("core-js/modules/web.dom-collections.iterator.js");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _BasicFilm = _interopRequireDefault(require("./BasicFilm"));

var _Composer = _interopRequireDefault(require("./Composer"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var ReactFilm = function ReactFilm(_ref) {
  var autoCenter = _ref.autoCenter,
      autoHide = _ref.autoHide,
      autoHideFlipperOnEdge = _ref.autoHideFlipperOnEdge,
      children = _ref.children,
      className = _ref.className,
      dir = _ref.dir,
      flipperBlurFocusOnClick = _ref.flipperBlurFocusOnClick,
      height = _ref.height,
      leftFlipperText = _ref.leftFlipperText,
      nonce = _ref.nonce,
      rightFlipperText = _ref.rightFlipperText,
      showDots = _ref.showDots,
      showFlipper = _ref.showFlipper,
      showScrollBar = _ref.showScrollBar,
      styleSet = _ref.styleSet;
  var styleOptions = (0, _react.useMemo)(function () {
    return {
      autoCenter: autoCenter,
      autoHide: autoHide,
      autoHideFlipperOnEdge: autoHideFlipperOnEdge,
      dir: dir,
      leftFlipperText: leftFlipperText,
      flipperBlurFocusOnClick: flipperBlurFocusOnClick,
      rightFlipperText: rightFlipperText,
      showDots: showDots,
      showFlipper: showFlipper,
      showScrollBar: showScrollBar
    };
  }, [autoCenter, autoHide, autoHideFlipperOnEdge, dir, leftFlipperText, flipperBlurFocusOnClick, rightFlipperText, showDots, showFlipper, showScrollBar]);
  return /*#__PURE__*/_react["default"].createElement(_Composer["default"], {
    dir: dir,
    height: height,
    nonce: nonce,
    numItems: children ? _react.Children.count(children) : 0,
    styleOptions: styleOptions,
    styleSet: styleSet
  }, /*#__PURE__*/_react["default"].createElement(_BasicFilm["default"], {
    className: className
  }, children));
};

ReactFilm.defaultProps = _objectSpread(_objectSpread({}, _BasicFilm["default"].defaultProps), {}, {
  autoCenter: undefined,
  autoHide: undefined,
  autoHideFlipperOnEdge: undefined,
  children: undefined,
  className: undefined,
  dir: undefined,
  flipperBlurFocusOnClick: undefined,
  leftFlipperText: undefined,
  nonce: undefined,
  rightFlipperText: undefined,
  showDots: undefined,
  showFlipper: undefined,
  showScrollBar: undefined,
  styleSet: undefined
});
ReactFilm.propTypes = _objectSpread(_objectSpread({}, _BasicFilm["default"].propTypes), {}, {
  autoCenter: _propTypes["default"].bool,
  autoHide: _propTypes["default"].bool,
  autoHideFlipperOnEdge: _propTypes["default"].bool,
  children: _propTypes["default"].any,
  className: _propTypes["default"].string,
  dir: _propTypes["default"].oneOf(['auto', 'ltr', 'rtl']),
  flipperBlurFocusOnClick: _propTypes["default"].bool,
  height: _propTypes["default"].number,
  leftFlipperText: _propTypes["default"].string,
  nonce: _propTypes["default"].string,
  rightFlipperText: _propTypes["default"].string,
  showDots: _propTypes["default"].bool,
  showFlipper: _propTypes["default"].bool,
  showScrollBar: _propTypes["default"].bool,
  styleSet: _propTypes["default"].any
});
var _default = ReactFilm;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9SZWFjdEZpbG0uanMiXSwibmFtZXMiOlsiUmVhY3RGaWxtIiwiYXV0b0NlbnRlciIsImF1dG9IaWRlIiwiYXV0b0hpZGVGbGlwcGVyT25FZGdlIiwiY2hpbGRyZW4iLCJjbGFzc05hbWUiLCJkaXIiLCJmbGlwcGVyQmx1ckZvY3VzT25DbGljayIsImhlaWdodCIsImxlZnRGbGlwcGVyVGV4dCIsIm5vbmNlIiwicmlnaHRGbGlwcGVyVGV4dCIsInNob3dEb3RzIiwic2hvd0ZsaXBwZXIiLCJzaG93U2Nyb2xsQmFyIiwic3R5bGVTZXQiLCJzdHlsZU9wdGlvbnMiLCJDaGlsZHJlbiIsImNvdW50IiwiZGVmYXVsdFByb3BzIiwiQmFzaWNGaWxtIiwidW5kZWZpbmVkIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwiYm9vbCIsImFueSIsInN0cmluZyIsIm9uZU9mIiwibnVtYmVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUVBOztBQUNBOzs7Ozs7Ozs7O0FBRUEsSUFBTUEsU0FBUyxHQUFHLFNBQVpBLFNBQVksT0FnQlo7QUFBQSxNQWZKQyxVQWVJLFFBZkpBLFVBZUk7QUFBQSxNQWRKQyxRQWNJLFFBZEpBLFFBY0k7QUFBQSxNQWJKQyxxQkFhSSxRQWJKQSxxQkFhSTtBQUFBLE1BWkpDLFFBWUksUUFaSkEsUUFZSTtBQUFBLE1BWEpDLFNBV0ksUUFYSkEsU0FXSTtBQUFBLE1BVkpDLEdBVUksUUFWSkEsR0FVSTtBQUFBLE1BVEpDLHVCQVNJLFFBVEpBLHVCQVNJO0FBQUEsTUFSSkMsTUFRSSxRQVJKQSxNQVFJO0FBQUEsTUFQSkMsZUFPSSxRQVBKQSxlQU9JO0FBQUEsTUFOSkMsS0FNSSxRQU5KQSxLQU1JO0FBQUEsTUFMSkMsZ0JBS0ksUUFMSkEsZ0JBS0k7QUFBQSxNQUpKQyxRQUlJLFFBSkpBLFFBSUk7QUFBQSxNQUhKQyxXQUdJLFFBSEpBLFdBR0k7QUFBQSxN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QWFFZCxFQUFBQSxRQUFRLEVBQUVXLHNCQUFVQyxJQWJ0QjtBQWNFWCxFQUFBQSxXQUFXLEVBQUVVLHNCQUFVQyxJQWR6QjtBQWVFVixFQUFBQSxhQUFhLEVBQUVTLHNCQUFVQyxJQWYzQjtBQWdCRVQsRUFBQUEsUUFBUSxFQUFFUSxzQkFBVUU7QUFoQnRCO2VBbUJlekIsUyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QsIHsgQ2hpbGRyZW4sIHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBCYXNpY0ZpbG0gZnJvbSAnLi9CYXNpY0ZpbG0nO1xuaW1wb3J0IENvbXBvc2VyIGZyb20gJy4vQ29tcG9zZXInO1xuXG5jb25zdCBSZWFjdEZpbG0gPSAoe1xuICBhdXRvQ2VudGVyLFxuICBhdXRvSGlkZSxcbiAgYXV0b0hpZGVGbGlwcGVyT25FZGdlLFxuICBjaGlsZHJlbixcbiAgY2xhc3NOYW1lLFxuICBkaXIsXG4gIGZsaXBwZXJCbHVyRm9jdXNPbkNsaWNrLFxuICBoZWlnaHQsXG4gIGxlZnRGbGlwcGVyVGV4dCxcbiAgbm9uY2UsXG4gIHJpZ2h0RmxpcHBlclRleHQsXG4gIHNob3dEb3RzLFxuICBzaG93RmxpcHBlcixcbiAgc2hvd1Njcm9sbEJhcixcbiAgc3R5bGVTZXRcbn0pID0+IHtcbiAgY29uc3Qgc3R5bGVPcHRpb25zID0gdXNlTWVtbyhcbiAgICAoKSA9PiAoe1xuICAgICAgYXV0b0NlbnRlcixcbiAgICAgIGF1dG9IaWRlLFxuICAgICAgYXV0b0hpZGVGbGlwcGVyT25FZGdlLFxuICAgICAgZGlyLFxuICAgICAgbGVmdEZsaXBwZXJUZXh0LFxuICAgICAgZmxpcHBlckJsdXJGb2N1c09uQ2xpY2ssXG4gICAgICByaWdodEZsaXBwZXJUZXh0LFxuICAgICAgc2hvd0RvdHMsXG4gICAgICBzaG93RmxpcHBlcixcbiAgICAgIHNob3dTY3JvbGxCYXJcbiAgICB9KSxcbiAgICBbXG4gICAgICBhdXRvQ2VudGVyLFxuICAgICAgYXV0b0hpZGUsXG4gICAgICBhdXRvSGlkZUZsaXBwZXJPbkVkZ2UsXG4gICAgICBkaXIsXG4gICAgICBsZWZ0RmxpcHBlclRleHQsXG4gICAgICBmbGlwcGVyQmx1ckZvY3VzT25DbGljayxcbiAgICAgIHJpZ2h0RmxpcHBlclRleHQsXG4gICAgICBzaG93RG90cyxcbiAgICAgIHNob3dGbGlwcGVyLFxuICAgICAgc2hvd1Njcm9sbEJhclxuICAgIF1cbiAgKTtcblxuICByZXR1cm4gKFxuICAgIDxDb21wb3NlclxuICAgICAgZGlyPXtkaXJ9XG4gICAgICBoZWlnaHQ9e2hlaWdodH1cbiAgICAgIG5vbmNlPXtub25jZX1cbiAgICAgIG51bUl0ZW1zPXtjaGlsZHJlbiA/IENoaWxkcmVuLmNvdW50KGNoaWxkcmVuKSA6IDB9XG4gICAgICBzdHlsZU9wdGlvbnM9e3N0eWxlT3B0aW9uc31cbiAgICAgIHN0eWxlU2V0PXtzdHlsZVNldH1cbiAgICA+XG4gICAgICA8QmFzaWNGaWxtIGNsYXNzTmFtZT17Y2xhc3NOYW1lfT57Y2hpbGRyZW59PC9CYXNpY0ZpbG0+XG4gICAgPC9Db21wb3Nlcj5cbiAgKTtcbn07XG5cblJlYWN0RmlsbS5kZWZhdWx0UHJvcHMgPSB7XG4gIC4uLkJhc2ljRmlsbS5kZWZhdWx0UHJvcHMsXG4gIGF1dG9DZW50ZXI6IHVuZGVmaW5lZCxcbiAgYXV0b0hpZGU6IHVuZGVmaW5lZCxcbiAgYXV0b0hpZGVGbGlwcGVyT25FZGdlOiB1bmRlZmluZWQsXG4gIGNoaWxkcmVuOiB1bmRlZmluZWQsXG4gIGNsYXNzTmFtZTogdW5kZWZpbmVkLFxuICBkaXI6IHVuZGVmaW5lZCxcbiAgZmxpcHBlckJsdXJGb2N1c09uQ2xpY2s6IHVuZGVmaW5lZCxcbiAgbGVmdEZsaXBwZXJUZXh0OiB1bmRlZmluZWQsXG4gIG5vbmNlOiB1bmRlZmluZWQsXG4gIHJpZ2h0RmxpcHBlclRleHQ6IHVuZGVmaW5lZCxcbiAgc2hvd0RvdHM6IHVuZGVmaW5lZCxcbiAgc2hvd0ZsaXBwZXI6IHVuZGVmaW5lZCxcbiAgc2hvd1Njcm9sbEJhcjogdW5kZWZpbmVkLFxuICBzdHlsZVNldDogdW5kZWZpbmVkXG59O1xuXG5SZWFjdEZpbG0ucHJvcFR5cGVzID0ge1xuICAuLi5CYXNpY0ZpbG0ucHJvcFR5cGVzLFxuICBhdXRvQ2VudGVyOiBQcm9wVHlwZXMuYm9vbCxcbiAgYXV0b0hpZGU6IFByb3BUeXBlcy5ib29sLFxuICBhdXRvSGlkZUZsaXBwZXJPbkVkZ2U6IFByb3BUeXBlcy5ib29sLFxuICBjaGlsZHJlbjogUHJvcFR5cGVzLmFueSxcbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBkaXI6IFByb3BUeXBlcy5vbmVPZihbJ2F1dG8nLCAnbHRyJywgJ3J0bCddKSxcbiAgZmxpcHBlckJsdXJGb2N1c09uQ2xpY2s6IFByb3BUeXBlcy5ib29sLFxuICBoZWlnaHQ6IFByb3BUeXBlcy5udW1iZXIsXG4gIGxlZnRGbGlwcGVyVGV4dDogUHJvcFR5cGVzLnN0cmluZyxcbiAgbm9uY2U6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHJpZ2h0RmxpcHBlclRleHQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHNob3dEb3RzOiBQcm9wVHlwZXMuYm9vbCxcbiAgc2hvd0ZsaXBwZXI6IFByb3BUeXBlcy5ib29sLFxuICBzaG93U2Nyb2xsQmFyOiBQcm9wVHlwZXMuYm9vbCxcbiAgc3R5bGVTZXQ6IFByb3BUeXBlcy5hbnlcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFJlYWN0RmlsbTtcbiJdfQ==