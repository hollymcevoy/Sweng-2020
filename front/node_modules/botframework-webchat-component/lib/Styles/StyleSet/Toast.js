"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createToastStyle;

/* eslint no-magic-numbers: ["off"] */
function createToastStyle(_ref) {
  var primaryFont = _ref.primaryFont,
      toasterHeight = _ref.toasterHeight,
      toastErrorColor = _ref.toastErrorColor,
      toastFontSize = _ref.toastFontSize,
      toastIconWidth = _ref.toastIconWidth,
      toastInfoColor = _ref.toastInfoColor,
      toastSuccessColor = _ref.toastSuccessColor,
      toastTextPadding = _ref.toastTextPadding,
      toastWarnColor = _ref.toastWarnColor;
  return {
    fontFamily: primaryFont,
    fontSize: toastFontSize,
    minHeight: toasterHeight,
    '&.webchat__toast--error': {
      color: toastErrorColor,
      fill: toastErrorColor
    },
    '&.webchat__toast--info': {
      color: toastInfoColor,
      fill: toastInfoColor
    },
    '&.webchat__toast--success': {
      color: toastSuccessColor,
      fill: toastSuccessColor
    },
    '&.webchat__toast--warn': {
      color: toastWarnColor,
      fill: toastWarnColor
    },
    '& .webchat__toast__iconBox': {
      alignItems: 'center',
      display: 'flex',
      flexShrink: 0,
      height: toasterHeight,
      justifyContent: 'center',
      width: toastIconWidth
    },
    '& .webchat__toast__dismissButton': {
      alignItems: 'center',
      appearance: 'none',
      backgroundColor: 'Transparent',
      border: 0,
      display: 'flex',
      height: toasterHeight,
      justifyContent: 'center',
      outline: 0,
      padding: 0,
      width: toasterHeight,
      '&:focus .webchat__toast__dismissButtonFocus': {
        borderColor: 'rgba(26, 10, 0, .7)'
      },
      '&:hover .webchat__toast__dismissButtonFocus': {
        backgroundColor: 'rgba(0, 0, 0, .12)'
      }
    },
    '& .webchat__toast__dismissButtonFocus': {
      alignItems: 'center',
      borderColor: 'Transparent',
      borderStyle: 'solid',
      borderWidth: 1,
      borderRadius: 3,
      display: 'flex',
      height: 22,
      justifyContent: 'center',
      width: 22
    },
    '& .webchat__toast__text': {
      alignSelf: 'center',
      paddingBottom: toastTextPadding,
      paddingTop: toastTextPadding
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9TdHlsZXMvU3R5bGVTZXQvVG9hc3QudHMiXSwibmFtZXMiOlsiY3JlYXRlVG9hc3RTdHlsZSIsInByaW1hcnlGb250IiwidG9hc3RlckhlaWdodCIsInRvYXN0RXJyb3JDb2xvciIsInRvYXN0Rm9udFNpemUiLCJ0b2FzdEljb25XaWR0aCIsInRvYXN0SW5mb0NvbG9yIiwidG9hc3RTdWNjZXNzQ29sb3IiLCJ0b2FzdFRleHRQYWRkaW5nIiwidG9hc3RXYXJuQ29sb3IiLCJmb250RmFtaWx5IiwiZm9udFNpemUiLCJtaW5IZWlnaHQiLCJjb2xvciIsImZpbGwiLCJhbGlnbkl0ZW1zIiwiZGlzcGxheSIsImZsZXhTaHJpbmsiLCJoZWlnaHQiLCJqdXN0aWZ5Q29udGVudCIsIndpZHRoIiwiYXBwZWFyYW5jZSIsImJhY2tncm91bmRDb2xvciIsImJvcmRlciIsIm91dGxpbmUiLCJwYWRkaW5nIiwiYm9yZGVyQ29sb3IiLCJib3JkZXJTdHlsZSIsImJvcmRlcldpZHRoIiwiYm9yZGVyUmFkaXVzIiwiYWxpZ25TZWxmIiwicGFkZGluZ0JvdHRvbSIsInBhZGRpbmdUb3AiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUdlLFNBQVNBLGdCQUFULE9BVVE7QUFBQSxNQVRyQkMsV0FTcUIsUUFUckJBLFdBU3FCO0FBQUEsTUFSckJDLGFBUXFCLFFBUnJCQSxhQVFxQjtBQUFBLE1BUHJCQyxlQU9xQixRQVByQkEsZUFPcUI7QUFBQSxNQU5yQkMsYUFNcUIsUUFOckJBLGFBTXFCO0FBQUEsTUFMckJDLGNBS3FCLFFBTHJCQSxjQUtxQjtBQUFBLE1BSnJCQyxjQUlxQixRQUpyQkEsY0FJcUI7QUFBQSxNQUhyQkMsaUJBR3FCLFFBSHJCQSxpQkFHcUI7QUFBQSxNQUZyQkMsZ0JBRXFCLFFBRnJCQSxnQkFFcUI7QUFBQSxNQURyQkMsY0FDcUIsUUFEckJBLGNBQ3FCO0FBQ3JCLFNBQU87QUFDTEMsSUFBQUEsVUFBVSxFQUFFVCxXQURQO0FBRUxVLElBQUFBLFFBQVEsRUFBRVAsYUFGTDtBQUdMUSxJQUFBQSxTQUFTLEVBQUVWLGFBSE47QUFLTCwrQkFBMkI7QUFDekJXLE1BQUFBLEtBQUssRUFBRVYsZUFEa0I7QUFFekJXLE1BQUFBLElBQUksRUFBRVg7QUFGbUIsS0FMdEI7QUFVTCw4QkFBMEI7QUFDeEJVLE1BQUFBLEtBQUssRUFBRVAsY0FEaUI7QUFFeEJRLE1BQUFBLElBQUksRUFBRVI7QUFGa0IsS0FWckI7QUFlTCxpQ0FBNkI7QUFDM0JPLE1BQUFBLEtBQUssRUFBRU4saUJBRG9CO0FBRTNCTyxNQUFBQSxJQUFJLEVBQUVQO0FBRnFCLEtBZnhCO0FBb0JMLDhCQUEwQjtBQUN4Qk0sTUFBQUEsS0FBSyxFQUFFSixjQURpQjtBQUV4QkssTUFBQUEsSUFBSSxFQUFFTDtBQUZrQixLQXBCckI7QUF5Qkwsa0NBQThCO0FBQzVCTSxNQUFBQSxVQUFVLEVBQUUsUUFEZ0I7QUFFNUJDLE1BQUFBLE9BQU8sRUFBRSxNQUZtQjtBQUc1QkMsTUFBQUEsVUFBVSxFQUFFLENBSGdCO0FBSTVCQyxNQUFBQSxNQUFNLEVBQUVoQixhQUpvQjtBQUs1QmlCLE1BQUFBLGNBQWMsRUFBRSxRQUxZO0FBTTVCQyxNQUFBQSxLQUFLLEVBQUVmO0FBTnFCLEtBekJ6QjtBQWtDTCx3Q0FBb0M7QUFDbENVLE1BQUFBLFVBQVUsRUFBRSxRQURzQjtBQUVsQ00sTUFBQUEsVUFBVSxFQUFFLE1BRnNCO0FBR2xDQyxNQUFBQSxlQUFlLEVBQUUsYUFIaUI7QUFJbENDLE1BQUFBLE1BQU0sRUFBRSxDQUowQjtBQUtsQ1AsTUFBQUEsT0FBTyxFQUFFLE1BTHlCO0FBTWxDRSxNQUFBQSxNQUFNLEVBQUVoQixhQU4wQjtBQU9sQ2lCLE1BQUFBLGNBQWMsRUFBRSxRQVBrQjtBQVFsQ0ssTUFBQUEsT0FBTyxFQUFFLENBUnlCO0FBU2xDQyxNQUFBQSxPQUFPLEVBQUUsQ0FUeUI7QUFVbENMLE1BQUFBLEtBQUssRUFBRWxCLGFBVjJCO0FBWWxDLHFEQUErQztBQUM3Q3dCLFFBQUFBLFdBQVcsRUFBRTtBQURnQyxPQVpiO0FBZ0JsQyxxREFBK0M7QUFDN0NKLFFBQUFBLGVBQWUsRUFBRTtBQUQ0QjtBQWhCYixLQWxDL0I7QUF1REwsNkNBQXlDO0FBQ3ZDUCxNQUFBQSxVQUFVLEVBQUUsUUFEMkI7QUFFdkNXLE1BQUFBLFdBQVcsRUFBRSxhQUYwQjtBQUd2Q0MsTUFBQUEsV0FBVyxFQUFFLE9BSDBCO0FBSXZDQyxNQUFBQSxXQUFXLEVBQUUsQ0FKMEI7QUFLdkNDLE1BQUFBLFlBQVksRUFBRSxDQUx5QjtBQU12Q2IsTUFBQUEsT0FBTyxFQUFFLE1BTjhCO0FBT3ZDRSxNQUFBQSxNQUFNLEVBQUUsRUFQK0I7QUFRdkNDLE1BQUFBLGNBQWMsRUFBRSxRQVJ1QjtBQVN2Q0MsTUFBQUEsS0FBSyxFQUFFO0FBVGdDLEtBdkRwQztBQW1FTCwrQkFBMkI7QUFDekJVLE1BQUFBLFNBQVMsRUFBRSxRQURjO0FBRXpCQyxNQUFBQSxhQUFhLEVBQUV2QixnQkFGVTtBQUd6QndCLE1BQUFBLFVBQVUsRUFBRXhCO0FBSGE7QUFuRXRCLEdBQVA7QUF5RUQiLCJzb3VyY2VSb290IjoiY29tcG9uZW50Oi8vLyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludCBuby1tYWdpYy1udW1iZXJzOiBbXCJvZmZcIl0gKi9cbmltcG9ydCB7IFN0cmljdFN0eWxlT3B0aW9ucyB9IGZyb20gJ2JvdGZyYW1ld29yay13ZWJjaGF0LWFwaSc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZVRvYXN0U3R5bGUoe1xuICBwcmltYXJ5Rm9udCxcbiAgdG9hc3RlckhlaWdodCxcbiAgdG9hc3RFcnJvckNvbG9yLFxuICB0b2FzdEZvbnRTaXplLFxuICB0b2FzdEljb25XaWR0aCxcbiAgdG9hc3RJbmZvQ29sb3IsXG4gIHRvYXN0U3VjY2Vzc0NvbG9yLFxuICB0b2FzdFRleHRQYWRkaW5nLFxuICB0b2FzdFdhcm5Db2xvclxufTogU3RyaWN0U3R5bGVPcHRpb25zKSB7XG4gIHJldHVybiB7XG4gICAgZm9udEZhbWlseTogcHJpbWFyeUZvbnQsXG4gICAgZm9udFNpemU6IHRvYXN0Rm9udFNpemUsXG4gICAgbWluSGVpZ2h0OiB0b2FzdGVySGVpZ2h0LFxuXG4gICAgJyYud2ViY2hhdF9fdG9hc3QtLWVycm9yJzoge1xuICAgICAgY29sb3I6IHRvYXN0RXJyb3JDb2xvcixcbiAgICAgIGZpbGw6IHRvYXN0RXJyb3JDb2xvclxuICAgIH0sXG5cbiAgICAnJi53ZWJjaGF0X190b2FzdC0taW5mbyc6IHtcbiAgICAgIGNvbG9yOiB0b2FzdEluZm9Db2xvcixcbiAgICAgIGZpbGw6IHRvYXN0SW5mb0NvbG9yXG4gICAgfSxcblxuICAgICcmLndlYmNoYXRfX3RvYXN0LS1zdWNjZXNzJzoge1xuICAgICAgY29sb3I6IHRvYXN0U3VjY2Vzc0NvbG9yLFxuICAgICAgZmlsbDogdG9hc3RTdWNjZXNzQ29sb3JcbiAgICB9LFxuXG4gICAgJyYud2ViY2hhdF9fdG9hc3QtLXdhcm4nOiB7XG4gICAgICBjb2xvcjogdG9hc3RXYXJuQ29sb3IsXG4gICAgICBmaWxsOiB0b2FzdFdhcm5Db2xvclxuICAgIH0sXG5cbiAgICAnJiAud2ViY2hhdF9fdG9hc3RfX2ljb25Cb3gnOiB7XG4gICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgIGZsZXhTaHJpbms6IDAsXG4gICAgICBoZWlnaHQ6IHRvYXN0ZXJIZWlnaHQsXG4gICAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgICB3aWR0aDogdG9hc3RJY29uV2lkdGhcbiAgICB9LFxuXG4gICAgJyYgLndlYmNoYXRfX3RvYXN0X19kaXNtaXNzQnV0dG9uJzoge1xuICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICBhcHBlYXJhbmNlOiAnbm9uZScsXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdUcmFuc3BhcmVudCcsXG4gICAgICBib3JkZXI6IDAsXG4gICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICBoZWlnaHQ6IHRvYXN0ZXJIZWlnaHQsXG4gICAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgICBvdXRsaW5lOiAwLFxuICAgICAgcGFkZGluZzogMCxcbiAgICAgIHdpZHRoOiB0b2FzdGVySGVpZ2h0LFxuXG4gICAgICAnJjpmb2N1cyAud2ViY2hhdF9fdG9hc3RfX2Rpc21pc3NCdXR0b25Gb2N1cyc6IHtcbiAgICAgICAgYm9yZGVyQ29sb3I6ICdyZ2JhKDI2LCAxMCwgMCwgLjcpJ1xuICAgICAgfSxcblxuICAgICAgJyY6aG92ZXIgLndlYmNoYXRfX3RvYXN0X19kaXNtaXNzQnV0dG9uRm9jdXMnOiB7XG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYmEoMCwgMCwgMCwgLjEyKSdcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgJyYgLndlYmNoYXRfX3RvYXN0X19kaXNtaXNzQnV0dG9uRm9jdXMnOiB7XG4gICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICAgIGJvcmRlckNvbG9yOiAnVHJhbnNwYXJlbnQnLFxuICAgICAgYm9yZGVyU3R5bGU6ICdzb2xpZCcsXG4gICAgICBib3JkZXJXaWR0aDogMSxcbiAgICAgIGJvcmRlclJhZGl1czogMyxcbiAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgIGhlaWdodDogMjIsXG4gICAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgICB3aWR0aDogMjJcbiAgICB9LFxuXG4gICAgJyYgLndlYmNoYXRfX3RvYXN0X190ZXh0Jzoge1xuICAgICAgYWxpZ25TZWxmOiAnY2VudGVyJyxcbiAgICAgIHBhZGRpbmdCb3R0b206IHRvYXN0VGV4dFBhZGRpbmcsXG4gICAgICBwYWRkaW5nVG9wOiB0b2FzdFRleHRQYWRkaW5nXG4gICAgfVxuICB9O1xufVxuIl19