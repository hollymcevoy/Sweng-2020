"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createBubbleStyle;

var _mirrorStyle = _interopRequireDefault(require("../mirrorStyle"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function createBubbleStyle(_ref) {
  var bubbleBackground = _ref.bubbleBackground,
      bubbleBorderColor = _ref.bubbleBorderColor,
      bubbleBorderRadius = _ref.bubbleBorderRadius,
      bubbleBorderStyle = _ref.bubbleBorderStyle,
      bubbleBorderWidth = _ref.bubbleBorderWidth,
      bubbleFromUserBackground = _ref.bubbleFromUserBackground,
      bubbleFromUserBorderColor = _ref.bubbleFromUserBorderColor,
      bubbleFromUserBorderRadius = _ref.bubbleFromUserBorderRadius,
      bubbleFromUserBorderStyle = _ref.bubbleFromUserBorderStyle,
      bubbleFromUserBorderWidth = _ref.bubbleFromUserBorderWidth,
      bubbleFromUserNubOffset = _ref.bubbleFromUserNubOffset,
      bubbleFromUserNubSize = _ref.bubbleFromUserNubSize,
      bubbleFromUserTextColor = _ref.bubbleFromUserTextColor,
      bubbleMinHeight = _ref.bubbleMinHeight,
      bubbleNubOffset = _ref.bubbleNubOffset,
      bubbleNubSize = _ref.bubbleNubSize,
      bubbleTextColor = _ref.bubbleTextColor,
      messageActivityWordBreak = _ref.messageActivityWordBreak,
      paddingRegular = _ref.paddingRegular,
      transitionDuration = _ref.transitionDuration;
  var botNubCornerRadius = typeof bubbleNubOffset === 'number' ? Math.min(bubbleBorderRadius, Math.abs(bubbleNubOffset)) : bubbleBorderRadius;
  var userNubCornerRadius = typeof bubbleFromUserNubOffset === 'number' ? Math.min(bubbleFromUserBorderRadius, Math.abs(bubbleFromUserNubOffset)) : bubbleFromUserBorderRadius;
  return {
    '&.webchat__bubble': _objectSpread({
      '& .webchat__bubble__content': {
        marginLeft: 0,
        marginRight: 0,
        transitionDuration: transitionDuration,
        transitionProperty: 'margin-left, margin-right',
        wordBreak: messageActivityWordBreak
      },
      '& .webchat__bubble__nub': {
        overflow: 'hidden',
        // This style is for IE11 because it doesn't respect SVG viewport
        position: 'absolute'
      },
      '& .webchat__bubble__nub-pad': {
        transitionDuration: transitionDuration,
        transitionProperty: 'width',
        width: 0
      },
      '&.webchat__bubble--hide-nub, &.webchat__bubble--show-nub': {
        '& .webchat__bubble__nub-pad': {
          width: paddingRegular
        }
      },
      '&.webchat__bubble--rtl .webchat__bubble__nub': {
        transform: 'scale(-1, 1)'
      },
      '&:not(.webchat__bubble--from-user)': _objectSpread(_objectSpread({
        '& .webchat__bubble__content': {
          background: bubbleBackground,
          borderColor: bubbleBorderColor,
          borderRadius: bubbleBorderRadius,
          borderStyle: bubbleBorderStyle,
          borderWidth: bubbleBorderWidth,
          color: bubbleTextColor,
          minHeight: bubbleMinHeight - bubbleBorderWidth * 2
        }
      }, typeof bubbleNubSize === 'number' ? {
        '& .webchat__bubble__nub': {
          height: bubbleNubSize,
          width: bubbleNubSize
        }
      } : {}), {}, {
        '&:not(.webchat__bubble--nub-on-top) .webchat__bubble__nub': {
          bottom: -bubbleNubOffset
        },
        '&.webchat__bubble--nub-on-top .webchat__bubble__nub': {
          top: bubbleNubOffset
        },
        '& .webchat__bubble__nub-outline': {
          fill: bubbleBackground,
          stroke: bubbleBorderColor,
          strokeWidth: bubbleBorderWidth
        }
      }),
      '&.webchat__bubble--from-user': _objectSpread(_objectSpread({
        flexDirection: 'row-reverse',
        '& .webchat__bubble__content': {
          background: bubbleFromUserBackground,
          borderColor: bubbleFromUserBorderColor,
          borderRadius: bubbleFromUserBorderRadius,
          borderStyle: bubbleFromUserBorderStyle,
          borderWidth: bubbleFromUserBorderWidth,
          color: bubbleFromUserTextColor,
          minHeight: bubbleMinHeight - bubbleFromUserBorderWidth * 2
        }
      }, typeof bubbleFromUserNubSize === 'number' ? {
        '& .webchat__bubble__nub': {
          height: bubbleFromUserNubSize,
          width: bubbleFromUserNubSize
        }
      } : {}), {}, {
        '&:not(.webchat__bubble--nub-on-top) .webchat__bubble__nub': {
          bottom: -bubbleFromUserNubOffset
        },
        '&.webchat__bubble--nub-on-top .webchat__bubble__nub': {
          top: bubbleFromUserNubOffset
        },
        '& .webchat__bubble__nub-outline': {
          fill: bubbleFromUserBackground,
          stroke: bubbleFromUserBorderColor,
          strokeWidth: bubbleFromUserBorderWidth
        }
      })
    }, (0, _mirrorStyle.default)('&.webchat__bubble--rtl', {
      '&:not(.webchat__bubble--from-user)': _objectSpread({
        '&.webchat__bubble--show-nub': {
          // Hide border radius if there is a nub on the top/bottom left corner
          '&:not(.webchat__bubble--nub-on-top) .webchat__bubble__content': {
            borderBottomLeftRadius: botNubCornerRadius
          },
          '&.webchat__bubble--nub-on-top .webchat__bubble__content': {
            borderTopLeftRadius: botNubCornerRadius
          }
        }
      }, typeof bubbleNubSize === 'number' ? {
        '& .webchat__bubble__nub': {
          left: bubbleBorderWidth - bubbleNubSize + paddingRegular
        }
      } : {}),
      '&.webchat__bubble--from-user': _objectSpread({
        '&.webchat__bubble--show-nub': {
          // Hide border radius if there is a nub on the top/bottom right corner
          '&:not(.webchat__bubble--nub-on-top) .webchat__bubble__content': {
            borderBottomRightRadius: userNubCornerRadius
          },
          '&.webchat__bubble--nub-on-top .webchat__bubble__content': {
            borderTopRightRadius: userNubCornerRadius
          }
        }
      }, typeof bubbleFromUserNubSize === 'number' ? {
        '& .webchat__bubble__nub': {
          right: bubbleFromUserBorderWidth - bubbleFromUserNubSize + paddingRegular
        }
      } : {})
    }))
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,