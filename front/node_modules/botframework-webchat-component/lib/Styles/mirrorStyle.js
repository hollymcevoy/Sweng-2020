"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = mirrorStyle;

var _botframeworkWebchatCore = require("botframework-webchat-core");

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function mirrorStyle(mirrorSelector, styles) {
  var _ref;

  var mirrored = {};

  for (var _i = 0, _Object$entries = Object.entries(styles); _i < _Object$entries.length; _i++) {
    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),
        key = _Object$entries$_i[0],
        value = _Object$entries$_i[1];

    if (typeof value === 'number' || typeof value === 'string') {
      var patchedKey = key.replace(/(^left|^right|Left|Right)/, function (match) {
        return match === 'Left' ? 'Right' : match === 'left' ? 'right' : match === 'Right' ? 'Left' : 'left';
      });

      if (!(0, _botframeworkWebchatCore.isForbiddenPropertyName)(patchedKey)) {
        // Mitigated through denylisting.
        // eslint-disable-next-line security/detect-object-injection
        mirrored[patchedKey] = value;
      }
    } else if (!(0, _botframeworkWebchatCore.isForbiddenPropertyName)(key)) {
      // Mitigated through denylisting.
      // eslint-disable-next-line security/detect-object-injection
      mirrored[key] = mirrorStyle('', value);
    }
  }

  var relative = /^&[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*/g.exec(mirrorSelector) || '';
  return mirrorSelector ? (_ref = {}, _defineProperty(_ref, "".concat(relative, ":not(").concat(mirrorSelector.substr(relative.length), ")"), styles), _defineProperty(_ref, mirrorSelector, mirrored), _ref) : mirrored;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9TdHlsZXMvbWlycm9yU3R5bGUuanMiXSwibmFtZXMiOlsibWlycm9yU3R5bGUiLCJtaXJyb3JTZWxlY3RvciIsInN0eWxlcyIsIm1pcnJvcmVkIiwiT2JqZWN0IiwiZW50cmllcyIsImtleSIsInZhbHVlIiwicGF0Y2hlZEtleSIsInJlcGxhY2UiLCJtYXRjaCIsInJlbGF0aXZlIiwiZXhlYyIsInN1YnN0ciIsImxlbmd0aCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0FBRWUsU0FBU0EsV0FBVCxDQUFxQkMsY0FBckIsRUFBcUNDLE1BQXJDLEVBQTZDO0FBQUE7O0FBQzFELE1BQU1DLFFBQVEsR0FBRyxFQUFqQjs7QUFFQSxxQ0FBMkJDLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlSCxNQUFmLENBQTNCLHFDQUFtRDtBQUE5QztBQUFBLFFBQU9JLEdBQVA7QUFBQSxRQUFZQyxLQUFaOztBQUNILFFBQUksT0FBT0EsS0FBUCxLQUFpQixRQUFqQixJQUE2QixPQUFPQSxLQUFQLEtBQWlCLFFBQWxELEVBQTREO0FBQzFELFVBQU1DLFVBQVUsR0FBR0YsR0FBRyxDQUFDRyxPQUFKLENBQVksMkJBQVosRUFBMEMsVUFBQUMsS0FBSztBQUFBLGVBQ2hFQSxLQUFLLEtBQUssTUFBVixHQUFtQixPQUFuQixHQUE2QkEsS0FBSyxLQUFLLE1BQVYsR0FBbUIsT0FBbkIsR0FBNkJBLEtBQUssS0FBSyxPQUFWLEdBQW9CLE1BQXBCLEdBQTZCLE1BRHZCO0FBQUEsT0FBL0MsQ0FBbkI7O0FBSUEsVUFBSSxDQUFDLHNEQUF3QkYsVUFBeEIsQ0FBTCxFQUEwQztBQUN4QztBQUNBO0FBQ0FMLFFBQUFBLFFBQVEsQ0FBQ0ssVUFBRCxDQUFSLEdBQXVCRCxLQUF2QjtBQUNEO0FBQ0YsS0FWRCxNQVVPLElBQUksQ0FBQyxzREFBd0JELEdBQXhCLENBQUwsRUFBbUM7QUFDeEM7QUFDQTtBQUNBSCxNQUFBQSxRQUFRLENBQUNHLEdBQUQsQ0FBUixHQUFnQk4sV0FBVyxDQUFDLEVBQUQsRUFBS08sS0FBTCxDQUEzQjtBQUNEO0FBQ0Y7O0FBRUQsTUFBTUksUUFBUSxHQUFHLDBFQUFVQyxJQUFWLENBQWVYLGNBQWYsS0FBa0MsRUFBbkQ7QUFFQSxTQUFPQSxjQUFjLCtDQUVYVSxRQUZXLGtCQUVLVixjQUFjLENBQUNZLE1BQWYsQ0FBc0JGLFFBQVEsQ0FBQ0csTUFBL0IsQ0FGTCxRQUVpRFosTUFGakQseUJBR2RELGNBSGMsRUFHR0UsUUFISCxXQUtqQkEsUUFMSjtBQU1EIiwic291cmNlUm9vdCI6ImNvbXBvbmVudDovLy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0ZvcmJpZGRlblByb3BlcnR5TmFtZSB9IGZyb20gJ2JvdGZyYW1ld29yay13ZWJjaGF0LWNvcmUnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBtaXJyb3JTdHlsZShtaXJyb3JTZWxlY3Rvciwgc3R5bGVzKSB7XG4gIGNvbnN0IG1pcnJvcmVkID0ge307XG5cbiAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMoc3R5bGVzKSkge1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInIHx8IHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGNvbnN0IHBhdGNoZWRLZXkgPSBrZXkucmVwbGFjZSgvKF5sZWZ0fF5yaWdodHxMZWZ0fFJpZ2h0KS91LCBtYXRjaCA9PlxuICAgICAgICBtYXRjaCA9PT0gJ0xlZnQnID8gJ1JpZ2h0JyA6IG1hdGNoID09PSAnbGVmdCcgPyAncmlnaHQnIDogbWF0Y2ggPT09ICdSaWdodCcgPyAnTGVmdCcgOiAnbGVmdCdcbiAgICAgICk7XG5cbiAgICAgIGlmICghaXNGb3JiaWRkZW5Qcm9wZXJ0eU5hbWUocGF0Y2hlZEtleSkpIHtcbiAgICAgICAgLy8gTWl0aWdhdGVkIHRocm91Z2ggZGVueWxpc3RpbmcuXG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBzZWN1cml0eS9kZXRlY3Qtb2JqZWN0LWluamVjdGlvblxuICAgICAgICBtaXJyb3JlZFtwYXRjaGVkS2V5XSA9IHZhbHVlO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoIWlzRm9yYmlkZGVuUHJvcGVydHlOYW1lKGtleSkpIHtcbiAgICAgIC8vIE1pdGlnYXRlZCB0aHJvdWdoIGRlbnlsaXN0aW5nLlxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHNlY3VyaXR5L2RldGVjdC1vYmplY3QtaW5qZWN0aW9uXG4gICAgICBtaXJyb3JlZFtrZXldID0gbWlycm9yU3R5bGUoJycsIHZhbHVlKTtcbiAgICB9XG4gIH1cblxuICBjb25zdCByZWxhdGl2ZSA9IC9eJlxccyovZ3UuZXhlYyhtaXJyb3JTZWxlY3RvcikgfHwgJyc7XG5cbiAgcmV0dXJuIG1pcnJvclNlbGVjdG9yXG4gICAgPyB7XG4gICAgICAgIFtgJHtyZWxhdGl2ZX06bm90KCR7bWlycm9yU2VsZWN0b3Iuc3Vic3RyKHJlbGF0aXZlLmxlbmd0aCl9KWBdOiBzdHlsZXMsXG4gICAgICAgIFttaXJyb3JTZWxlY3Rvcl06IG1pcnJvcmVkXG4gICAgICB9XG4gICAgOiBtaXJyb3JlZDtcbn1cbiJdfQ==