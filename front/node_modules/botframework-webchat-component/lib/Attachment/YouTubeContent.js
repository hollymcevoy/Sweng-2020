"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _useStyleSet3 = _interopRequireDefault(require("../hooks/useStyleSet"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var YouTubeContent = function YouTubeContent(_ref) {
  var alt = _ref.alt,
      autoPlay = _ref.autoPlay,
      embedID = _ref.embedID,
      loop = _ref.loop;

  var _useStyleSet = (0, _useStyleSet3.default)(),
      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),
      youTubeContentStyleSet = _useStyleSet2[0].youTubeContent;

  var search = new URLSearchParams({
    autoplay: autoPlay ? '1' : '0',
    loop: loop ? '1' : '0',
    modestbranding: '1'
  }).toString();
  return (
    /*#__PURE__*/
    // TODO: We should encodeURI the URL
    _react.default.createElement("iframe", {
      allowFullScreen: true,
      "aria-label": alt,
      className: youTubeContentStyleSet,
      src: "https://youtube.com/embed/".concat(embedID, "?").concat(search)
    })
  );
};

YouTubeContent.defaultProps = {
  alt: '',
  autoPlay: false,
  loop: false
};
YouTubeContent.propTypes = {
  alt: _propTypes.default.string,
  autoPlay: _propTypes.default.bool,
  embedID: _propTypes.default.string.isRequired,
  loop: _propTypes.default.bool
};
var _default = YouTubeContent;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9BdHRhY2htZW50L1lvdVR1YmVDb250ZW50LnRzeCJdLCJuYW1lcyI6WyJZb3VUdWJlQ29udGVudCIsImFsdCIsImF1dG9QbGF5IiwiZW1iZWRJRCIsImxvb3AiLCJ5b3VUdWJlQ29udGVudFN0eWxlU2V0IiwieW91VHViZUNvbnRlbnQiLCJzZWFyY2giLCJVUkxTZWFyY2hQYXJhbXMiLCJhdXRvcGxheSIsIm1vZGVzdGJyYW5kaW5nIiwidG9TdHJpbmciLCJkZWZhdWx0UHJvcHMiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJzdHJpbmciLCJib29sIiwiaXNSZXF1aXJlZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7O0FBU0EsSUFBTUEsY0FBdUMsR0FBRyxTQUExQ0EsY0FBMEMsT0FBc0M7QUFBQSxNQUFuQ0MsR0FBbUMsUUFBbkNBLEdBQW1DO0FBQUEsTUFBOUJDLFFBQThCLFFBQTlCQSxRQUE4QjtBQUFBLE1BQXBCQyxPQUFvQixRQUFwQkEsT0FBb0I7QUFBQSxNQUFYQyxJQUFXLFFBQVhBLElBQVc7O0FBQ3BGLHFCQUFxRCw0QkFBckQ7QUFBQTtBQUFBLE1BQXlCQyxzQkFBekIsb0JBQVNDLGNBQVQ7O0FBRUEsTUFBTUMsTUFBTSxHQUFHLElBQUlDLGVBQUosQ0FBb0I7QUFDakNDLElBQUFBLFFBQVEsRUFBRVAsUUFBUSxHQUFHLEdBQUgsR0FBUyxHQURNO0FBRWpDRSxJQUFBQSxJQUFJLEVBQUVBLElBQUksR0FBRyxHQUFILEdBQVMsR0FGYztBQUdqQ00sSUFBQUEsY0FBYyxFQUFFO0FBSGlCLEdBQXBCLEVBSVpDLFFBSlksRUFBZjtBQU1BO0FBQUE7QUFDRTtBQUNBO0FBQ0UsTUFBQSxlQUFlLEVBQUUsSUFEbkI7QUFFRSxvQkFBWVYsR0FGZDtBQUdFLE1BQUEsU0FBUyxFQUFFSSxzQkFIYjtBQUlFLE1BQUEsR0FBRyxzQ0FBK0JGLE9BQS9CLGNBQTBDSSxNQUExQztBQUpMO0FBRkY7QUFTRCxDQWxCRDs7QUFvQkFQLGNBQWMsQ0FBQ1ksWUFBZixHQUE4QjtBQUM1QlgsRUFBQUEsR0FBRyxFQUFFLEVBRHVCO0FBRTVCQyxFQUFBQSxRQUFRLEVBQUUsS0FGa0I7QUFHNUJFLEVBQUFBLElBQUksRUFBRTtBQUhzQixDQUE5QjtBQU1BSixjQUFjLENBQUNhLFNBQWYsR0FBMkI7QUFDekJaLEVBQUFBLEdBQUcsRUFBRWEsbUJBQVVDLE1BRFU7QUFFekJiLEVBQUFBLFFBQVEsRUFBRVksbUJBQVVFLElBRks7QUFHekJiLEVBQUFBLE9BQU8sRUFBRVcsbUJBQVVDLE1BQVYsQ0FBaUJFLFVBSEQ7QUFJekJiLEVBQUFBLElBQUksRUFBRVUsbUJBQVVFO0FBSlMsQ0FBM0I7ZUFPZWhCLGMiLCJzb3VyY2VSb290IjoiY29tcG9uZW50Oi8vLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QsIHsgRkMgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB1c2VTdHlsZVNldCBmcm9tICcuLi9ob29rcy91c2VTdHlsZVNldCc7XG5cbnR5cGUgWW91VHViZUNvbnRlbnRQcm9wcyA9IHtcbiAgYWx0Pzogc3RyaW5nO1xuICBhdXRvUGxheT86IGJvb2xlYW47XG4gIGVtYmVkSUQ6IHN0cmluZztcbiAgbG9vcD86IGJvb2xlYW47XG59O1xuXG5jb25zdCBZb3VUdWJlQ29udGVudDogRkM8WW91VHViZUNvbnRlbnRQcm9wcz4gPSAoeyBhbHQsIGF1dG9QbGF5LCBlbWJlZElELCBsb29wIH0pID0+IHtcbiAgY29uc3QgW3sgeW91VHViZUNvbnRlbnQ6IHlvdVR1YmVDb250ZW50U3R5bGVTZXQgfV0gPSB1c2VTdHlsZVNldCgpO1xuXG4gIGNvbnN0IHNlYXJjaCA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoe1xuICAgIGF1dG9wbGF5OiBhdXRvUGxheSA/ICcxJyA6ICcwJyxcbiAgICBsb29wOiBsb29wID8gJzEnIDogJzAnLFxuICAgIG1vZGVzdGJyYW5kaW5nOiAnMSdcbiAgfSkudG9TdHJpbmcoKTtcblxuICByZXR1cm4gKFxuICAgIC8vIFRPRE86IFdlIHNob3VsZCBlbmNvZGVVUkkgdGhlIFVSTFxuICAgIDxpZnJhbWVcbiAgICAgIGFsbG93RnVsbFNjcmVlbj17dHJ1ZX1cbiAgICAgIGFyaWEtbGFiZWw9e2FsdH1cbiAgICAgIGNsYXNzTmFtZT17eW91VHViZUNvbnRlbnRTdHlsZVNldH1cbiAgICAgIHNyYz17YGh0dHBzOi8veW91dHViZS5jb20vZW1iZWQvJHtlbWJlZElEfT8ke3NlYXJjaH1gfVxuICAgIC8+XG4gICk7XG59O1xuXG5Zb3VUdWJlQ29udGVudC5kZWZhdWx0UHJvcHMgPSB7XG4gIGFsdDogJycsXG4gIGF1dG9QbGF5OiBmYWxzZSxcbiAgbG9vcDogZmFsc2Vcbn07XG5cbllvdVR1YmVDb250ZW50LnByb3BUeXBlcyA9IHtcbiAgYWx0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBhdXRvUGxheTogUHJvcFR5cGVzLmJvb2wsXG4gIGVtYmVkSUQ6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgbG9vcDogUHJvcFR5cGVzLmJvb2xcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFlvdVR1YmVDb250ZW50O1xuIl19