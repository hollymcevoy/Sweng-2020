"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _botframeworkWebchatApi = require("botframework-webchat-api");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _CroppedImage = _interopRequireDefault(require("../Utils/CroppedImage"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var useStyleOptions = _botframeworkWebchatApi.hooks.useStyleOptions;

var ImageContent = function ImageContent(_ref) {
  var alt = _ref.alt,
      src = _ref.src;

  var _useStyleOptions = useStyleOptions(),
      _useStyleOptions2 = _slicedToArray(_useStyleOptions, 1),
      bubbleImageHeight = _useStyleOptions2[0].bubbleImageHeight;

  return /*#__PURE__*/_react.default.createElement(_CroppedImage.default, {
    alt: alt,
    height: bubbleImageHeight,
    src: src,
    width: "100%"
  });
};

ImageContent.defaultProps = {
  alt: ''
};
ImageContent.propTypes = {
  alt: _propTypes.default.string,
  src: _propTypes.default.string.isRequired
};
var _default = ImageContent;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9BdHRhY2htZW50L0ltYWdlQ29udGVudC50c3giXSwibmFtZXMiOlsidXNlU3R5bGVPcHRpb25zIiwiaG9va3MiLCJJbWFnZUNvbnRlbnQiLCJhbHQiLCJzcmMiLCJidWJibGVJbWFnZUhlaWdodCIsImRlZmF1bHRQcm9wcyIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsInN0cmluZyIsImlzUmVxdWlyZWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLElBQVFBLGVBQVIsR0FBNEJDLDZCQUE1QixDQUFRRCxlQUFSOztBQU9BLElBQU1FLFlBQW1DLEdBQUcsU0FBdENBLFlBQXNDLE9BQWtCO0FBQUEsTUFBZkMsR0FBZSxRQUFmQSxHQUFlO0FBQUEsTUFBVkMsR0FBVSxRQUFWQSxHQUFVOztBQUM1RCx5QkFBZ0NKLGVBQWUsRUFBL0M7QUFBQTtBQUFBLE1BQVNLLGlCQUFULHdCQUFTQSxpQkFBVDs7QUFFQSxzQkFBTyw2QkFBQyxxQkFBRDtBQUFjLElBQUEsR0FBRyxFQUFFRixHQUFuQjtBQUF3QixJQUFBLE1BQU0sRUFBRUUsaUJBQWhDO0FBQW1ELElBQUEsR0FBRyxFQUFFRCxHQUF4RDtBQUE2RCxJQUFBLEtBQUssRUFBQztBQUFuRSxJQUFQO0FBQ0QsQ0FKRDs7QUFNQUYsWUFBWSxDQUFDSSxZQUFiLEdBQTRCO0FBQzFCSCxFQUFBQSxHQUFHLEVBQUU7QUFEcUIsQ0FBNUI7QUFJQUQsWUFBWSxDQUFDSyxTQUFiLEdBQXlCO0FBQ3ZCSixFQUFBQSxHQUFHLEVBQUVLLG1CQUFVQyxNQURRO0FBRXZCTCxFQUFBQSxHQUFHLEVBQUVJLG1CQUFVQyxNQUFWLENBQWlCQztBQUZDLENBQXpCO2VBS2VSLFkiLCJzb3VyY2VSb290IjoiY29tcG9uZW50Oi8vLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGhvb2tzIH0gZnJvbSAnYm90ZnJhbWV3b3JrLXdlYmNoYXQtYXBpJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QsIHsgRkMgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBDcm9wcGVkSW1hZ2UgZnJvbSAnLi4vVXRpbHMvQ3JvcHBlZEltYWdlJztcblxuY29uc3QgeyB1c2VTdHlsZU9wdGlvbnMgfSA9IGhvb2tzO1xuXG50eXBlIEltYWdlQ29udGVudFByb3BzID0ge1xuICBhbHQ/OiBzdHJpbmc7XG4gIHNyYzogc3RyaW5nO1xufTtcblxuY29uc3QgSW1hZ2VDb250ZW50OiBGQzxJbWFnZUNvbnRlbnRQcm9wcz4gPSAoeyBhbHQsIHNyYyB9KSA9PiB7XG4gIGNvbnN0IFt7IGJ1YmJsZUltYWdlSGVpZ2h0IH1dID0gdXNlU3R5bGVPcHRpb25zKCk7XG5cbiAgcmV0dXJuIDxDcm9wcGVkSW1hZ2UgYWx0PXthbHR9IGhlaWdodD17YnViYmxlSW1hZ2VIZWlnaHR9IHNyYz17c3JjfSB3aWR0aD1cIjEwMCVcIiAvPjtcbn07XG5cbkltYWdlQ29udGVudC5kZWZhdWx0UHJvcHMgPSB7XG4gIGFsdDogJydcbn07XG5cbkltYWdlQ29udGVudC5wcm9wVHlwZXMgPSB7XG4gIGFsdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgc3JjOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWRcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEltYWdlQ29udGVudDtcbiJdfQ==