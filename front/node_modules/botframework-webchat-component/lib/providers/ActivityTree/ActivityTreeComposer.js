"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _botframeworkWebchatApi = require("botframework-webchat-api");

var _react = _interopRequireWildcard(require("react"));

var _Context = _interopRequireDefault(require("./private/Context"));

var _useActivitiesWithRenderer = _interopRequireDefault(require("./private/useActivitiesWithRenderer"));

var _useContext = _interopRequireDefault(require("./private/useContext"));

var _useActivityTreeWithRenderer = _interopRequireDefault(require("./private/useActivityTreeWithRenderer"));

var _useMemoWithPrevious = _interopRequireDefault(require("../../hooks/internal/useMemoWithPrevious"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var useActivities = _botframeworkWebchatApi.hooks.useActivities,
    useCreateActivityRenderer = _botframeworkWebchatApi.hooks.useCreateActivityRenderer;

var ActivityTreeComposer = function ActivityTreeComposer(_ref) {
  var children = _ref.children;
  var existingContext = (0, _useContext.default)(false);

  if (existingContext) {
    throw new Error('botframework-webchat internal: <ActivityTreeComposer> should not be nested.');
  }

  var _useActivities = useActivities(),
      _useActivities2 = _slicedToArray(_useActivities, 1),
      activities = _useActivities2[0];

  var createActivityRenderer = useCreateActivityRenderer();
  var activitiesWithRenderer = (0, _useActivitiesWithRenderer.default)(activities, createActivityRenderer);
  var activityTreeWithRenderer = (0, _useActivityTreeWithRenderer.default)(activitiesWithRenderer);
  var flattenedActivityTreeWithRenderer = (0, _useMemoWithPrevious.default)(function (prevFlattenedActivityTree) {
    var nextFlattenedActivityTree = Object.freeze(activityTreeWithRenderer.reduce(function (intermediate, entriesWithSameSender) {
      return entriesWithSameSender.reduce(function (intermediate, entriesWithSameSenderAndStatus) {
        return entriesWithSameSenderAndStatus.reduce(function (intermediate, entry) {
          intermediate.push(entry);
          return intermediate;
        }, intermediate);
      }, intermediate);
    }, []));
    return nextFlattenedActivityTree.length === (prevFlattenedActivityTree === null || prevFlattenedActivityTree === void 0 ? void 0 : prevFlattenedActivityTree.length) && nextFlattenedActivityTree.every(function (item, index) {
      return item === prevFlattenedActivityTree[+index];
    }) ? prevFlattenedActivityTree : nextFlattenedActivityTree;
  }, [activityTreeWithRenderer]);
  var contextValue = (0, _react.useMemo)(function () {
    return {
      activityTreeWithRendererState: Object.freeze([activityTreeWithRenderer]),
      flattenedActivityTreeWithRendererState: Object.freeze([flattenedActivityTreeWithRenderer])
    };
  }, [activityTreeWithRenderer, flattenedActivityTreeWithRenderer]);
  return /*#__PURE__*/_react.default.createElement(_Context.default.Provider, {
    value: contextValue
  }, children);
};

var _default = ActivityTreeComposer;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvQWN0aXZpdHlUcmVlL0FjdGl2aXR5VHJlZUNvbXBvc2VyLnRzeCJdLCJuYW1lcyI6WyJ1c2VBY3Rpdml0aWVzIiwiaG9va3MiLCJ1c2VDcmVhdGVBY3Rpdml0eVJlbmRlcmVyIiwiQWN0aXZpdHlUcmVlQ29tcG9zZXIiLCJjaGlsZHJlbiIsImV4aXN0aW5nQ29udGV4dCIsIkVycm9yIiwiYWN0aXZpdGllcyIsImNyZWF0ZUFjdGl2aXR5UmVuZGVyZXIiLCJhY3Rpdml0aWVzV2l0aFJlbmRlcmVyIiwiYWN0aXZpdHlUcmVlV2l0aFJlbmRlcmVyIiwiZmxhdHRlbmVkQWN0aXZpdHlUcmVlV2l0aFJlbmRlcmVyIiwicHJldkZsYXR0ZW5lZEFjdGl2aXR5VHJlZSIsIm5leHRGbGF0dGVuZWRBY3Rpdml0eVRyZWUiLCJPYmplY3QiLCJmcmVlemUiLCJyZWR1Y2UiLCJpbnRlcm1lZGlhdGUiLCJlbnRyaWVzV2l0aFNhbWVTZW5kZXIiLCJlbnRyaWVzV2l0aFNhbWVTZW5kZXJBbmRTdGF0dXMiLCJlbnRyeSIsInB1c2giLCJsZW5ndGgiLCJldmVyeSIsIml0ZW0iLCJpbmRleCIsImNvbnRleHRWYWx1ZSIsImFjdGl2aXR5VHJlZVdpdGhSZW5kZXJlclN0YXRlIiwiZmxhdHRlbmVkQWN0aXZpdHlUcmVlV2l0aFJlbmRlcmVyU3RhdGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOztBQU9BOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQU1BLElBQVFBLGFBQVIsR0FBcURDLDZCQUFyRCxDQUFRRCxhQUFSO0FBQUEsSUFBdUJFLHlCQUF2QixHQUFxREQsNkJBQXJELENBQXVCQyx5QkFBdkI7O0FBRUEsSUFBTUMsb0JBQW1ELEdBQUcsU0FBdERBLG9CQUFzRCxPQUFrQjtBQUFBLE1BQWZDLFFBQWUsUUFBZkEsUUFBZTtBQUM1RSxNQUFNQyxlQUFlLEdBQUcseUJBQXVCLEtBQXZCLENBQXhCOztBQUVBLE1BQUlBLGVBQUosRUFBcUI7QUFDbkIsVUFBTSxJQUFJQyxLQUFKLENBQVUsNkVBQVYsQ0FBTjtBQUNEOztBQUVELHVCQUE2Q04sYUFBYSxFQUExRDtBQUFBO0FBQUEsTUFBT08sVUFBUDs7QUFDQSxNQUFNQyxzQkFBZ0QsR0FBR04seUJBQXlCLEVBQWxGO0FBRUEsTUFBTU8sc0JBQXNCLEdBQUcsd0NBQTBCRixVQUExQixFQUFzQ0Msc0JBQXRDLENBQS9CO0FBRUEsTUFBTUUsd0JBQXdCLEdBQUcsMENBQTRCRCxzQkFBNUIsQ0FBakM7QUFFQSxNQUFNRSxpQ0FBaUMsR0FBRyxrQ0FDeEMsVUFBQUMseUJBQXlCLEVBQUk7QUFDM0IsUUFBTUMseUJBQXlCLEdBQUdDLE1BQU0sQ0FBQ0MsTUFBUCxDQUNoQ0wsd0JBQXdCLENBQUNNLE1BQXpCLENBQ0UsVUFBQ0MsWUFBRCxFQUFlQyxxQkFBZjtBQUFBLGFBQ0VBLHFCQUFxQixDQUFDRixNQUF0QixDQUNFLFVBQUNDLFlBQUQsRUFBZUUsOEJBQWY7QUFBQSxlQUNFQSw4QkFBOEIsQ0FBQ0gsTUFBL0IsQ0FBOEQsVUFBQ0MsWUFBRCxFQUFlRyxLQUFmLEVBQXlCO0FBQ3JGSCxVQUFBQSxZQUFZLENBQUNJLElBQWIsQ0FBa0JELEtBQWxCO0FBRUEsaUJBQU9ILFlBQVA7QUFDRCxTQUpELEVBSUdBLFlBSkgsQ0FERjtBQUFBLE9BREYsRUFPRUEsWUFQRixDQURGO0FBQUEsS0FERixFQVdFLEVBWEYsQ0FEZ0MsQ0FBbEM7QUFnQkEsV0FBT0oseUJBQXlCLENBQUNTLE1BQTFCLE1BQXFDVix5QkFBckMsYUFBcUNBLHlCQUFyQyx1QkFBcUNBLHlCQUF5QixDQUFFVSxNQUFoRSxLQUNMVCx5QkFBeUIsQ0FBQ1UsS0FBMUIsQ0FBZ0MsVUFBQ0MsSUFBRCxFQUFPQyxLQUFQO0FBQUEsYUFBaUJELElBQUksS0FBS1oseUJBQXlCLENBQUMsQ0FBQ2EsS0FBRixDQUFuRDtBQUFBLEtBQWhDLENBREssR0FFSGIseUJBRkcsR0FHSEMseUJBSEo7QUFJRCxHQXRCdUMsRUF1QnhDLENBQUNILHdCQUFELENBdkJ3QyxDQUExQztBQTBCQSxNQUFNZ0IsWUFBcUMsR0FBRyxvQkFDNUM7QUFBQSxXQUFPO0FBQ0xDLE1BQUFBLDZCQUE2QixFQUFFYixNQUFNLENBQUNDLE1BQVAsQ0FBYyxDQUFDTCx3QkFBRCxDQUFkLENBRDFCO0FBRUxrQixNQUFBQSxzQ0FBc0MsRUFBRWQsTUFBTSxDQUFDQyxNQUFQLENBQWMsQ0FBQ0osaUNBQUQsQ0FBZDtBQUZuQyxLQUFQO0FBQUEsR0FENEMsRUFPNUMsQ0FBQ0Qsd0JBQUQsRUFBMkJDLGlDQUEzQixDQVA0QyxDQUE5QztBQVVBLHNCQUFPLDZCQUFDLGdCQUFELENBQXFCLFFBQXJCO0FBQThCLElBQUEsS0FBSyxFQUFFZTtBQUFyQyxLQUFvRHRCLFFBQXBELENBQVA7QUFDRCxDQW5ERDs7ZUFxRGVELG9CIiwic291cmNlUm9vdCI6ImNvbXBvbmVudDovLy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBob29rcyB9IGZyb20gJ2JvdGZyYW1ld29yay13ZWJjaGF0LWFwaSc7XG5pbXBvcnQgUmVhY3QsIHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHR5cGUgeyBBY3Rpdml0eUNvbXBvbmVudEZhY3RvcnkgfSBmcm9tICdib3RmcmFtZXdvcmstd2ViY2hhdC1hcGknO1xuaW1wb3J0IHR5cGUgeyBEaXJlY3RMaW5lQWN0aXZpdHkgfSBmcm9tICdib3RmcmFtZXdvcmstd2ViY2hhdC1jb3JlJztcbmltcG9ydCB0eXBlIHsgRkMsIFByb3BzV2l0aENoaWxkcmVuIH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgeyBBY3Rpdml0eVdpdGhSZW5kZXJlciwgUmVhZG9ubHlBY3Rpdml0eVRyZWUgfSBmcm9tICcuL3ByaXZhdGUvdHlwZXMnO1xuaW1wb3J0IEFjdGl2aXR5VHJlZUNvbnRleHQgZnJvbSAnLi9wcml2YXRlL0NvbnRleHQnO1xuaW1wb3J0IHVzZUFjdGl2aXRpZXNXaXRoUmVuZGVyZXIgZnJvbSAnLi9wcml2YXRlL3VzZUFjdGl2aXRpZXNXaXRoUmVuZGVyZXInO1xuaW1wb3J0IHVzZUFjdGl2aXR5VHJlZUNvbnRleHQgZnJvbSAnLi9wcml2YXRlL3VzZUNvbnRleHQnO1xuaW1wb3J0IHVzZUFjdGl2aXR5VHJlZVdpdGhSZW5kZXJlciBmcm9tICcuL3ByaXZhdGUvdXNlQWN0aXZpdHlUcmVlV2l0aFJlbmRlcmVyJztcbmltcG9ydCB1c2VNZW1vV2l0aFByZXZpb3VzIGZyb20gJy4uLy4uL2hvb2tzL2ludGVybmFsL3VzZU1lbW9XaXRoUHJldmlvdXMnO1xuXG5pbXBvcnQgdHlwZSB7IEFjdGl2aXR5VHJlZUNvbnRleHRUeXBlIH0gZnJvbSAnLi9wcml2YXRlL0NvbnRleHQnO1xuXG50eXBlIEFjdGl2aXR5VHJlZUNvbXBvc2VyUHJvcHMgPSBQcm9wc1dpdGhDaGlsZHJlbjx7fT47XG5cbmNvbnN0IHsgdXNlQWN0aXZpdGllcywgdXNlQ3JlYXRlQWN0aXZpdHlSZW5kZXJlciB9ID0gaG9va3M7XG5cbmNvbnN0IEFjdGl2aXR5VHJlZUNvbXBvc2VyOiBGQzxBY3Rpdml0eVRyZWVDb21wb3NlclByb3BzPiA9ICh7IGNoaWxkcmVuIH0pID0+IHtcbiAgY29uc3QgZXhpc3RpbmdDb250ZXh0ID0gdXNlQWN0aXZpdHlUcmVlQ29udGV4dChmYWxzZSk7XG5cbiAgaWYgKGV4aXN0aW5nQ29udGV4dCkge1xuICAgIHRocm93IG5ldyBFcnJvcignYm90ZnJhbWV3b3JrLXdlYmNoYXQgaW50ZXJuYWw6IDxBY3Rpdml0eVRyZWVDb21wb3Nlcj4gc2hvdWxkIG5vdCBiZSBuZXN0ZWQuJyk7XG4gIH1cblxuICBjb25zdCBbYWN0aXZpdGllc106IFtEaXJlY3RMaW5lQWN0aXZpdHlbXV0gPSB1c2VBY3Rpdml0aWVzKCk7XG4gIGNvbnN0IGNyZWF0ZUFjdGl2aXR5UmVuZGVyZXI6IEFjdGl2aXR5Q29tcG9uZW50RmFjdG9yeSA9IHVzZUNyZWF0ZUFjdGl2aXR5UmVuZGVyZXIoKTtcblxuICBjb25zdCBhY3Rpdml0aWVzV2l0aFJlbmRlcmVyID0gdXNlQWN0aXZpdGllc1dpdGhSZW5kZXJlcihhY3Rpdml0aWVzLCBjcmVhdGVBY3Rpdml0eVJlbmRlcmVyKTtcblxuICBjb25zdCBhY3Rpdml0eVRyZWVXaXRoUmVuZGVyZXIgPSB1c2VBY3Rpdml0eVRyZWVXaXRoUmVuZGVyZXIoYWN0aXZpdGllc1dpdGhSZW5kZXJlcik7XG5cbiAgY29uc3QgZmxhdHRlbmVkQWN0aXZpdHlUcmVlV2l0aFJlbmRlcmVyID0gdXNlTWVtb1dpdGhQcmV2aW91czxSZWFkb25seTxBY3Rpdml0eVdpdGhSZW5kZXJlcltdPj4oXG4gICAgcHJldkZsYXR0ZW5lZEFjdGl2aXR5VHJlZSA9PiB7XG4gICAgICBjb25zdCBuZXh0RmxhdHRlbmVkQWN0aXZpdHlUcmVlID0gT2JqZWN0LmZyZWV6ZShcbiAgICAgICAgYWN0aXZpdHlUcmVlV2l0aFJlbmRlcmVyLnJlZHVjZTxBY3Rpdml0eVdpdGhSZW5kZXJlcltdPihcbiAgICAgICAgICAoaW50ZXJtZWRpYXRlLCBlbnRyaWVzV2l0aFNhbWVTZW5kZXIpID0+XG4gICAgICAgICAgICBlbnRyaWVzV2l0aFNhbWVTZW5kZXIucmVkdWNlPEFjdGl2aXR5V2l0aFJlbmRlcmVyW10+KFxuICAgICAgICAgICAgICAoaW50ZXJtZWRpYXRlLCBlbnRyaWVzV2l0aFNhbWVTZW5kZXJBbmRTdGF0dXMpID0+XG4gICAgICAgICAgICAgICAgZW50cmllc1dpdGhTYW1lU2VuZGVyQW5kU3RhdHVzLnJlZHVjZTxBY3Rpdml0eVdpdGhSZW5kZXJlcltdPigoaW50ZXJtZWRpYXRlLCBlbnRyeSkgPT4ge1xuICAgICAgICAgICAgICAgICAgaW50ZXJtZWRpYXRlLnB1c2goZW50cnkpO1xuXG4gICAgICAgICAgICAgICAgICByZXR1cm4gaW50ZXJtZWRpYXRlO1xuICAgICAgICAgICAgICAgIH0sIGludGVybWVkaWF0ZSksXG4gICAgICAgICAgICAgIGludGVybWVkaWF0ZVxuICAgICAgICAgICAgKSxcbiAgICAgICAgICBbXVxuICAgICAgICApXG4gICAgICApO1xuXG4gICAgICByZXR1cm4gbmV4dEZsYXR0ZW5lZEFjdGl2aXR5VHJlZS5sZW5ndGggPT09IHByZXZGbGF0dGVuZWRBY3Rpdml0eVRyZWU/Lmxlbmd0aCAmJlxuICAgICAgICBuZXh0RmxhdHRlbmVkQWN0aXZpdHlUcmVlLmV2ZXJ5KChpdGVtLCBpbmRleCkgPT4gaXRlbSA9PT0gcHJldkZsYXR0ZW5lZEFjdGl2aXR5VHJlZVsraW5kZXhdKVxuICAgICAgICA/IHByZXZGbGF0dGVuZWRBY3Rpdml0eVRyZWVcbiAgICAgICAgOiBuZXh0RmxhdHRlbmVkQWN0aXZpdHlUcmVlO1xuICAgIH0sXG4gICAgW2FjdGl2aXR5VHJlZVdpdGhSZW5kZXJlcl1cbiAgKTtcblxuICBjb25zdCBjb250ZXh0VmFsdWU6IEFjdGl2aXR5VHJlZUNvbnRleHRUeXBlID0gdXNlTWVtbyhcbiAgICAoKSA9PiAoe1xuICAgICAgYWN0aXZpdHlUcmVlV2l0aFJlbmRlcmVyU3RhdGU6IE9iamVjdC5mcmVlemUoW2FjdGl2aXR5VHJlZVdpdGhSZW5kZXJlcl0pIGFzIHJlYWRvbmx5IFtSZWFkb25seUFjdGl2aXR5VHJlZV0sXG4gICAgICBmbGF0dGVuZWRBY3Rpdml0eVRyZWVXaXRoUmVuZGVyZXJTdGF0ZTogT2JqZWN0LmZyZWV6ZShbZmxhdHRlbmVkQWN0aXZpdHlUcmVlV2l0aFJlbmRlcmVyXSkgYXMgcmVhZG9ubHkgW1xuICAgICAgICByZWFkb25seSBBY3Rpdml0eVdpdGhSZW5kZXJlcltdXG4gICAgICBdXG4gICAgfSksXG4gICAgW2FjdGl2aXR5VHJlZVdpdGhSZW5kZXJlciwgZmxhdHRlbmVkQWN0aXZpdHlUcmVlV2l0aFJlbmRlcmVyXVxuICApO1xuXG4gIHJldHVybiA8QWN0aXZpdHlUcmVlQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17Y29udGV4dFZhbHVlfT57Y2hpbGRyZW59PC9BY3Rpdml0eVRyZWVDb250ZXh0LlByb3ZpZGVyPjtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEFjdGl2aXR5VHJlZUNvbXBvc2VyO1xuIl19