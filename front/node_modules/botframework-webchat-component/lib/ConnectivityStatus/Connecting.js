"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _botframeworkWebchatApi = require("botframework-webchat-api");

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _ScreenReaderText = _interopRequireDefault(require("../ScreenReaderText"));

var _SpinnerAnimation = _interopRequireDefault(require("./Assets/SpinnerAnimation"));

var _useForceRender = _interopRequireDefault(require("../hooks/internal/useForceRender"));

var _useStyleSet3 = _interopRequireDefault(require("../hooks/useStyleSet"));

var _useTimer = _interopRequireDefault(require("../hooks/internal/useTimer"));

var _WarningNotificationIcon = _interopRequireDefault(require("./Assets/WarningNotificationIcon"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var useDirection = _botframeworkWebchatApi.hooks.useDirection,
    useLocalizer = _botframeworkWebchatApi.hooks.useLocalizer,
    useStyleOptions = _botframeworkWebchatApi.hooks.useStyleOptions;

var ConnectivityStatusConnecting = function ConnectivityStatusConnecting(_ref) {
  var reconnect = _ref.reconnect;

  var _useStyleOptions = useStyleOptions(),
      _useStyleOptions2 = _slicedToArray(_useStyleOptions, 1),
      slowConnectionAfter = _useStyleOptions2[0].slowConnectionAfter;

  var _useStyleSet = (0, _useStyleSet3.default)(),
      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),
      _useStyleSet2$ = _useStyleSet2[0],
      connectivityNotificationStyleSet = _useStyleSet2$.connectivityNotification,
      warningNotificationStyleSet = _useStyleSet2$.warningNotification;

  var _useDirection = useDirection(),
      _useDirection2 = _slicedToArray(_useDirection, 1),
      direction = _useDirection2[0];

  var _useState = (0, _react.useState)(function () {
    return Date.now();
  }),
      _useState2 = _slicedToArray(_useState, 1),
      initialRenderAt = _useState2[0];

  var forceRender = (0, _useForceRender.default)();
  var localize = useLocalizer();
  var initialConnectionText = localize('CONNECTIVITY_STATUS_ALT_CONNECTING');
  var interruptedConnectionText = localize('CONNECTIVITY_STATUS_ALT_RECONNECTING');
  var slowConnectionText = localize('CONNECTIVITY_STATUS_ALT_SLOW_CONNECTION');
  (0, _useTimer.default)(initialRenderAt + slowConnectionAfter, forceRender);
  var now = Date.now();
  var slow = now >= initialRenderAt + slowConnectionAfter;
  return slow ? /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_ScreenReaderText.default, {
    text: localize('CONNECTIVITY_STATUS_ALT', slowConnectionText)
  }), /*#__PURE__*/_react.default.createElement("div", {
    "aria-hidden": true,
    className: (0, _classnames.default)('webchat__connectivityStatus', warningNotificationStyleSet + ''),
    dir: direction
  }, /*#__PURE__*/_react.default.createElement(_WarningNotificationIcon.default, null), slowConnectionText)) : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_ScreenReaderText.default, {
    text: localize('CONNECTIVITY_STATUS_ALT', reconnect ? interruptedConnectionText : initialConnectionText)
  }), /*#__PURE__*/_react.default.createElement("div", {
    "aria-hidden": true,
    className: (0, _classnames.default)('webchat__connectivityStatus', connectivityNotificationStyleSet + ''),
    dir: direction
  }, /*#__PURE__*/_react.default.createElement(_SpinnerAnimation.default, null), reconnect ? interruptedConnectionText : initialConnectionText));
};

ConnectivityStatusConnecting.defaultProps = {
  reconnect: false
};
ConnectivityStatusConnecting.propTypes = {
  reconnect: _propTypes.default.bool
};
var _default = ConnectivityStatusConnecting;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Db25uZWN0aXZpdHlTdGF0dXMvQ29ubmVjdGluZy5qcyJdLCJuYW1lcyI6WyJ1c2VEaXJlY3Rpb24iLCJob29rcyIsInVzZUxvY2FsaXplciIsInVzZVN0eWxlT3B0aW9ucyIsIkNvbm5lY3Rpdml0eVN0YXR1c0Nvbm5lY3RpbmciLCJyZWNvbm5lY3QiLCJzbG93Q29ubmVjdGlvbkFmdGVyIiwiY29ubmVjdGl2aXR5Tm90aWZpY2F0aW9uU3R5bGVTZXQiLCJjb25uZWN0aXZpdHlOb3RpZmljYXRpb24iLCJ3YXJuaW5nTm90aWZpY2F0aW9uU3R5bGVTZXQiLCJ3YXJuaW5nTm90aWZpY2F0aW9uIiwiZGlyZWN0aW9uIiwiRGF0ZSIsIm5vdyIsImluaXRpYWxSZW5kZXJBdCIsImZvcmNlUmVuZGVyIiwibG9jYWxpemUiLCJpbml0aWFsQ29ubmVjdGlvblRleHQiLCJpbnRlcnJ1cHRlZENvbm5lY3Rpb25UZXh0Iiwic2xvd0Nvbm5lY3Rpb25UZXh0Iiwic2xvdyIsImRlZmF1bHRQcm9wcyIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsImJvb2wiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLElBQVFBLFlBQVIsR0FBd0RDLDZCQUF4RCxDQUFRRCxZQUFSO0FBQUEsSUFBc0JFLFlBQXRCLEdBQXdERCw2QkFBeEQsQ0FBc0JDLFlBQXRCO0FBQUEsSUFBb0NDLGVBQXBDLEdBQXdERiw2QkFBeEQsQ0FBb0NFLGVBQXBDOztBQUVBLElBQU1DLDRCQUE0QixHQUFHLFNBQS9CQSw0QkFBK0IsT0FBbUI7QUFBQSxNQUFoQkMsU0FBZ0IsUUFBaEJBLFNBQWdCOztBQUN0RCx5QkFBa0NGLGVBQWUsRUFBakQ7QUFBQTtBQUFBLE1BQVNHLG1CQUFULHdCQUFTQSxtQkFBVDs7QUFDQSxxQkFFSSw0QkFGSjtBQUFBO0FBQUE7QUFBQSxNQUM4QkMsZ0NBRDlCLGtCQUNJQyx3QkFESjtBQUFBLE1BQ3FGQywyQkFEckYsa0JBQ2dFQyxtQkFEaEU7O0FBR0Esc0JBQW9CVixZQUFZLEVBQWhDO0FBQUE7QUFBQSxNQUFPVyxTQUFQOztBQUNBLGtCQUEwQixxQkFBUztBQUFBLFdBQU1DLElBQUksQ0FBQ0MsR0FBTCxFQUFOO0FBQUEsR0FBVCxDQUExQjtBQUFBO0FBQUEsTUFBT0MsZUFBUDs7QUFDQSxNQUFNQyxXQUFXLEdBQUcsOEJBQXBCO0FBQ0EsTUFBTUMsUUFBUSxHQUFHZCxZQUFZLEVBQTdCO0FBRUEsTUFBTWUscUJBQXFCLEdBQUdELFFBQVEsQ0FBQyxvQ0FBRCxDQUF0QztBQUNBLE1BQU1FLHlCQUF5QixHQUFHRixRQUFRLENBQUMsc0NBQUQsQ0FBMUM7QUFDQSxNQUFNRyxrQkFBa0IsR0FBR0gsUUFBUSxDQUFDLHlDQUFELENBQW5DO0FBRUEseUJBQVNGLGVBQWUsR0FBR1IsbUJBQTNCLEVBQWdEUyxXQUFoRDtBQUVBLE1BQU1GLEdBQUcsR0FBR0QsSUFBSSxDQUFDQyxHQUFMLEVBQVo7QUFDQSxNQUFNTyxJQUFJLEdBQUdQLEdBQUcsSUFBSUMsZUFBZSxHQUFHUixtQkFBdEM7QUFFQSxTQUFPYyxJQUFJLGdCQUNULDZCQUFDLGNBQUQsQ0FBTyxRQUFQLHFCQUNFLDZCQUFDLHlCQUFEO0FBQWtCLElBQUEsSUFBSSxFQUFFSixRQUFRLENBQUMseUJBQUQsRUFBNEJHLGtCQUE1QjtBQUFoQyxJQURGLGVBRUU7QUFDRSxtQkFBYSxJQURmO0FBRUUsSUFBQSxTQUFTLEVBQUUseUJBQVcsNkJBQVgsRUFBMENWLDJCQUEyQixHQUFHLEVBQXhFLENBRmI7QUFHRSxJQUFBLEdBQUcsRUFBRUU7QUFIUCxrQkFLRSw2QkFBQyxnQ0FBRCxPQUxGLEVBTUdRLGtCQU5ILENBRkYsQ0FEUyxnQkFhVCw2QkFBQyxjQUFELENBQU8sUUFBUCxxQkFDRSw2QkFBQyx5QkFBRDtBQUNFLElBQUEsSUFBSSxFQUFFSCxRQUFRLENBQUMseUJBQUQsRUFBNEJYLFNBQVMsR0FBR2EseUJBQUgsR0FBK0JELHFCQUFwRTtBQURoQixJQURGLGVBSUU7QUFDRSxtQkFBYSxJQURmO0FBRUUsSUFBQSxTQUFTLEVBQUUseUJBQVcsNkJBQVgsRUFBMENWLGdDQUFnQyxHQUFHLEVBQTdFLENBRmI7QUFHRSxJQUFBLEdBQUcsRUFBRUk7QUFIUCxrQkFLRSw2QkFBQyx5QkFBRCxPQUxGLEVBTUdOLFNBQVMsR0FBR2EseUJBQUgsR0FBK0JELHFCQU4zQyxDQUpGLENBYkY7QUEyQkQsQ0E5Q0Q7O0FBZ0RBYiw0QkFBNEIsQ0FBQ2lCLFlBQTdCLEdBQTRDO0FBQzFDaEIsRUFBQUEsU0FBUyxFQUFFO0FBRCtCLENBQTVDO0FBSUFELDRCQUE0QixDQUFDa0IsU0FBN0IsR0FBeUM7QUFDdkNqQixFQUFBQSxTQUFTLEVBQUVrQixtQkFBVUM7QUFEa0IsQ0FBekM7ZUFJZXBCLDRCIiwic291cmNlUm9vdCI6ImNvbXBvbmVudDovLy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBob29rcyB9IGZyb20gJ2JvdGZyYW1ld29yay13ZWJjaGF0LWFwaSc7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBTY3JlZW5SZWFkZXJUZXh0IGZyb20gJy4uL1NjcmVlblJlYWRlclRleHQnO1xuaW1wb3J0IFNwaW5uZXJBbmltYXRpb24gZnJvbSAnLi9Bc3NldHMvU3Bpbm5lckFuaW1hdGlvbic7XG5pbXBvcnQgdXNlRm9yY2VSZW5kZXIgZnJvbSAnLi4vaG9va3MvaW50ZXJuYWwvdXNlRm9yY2VSZW5kZXInO1xuaW1wb3J0IHVzZVN0eWxlU2V0IGZyb20gJy4uL2hvb2tzL3VzZVN0eWxlU2V0JztcbmltcG9ydCB1c2VUaW1lciBmcm9tICcuLi9ob29rcy9pbnRlcm5hbC91c2VUaW1lcic7XG5pbXBvcnQgV2FybmluZ05vdGlmaWNhdGlvbkljb24gZnJvbSAnLi9Bc3NldHMvV2FybmluZ05vdGlmaWNhdGlvbkljb24nO1xuXG5jb25zdCB7IHVzZURpcmVjdGlvbiwgdXNlTG9jYWxpemVyLCB1c2VTdHlsZU9wdGlvbnMgfSA9IGhvb2tzO1xuXG5jb25zdCBDb25uZWN0aXZpdHlTdGF0dXNDb25uZWN0aW5nID0gKHsgcmVjb25uZWN0IH0pID0+IHtcbiAgY29uc3QgW3sgc2xvd0Nvbm5lY3Rpb25BZnRlciB9XSA9IHVzZVN0eWxlT3B0aW9ucygpO1xuICBjb25zdCBbXG4gICAgeyBjb25uZWN0aXZpdHlOb3RpZmljYXRpb246IGNvbm5lY3Rpdml0eU5vdGlmaWNhdGlvblN0eWxlU2V0LCB3YXJuaW5nTm90aWZpY2F0aW9uOiB3YXJuaW5nTm90aWZpY2F0aW9uU3R5bGVTZXQgfVxuICBdID0gdXNlU3R5bGVTZXQoKTtcbiAgY29uc3QgW2RpcmVjdGlvbl0gPSB1c2VEaXJlY3Rpb24oKTtcbiAgY29uc3QgW2luaXRpYWxSZW5kZXJBdF0gPSB1c2VTdGF0ZSgoKSA9PiBEYXRlLm5vdygpKTtcbiAgY29uc3QgZm9yY2VSZW5kZXIgPSB1c2VGb3JjZVJlbmRlcigpO1xuICBjb25zdCBsb2NhbGl6ZSA9IHVzZUxvY2FsaXplcigpO1xuXG4gIGNvbnN0IGluaXRpYWxDb25uZWN0aW9uVGV4dCA9IGxvY2FsaXplKCdDT05ORUNUSVZJVFlfU1RBVFVTX0FMVF9DT05ORUNUSU5HJyk7XG4gIGNvbnN0IGludGVycnVwdGVkQ29ubmVjdGlvblRleHQgPSBsb2NhbGl6ZSgnQ09OTkVDVElWSVRZX1NUQVRVU19BTFRfUkVDT05ORUNUSU5HJyk7XG4gIGNvbnN0IHNsb3dDb25uZWN0aW9uVGV4dCA9IGxvY2FsaXplKCdDT05ORUNUSVZJVFlfU1RBVFVTX0FMVF9TTE9XX0NPTk5FQ1RJT04nKTtcblxuICB1c2VUaW1lcihpbml0aWFsUmVuZGVyQXQgKyBzbG93Q29ubmVjdGlvbkFmdGVyLCBmb3JjZVJlbmRlcik7XG5cbiAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcbiAgY29uc3Qgc2xvdyA9IG5vdyA+PSBpbml0aWFsUmVuZGVyQXQgKyBzbG93Q29ubmVjdGlvbkFmdGVyO1xuXG4gIHJldHVybiBzbG93ID8gKFxuICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgIDxTY3JlZW5SZWFkZXJUZXh0IHRleHQ9e2xvY2FsaXplKCdDT05ORUNUSVZJVFlfU1RBVFVTX0FMVCcsIHNsb3dDb25uZWN0aW9uVGV4dCl9IC8+XG4gICAgICA8ZGl2XG4gICAgICAgIGFyaWEtaGlkZGVuPXt0cnVlfVxuICAgICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZXMoJ3dlYmNoYXRfX2Nvbm5lY3Rpdml0eVN0YXR1cycsIHdhcm5pbmdOb3RpZmljYXRpb25TdHlsZVNldCArICcnKX1cbiAgICAgICAgZGlyPXtkaXJlY3Rpb259XG4gICAgICA+XG4gICAgICAgIDxXYXJuaW5nTm90aWZpY2F0aW9uSWNvbiAvPlxuICAgICAgICB7c2xvd0Nvbm5lY3Rpb25UZXh0fVxuICAgICAgPC9kaXY+XG4gICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgKSA6IChcbiAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICA8U2NyZWVuUmVhZGVyVGV4dFxuICAgICAgICB0ZXh0PXtsb2NhbGl6ZSgnQ09OTkVDVElWSVRZX1NUQVRVU19BTFQnLCByZWNvbm5lY3QgPyBpbnRlcnJ1cHRlZENvbm5lY3Rpb25UZXh0IDogaW5pdGlhbENvbm5lY3Rpb25UZXh0KX1cbiAgICAgIC8+XG4gICAgICA8ZGl2XG4gICAgICAgIGFyaWEtaGlkZGVuPXt0cnVlfVxuICAgICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZXMoJ3dlYmNoYXRfX2Nvbm5lY3Rpdml0eVN0YXR1cycsIGNvbm5lY3Rpdml0eU5vdGlmaWNhdGlvblN0eWxlU2V0ICsgJycpfVxuICAgICAgICBkaXI9e2RpcmVjdGlvbn1cbiAgICAgID5cbiAgICAgICAgPFNwaW5uZXJBbmltYXRpb24gLz5cbiAgICAgICAge3JlY29ubmVjdCA/IGludGVycnVwdGVkQ29ubmVjdGlvblRleHQgOiBpbml0aWFsQ29ubmVjdGlvblRleHR9XG4gICAgICA8L2Rpdj5cbiAgICA8L1JlYWN0LkZyYWdtZW50PlxuICApO1xufTtcblxuQ29ubmVjdGl2aXR5U3RhdHVzQ29ubmVjdGluZy5kZWZhdWx0UHJvcHMgPSB7XG4gIHJlY29ubmVjdDogZmFsc2Vcbn07XG5cbkNvbm5lY3Rpdml0eVN0YXR1c0Nvbm5lY3RpbmcucHJvcFR5cGVzID0ge1xuICByZWNvbm5lY3Q6IFByb3BUeXBlcy5ib29sXG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb25uZWN0aXZpdHlTdGF0dXNDb25uZWN0aW5nO1xuIl19