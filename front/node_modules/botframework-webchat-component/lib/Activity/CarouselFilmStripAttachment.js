"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _botframeworkWebchatApi = require("botframework-webchat-api");

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _Bubble = _interopRequireDefault(require("./Bubble"));

var _ScreenReaderText = _interopRequireDefault(require("../ScreenReaderText"));

var _useStyleSet3 = _interopRequireDefault(require("../hooks/useStyleSet"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var useDirection = _botframeworkWebchatApi.hooks.useDirection,
    useLocalizer = _botframeworkWebchatApi.hooks.useLocalizer;

var CarouselFilmStripAttachment = function CarouselFilmStripAttachment(_ref) {
  var activity = _ref.activity,
      attachment = _ref.attachment,
      className = _ref.className,
      fromUser = _ref.fromUser,
      hasAvatar = _ref.hasAvatar,
      hideNub = _ref.hideNub,
      index = _ref.index,
      renderAttachment = _ref.renderAttachment,
      showAvatar = _ref.showAvatar,
      showNub = _ref.showNub;

  var _useDirection = useDirection(),
      _useDirection2 = _slicedToArray(_useDirection, 1),
      direction = _useDirection2[0];

  var localize = useLocalizer();

  var _useStyleSet = (0, _useStyleSet3.default)(),
      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),
      carouselFilmStripAttachmentStyleSet = _useStyleSet2[0].carouselFilmStripAttachment;

  var attachedAlt = localize(fromUser ? 'ACTIVITY_YOU_ATTACHED_ALT' : 'ACTIVITY_BOT_ATTACHED_ALT');
  return /*#__PURE__*/_react.default.createElement("li", {
    "aria-roledescription": "attachment",
    className: (0, _classnames.default)('webchat__carousel-filmstrip-attachment', {
      'webchat__carousel-filmstrip-attachment--hide-avatar': hasAvatar && !showAvatar,
      'webchat__carousel-filmstrip-attachment--hide-nub': hideNub,
      'webchat__carousel-filmstrip-attachment--rtl': direction === 'rtl',
      'webchat__carousel-filmstrip-attachment--show-avatar': showAvatar,
      'webchat__carousel-filmstrip-attachment--show-nub': showNub
    }, 'react-film__filmstrip__item', carouselFilmStripAttachmentStyleSet + '', (className || '') + ''),
    role: "listitem",
    tabIndex: 0
  }, /*#__PURE__*/_react.default.createElement(_ScreenReaderText.default, {
    text: attachedAlt
  }), /*#__PURE__*/_react.default.createElement(_Bubble.default, {
    fromUser: fromUser,
    key: index,
    nub: false
  }, renderAttachment({
    activity: activity,
    attachment: attachment
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "webchat__carousel-filmstrip-attachment--focus"
  })));
};

CarouselFilmStripAttachment.defaultProps = {
  className: ''
};
CarouselFilmStripAttachment.propTypes = {
  activity: _propTypes.default.shape({
    attachments: _propTypes.default.array,
    channelData: _propTypes.default.shape({
      messageBack: _propTypes.default.shape({
        displayText: _propTypes.default.string
      }),
      state: _propTypes.default.string
    }),
    from: _propTypes.default.shape({
      role: _propTypes.default.string.isRequired
    }).isRequired,
    text: _propTypes.default.string,
    textFormat: _propTypes.default.string,
    timestamp: _propTypes.default.string
  }).isRequired,
  attachment: _propTypes.default.shape({
    content: _propTypes.default.any
  }).isRequired,
  className: _propTypes.default.string,
  fromUser: _propTypes.default.any.isRequired,
  hasAvatar: _propTypes.default.any.isRequired,
  hideNub: _propTypes.default.bool.isRequired,
  index: _propTypes.default.number.isRequired,
  renderAttachment: _propTypes.default.func.isRequired,
  showAvatar: _propTypes.default.bool.isRequired,
  showNub: _propTypes.default.bool.isRequired
};
var _default = CarouselFilmStripAttachment;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9BY3Rpdml0eS9DYXJvdXNlbEZpbG1TdHJpcEF0dGFjaG1lbnQuanMiXSwibmFtZXMiOlsidXNlRGlyZWN0aW9uIiwiaG9va3MiLCJ1c2VMb2NhbGl6ZXIiLCJDYXJvdXNlbEZpbG1TdHJpcEF0dGFjaG1lbnQiLCJhY3Rpdml0eSIsImF0dGFjaG1lbnQiLCJjbGFzc05hbWUiLCJmcm9tVXNlciIsImhhc0F2YXRhciIsImhpZGVOdWIiLCJpbmRleCIsInJlbmRlckF0dGFjaG1lbnQiLCJzaG93QXZhdGFyIiwic2hvd051YiIsImRpcmVjdGlvbiIsImxvY2FsaXplIiwiY2Fyb3VzZWxGaWxtU3RyaXBBdHRhY2htZW50U3R5bGVTZXQiLCJjYXJvdXNlbEZpbG1TdHJpcEF0dGFjaG1lbnQiLCJhdHRhY2hlZEFsdCIsImRlZmF1bHRQcm9wcyIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsInNoYXBlIiwiYXR0YWNobWVudHMiLCJhcnJheSIsImNoYW5uZWxEYXRhIiwibWVzc2FnZUJhY2siLCJkaXNwbGF5VGV4dCIsInN0cmluZyIsInN0YXRlIiwiZnJvbSIsInJvbGUiLCJpc1JlcXVpcmVkIiwidGV4dCIsInRleHRGb3JtYXQiLCJ0aW1lc3RhbXAiLCJjb250ZW50IiwiYW55IiwiYm9vbCIsIm51bWJlciIsImZ1bmMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLElBQVFBLFlBQVIsR0FBdUNDLDZCQUF2QyxDQUFRRCxZQUFSO0FBQUEsSUFBc0JFLFlBQXRCLEdBQXVDRCw2QkFBdkMsQ0FBc0JDLFlBQXRCOztBQUVBLElBQU1DLDJCQUEyQixHQUFHLFNBQTlCQSwyQkFBOEIsT0FXOUI7QUFBQSxNQVZKQyxRQVVJLFFBVkpBLFFBVUk7QUFBQSxNQVRKQyxVQVNJLFFBVEpBLFVBU0k7QUFBQSxNQVJKQyxTQVFJLFFBUkpBLFNBUUk7QUFBQSxNQVBK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QUFBLFNBQVMsRUFBRWEsbUJBQVVnQixHQUFWLENBQWNMLFVBckJhO0FBc0J0Q3ZCLEVBQUFBLE9BQU8sRUFBRVksbUJBQVVpQixJQUFWLENBQWVOLFVBdEJjO0FBdUJ0Q3RCLEVBQUFBLEtBQUssRUFBRVcsbUJBQVVrQixNQUFWLENBQWlCUCxVQXZCYztBQXdCdENyQixFQUFBQSxnQkFBZ0IsRUFBRVUsbUJBQVVtQixJQUFWLENBQWVSLFVBeEJLO0FBeUJ0Q3BCLEVBQUFBLFVBQVUsRUFBRVMsbUJBQVVpQixJQUFWLENBQWVOLFVBekJXO0FBMEJ0Q25CLEVBQUFBLE9BQU8sRUFBRVEsbUJBQVVpQixJQUFWLENBQWVOO0FBMUJjLENBQXhDO2VBNkJlN0IsMkIiLCJzb3VyY2VSb290IjoiY29tcG9uZW50Oi8vLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGhvb2tzIH0gZnJvbSAnYm90ZnJhbWV3b3JrLXdlYmNoYXQtYXBpJztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBCdWJibGUgZnJvbSAnLi9CdWJibGUnO1xuaW1wb3J0IFNjcmVlblJlYWRlclRleHQgZnJvbSAnLi4vU2NyZWVuUmVhZGVyVGV4dCc7XG5pbXBvcnQgdXNlU3R5bGVTZXQgZnJvbSAnLi4vaG9va3MvdXNlU3R5bGVTZXQnO1xuXG5jb25zdCB7IHVzZURpcmVjdGlvbiwgdXNlTG9jYWxpemVyIH0gPSBob29rcztcblxuY29uc3QgQ2Fyb3VzZWxGaWxtU3RyaXBBdHRhY2htZW50ID0gKHtcbiAgYWN0aXZpdHksXG4gIGF0dGFjaG1lbnQsXG4gIGNsYXNzTmFtZSxcbiAgZnJvbVVzZXIsXG4gIGhhc0F2YXRhcixcbiAgaGlkZU51YixcbiAgaW5kZXgsXG4gIHJlbmRlckF0dGFjaG1lbnQsXG4gIHNob3dBdmF0YXIsXG4gIHNob3dOdWJcbn0pID0+IHtcbiAgY29uc3QgW2RpcmVjdGlvbl0gPSB1c2VEaXJlY3Rpb24oKTtcbiAgY29uc3QgbG9jYWxpemUgPSB1c2VMb2NhbGl6ZXIoKTtcbiAgY29uc3QgW3sgY2Fyb3VzZWxGaWxtU3RyaXBBdHRhY2htZW50OiBjYXJvdXNlbEZpbG1TdHJpcEF0dGFjaG1lbnRTdHlsZVNldCB9XSA9IHVzZVN0eWxlU2V0KCk7XG5cbiAgY29uc3QgYXR0YWNoZWRBbHQgPSBsb2NhbGl6ZShmcm9tVXNlciA/ICdBQ1RJVklUWV9ZT1VfQVRUQUNIRURfQUxUJyA6ICdBQ1RJVklUWV9CT1RfQVRUQUNIRURfQUxUJyk7XG5cbiAgcmV0dXJuIChcbiAgICA8bGlcbiAgICAgIGFyaWEtcm9sZWRlc2NyaXB0aW9uPVwiYXR0YWNobWVudFwiXG4gICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZXMoXG4gICAgICAgICd3ZWJjaGF0X19jYXJvdXNlbC1maWxtc3RyaXAtYXR0YWNobWVudCcsXG4gICAgICAgIHtcbiAgICAgICAgICAnd2ViY2hhdF9fY2Fyb3VzZWwtZmlsbXN0cmlwLWF0dGFjaG1lbnQtLWhpZGUtYXZhdGFyJzogaGFzQXZhdGFyICYmICFzaG93QXZhdGFyLFxuICAgICAgICAgICd3ZWJjaGF0X19jYXJvdXNlbC1maWxtc3RyaXAtYXR0YWNobWVudC0taGlkZS1udWInOiBoaWRlTnViLFxuICAgICAgICAgICd3ZWJjaGF0X19jYXJvdXNlbC1maWxtc3RyaXAtYXR0YWNobWVudC0tcnRsJzogZGlyZWN0aW9uID09PSAncnRsJyxcbiAgICAgICAgICAnd2ViY2hhdF9fY2Fyb3VzZWwtZmlsbXN0cmlwLWF0dGFjaG1lbnQtLXNob3ctYXZhdGFyJzogc2hvd0F2YXRhcixcbiAgICAgICAgICAnd2ViY2hhdF9fY2Fyb3VzZWwtZmlsbXN0cmlwLWF0dGFjaG1lbnQtLXNob3ctbnViJzogc2hvd051YlxuICAgICAgICB9LFxuICAgICAgICAncmVhY3QtZmlsbV9fZmlsbXN0cmlwX19pdGVtJyxcbiAgICAgICAgY2Fyb3VzZWxGaWxtU3RyaXBBdHRhY2htZW50U3R5bGVTZXQgKyAnJyxcbiAgICAgICAgKGNsYXNzTmFtZSB8fCAnJykgKyAnJ1xuICAgICAgKX1cbiAgICAgIHJvbGU9XCJsaXN0aXRlbVwiXG4gICAgICB0YWJJbmRleD17MH1cbiAgICA+XG4gICAgICA8U2NyZWVuUmVhZGVyVGV4dCB0ZXh0PXthdHRhY2hlZEFsdH0gLz5cbiAgICAgIDxCdWJibGUgZnJvbVVzZXI9e2Zyb21Vc2VyfSBrZXk9e2luZGV4fSBudWI9e2ZhbHNlfT5cbiAgICAgICAge3JlbmRlckF0dGFjaG1lbnQoeyBhY3Rpdml0eSwgYXR0YWNobWVudCB9KX1cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ3ZWJjaGF0X19jYXJvdXNlbC1maWxtc3RyaXAtYXR0YWNobWVudC0tZm9jdXNcIiAvPlxuICAgICAgPC9CdWJibGU+XG4gICAgPC9saT5cbiAgKTtcbn07XG5cbkNhcm91c2VsRmlsbVN0cmlwQXR0YWNobWVudC5kZWZhdWx0UHJvcHMgPSB7XG4gIGNsYXNzTmFtZTogJydcbn07XG5cbkNhcm91c2VsRmlsbVN0cmlwQXR0YWNobWVudC5wcm9wVHlwZXMgPSB7XG4gIGFjdGl2aXR5OiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGF0dGFjaG1lbnRzOiBQcm9wVHlwZXMuYXJyYXksXG4gICAgY2hhbm5lbERhdGE6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgICBtZXNzYWdlQmFjazogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICAgICAgZGlzcGxheVRleHQ6IFByb3BUeXBlcy5zdHJpbmdcbiAgICAgIH0pLFxuICAgICAgc3RhdGU6IFByb3BUeXBlcy5zdHJpbmdcbiAgICB9KSxcbiAgICBmcm9tOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgcm9sZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkXG4gICAgfSkuaXNSZXF1aXJlZCxcbiAgICB0ZXh0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHRleHRGb3JtYXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgdGltZXN0YW1wOiBQcm9wVHlwZXMuc3RyaW5nXG4gIH0pLmlzUmVxdWlyZWQsXG4gIGF0dGFjaG1lbnQ6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgY29udGVudDogUHJvcFR5cGVzLmFueVxuICB9KS5pc1JlcXVpcmVkLFxuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGZyb21Vc2VyOiBQcm9wVHlwZXMuYW55LmlzUmVxdWlyZWQsXG4gIGhhc0F2YXRhcjogUHJvcFR5cGVzLmFueS5pc1JlcXVpcmVkLFxuICBoaWRlTnViOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICBpbmRleDogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICByZW5kZXJBdHRhY2htZW50OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBzaG93QXZhdGFyOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICBzaG93TnViOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkXG59O1xuXG5leHBvcnQgZGVmYXVsdCBDYXJvdXNlbEZpbG1TdHJpcEF0dGFjaG1lbnQ7XG4iXX0=