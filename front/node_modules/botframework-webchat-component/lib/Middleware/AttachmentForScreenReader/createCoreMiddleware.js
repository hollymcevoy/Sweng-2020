"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createCoreMiddleware;

var _react = _interopRequireDefault(require("react"));

var _AudioAttachment = _interopRequireDefault(require("./AudioAttachment"));

var _FileAttachment = _interopRequireDefault(require("./FileAttachment"));

var _ImageAttachment = _interopRequireDefault(require("./ImageAttachment"));

var _TextAttachment = _interopRequireDefault(require("./TextAttachment"));

var _VideoAttachment = _interopRequireDefault(require("./VideoAttachment"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createCoreMiddleware() {
  return [function () {
    return function (next) {
      return function () {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        var _args$ = args[0],
            _args$$activity = _args$.activity;
        _args$$activity = _args$$activity === void 0 ? {} : _args$$activity;
        var _args$$activity$from = _args$$activity.from;
        _args$$activity$from = _args$$activity$from === void 0 ? {} : _args$$activity$from;
        var _args$$activity$from$ = _args$$activity$from.role,
            role = _args$$activity$from$ === void 0 ? undefined : _args$$activity$from$,
            attachment = _args$.attachment,
            _args$$attachment = _args$.attachment;
        _args$$attachment = _args$$attachment === void 0 ? {} : _args$$attachment;
        var _args$$attachment$con = _args$$attachment.contentType,
            contentType = _args$$attachment$con === void 0 ? undefined : _args$$attachment$con,
            _args$$attachment$con2 = _args$$attachment.contentUrl,
            contentUrl = _args$$attachment$con2 === void 0 ? undefined : _args$$attachment$con2,
            _args$$attachment$thu = _args$$attachment.thumbnailUrl,
            thumbnailUrl = _args$$attachment$thu === void 0 ? undefined : _args$$attachment$thu;
        var isText = /^text\//.test(contentType);
        return (isText ? !attachment.content : role === 'user' && !thumbnailUrl) ? function () {
          return /*#__PURE__*/_react.default.createElement(_FileAttachment.default, {
            attachment: attachment
          });
        } : /^audio\//.test(contentType) ? function () {
          return /*#__PURE__*/_react.default.createElement(_AudioAttachment.default, null);
        } : /^image\//.test(contentType) ? function () {
          return /*#__PURE__*/_react.default.createElement(_ImageAttachment.default, null);
        } : /^video\//.test(contentType) ? function () {
          return /*#__PURE__*/_react.default.createElement(_VideoAttachment.default, null);
        } : contentUrl || contentType === 'application/octet-stream' ? function () {
          return /*#__PURE__*/_react.default.createElement(_FileAttachment.default, {
            attachment: attachment
          });
        } : isText ? function () {
          return /*#__PURE__*/_react.default.createElement(_TextAttachment.default, {
            attachment: attachment
          });
        } : next.apply(void 0, args);
      };
    };
  }];
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9NaWRkbGV3YXJlL0F0dGFjaG1lbnRGb3JTY3JlZW5SZWFkZXIvY3JlYXRlQ29yZU1pZGRsZXdhcmUudHN4Il0sIm5hbWVzIjpbImNyZWF0ZUNvcmVNaWRkbGV3YXJlIiwibmV4dCIsImFyZ3MiLCJhY3Rpdml0eSIsImZyb20iLCJyb2xlIiwidW5kZWZpbmVkIiwiYXR0YWNobWVudCIsImNvbnRlbnRUeXBlIiwiY29udGVudFVybCIsInRodW1ibmFpbFVybCIsImlzVGV4dCIsInRlc3QiLCJjb250ZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFZSxTQUFTQSxvQkFBVCxHQUF1RTtBQUNwRixTQUFPLENBQ0w7QUFBQSxXQUNFLFVBQUFDLElBQUk7QUFBQSxhQUNKLFlBQWE7QUFBQSwwQ0FBVEMsSUFBUztBQUFUQSxVQUFBQSxJQUFTO0FBQUE7O0FBQ1gscUJBTUlBLElBTko7QUFBQSxxQ0FFSUMsUUFGSjtBQUFBLHVEQUVvRCxFQUZwRDtBQUFBLG1EQUVnQkMsSUFGaEI7QUFBQSxpRUFFNkMsRUFGN0M7QUFBQSx5REFFd0JDLElBRnhCO0FBQUEsWUFFd0JBLElBRnhCLHNDQUUrQkMsU0FGL0I7QUFBQSxZQUdJQyxVQUhKLFVBR0lBLFVBSEo7QUFBQSx1Q0FJSUEsVUFKSjtBQUFBLDJEQUlnRyxFQUpoRztBQUFBLHNEQUlrQkMsV0FKbEI7QUFBQSxZQUlrQkEsV0FKbEIsc0NBSWdDRixTQUpoQztBQUFBLHVEQUkyQ0csVUFKM0M7QUFBQSxZQUkyQ0EsVUFKM0MsdUNBSXdESCxTQUp4RDtBQUFBLHNEQUltRUksWUFKbkU7QUFBQSxZQUltRUEsWUFKbkUsc0NBSWtGSixTQUpsRjtBQVFBLFlBQU1LLE1BQU0sR0FBRyxVQUFXQyxJQUFYLENBQWdCSixXQUFoQixDQUFmO0FBRUEsZUFBTyxDQUFDRyxNQUFNLEdBQUcsQ0FBQ0osVUFBVSxDQUFDTSxPQUFmLEdBQXlCUixJQUFJLEtBQUssTUFBVCxJQUFtQixDQUFDSyxZQUFwRCxJQUNIO0FBQUEsOEJBQU0sNkJBQUMsdUJBQUQ7QUFBZ0IsWUFBQSxVQUFVLEVBQUVIO0FBQTVCLFlBQU47QUFBQSxTQURHLEdBRUgsV0FBWUssSUFBWixDQUFpQkosV0FBakIsSUFDQTtBQUFBLDhCQUFNLDZCQUFDLHdCQUFELE9BQU47QUFBQSxTQURBLEdBRUEsV0FBWUksSUFBWixDQUFpQkosV0FBakIsSUFDQTtBQUFBLDhCQUFNLDZCQUFDLHdCQUFELE9BQU47QUFBQSxTQURBLEdBRUEsV0FBWUksSUFBWixDQUFpQkosV0FBakIsSUFDQTtBQUFBLDhCQUFNLDZCQUFDLHdCQUFELE9BQU47QUFBQSxTQURBLEdBRUFDLFVBQVUsSUFBSUQsV0FBVyxLQUFLLDBCQUE5QixHQUNBO0FBQUEsOEJBQU0sNkJBQUMsdUJBQUQ7QUFBZ0IsWUFBQSxVQUFVLEVBQUVEO0FBQTVCLFlBQU47QUFBQSxTQURBLEdBRUFJLE1BQU0sR0FDTjtBQUFBLDhCQUFNLDZCQUFDLHVCQUFEO0FBQWdCLFlBQUEsVUFBVSxFQUFFSjtBQUE1QixZQUFOO0FBQUEsU0FETSxHQUVOTixJQUFJLE1BQUosU0FBUUMsSUFBUixDQVpKO0FBYUQsT0F6Qkc7QUFBQSxLQUROO0FBQUEsR0FESyxDQUFQO0FBNkJEIiwic291cmNlUm9vdCI6ImNvbXBvbmVudDovLy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBdHRhY2htZW50Rm9yU2NyZWVuUmVhZGVyTWlkZGxld2FyZSB9IGZyb20gJ2JvdGZyYW1ld29yay13ZWJjaGF0LWFwaSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgQXVkaW9BdHRhY2htZW50IGZyb20gJy4vQXVkaW9BdHRhY2htZW50JztcbmltcG9ydCBGaWxlQXR0YWNobWVudCBmcm9tICcuL0ZpbGVBdHRhY2htZW50JztcbmltcG9ydCBJbWFnZUF0dGFjaG1lbnQgZnJvbSAnLi9JbWFnZUF0dGFjaG1lbnQnO1xuaW1wb3J0IFRleHRBdHRhY2htZW50IGZyb20gJy4vVGV4dEF0dGFjaG1lbnQnO1xuaW1wb3J0IFZpZGVvQXR0YWNobWVudCBmcm9tICcuL1ZpZGVvQXR0YWNobWVudCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZUNvcmVNaWRkbGV3YXJlKCk6IEF0dGFjaG1lbnRGb3JTY3JlZW5SZWFkZXJNaWRkbGV3YXJlW10ge1xuICByZXR1cm4gW1xuICAgICgpID0+XG4gICAgICBuZXh0ID0+XG4gICAgICAoLi4uYXJncykgPT4ge1xuICAgICAgICBjb25zdCBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgYWN0aXZpdHk6IHsgZnJvbTogeyByb2xlID0gdW5kZWZpbmVkIH0gPSB7fSB9ID0ge30sXG4gICAgICAgICAgICBhdHRhY2htZW50LFxuICAgICAgICAgICAgYXR0YWNobWVudDogeyBjb250ZW50VHlwZSA9IHVuZGVmaW5lZCwgY29udGVudFVybCA9IHVuZGVmaW5lZCwgdGh1bWJuYWlsVXJsID0gdW5kZWZpbmVkIH0gPSB7fVxuICAgICAgICAgIH1cbiAgICAgICAgXSA9IGFyZ3M7XG5cbiAgICAgICAgY29uc3QgaXNUZXh0ID0gL150ZXh0XFwvL3UudGVzdChjb250ZW50VHlwZSk7XG5cbiAgICAgICAgcmV0dXJuIChpc1RleHQgPyAhYXR0YWNobWVudC5jb250ZW50IDogcm9sZSA9PT0gJ3VzZXInICYmICF0aHVtYm5haWxVcmwpXG4gICAgICAgICAgPyAoKSA9PiA8RmlsZUF0dGFjaG1lbnQgYXR0YWNobWVudD17YXR0YWNobWVudH0gLz5cbiAgICAgICAgICA6IC9eYXVkaW9cXC8vdS50ZXN0KGNvbnRlbnRUeXBlKVxuICAgICAgICAgID8gKCkgPT4gPEF1ZGlvQXR0YWNobWVudCAvPlxuICAgICAgICAgIDogL15pbWFnZVxcLy91LnRlc3QoY29udGVudFR5cGUpXG4gICAgICAgICAgPyAoKSA9PiA8SW1hZ2VBdHRhY2htZW50IC8+XG4gICAgICAgICAgOiAvXnZpZGVvXFwvL3UudGVzdChjb250ZW50VHlwZSlcbiAgICAgICAgICA/ICgpID0+IDxWaWRlb0F0dGFjaG1lbnQgLz5cbiAgICAgICAgICA6IGNvbnRlbnRVcmwgfHwgY29udGVudFR5cGUgPT09ICdhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW0nXG4gICAgICAgICAgPyAoKSA9PiA8RmlsZUF0dGFjaG1lbnQgYXR0YWNobWVudD17YXR0YWNobWVudH0gLz5cbiAgICAgICAgICA6IGlzVGV4dFxuICAgICAgICAgID8gKCkgPT4gPFRleHRBdHRhY2htZW50IGF0dGFjaG1lbnQ9e2F0dGFjaG1lbnR9IC8+XG4gICAgICAgICAgOiBuZXh0KC4uLmFyZ3MpO1xuICAgICAgfVxuICBdO1xufVxuIl19