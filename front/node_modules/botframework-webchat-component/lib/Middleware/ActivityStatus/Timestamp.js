"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _botframeworkWebchatApi = require("botframework-webchat-api");

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _AbsoluteTime = _interopRequireDefault(require("./AbsoluteTime"));

var _RelativeTime = _interopRequireDefault(require("./RelativeTime"));

var _useStyleSet3 = _interopRequireDefault(require("../../hooks/useStyleSet"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var useStyleOptions = _botframeworkWebchatApi.hooks.useStyleOptions;

var Timestamp = function Timestamp(_ref) {
  var timestamp = _ref.activity.timestamp,
      className = _ref.className;

  var _useStyleOptions = useStyleOptions(),
      _useStyleOptions2 = _slicedToArray(_useStyleOptions, 1),
      timestampFormat = _useStyleOptions2[0].timestampFormat;

  var _useStyleSet = (0, _useStyleSet3.default)(),
      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),
      _useStyleSet2$ = _useStyleSet2[0],
      timestampStyleSet = _useStyleSet2$.timestamp,
      sendStatusStyleSet = _useStyleSet2$.sendStatus;

  timestampStyleSet && console.warn('botframework-webchat: "styleSet.timestamp" is deprecated. Please use "styleSet.sendStatus". This deprecation migration will be removed on or after December 31, 2021.');
  return !!timestamp && /*#__PURE__*/_react.default.createElement("span", {
    className: (0, _classnames.default)((timestampStyleSet || '') + '', (sendStatusStyleSet || '') + '', (className || '') + '')
  }, timestampFormat === 'relative' ? /*#__PURE__*/_react.default.createElement(_RelativeTime.default, {
    value: timestamp
  }) : /*#__PURE__*/_react.default.createElement(_AbsoluteTime.default, {
    value: timestamp
  }));
};

Timestamp.defaultProps = {
  className: ''
};
Timestamp.propTypes = {
  activity: _propTypes.default.shape({
    timestamp: _propTypes.default.string.isRequired
  }).isRequired,
  className: _propTypes.default.string
};
var _default = Timestamp;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9NaWRkbGV3YXJlL0FjdGl2aXR5U3RhdHVzL1RpbWVzdGFtcC50c3giXSwibmFtZXMiOlsidXNlU3R5bGVPcHRpb25zIiwiaG9va3MiLCJUaW1lc3RhbXAiLCJ0aW1lc3RhbXAiLCJhY3Rpdml0eSIsImNsYXNzTmFtZSIsInRpbWVzdGFtcEZvcm1hdCIsInRpbWVzdGFtcFN0eWxlU2V0Iiwic2VuZFN0YXR1c1N0eWxlU2V0Iiwic2VuZFN0YXR1cyIsImNvbnNvbGUiLCJ3YXJuIiwiZGVmYXVsdFByb3BzIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwic2hhcGUiLCJzdHJpbmciLCJpc1JlcXVpcmVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFRQSxlQUFSLEdBQTRCQyw2QkFBNUIsQ0FBUUQsZUFBUjs7QUFPQSxJQUFNRSxTQUE2QixHQUFHLFNBQWhDQSxTQUFnQyxPQUE0QztBQUFBLE1BQTdCQyxTQUE2QixRQUF6Q0MsUUFBeUMsQ0FBN0JELFNBQTZCO0FBQUEsTUFBaEJFLFNBQWdCLFFBQWhCQSxTQUFnQjs7QUFDaEYseUJBQThCTCxlQUFlLEVBQTdDO0FBQUE7QUFBQSxNQUFTTSxlQUFULHdCQUFTQSxlQUFUOztBQUNBLHFCQUEyRSw0QkFBM0U7QUFBQTtBQUFBO0FBQUEsTUFBb0JDLGlCQUFwQixrQkFBU0osU0FBVDtBQUFBLE1BQW1ESyxrQkFBbkQsa0JBQXVDQyxVQUF2Qzs7QUFFQUYsRUFBQUEsaUJBQWlCLElBQ2ZHLE9BQU8sQ0FBQ0MsSUFBUixDQUNFLHVLQURGLENBREY7QUFLQSxTQUNFLENBQUMsQ0FBQ1IsU0FBRixpQkFDRTtBQUNFLElBQUEsU0FBUyxFQUFFLHlCQUFXLENBQUNJLGlCQUFpQixJQUFJLEVBQXRCLElBQTRCLEVBQXZDLEVBQTJDLENBQUNDLGtCQUFrQixJQUFJLEVBQXZCLElBQTZCLEVBQXhFLEVBQTRFLENBQUNILFNBQVMsSUFBSSxFQUFkLElBQW9CLEVBQWhHO0FBRGIsS0FHR0MsZUFBZSxLQUFLLFVBQXBCLGdCQUFpQyw2QkFBQyxxQkFBRDtBQUFjLElBQUEsS0FBSyxFQUFFSDtBQUFyQixJQUFqQyxnQkFBc0UsNkJBQUMscUJBQUQ7QUFBYyxJQUFBLEtBQUssRUFBRUE7QUFBckIsSUFIekUsQ0FGSjtBQVNELENBbEJEOztBQW9CQUQsU0FBUyxDQUFDVSxZQUFWLEdBQXlCO0FBQ3ZCUCxFQUFBQSxTQUFTLEVBQUU7QUFEWSxDQUF6QjtBQUlBSCxTQUFTLENBQUNXLFNBQVYsR0FBc0I7QUFDcEJULEVBQUFBLFFBQVEsRUFBRVUsbUJBQVVDLEtBQVYsQ0FBZ0I7QUFDeEJaLElBQUFBLFNBQVMsRUFBRVcsbUJBQVVFLE1BQVYsQ0FBaUJDO0FBREosR0FBaEIsRUFFUEEsVUFIaUI7QUFJcEJaLEVBQUFBLFNBQVMsRUFBRVMsbUJBQVVFO0FBSkQsQ0FBdEI7ZUFPZWQsUyIsInNvdXJjZVJvb3QiOiJjb21wb25lbnQ6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0TGluZUFjdGl2aXR5IH0gZnJvbSAnYm90ZnJhbWV3b3JrLXdlYmNoYXQtY29yZSc7XG5pbXBvcnQgeyBob29rcyB9IGZyb20gJ2JvdGZyYW1ld29yay13ZWJjaGF0LWFwaSc7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QsIHsgRkMgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBBYnNvbHV0ZVRpbWUgZnJvbSAnLi9BYnNvbHV0ZVRpbWUnO1xuaW1wb3J0IFJlbGF0aXZlVGltZSBmcm9tICcuL1JlbGF0aXZlVGltZSc7XG5pbXBvcnQgdXNlU3R5bGVTZXQgZnJvbSAnLi4vLi4vaG9va3MvdXNlU3R5bGVTZXQnO1xuXG5jb25zdCB7IHVzZVN0eWxlT3B0aW9ucyB9ID0gaG9va3M7XG5cbnR5cGUgVGltZXN0YW1wUHJvcHMgPSB7XG4gIGFjdGl2aXR5OiBEaXJlY3RMaW5lQWN0aXZpdHk7XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbn07XG5cbmNvbnN0IFRpbWVzdGFtcDogRkM8VGltZXN0YW1wUHJvcHM+ID0gKHsgYWN0aXZpdHk6IHsgdGltZXN0YW1wIH0sIGNsYXNzTmFtZSB9KSA9PiB7XG4gIGNvbnN0IFt7IHRpbWVzdGFtcEZvcm1hdCB9XSA9IHVzZVN0eWxlT3B0aW9ucygpO1xuICBjb25zdCBbeyB0aW1lc3RhbXA6IHRpbWVzdGFtcFN0eWxlU2V0LCBzZW5kU3RhdHVzOiBzZW5kU3RhdHVzU3R5bGVTZXQgfV0gPSB1c2VTdHlsZVNldCgpO1xuXG4gIHRpbWVzdGFtcFN0eWxlU2V0ICYmXG4gICAgY29uc29sZS53YXJuKFxuICAgICAgJ2JvdGZyYW1ld29yay13ZWJjaGF0OiBcInN0eWxlU2V0LnRpbWVzdGFtcFwiIGlzIGRlcHJlY2F0ZWQuIFBsZWFzZSB1c2UgXCJzdHlsZVNldC5zZW5kU3RhdHVzXCIuIFRoaXMgZGVwcmVjYXRpb24gbWlncmF0aW9uIHdpbGwgYmUgcmVtb3ZlZCBvbiBvciBhZnRlciBEZWNlbWJlciAzMSwgMjAyMS4nXG4gICAgKTtcblxuICByZXR1cm4gKFxuICAgICEhdGltZXN0YW1wICYmIChcbiAgICAgIDxzcGFuXG4gICAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcygodGltZXN0YW1wU3R5bGVTZXQgfHwgJycpICsgJycsIChzZW5kU3RhdHVzU3R5bGVTZXQgfHwgJycpICsgJycsIChjbGFzc05hbWUgfHwgJycpICsgJycpfVxuICAgICAgPlxuICAgICAgICB7dGltZXN0YW1wRm9ybWF0ID09PSAncmVsYXRpdmUnID8gPFJlbGF0aXZlVGltZSB2YWx1ZT17dGltZXN0YW1wfSAvPiA6IDxBYnNvbHV0ZVRpbWUgdmFsdWU9e3RpbWVzdGFtcH0gLz59XG4gICAgICA8L3NwYW4+XG4gICAgKVxuICApO1xufTtcblxuVGltZXN0YW1wLmRlZmF1bHRQcm9wcyA9IHtcbiAgY2xhc3NOYW1lOiAnJ1xufTtcblxuVGltZXN0YW1wLnByb3BUeXBlcyA9IHtcbiAgYWN0aXZpdHk6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgdGltZXN0YW1wOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWRcbiAgfSkuaXNSZXF1aXJlZCxcbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nXG59O1xuXG5leHBvcnQgZGVmYXVsdCBUaW1lc3RhbXA7XG4iXX0=