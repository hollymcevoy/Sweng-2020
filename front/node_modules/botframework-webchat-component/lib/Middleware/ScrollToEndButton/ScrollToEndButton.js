"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _botframeworkWebchatApi = require("botframework-webchat-api");

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _useStyleSet3 = _interopRequireDefault(require("../../hooks/useStyleSet"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var useDirection = _botframeworkWebchatApi.hooks.useDirection,
    useLocalizer = _botframeworkWebchatApi.hooks.useLocalizer,
    useStyleOptions = _botframeworkWebchatApi.hooks.useStyleOptions;

var ScrollToEndButton = function ScrollToEndButton(_ref) {
  var onClick = _ref.onClick;

  var _useStyleSet = (0, _useStyleSet3.default)(),
      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),
      scrollToEndButtonStyleSet = _useStyleSet2[0].scrollToEndButton;

  var _useStyleOptions = useStyleOptions(),
      _useStyleOptions2 = _slicedToArray(_useStyleOptions, 1),
      scrollToEndButtonBehavior = _useStyleOptions2[0].scrollToEndButtonBehavior;

  var _useDirection = useDirection(),
      _useDirection2 = _slicedToArray(_useDirection, 1),
      direction = _useDirection2[0];

  var localize = useLocalizer();
  var text = localize(scrollToEndButtonBehavior === 'any' ? 'TRANSCRIPT_MORE_MESSAGES' : 'TRANSCRIPT_NEW_MESSAGES');
  return /*#__PURE__*/_react.default.createElement("button", {
    "aria-label": text,
    className: (0, _classnames.default)('webchat__scroll-to-end-button', scrollToEndButtonStyleSet + '', direction === 'rtl' ? 'webchat__scroll-to-end-button--rtl' : ''),
    onClick: onClick,
    tabIndex: 0,
    type: "button"
  }, text);
};

ScrollToEndButton.defaultProps = {
  onClick: undefined
};
ScrollToEndButton.displayName = 'ScrollToEndButton';
ScrollToEndButton.propTypes = {
  onClick: _propTypes.default.func
};
var _default = ScrollToEndButton;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9NaWRkbGV3YXJlL1Njcm9sbFRvRW5kQnV0dG9uL1Njcm9sbFRvRW5kQnV0dG9uLmpzIl0sIm5hbWVzIjpbInVzZURpcmVjdGlvbiIsImhvb2tzIiwidXNlTG9jYWxpemVyIiwidXNlU3R5bGVPcHRpb25zIiwiU2Nyb2xsVG9FbmRCdXR0b24iLCJvbkNsaWNrIiwic2Nyb2xsVG9FbmRCdXR0b25TdHlsZVNldCIsInNjcm9sbFRvRW5kQnV0dG9uIiwic2Nyb2xsVG9FbmRCdXR0b25CZWhhdmlvciIsImRpcmVjdGlvbiIsImxvY2FsaXplIiwidGV4dCIsImRlZmF1bHRQcm9wcyIsInVuZGVmaW5lZCIsImRpc3BsYXlOYW1lIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwiZnVuYyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBUUEsWUFBUixHQUF3REMsNkJBQXhELENBQVFELFlBQVI7QUFBQSxJQUFzQkUsWUFBdEIsR0FBd0RELDZCQUF4RCxDQUFzQkMsWUFBdEI7QUFBQSxJQUFvQ0MsZUFBcEMsR0FBd0RGLDZCQUF4RCxDQUFvQ0UsZUFBcEM7O0FBRUEsSUFBTUMsaUJBQWlCLEdBQUcsU0FBcEJBLGlCQUFvQixPQUFpQjtBQUFBLE1BQWRDLE9BQWMsUUFBZEEsT0FBYzs7QUFDekMscUJBQTJELDRCQUEzRDtBQUFBO0FBQUEsTUFBNEJDLHlCQUE1QixvQkFBU0MsaUJBQVQ7O0FBQ0EseUJBQXdDSixlQUFlLEVBQXZEO0FBQUE7QUFBQSxNQUFTSyx5QkFBVCx3QkFBU0EseUJBQVQ7O0FBQ0Esc0JBQW9CUixZQUFZLEVBQWhDO0FBQUE7QUFBQSxNQUFPUyxTQUFQOztBQUNBLE1BQU1DLFFBQVEsR0FBR1IsWUFBWSxFQUE3QjtBQUVBLE1BQU1TLElBQUksR0FBR0QsUUFBUSxDQUFDRix5QkFBeUIsS0FBSyxLQUE5QixHQUFzQywwQkFBdEMsR0FBbUUseUJBQXBFLENBQXJCO0FBRUEsc0JBQ0U7QUFDRSxrQkFBWUcsSUFEZDtBQUVFLElBQUEsU0FBUyxFQUFFLHlCQUNULCtCQURTLEVBRVRMLHlCQUF5QixHQUFHLEVBRm5CLEVBR1RHLFNBQVMsS0FBSyxLQUFkLEdBQXNCLG9DQUF0QixHQUE2RCxFQUhwRCxDQUZiO0FBT0UsSUFBQSxPQUFPLEVBQUVKLE9BUFg7QUFRRSxJQUFBLFFBQVEsRUFBRSxDQVJaO0FBU0UsSUFBQSxJQUFJLEVBQUM7QUFUUCxLQVdHTSxJQVhILENBREY7QUFlRCxDQXZCRDs7QUF5QkFQLGlCQUFpQixDQUFDUSxZQUFsQixHQUFpQztBQUMvQlAsRUFBQUEsT0FBTyxFQUFFUTtBQURzQixDQUFqQztBQUlBVCxpQkFBaUIsQ0FBQ1UsV0FBbEIsR0FBZ0MsbUJBQWhDO0FBRUFWLGlCQUFpQixDQUFDVyxTQUFsQixHQUE4QjtBQUM1QlYsRUFBQUEsT0FBTyxFQUFFVyxtQkFBVUM7QUFEUyxDQUE5QjtlQUllYixpQiIsInNvdXJjZVJvb3QiOiJjb21wb25lbnQ6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaG9va3MgfSBmcm9tICdib3RmcmFtZXdvcmstd2ViY2hhdC1hcGknO1xuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHVzZVN0eWxlU2V0IGZyb20gJy4uLy4uL2hvb2tzL3VzZVN0eWxlU2V0JztcblxuY29uc3QgeyB1c2VEaXJlY3Rpb24sIHVzZUxvY2FsaXplciwgdXNlU3R5bGVPcHRpb25zIH0gPSBob29rcztcblxuY29uc3QgU2Nyb2xsVG9FbmRCdXR0b24gPSAoeyBvbkNsaWNrIH0pID0+IHtcbiAgY29uc3QgW3sgc2Nyb2xsVG9FbmRCdXR0b246IHNjcm9sbFRvRW5kQnV0dG9uU3R5bGVTZXQgfV0gPSB1c2VTdHlsZVNldCgpO1xuICBjb25zdCBbeyBzY3JvbGxUb0VuZEJ1dHRvbkJlaGF2aW9yIH1dID0gdXNlU3R5bGVPcHRpb25zKCk7XG4gIGNvbnN0IFtkaXJlY3Rpb25dID0gdXNlRGlyZWN0aW9uKCk7XG4gIGNvbnN0IGxvY2FsaXplID0gdXNlTG9jYWxpemVyKCk7XG5cbiAgY29uc3QgdGV4dCA9IGxvY2FsaXplKHNjcm9sbFRvRW5kQnV0dG9uQmVoYXZpb3IgPT09ICdhbnknID8gJ1RSQU5TQ1JJUFRfTU9SRV9NRVNTQUdFUycgOiAnVFJBTlNDUklQVF9ORVdfTUVTU0FHRVMnKTtcblxuICByZXR1cm4gKFxuICAgIDxidXR0b25cbiAgICAgIGFyaWEtbGFiZWw9e3RleHR9XG4gICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZXMoXG4gICAgICAgICd3ZWJjaGF0X19zY3JvbGwtdG8tZW5kLWJ1dHRvbicsXG4gICAgICAgIHNjcm9sbFRvRW5kQnV0dG9uU3R5bGVTZXQgKyAnJyxcbiAgICAgICAgZGlyZWN0aW9uID09PSAncnRsJyA/ICd3ZWJjaGF0X19zY3JvbGwtdG8tZW5kLWJ1dHRvbi0tcnRsJyA6ICcnXG4gICAgICApfVxuICAgICAgb25DbGljaz17b25DbGlja31cbiAgICAgIHRhYkluZGV4PXswfVxuICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgPlxuICAgICAge3RleHR9XG4gICAgPC9idXR0b24+XG4gICk7XG59O1xuXG5TY3JvbGxUb0VuZEJ1dHRvbi5kZWZhdWx0UHJvcHMgPSB7XG4gIG9uQ2xpY2s6IHVuZGVmaW5lZFxufTtcblxuU2Nyb2xsVG9FbmRCdXR0b24uZGlzcGxheU5hbWUgPSAnU2Nyb2xsVG9FbmRCdXR0b24nO1xuXG5TY3JvbGxUb0VuZEJ1dHRvbi5wcm9wVHlwZXMgPSB7XG4gIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jXG59O1xuXG5leHBvcnQgZGVmYXVsdCBTY3JvbGxUb0VuZEJ1dHRvbjtcbiJdfQ==