"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.connectUploadButton = void 0;

var _botframeworkWebchatApi = require("botframework-webchat-api");

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _AttachmentIcon = _interopRequireDefault(require("./Assets/AttachmentIcon"));

var _connectToWebChat = _interopRequireDefault(require("../connectToWebChat"));

var _index = _interopRequireDefault(require("../Utils/downscaleImageToDataURL/index"));

var _IconButton = _interopRequireDefault(require("./IconButton"));

var _useSendFiles = _interopRequireDefault(require("../hooks/useSendFiles"));

var _useStyleSet3 = _interopRequireDefault(require("../hooks/useStyleSet"));

var _useStyleToEmotionObject = _interopRequireDefault(require("../hooks/internal/useStyleToEmotionObject"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

var useDisabled = _botframeworkWebchatApi.hooks.useDisabled,
    useLocalizer = _botframeworkWebchatApi.hooks.useLocalizer;
var ROOT_STYLE = {
  '&.webchat__upload-button': {
    display: 'flex',
    overflow: 'hidden',
    position: 'relative',
    '& .webchat__upload-button--file-input': {
      height: 0,
      width: 0,
      opacity: 0,
      position: 'absolute',
      left: 0,
      top: 0
    }
  }
};

var PREVENT_DEFAULT_HANDLER = function PREVENT_DEFAULT_HANDLER(event) {
  return event.preventDefault();
};

function makeThumbnail(_x, _x2, _x3, _x4, _x5) {
  return _makeThumbnail.apply(this, arguments);
}

function _makeThumbnail() {
  _makeThumbnail = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(file, width, height, contentType, quality) {
    return regeneratorRuntime.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            if (!/\.(gif|jpe?g|png)$/i.test(file.name)) {
              _context3.next = 10;
              break;
            }

            _context3.prev = 1;
            _context3.next = 4;
            return (0, _index.default)(file, width, height, contentType, quality);

          case 4:
            return _context3.abrupt("return", _context3.sent);

          case 7:
            _context3.prev = 7;
            _context3.t0 = _context3["catch"](1);
            console.warn("Web Chat: Failed to downscale image due to ".concat(_context3.t0, "."));

          case 10:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3, null, [[1, 7]]);
  }));
  return _makeThumbnail.apply(this, arguments);
}

var connectUploadButton = function connectUploadButton() {
  for (var _len = arguments.length, selectors = new Array(_len), _key = 0; _key < _len; _key++) {
    selectors[_key] = arguments[_key];
  }

  return _connectToWebChat.default.apply(void 0, [function (_ref) {
    var disabled = _ref.disabled,
        language = _ref.language,
        _sendFiles = _ref.sendFiles,
        _ref$styleSet$options = _ref.styleSet.options,
        enableUploadThumbnail = _ref$styleSet$options.enableUploadThumbnail,
        uploadThumbnailContentType = _ref$styleSet$options.uploadThumbnailContentType,
        uploadThumbnailHeight = _ref$styleSet$options.uploadThumbnailHeight,
        uploadThumbnailQuality = _ref$styleSet$options.uploadThumbnailQuality,
        uploadThumbnailWidth = _ref$styleSet$options.uploadThumbnailWidth;
    return {
      disabled: disabled,
      language: language,
      sendFiles: function () {
        var _sendFiles2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(files) {
          return regeneratorRuntime.wrap(function _callee2$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  if (!(files && files.length)) {
                    _context2.next = 6;
                    break;
                  }

                  _context2.t0 = _sendFiles;
                  _context2.next = 4;
                  return Promise.all([].map.call(files, /*#__PURE__*/function () {
                    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(file) {
                      return regeneratorRuntime.wrap(function _callee$(_context) {
                        while (1) {
                          switch (_context.prev = _context.next) {
                            case 0:
                              _context.t0 = _objectSpread;
                              _context.t1 = {
                                name: file.name,
                                size: file.size,
                                url: window.URL.createObjectURL(file)
                              };
                              _context.t2 = enableUploadThumbnail;

                              if (!_context.t2) {
                                _context.next = 8;
                                break;
                              }

                              _context.next = 6;
                              return makeThumbnail(file, uploadThumbnailWidth, uploadThumbnailHeight, uploadThumbnailContentType, uploadThumbnailQuality);

                            case 6:
                              _context.t3 = _context.sent;
                              _context.t2 = {
                                thumbnail: _context.t3
                              };

                            case 8:
                              _context.t4 = _context.t2;
                              return _context.abrupt("return", (0, _context.t0)(_context.t1, _context.t4));

                            case 10:
                            case "end":
                              return _context.stop();
                          }
                        }
                      }, _callee);
                    }));

                    return function (_x7) {
                      return _ref2.apply(this, arguments);
                    };
                  }()));

                case 4:
                  _context2.t1 = _context2.sent;
                  (0, _context2.t0)(_context2.t1);

                case 6:
                case "end":
                  return _context2.stop();
              }
            }
          }, _callee2);
        }));

        function sendFiles(_x6) {
          return _sendFiles2.apply(this, arguments);
        }

        return sendFiles;
      }()
    };
  }].concat(selectors));
};

exports.connectUploadButton = connectUploadButton;

var UploadButton = function UploadButton(_ref3) {
  var className = _ref3.className;

  var _useStyleSet = (0, _useStyleSet3.default)(),
      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),
      uploadButtonStyleSet = _useStyleSet2[0].uploadButton;

  var _useDisabled = useDisabled(),
      _useDisabled2 = _slicedToArray(_useDisabled, 1),
      disabled = _useDisabled2[0];

  var inputRef = (0, _react.useRef)();
  var localize = useLocalizer();
  var rootClassName = (0, _useStyleToEmotionObject.default)()(ROOT_STYLE) + '';
  var sendFiles = (0, _useSendFiles.default)();
  var current = inputRef.current;
  var uploadFileString = localize('TEXT_INPUT_UPLOAD_BUTTON_ALT');
  var handleClick = (0, _react.useCallback)(function () {
    current && current.click();
  }, [current]);
  var handleFileChange = (0, _react.useCallback)(function (_ref4) {
    var files = _ref4.target.files;
    sendFiles(files);

    if (current) {
      current.value = null;
    }
  }, [current, sendFiles]);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)(rootClassName, 'webchat__upload-button', uploadButtonStyleSet + '', className)
  }, /*#__PURE__*/_react.default.createElement("input", {
    "aria-disabled": disabled,
    "aria-hidden": "true",
    className: "webchat__upload-button--file-input",
    multiple: true,
    onChange: disabled ? undefined : handleFileChange,
    onClick: disabled ? PREVENT_DEFAULT_HANDLER : undefined,
    readOnly: disabled,
    ref: inputRef,
    role: "button",
    tabIndex: -1,
    type: "file"
  }), /*#__PURE__*/_react.default.createElement(_IconButton.default, {
    alt: uploadFileString,
    "aria-label": uploadFileString,
    disabled: disabled,
    onClick: handleClick
  }, /*#__PURE__*/_react.default.createElement(_AttachmentIcon.default, null)));
};

UploadButton.defaultProps = {
  className: undefined
};
UploadButton.propTypes = {
  className: _propTypes.default.string
};
var _default = UploadButton;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,