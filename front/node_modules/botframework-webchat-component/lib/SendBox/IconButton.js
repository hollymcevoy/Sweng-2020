"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _botframeworkWebchatApi = require("botframework-webchat-api");

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _AccessibleButton = _interopRequireDefault(require("../Utils/AccessibleButton"));

var _useFocusVisible3 = _interopRequireDefault(require("../hooks/internal/useFocusVisible"));

var _useStyleSet3 = _interopRequireDefault(require("../hooks/useStyleSet"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var useStyleOptions = _botframeworkWebchatApi.hooks.useStyleOptions;

var IconButton = function IconButton(_ref) {
  var alt = _ref.alt,
      children = _ref.children,
      className = _ref.className,
      disabled = _ref.disabled,
      onClick = _ref.onClick;

  var _useStyleSet = (0, _useStyleSet3.default)(),
      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),
      sendBoxButtonStyleSet = _useStyleSet2[0].sendBoxButton;

  var _useStyleOptions = useStyleOptions(),
      _useStyleOptions2 = _slicedToArray(_useStyleOptions, 1),
      sendBoxButtonAlignment = _useStyleOptions2[0].sendBoxButtonAlignment;

  var buttonRef = (0, _react.useRef)();

  var _useFocusVisible = (0, _useFocusVisible3.default)(buttonRef),
      _useFocusVisible2 = _slicedToArray(_useFocusVisible, 1),
      focusVisible = _useFocusVisible2[0];

  return /*#__PURE__*/_react.default.createElement(_AccessibleButton.default, {
    className: (0, _classnames.default)(sendBoxButtonStyleSet + '', 'webchat__icon-button', {
      'webchat__icon-button--focus-visible': focusVisible,
      'webchat__icon-button--stretch': sendBoxButtonAlignment !== 'bottom' && sendBoxButtonAlignment !== 'top'
    }, className + ''),
    disabled: disabled,
    onClick: disabled ? undefined : onClick,
    ref: buttonRef,
    title: alt,
    type: "button"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "webchat__icon-button__shade"
  }), children, /*#__PURE__*/_react.default.createElement("div", {
    className: "webchat__icon-button__keyboard-focus-indicator"
  }));
};

IconButton.defaultProps = {
  alt: '',
  children: undefined,
  className: '',
  disabled: false,
  onClick: undefined
};
IconButton.propTypes = {
  alt: _propTypes.default.string,
  children: _propTypes.default.any,
  className: _propTypes.default.string,
  disabled: _propTypes.default.bool,
  onClick: _propTypes.default.func
};
var _default = IconButton;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9TZW5kQm94L0ljb25CdXR0b24udHN4Il0sIm5hbWVzIjpbInVzZVN0eWxlT3B0aW9ucyIsImhvb2tzIiwiSWNvbkJ1dHRvbiIsImFsdCIsImNoaWxkcmVuIiwiY2xhc3NOYW1lIiwiZGlzYWJsZWQiLCJvbkNsaWNrIiwic2VuZEJveEJ1dHRvblN0eWxlU2V0Iiwic2VuZEJveEJ1dHRvbiIsInNlbmRCb3hCdXR0b25BbGlnbm1lbnQiLCJidXR0b25SZWYiLCJmb2N1c1Zpc2libGUiLCJ1bmRlZmluZWQiLCJkZWZhdWx0UHJvcHMiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJzdHJpbmciLCJhbnkiLCJib29sIiwiZnVuYyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBUUEsZUFBUixHQUE0QkMsNkJBQTVCLENBQVFELGVBQVI7O0FBVUEsSUFBTUUsVUFBK0IsR0FBRyxTQUFsQ0EsVUFBa0MsT0FBcUQ7QUFBQSxNQUFsREMsR0FBa0QsUUFBbERBLEdBQWtEO0FBQUEsTUFBN0NDLFFBQTZDLFFBQTdDQSxRQUE2QztBQUFBLE1BQW5DQyxTQUFtQyxRQUFuQ0EsU0FBbUM7QUFBQSxNQUF4QkMsUUFBd0IsUUFBeEJBLFFBQXdCO0FBQUEsTUFBZEMsT0FBYyxRQUFkQSxPQUFjOztBQUMzRixxQkFBbUQsNEJBQW5EO0FBQUE7QUFBQSxNQUF3QkMscUJBQXhCLG9CQUFTQyxhQUFUOztBQUNBLHlCQUFxQ1QsZUFBZSxFQUFwRDtBQUFBO0FBQUEsTUFBU1Usc0JBQVQsd0JBQVNBLHNCQUFUOztBQUNBLE1BQU1DLFNBQVMsR0FBRyxvQkFBbEI7O0FBRUEseUJBQXVCLCtCQUFnQkEsU0FBaEIsQ0FBdkI7QUFBQTtBQUFBLE1BQU9DLFlBQVA7O0FBRUEsc0JBQ0UsNkJBQUMseUJBQUQ7QUFDRSxJQUFBLFNBQVMsRUFBRSx5QkFDVEoscUJBQXFCLEdBQUcsRUFEZixFQUVULHNCQUZTLEVBR1Q7QUFDRSw2Q0FBdUNJLFlBRHpDO0FBRUUsdUNBQWlDRixzQkFBc0IsS0FBSyxRQUEzQixJQUF1Q0Esc0JBQXNCLEtBQUs7QUFGckcsS0FIUyxFQU9UTCxTQUFTLEdBQUcsRUFQSCxDQURiO0FBVUUsSUFBQSxRQUFRLEVBQUVDLFFBVlo7QUFXRSxJQUFBLE9BQU8sRUFBRUEsUUFBUSxHQUFHTyxTQUFILEdBQWVOLE9BWGxDO0FBWUUsSUFBQSxHQUFHLEVBQUVJLFNBWlA7QUFhRSxJQUFBLEtBQUssRUFBRVIsR0FiVDtBQWNFLElBQUEsSUFBSSxFQUFDO0FBZFAsa0JBZ0JFO0FBQUssSUFBQSxTQUFTLEVBQUM7QUFBZixJQWhCRixFQWlCR0MsUUFqQkgsZUFrQkU7QUFBSyxJQUFBLFNBQVMsRUFBQztBQUFmLElBbEJGLENBREY7QUFzQkQsQ0E3QkQ7O0FBK0JBRixVQUFVLENBQUNZLFlBQVgsR0FBMEI7QUFDeEJYLEVBQUFBLEdBQUcsRUFBRSxFQURtQjtBQUV4QkMsRUFBQUEsUUFBUSxFQUFFUyxTQUZjO0FBR3hCUixFQUFBQSxTQUFTLEVBQUUsRUFIYTtBQUl4QkMsRUFBQUEsUUFBUSxFQUFFLEtBSmM7QUFLeEJDLEVBQUFBLE9BQU8sRUFBRU07QUFMZSxDQUExQjtBQVFBWCxVQUFVLENBQUNhLFNBQVgsR0FBdUI7QUFDckJaLEVBQUFBLEdBQUcsRUFBRWEsbUJBQVVDLE1BRE07QUFFckJiLEVBQUFBLFFBQVEsRUFBRVksbUJBQVVFLEdBRkM7QUFHckJiLEVBQUFBLFNBQVMsRUFBRVcsbUJBQVVDLE1BSEE7QUFJckJYLEVBQUFBLFFBQVEsRUFBRVUsbUJBQVVHLElBSkM7QUFLckJaLEVBQUFBLE9BQU8sRUFBRVMsbUJBQVVJO0FBTEUsQ0FBdkI7ZUFRZWxCLFUiLCJzb3VyY2VSb290IjoiY29tcG9uZW50Oi8vLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGhvb2tzIH0gZnJvbSAnYm90ZnJhbWV3b3JrLXdlYmNoYXQtYXBpJztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCwgeyBGQywgTW91c2VFdmVudEhhbmRsZXIsIFJlYWN0Tm9kZSwgdXNlUmVmIH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgQWNjZXNzaWJsZUJ1dHRvbiBmcm9tICcuLi9VdGlscy9BY2Nlc3NpYmxlQnV0dG9uJztcbmltcG9ydCB1c2VGb2N1c1Zpc2libGUgZnJvbSAnLi4vaG9va3MvaW50ZXJuYWwvdXNlRm9jdXNWaXNpYmxlJztcbmltcG9ydCB1c2VTdHlsZVNldCBmcm9tICcuLi9ob29rcy91c2VTdHlsZVNldCc7XG5cbmNvbnN0IHsgdXNlU3R5bGVPcHRpb25zIH0gPSBob29rcztcblxudHlwZSBJY29uQnV0dG9uUHJvcHMgPSB7XG4gIGFsdD86IHN0cmluZztcbiAgY2hpbGRyZW4/OiBSZWFjdE5vZGU7XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbiAgZGlzYWJsZWQ/OiBib29sZWFuO1xuICBvbkNsaWNrPzogTW91c2VFdmVudEhhbmRsZXI8SFRNTEJ1dHRvbkVsZW1lbnQ+O1xufTtcblxuY29uc3QgSWNvbkJ1dHRvbjogRkM8SWNvbkJ1dHRvblByb3BzPiA9ICh7IGFsdCwgY2hpbGRyZW4sIGNsYXNzTmFtZSwgZGlzYWJsZWQsIG9uQ2xpY2sgfSkgPT4ge1xuICBjb25zdCBbeyBzZW5kQm94QnV0dG9uOiBzZW5kQm94QnV0dG9uU3R5bGVTZXQgfV0gPSB1c2VTdHlsZVNldCgpO1xuICBjb25zdCBbeyBzZW5kQm94QnV0dG9uQWxpZ25tZW50IH1dID0gdXNlU3R5bGVPcHRpb25zKCk7XG4gIGNvbnN0IGJ1dHRvblJlZiA9IHVzZVJlZjxIVE1MQnV0dG9uRWxlbWVudD4oKTtcblxuICBjb25zdCBbZm9jdXNWaXNpYmxlXSA9IHVzZUZvY3VzVmlzaWJsZShidXR0b25SZWYpO1xuXG4gIHJldHVybiAoXG4gICAgPEFjY2Vzc2libGVCdXR0b25cbiAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcyhcbiAgICAgICAgc2VuZEJveEJ1dHRvblN0eWxlU2V0ICsgJycsXG4gICAgICAgICd3ZWJjaGF0X19pY29uLWJ1dHRvbicsXG4gICAgICAgIHtcbiAgICAgICAgICAnd2ViY2hhdF9faWNvbi1idXR0b24tLWZvY3VzLXZpc2libGUnOiBmb2N1c1Zpc2libGUsXG4gICAgICAgICAgJ3dlYmNoYXRfX2ljb24tYnV0dG9uLS1zdHJldGNoJzogc2VuZEJveEJ1dHRvbkFsaWdubWVudCAhPT0gJ2JvdHRvbScgJiYgc2VuZEJveEJ1dHRvbkFsaWdubWVudCAhPT0gJ3RvcCdcbiAgICAgICAgfSxcbiAgICAgICAgY2xhc3NOYW1lICsgJydcbiAgICAgICl9XG4gICAgICBkaXNhYmxlZD17ZGlzYWJsZWR9XG4gICAgICBvbkNsaWNrPXtkaXNhYmxlZCA/IHVuZGVmaW5lZCA6IG9uQ2xpY2t9XG4gICAgICByZWY9e2J1dHRvblJlZn1cbiAgICAgIHRpdGxlPXthbHR9XG4gICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICA+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cIndlYmNoYXRfX2ljb24tYnV0dG9uX19zaGFkZVwiIC8+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cIndlYmNoYXRfX2ljb24tYnV0dG9uX19rZXlib2FyZC1mb2N1cy1pbmRpY2F0b3JcIiAvPlxuICAgIDwvQWNjZXNzaWJsZUJ1dHRvbj5cbiAgKTtcbn07XG5cbkljb25CdXR0b24uZGVmYXVsdFByb3BzID0ge1xuICBhbHQ6ICcnLFxuICBjaGlsZHJlbjogdW5kZWZpbmVkLFxuICBjbGFzc05hbWU6ICcnLFxuICBkaXNhYmxlZDogZmFsc2UsXG4gIG9uQ2xpY2s6IHVuZGVmaW5lZFxufTtcblxuSWNvbkJ1dHRvbi5wcm9wVHlwZXMgPSB7XG4gIGFsdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5hbnksXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuICBvbkNsaWNrOiBQcm9wVHlwZXMuZnVuY1xufTtcblxuZXhwb3J0IGRlZmF1bHQgSWNvbkJ1dHRvbjtcbiJdfQ==