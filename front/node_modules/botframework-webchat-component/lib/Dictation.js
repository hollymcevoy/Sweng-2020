"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactDictateButton = require("react-dictate-button");

var _botframeworkWebchatCore = require("botframework-webchat-core");

var _botframeworkWebchatApi = require("botframework-webchat-api");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _useResumeAudioContext = _interopRequireDefault(require("./hooks/internal/useResumeAudioContext"));

var _useSettableDictateAbortable = _interopRequireDefault(require("./hooks/internal/useSettableDictateAbortable"));

var _useWebSpeechPonyfill4 = _interopRequireDefault(require("./hooks/useWebSpeechPonyfill"));

var _useSetDictateState = _interopRequireDefault(require("botframework-webchat-api/lib/hooks/internal/useSetDictateState"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var useActivities = _botframeworkWebchatApi.hooks.useActivities,
    useDictateInterims = _botframeworkWebchatApi.hooks.useDictateInterims,
    useDictateState = _botframeworkWebchatApi.hooks.useDictateState,
    useDisabled = _botframeworkWebchatApi.hooks.useDisabled,
    useEmitTypingIndicator = _botframeworkWebchatApi.hooks.useEmitTypingIndicator,
    useLanguage = _botframeworkWebchatApi.hooks.useLanguage,
    useSendBoxValue = _botframeworkWebchatApi.hooks.useSendBoxValue,
    useSendTypingIndicator = _botframeworkWebchatApi.hooks.useSendTypingIndicator,
    useShouldSpeakIncomingActivity = _botframeworkWebchatApi.hooks.useShouldSpeakIncomingActivity,
    useStopDictate = _botframeworkWebchatApi.hooks.useStopDictate,
    useSubmitSendBox = _botframeworkWebchatApi.hooks.useSubmitSendBox;
var _Constants$DictateSta = _botframeworkWebchatCore.Constants.DictateState,
    DICTATING = _Constants$DictateSta.DICTATING,
    IDLE = _Constants$DictateSta.IDLE,
    STARTING = _Constants$DictateSta.STARTING;

var Dictation = function Dictation(_ref) {
  var onError = _ref.onError;

  var _useSettableDictateAb = (0, _useSettableDictateAbortable.default)(),
      _useSettableDictateAb2 = _slicedToArray(_useSettableDictateAb, 2),
      setDictateAbortable = _useSettableDictateAb2[1];

  var _useDictateInterims = useDictateInterims(),
      _useDictateInterims2 = _slicedToArray(_useDictateInterims, 2),
      setDictateInterims = _useDictateInterims2[1];

  var _useSendBoxValue = useSendBoxValue(),
      _useSendBoxValue2 = _slicedToArray(_useSendBoxValue, 2),
      setSendBox = _useSendBoxValue2[1];

  var _useShouldSpeakIncomi = useShouldSpeakIncomingActivity(),
      _useShouldSpeakIncomi2 = _slicedToArray(_useShouldSpeakIncomi, 2),
      setShouldSpeakIncomingActivity = _useShouldSpeakIncomi2[1];

  var _useWebSpeechPonyfill = (0, _useWebSpeechPonyfill4.default)(),
      _useWebSpeechPonyfill2 = _slicedToArray(_useWebSpeechPonyfill, 1),
      _useWebSpeechPonyfill3 = _useWebSpeechPonyfill2[0];

  _useWebSpeechPonyfill3 = _useWebSpeechPonyfill3 === void 0 ? {} : _useWebSpeechPonyfill3;
  var SpeechGrammarList = _useWebSpeechPonyfill3.SpeechGrammarList,
      SpeechRecognition = _useWebSpeechPonyfill3.SpeechRecognition;

  var _useActivities = useActivities(),
      _useActivities2 = _slicedToArray(_useActivities, 1),
      activities = _useActivities2[0];

  var _useDictateState = useDictateState(),
      _useDictateState2 = _slicedToArray(_useDictateState, 1),
      dictateState = _useDictateState2[0];

  var _useDisabled = useDisabled(),
      _useDisabled2 = _slicedToArray(_useDisabled, 1),
      disabled = _useDisabled2[0];

  var _useSendTypingIndicat = useSendTypingIndicator(),
      _useSendTypingIndicat2 = _slicedToArray(_useSendTypingIndicat, 1),
      sendTypingIndicator = _useSendTypingIndicat2[0];

  var _useLanguage = useLanguage('speech'),
      _useLanguage2 = _slicedToArray(_useLanguage, 1),
      speechLanguage = _useLanguage2[0];

  var emitTypingIndicator = useEmitTypingIndicator();
  var resumeAudioContext = (0, _useResumeAudioContext.default)();
  var setDictateState = (0, _useSetDictateState.default)();
  var stopDictate = useStopDictate();
  var submitSendBox = useSubmitSendBox();
  var numSpeakingActivities = (0, _react.useMemo)(function () {
    return activities.filter(function (_ref2) {
      var _ref2$channelData = _ref2.channelData;
      _ref2$channelData = _ref2$channelData === void 0 ? {} : _ref2$channelData;
      var speak = _ref2$channelData.speak;
      return speak;
    }).length;
  }, [activities]);
  var handleDictate = (0, _react.useCallback)(function (_ref3) {
    var _ref3$result = _ref3.result;
    _ref3$result = _ref3$result === void 0 ? {} : _ref3$result;
    var confidence = _ref3$result.confidence,
        transcript = _ref3$result.transcript;

    if (dictateState === DICTATING || dictateState === STARTING) {
      setDictateInterims([]);
      setDictateState(IDLE);
      stopDictate();

      if (transcript) {
        setSendBox(transcript);
        submitSendBox('speech', {
          channelData: {
            speech: {
              alternatives: [{
                confidence: confidence,
                transcript: transcript
              }]
            }
          }
        });
        setShouldSpeakIncomingActivity(true);
      }
    }
  }, [dictateState, setDictateInterims, setDictateState, stopDictate, setSendBox, submitSendBox, setShouldSpeakIncomingActivity]);
  var handleDictating = (0, _react.useCallback)(function (_ref4) {
    var abortable = _ref4.abortable,
        _ref4$results = _ref4.results,
        results = _ref4$results === void 0 ? [] : _ref4$results;

    if (dictateState === DICTATING || dictateState === STARTING) {
      var interims = results.map(function (_ref5) {
        var transcript = _ref5.transcript;
        return transcript;
      });
      setDictateAbortable(abortable);
      setDictateInterims(interims);
      setDictateState(DICTATING);
      sendTypingIndicator && emitTypingIndicator();
    }
  }, [dictateState, emitTypingIndicator, sendTypingIndicator, setDictateAbortable, setDictateInterims, setDictateState]);
  var handleError = (0, _react.useCallback)(function (event) {
    dictateState !== IDLE && setDictateState(IDLE);
    (dictateState === DICTATING || dictateState === STARTING) && stopDictate();
    onError && onError(event);
  }, [dictateState, onError, setDictateState, stopDictate]);
  (0, _react.useEffect)(function () {
    window.addEventListener('pointerdown', resumeAudioContext);
    return function () {
      return window.removeEventListener('pointerdown', resumeAudioContext);
    };
  }, [resumeAudioContext]);
  return /*#__PURE__*/_react.default.createElement(_reactDictateButton.Composer, {
    lang: speechLanguage,
    onDictate: handleDictate,
    onError: handleError,
    onProgress: handleDictating,
    speechGrammarList: SpeechGrammarList,
    speechRecognition: SpeechRecognition,
    started: !disabled && (dictateState === STARTING || dictateState === DICTATING) && !numSpeakingActivities
  });
};

Dictation.defaultProps = {
  onError: undefined
};
Dictation.propTypes = {
  onError: _propTypes.default.func
};
var _default = Dictation;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,