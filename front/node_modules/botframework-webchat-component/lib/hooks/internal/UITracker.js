"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _botframeworkWebchatApi = require("botframework-webchat-api");

var _react = require("react");

var _downscaleImageToDataURLUsingWorker = require("../../Utils/downscaleImageToDataURL/downscaleImageToDataURLUsingWorker");

var _BypassSpeechSynthesisPonyfill = require("./BypassSpeechSynthesisPonyfill");

var _useWebSpeechPonyfill3 = _interopRequireDefault(require("../useWebSpeechPonyfill"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var useTrackDimension = _botframeworkWebchatApi.hooks.useTrackDimension;

var Tracker = function Tracker() {
  var _useWebSpeechPonyfill = (0, _useWebSpeechPonyfill3.default)(),
      _useWebSpeechPonyfill2 = _slicedToArray(_useWebSpeechPonyfill, 1),
      webSpeechPonyfill = _useWebSpeechPonyfill2[0];

  var trackDimension = useTrackDimension();
  var speechRecognitionCapability = !!webSpeechPonyfill.SpeechRecognition;
  var speechSynthesisCapability = webSpeechPonyfill.speechSynthesis && webSpeechPonyfill.speechSynthesis !== _BypassSpeechSynthesisPonyfill.speechSynthesis;
  (0, _react.useEffect)(function () {
    trackDimension('capability:downscaleImage:workerType', (0, _downscaleImageToDataURLUsingWorker.checkSupport)() ? 'web worker' : 'main');
    trackDimension('capability:renderer', 'html'); // TODO: [P2] #2937 Differentiate between Cognitive Services and browser speech

    trackDimension('prop:speechRecognition', !!speechRecognitionCapability + '');
    trackDimension('prop:speechSynthesis', !!speechSynthesisCapability + '');
  }, [trackDimension, speechRecognitionCapability, speechSynthesisCapability]);
  return false;
};

var _default = Tracker;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ob29rcy9pbnRlcm5hbC9VSVRyYWNrZXIuanMiXSwibmFtZXMiOlsidXNlVHJhY2tEaW1lbnNpb24iLCJob29rcyIsIlRyYWNrZXIiLCJ3ZWJTcGVlY2hQb255ZmlsbCIsInRyYWNrRGltZW5zaW9uIiwic3BlZWNoUmVjb2duaXRpb25DYXBhYmlsaXR5IiwiU3BlZWNoUmVjb2duaXRpb24iLCJzcGVlY2hTeW50aGVzaXNDYXBhYmlsaXR5Iiwic3BlZWNoU3ludGhlc2lzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFRQSxpQkFBUixHQUE4QkMsNkJBQTlCLENBQVFELGlCQUFSOztBQUVBLElBQU1FLE9BQU8sR0FBRyxTQUFWQSxPQUFVLEdBQU07QUFDcEIsOEJBQTRCLHFDQUE1QjtBQUFBO0FBQUEsTUFBT0MsaUJBQVA7O0FBQ0EsTUFBTUMsY0FBYyxHQUFHSixpQkFBaUIsRUFBeEM7QUFFQSxNQUFNSywyQkFBMkIsR0FBRyxDQUFDLENBQUNGLGlCQUFpQixDQUFDRyxpQkFBeEQ7QUFDQSxNQUFNQyx5QkFBeUIsR0FDN0JKLGlCQUFpQixDQUFDSyxlQUFsQixJQUFxQ0wsaUJBQWlCLENBQUNLLGVBQWxCLEtBQXNDQSw4Q0FEN0U7QUFHQSx3QkFBVSxZQUFNO0FBQ2RKLElBQUFBLGNBQWMsQ0FBQyxzQ0FBRCxFQUF5QywwREFBa0IsWUFBbEIsR0FBaUMsTUFBMUUsQ0FBZDtBQUNBQSxJQUFBQSxjQUFjLENBQUMscUJBQUQsRUFBd0IsTUFBeEIsQ0FBZCxDQUZjLENBSWQ7O0FBQ0FBLElBQUFBLGNBQWMsQ0FBQyx3QkFBRCxFQUEyQixDQUFDLENBQUNDLDJCQUFGLEdBQWdDLEVBQTNELENBQWQ7QUFDQUQsSUFBQUEsY0FBYyxDQUFDLHNCQUFELEVBQXlCLENBQUMsQ0FBQ0cseUJBQUYsR0FBOEIsRUFBdkQsQ0FBZDtBQUNELEdBUEQsRUFPRyxDQUFDSCxjQUFELEVBQWlCQywyQkFBakIsRUFBOENFLHlCQUE5QyxDQVBIO0FBU0EsU0FBTyxLQUFQO0FBQ0QsQ0FsQkQ7O2VBb0JlTCxPIiwic291cmNlUm9vdCI6ImNvbXBvbmVudDovLy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBob29rcyB9IGZyb20gJ2JvdGZyYW1ld29yay13ZWJjaGF0LWFwaSc7XG5pbXBvcnQgeyB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IGNoZWNrU3VwcG9ydCBhcyBzdXBwb3J0V29ya2VyIH0gZnJvbSAnLi4vLi4vVXRpbHMvZG93bnNjYWxlSW1hZ2VUb0RhdGFVUkwvZG93bnNjYWxlSW1hZ2VUb0RhdGFVUkxVc2luZ1dvcmtlcic7XG5pbXBvcnQgeyBzcGVlY2hTeW50aGVzaXMgfSBmcm9tICcuL0J5cGFzc1NwZWVjaFN5bnRoZXNpc1BvbnlmaWxsJztcbmltcG9ydCB1c2VXZWJTcGVlY2hQb255ZmlsbCBmcm9tICcuLi91c2VXZWJTcGVlY2hQb255ZmlsbCc7XG5cbmNvbnN0IHsgdXNlVHJhY2tEaW1lbnNpb24gfSA9IGhvb2tzO1xuXG5jb25zdCBUcmFja2VyID0gKCkgPT4ge1xuICBjb25zdCBbd2ViU3BlZWNoUG9ueWZpbGxdID0gdXNlV2ViU3BlZWNoUG9ueWZpbGwoKTtcbiAgY29uc3QgdHJhY2tEaW1lbnNpb24gPSB1c2VUcmFja0RpbWVuc2lvbigpO1xuXG4gIGNvbnN0IHNwZWVjaFJlY29nbml0aW9uQ2FwYWJpbGl0eSA9ICEhd2ViU3BlZWNoUG9ueWZpbGwuU3BlZWNoUmVjb2duaXRpb247XG4gIGNvbnN0IHNwZWVjaFN5bnRoZXNpc0NhcGFiaWxpdHkgPVxuICAgIHdlYlNwZWVjaFBvbnlmaWxsLnNwZWVjaFN5bnRoZXNpcyAmJiB3ZWJTcGVlY2hQb255ZmlsbC5zcGVlY2hTeW50aGVzaXMgIT09IHNwZWVjaFN5bnRoZXNpcztcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHRyYWNrRGltZW5zaW9uKCdjYXBhYmlsaXR5OmRvd25zY2FsZUltYWdlOndvcmtlclR5cGUnLCBzdXBwb3J0V29ya2VyKCkgPyAnd2ViIHdvcmtlcicgOiAnbWFpbicpO1xuICAgIHRyYWNrRGltZW5zaW9uKCdjYXBhYmlsaXR5OnJlbmRlcmVyJywgJ2h0bWwnKTtcblxuICAgIC8vIFRPRE86IFtQMl0gIzI5MzcgRGlmZmVyZW50aWF0ZSBiZXR3ZWVuIENvZ25pdGl2ZSBTZXJ2aWNlcyBhbmQgYnJvd3NlciBzcGVlY2hcbiAgICB0cmFja0RpbWVuc2lvbigncHJvcDpzcGVlY2hSZWNvZ25pdGlvbicsICEhc3BlZWNoUmVjb2duaXRpb25DYXBhYmlsaXR5ICsgJycpO1xuICAgIHRyYWNrRGltZW5zaW9uKCdwcm9wOnNwZWVjaFN5bnRoZXNpcycsICEhc3BlZWNoU3ludGhlc2lzQ2FwYWJpbGl0eSArICcnKTtcbiAgfSwgW3RyYWNrRGltZW5zaW9uLCBzcGVlY2hSZWNvZ25pdGlvbkNhcGFiaWxpdHksIHNwZWVjaFN5bnRoZXNpc0NhcGFiaWxpdHldKTtcblxuICByZXR1cm4gZmFsc2U7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBUcmFja2VyO1xuIl19