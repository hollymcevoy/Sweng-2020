"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useObserveScrollPosition;

var _react = require("react");

var _useWebChatUIContext2 = _interopRequireDefault(require("./internal/useWebChatUIContext"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function useObserveScrollPosition(observer, deps) {
  if (typeof observer !== 'function') {
    observer = undefined;
    console.warn('botframework-webchat: First argument passed to "useObserveScrollPosition" must be a function.');
  } else if (typeof deps !== 'undefined' && !Array.isArray(deps)) {
    console.warn('botframework-webchat: Second argument passed to "useObserveScrollPosition" must be an array if specified.');
  }

  var _useWebChatUIContext = (0, _useWebChatUIContext2.default)(),
      observeScrollPosition = _useWebChatUIContext.observeScrollPosition;
  /* eslint-disable-next-line react-hooks/exhaustive-deps */


  (0, _react.useEffect)(function () {
    return observer && observeScrollPosition(observer);
  }, [].concat(_toConsumableArray(deps || []), [observer, observeScrollPosition]));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ob29rcy91c2VPYnNlcnZlU2Nyb2xsUG9zaXRpb24udHMiXSwibmFtZXMiOlsidXNlT2JzZXJ2ZVNjcm9sbFBvc2l0aW9uIiwib2JzZXJ2ZXIiLCJkZXBzIiwidW5kZWZpbmVkIiwiY29uc29sZSIsIndhcm4iLCJBcnJheSIsImlzQXJyYXkiLCJvYnNlcnZlU2Nyb2xsUG9zaXRpb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFHQTs7Ozs7Ozs7Ozs7Ozs7OztBQUVlLFNBQVNBLHdCQUFULENBQ2JDLFFBRGEsRUFFYkMsSUFGYSxFQUdQO0FBQ04sTUFBSSxPQUFPRCxRQUFQLEtBQW9CLFVBQXhCLEVBQW9DO0FBQ2xDQSxJQUFBQSxRQUFRLEdBQUdFLFNBQVg7QUFDQUMsSUFBQUEsT0FBTyxDQUFDQyxJQUFSLENBQWEsK0ZBQWI7QUFDRCxHQUhELE1BR08sSUFBSSxPQUFPSCxJQUFQLEtBQWdCLFdBQWhCLElBQStCLENBQUNJLEtBQUssQ0FBQ0MsT0FBTixDQUFjTCxJQUFkLENBQXBDLEVBQXlEO0FBQzlERSxJQUFBQSxPQUFPLENBQUNDLElBQVIsQ0FDRSwyR0FERjtBQUdEOztBQUVELDZCQUFrQyxvQ0FBbEM7QUFBQSxNQUFRRyxxQkFBUix3QkFBUUEscUJBQVI7QUFFQTs7O0FBQ0Esd0JBQVU7QUFBQSxXQUFNUCxRQUFRLElBQUlPLHFCQUFxQixDQUFDUCxRQUFELENBQXZDO0FBQUEsR0FBViwrQkFBa0VDLElBQUksSUFBSSxFQUExRSxJQUErRUQsUUFBL0UsRUFBeUZPLHFCQUF6RjtBQUNEIiwic291cmNlUm9vdCI6ImNvbXBvbmVudDovLy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBTY3JvbGxQb3NpdGlvbiBmcm9tICcuLi90eXBlcy9TY3JvbGxQb3NpdGlvbic7XG5pbXBvcnQgdXNlV2ViQ2hhdFVJQ29udGV4dCBmcm9tICcuL2ludGVybmFsL3VzZVdlYkNoYXRVSUNvbnRleHQnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VPYnNlcnZlU2Nyb2xsUG9zaXRpb24oXG4gIG9ic2VydmVyOiAoc2Nyb2xsUG9zaXRpb246IFNjcm9sbFBvc2l0aW9uKSA9PiB2b2lkLFxuICBkZXBzOiBhbnlbXVxuKTogdm9pZCB7XG4gIGlmICh0eXBlb2Ygb2JzZXJ2ZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICBvYnNlcnZlciA9IHVuZGVmaW5lZDtcbiAgICBjb25zb2xlLndhcm4oJ2JvdGZyYW1ld29yay13ZWJjaGF0OiBGaXJzdCBhcmd1bWVudCBwYXNzZWQgdG8gXCJ1c2VPYnNlcnZlU2Nyb2xsUG9zaXRpb25cIiBtdXN0IGJlIGEgZnVuY3Rpb24uJyk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGRlcHMgIT09ICd1bmRlZmluZWQnICYmICFBcnJheS5pc0FycmF5KGRlcHMpKSB7XG4gICAgY29uc29sZS53YXJuKFxuICAgICAgJ2JvdGZyYW1ld29yay13ZWJjaGF0OiBTZWNvbmQgYXJndW1lbnQgcGFzc2VkIHRvIFwidXNlT2JzZXJ2ZVNjcm9sbFBvc2l0aW9uXCIgbXVzdCBiZSBhbiBhcnJheSBpZiBzcGVjaWZpZWQuJ1xuICAgICk7XG4gIH1cblxuICBjb25zdCB7IG9ic2VydmVTY3JvbGxQb3NpdGlvbiB9ID0gdXNlV2ViQ2hhdFVJQ29udGV4dCgpO1xuXG4gIC8qIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC1ob29rcy9leGhhdXN0aXZlLWRlcHMgKi9cbiAgdXNlRWZmZWN0KCgpID0+IG9ic2VydmVyICYmIG9ic2VydmVTY3JvbGxQb3NpdGlvbihvYnNlcnZlciksIFsuLi4oZGVwcyB8fCBbXSksIG9ic2VydmVyLCBvYnNlcnZlU2Nyb2xsUG9zaXRpb25dKTtcbn1cbiJdfQ==