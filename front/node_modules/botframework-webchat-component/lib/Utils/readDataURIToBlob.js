"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = readDataURIToBlob;
exports.parse = parse;

var _base64Js = require("base64-js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var PATTERN = /^data:((?:(?!,)[\s\S])*?)(;(base64))?,([\+\/-9=A-Za-z]+)/;
var DEFAULT_CONTENT_TYPE = 'text/plain;charset=US-ASCII';

function parse(dataURI) {
  var match = PATTERN.exec(dataURI);

  if (!match) {
    return;
  }

  var _match = _slicedToArray(match, 5),
      contentType = _match[1],
      encoding = _match[3],
      base64 = _match[4];

  if (encoding !== 'base64') {
    return;
  }

  return {
    base64: base64,
    contentType: contentType || DEFAULT_CONTENT_TYPE,
    encoding: encoding
  };
}

function readDataURIToBlob(dataURI) {
  var parsed = parse(dataURI);

  if (!parsed) {
    return;
  }

  return new Blob([(0, _base64Js.toByteArray)(parsed.base64)], {
    type: parsed.contentType
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9VdGlscy9yZWFkRGF0YVVSSVRvQmxvYi5qcyJdLCJuYW1lcyI6WyJQQVRURVJOIiwiREVGQVVMVF9DT05URU5UX1RZUEUiLCJwYXJzZSIsImRhdGFVUkkiLCJtYXRjaCIsImV4ZWMiLCJjb250ZW50VHlwZSIsImVuY29kaW5nIiwiYmFzZTY0IiwicmVhZERhdGFVUklUb0Jsb2IiLCJwYXJzZWQiLCJCbG9iIiwidHlwZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxPQUFPLEdBQUcsMERBQWhCO0FBRUEsSUFBTUMsb0JBQW9CLEdBQUcsNkJBQTdCOztBQUVPLFNBQVNDLEtBQVQsQ0FBZUMsT0FBZixFQUF3QjtBQUM3QixNQUFNQyxLQUFLLEdBQUdKLE9BQU8sQ0FBQ0ssSUFBUixDQUFhRixPQUFiLENBQWQ7O0FBRUEsTUFBSSxDQUFDQyxLQUFMLEVBQVk7QUFDVjtBQUNEOztBQUVELDhCQUE0Q0EsS0FBNUM7QUFBQSxNQUFTRSxXQUFUO0FBQUEsTUFBd0JDLFFBQXhCO0FBQUEsTUFBa0NDLE1BQWxDOztBQUVBLE1BQUlELFFBQVEsS0FBSyxRQUFqQixFQUEyQjtBQUN6QjtBQUNEOztBQUVELFNBQU87QUFBRUMsSUFBQUEsTUFBTSxFQUFOQSxNQUFGO0FBQVVGLElBQUFBLFdBQVcsRUFBRUEsV0FBVyxJQUFJTCxvQkFBdEM7QUFBNERNLElBQUFBLFFBQVEsRUFBUkE7QUFBNUQsR0FBUDtBQUNEOztBQUVjLFNBQVNFLGlCQUFULENBQTJCTixPQUEzQixFQUFvQztBQUNqRCxNQUFNTyxNQUFNLEdBQUdSLEtBQUssQ0FBQ0MsT0FBRCxDQUFwQjs7QUFFQSxNQUFJLENBQUNPLE1BQUwsRUFBYTtBQUNYO0FBQ0Q7O0FBRUQsU0FBTyxJQUFJQyxJQUFKLENBQVMsQ0FBQywyQkFBWUQsTUFBTSxDQUFDRixNQUFuQixDQUFELENBQVQsRUFBdUM7QUFBRUksSUFBQUEsSUFBSSxFQUFFRixNQUFNLENBQUNKO0FBQWYsR0FBdkMsQ0FBUDtBQUNEIiwic291cmNlUm9vdCI6ImNvbXBvbmVudDovLy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0b0J5dGVBcnJheSB9IGZyb20gJ2Jhc2U2NC1qcyc7XG5cbmNvbnN0IFBBVFRFUk4gPSAvXmRhdGE6KFteLF0qPykoOyhiYXNlNjQpKXswLDF9LChbQS1aYS16MC05Ky89XSspL3U7XG5cbmNvbnN0IERFRkFVTFRfQ09OVEVOVF9UWVBFID0gJ3RleHQvcGxhaW47Y2hhcnNldD1VUy1BU0NJSSc7XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZShkYXRhVVJJKSB7XG4gIGNvbnN0IG1hdGNoID0gUEFUVEVSTi5leGVjKGRhdGFVUkkpO1xuXG4gIGlmICghbWF0Y2gpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBjb25zdCBbLCBjb250ZW50VHlwZSwgLCBlbmNvZGluZywgYmFzZTY0XSA9IG1hdGNoO1xuXG4gIGlmIChlbmNvZGluZyAhPT0gJ2Jhc2U2NCcpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICByZXR1cm4geyBiYXNlNjQsIGNvbnRlbnRUeXBlOiBjb250ZW50VHlwZSB8fCBERUZBVUxUX0NPTlRFTlRfVFlQRSwgZW5jb2RpbmcgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcmVhZERhdGFVUklUb0Jsb2IoZGF0YVVSSSkge1xuICBjb25zdCBwYXJzZWQgPSBwYXJzZShkYXRhVVJJKTtcblxuICBpZiAoIXBhcnNlZCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHJldHVybiBuZXcgQmxvYihbdG9CeXRlQXJyYXkocGFyc2VkLmJhc2U2NCldLCB7IHR5cGU6IHBhcnNlZC5jb250ZW50VHlwZSB9KTtcbn1cbiJdfQ==