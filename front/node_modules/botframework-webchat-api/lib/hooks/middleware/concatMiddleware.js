"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = concatMiddleware;

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function concatMiddleware() {
  for (var _len = arguments.length, middleware = new Array(_len), _key = 0; _key < _len; _key++) {
    middleware[_key] = arguments[_key];
  }

  return function (setupArgs) {
    var setup = middleware.reduce(function (setup, middleware) {
      return middleware ? [].concat(_toConsumableArray(setup), [middleware(setupArgs)]) : setup;
    }, []);
    return function (last) {
      var stack = setup.slice();

      var work = function work(index) {
        return function () {
          var next = stack[+index];
          return (next ? next(work(index + 1)) : last).apply(void 0, arguments);
        };
      };

      return work(0);
    };
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ob29rcy9taWRkbGV3YXJlL2NvbmNhdE1pZGRsZXdhcmUudHMiXSwibmFtZXMiOlsiY29uY2F0TWlkZGxld2FyZSIsIm1pZGRsZXdhcmUiLCJzZXR1cEFyZ3MiLCJzZXR1cCIsInJlZHVjZSIsImxhc3QiLCJzdGFjayIsInNsaWNlIiwid29yayIsImluZGV4IiwibmV4dCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUllLFNBQVNBLGdCQUFULEdBRWM7QUFBQSxvQ0FEeEJDLFVBQ3dCO0FBRHhCQSxJQUFBQSxVQUN3QjtBQUFBOztBQUMzQixTQUFPLFVBQUFDLFNBQVMsRUFBSTtBQUNsQixRQUFNQyxLQUFLLEdBQUdGLFVBQVUsQ0FBQ0csTUFBWCxDQUNaLFVBQUNELEtBQUQsRUFBUUYsVUFBUjtBQUFBLGFBQXdCQSxVQUFVLGdDQUFPRSxLQUFQLElBQWNGLFVBQVUsQ0FBQ0MsU0FBRCxDQUF4QixLQUF1Q0MsS0FBekU7QUFBQSxLQURZLEVBRVosRUFGWSxDQUFkO0FBS0EsV0FBTyxVQUFBRSxJQUFJLEVBQUk7QUFDYixVQUFNQyxLQUFLLEdBQUdILEtBQUssQ0FBQ0ksS0FBTixFQUFkOztBQUNBLFVBQU1DLElBQUksR0FDUixTQURJQSxJQUNKLENBQUNDLEtBQUQ7QUFBQSxlQUNBLFlBQWdCO0FBQ2QsY0FBTUMsSUFBSSxHQUFHSixLQUFLLENBQUMsQ0FBQ0csS0FBRixDQUFsQjtBQUVBLGlCQUFPLENBQUNDLElBQUksR0FBR0EsSUFBSSxDQUFDRixJQUFJLENBQUNDLEtBQUssR0FBRyxDQUFULENBQUwsQ0FBUCxHQUEyQkosSUFBaEMsMEJBQVA7QUFDRCxTQUxEO0FBQUEsT0FERjs7QUFRQSxhQUFPRyxJQUFJLENBQUMsQ0FBRCxDQUFYO0FBQ0QsS0FYRDtBQVlELEdBbEJEO0FBbUJEIiwic291cmNlUm9vdCI6ImNvbXBvbmVudDovLy8iLCJzb3VyY2VzQ29udGVudCI6WyJ0eXBlIFdvcms8VD4gPSAoLi4uYXJnczogYW55W10pID0+IFQ7XG50eXBlIEVuaGFuY2VyPFQ+ID0gKG5leHQ6IFdvcms8VD4pID0+IFdvcms8VD47XG50eXBlIE1pZGRsZXdhcmU8U2V0dXAsIFJlc3VsdD4gPSAoc2V0dXA6IFNldHVwKSA9PiBFbmhhbmNlcjxSZXN1bHQ+O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjb25jYXRNaWRkbGV3YXJlPFNldHVwLCBSZXN1bHQ+KFxuICAuLi5taWRkbGV3YXJlOiBNaWRkbGV3YXJlPFNldHVwLCBSZXN1bHQ+W11cbik6IE1pZGRsZXdhcmU8U2V0dXAsIFJlc3VsdD4ge1xuICByZXR1cm4gc2V0dXBBcmdzID0+IHtcbiAgICBjb25zdCBzZXR1cCA9IG1pZGRsZXdhcmUucmVkdWNlKFxuICAgICAgKHNldHVwLCBtaWRkbGV3YXJlKSA9PiAobWlkZGxld2FyZSA/IFsuLi5zZXR1cCwgbWlkZGxld2FyZShzZXR1cEFyZ3MpXSA6IHNldHVwKSxcbiAgICAgIFtdXG4gICAgKTtcblxuICAgIHJldHVybiBsYXN0ID0+IHtcbiAgICAgIGNvbnN0IHN0YWNrID0gc2V0dXAuc2xpY2UoKTtcbiAgICAgIGNvbnN0IHdvcmsgPVxuICAgICAgICAoaW5kZXg6IG51bWJlcikgPT5cbiAgICAgICAgKC4uLnJ1bkFyZ3MpID0+IHtcbiAgICAgICAgICBjb25zdCBuZXh0ID0gc3RhY2tbK2luZGV4XTtcblxuICAgICAgICAgIHJldHVybiAobmV4dCA/IG5leHQod29yayhpbmRleCArIDEpKSA6IGxhc3QpKC4uLnJ1bkFyZ3MpO1xuICAgICAgICB9O1xuXG4gICAgICByZXR1cm4gd29yaygwKTtcbiAgICB9O1xuICB9O1xufVxuIl19