"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useByteFormatter;

var _react = require("react");

var _useLocalizedGlobalize = _interopRequireDefault(require("./internal/useLocalizedGlobalize"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var KILOBYTE = 1024;
var MEGABYTE = 1048576;
var GIGABYTE = 1073741824;
var LONG_FORM = {
  form: 'long'
};
var SHORT_FORM = {
  form: 'short'
};

function useByteFormatter() {
  var _useLocalizedGlobaliz = (0, _useLocalizedGlobalize.default)(),
      _useLocalizedGlobaliz2 = _slicedToArray(_useLocalizedGlobaliz, 1),
      globalize = _useLocalizedGlobaliz2[0];

  return (0, _react.useMemo)(function () {
    var unitFormatter = globalize.unitFormatter.bind(globalize);
    return function (bytes) {
      if (bytes < KILOBYTE) {
        return unitFormatter('byte', LONG_FORM)(bytes);
      } else if (bytes < MEGABYTE) {
        return unitFormatter('kilobyte', SHORT_FORM)(~~(bytes / KILOBYTE));
      } else if (bytes < GIGABYTE) {
        return unitFormatter('megabyte', SHORT_FORM)(~~(bytes / MEGABYTE));
      }

      return unitFormatter('gigabyte', SHORT_FORM)(~~(bytes / GIGABYTE));
    };
  }, [globalize]);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ob29rcy91c2VCeXRlRm9ybWF0dGVyLnRzIl0sIm5hbWVzIjpbIktJTE9CWVRFIiwiTUVHQUJZVEUiLCJHSUdBQllURSIsIkxPTkdfRk9STSIsImZvcm0iLCJTSE9SVF9GT1JNIiwidXNlQnl0ZUZvcm1hdHRlciIsImdsb2JhbGl6ZSIsInVuaXRGb3JtYXR0ZXIiLCJiaW5kIiwiYnl0ZXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLFFBQVEsR0FBRyxJQUFqQjtBQUNBLElBQU1DLFFBQVEsR0FBRyxPQUFqQjtBQUNBLElBQU1DLFFBQVEsR0FBRyxVQUFqQjtBQUVBLElBQU1DLFNBQVMsR0FBRztBQUNoQkMsRUFBQUEsSUFBSSxFQUFFO0FBRFUsQ0FBbEI7QUFJQSxJQUFNQyxVQUFVLEdBQUc7QUFDakJELEVBQUFBLElBQUksRUFBRTtBQURXLENBQW5COztBQUllLFNBQVNFLGdCQUFULEdBQXVEO0FBQ3BFLDhCQUFvQixxQ0FBcEI7QUFBQTtBQUFBLE1BQU9DLFNBQVA7O0FBRUEsU0FBTyxvQkFBUSxZQUFNO0FBQ25CLFFBQU1DLGFBQWEsR0FBR0QsU0FBUyxDQUFDQyxhQUFWLENBQXdCQyxJQUF4QixDQUE2QkYsU0FBN0IsQ0FBdEI7QUFFQSxXQUFPLFVBQUFHLEtBQUssRUFBSTtBQUNkLFVBQUlBLEtBQUssR0FBR1YsUUFBWixFQUFzQjtBQUNwQixlQUFPUSxhQUFhLENBQUMsTUFBRCxFQUFTTCxTQUFULENBQWIsQ0FBaUNPLEtBQWpDLENBQVA7QUFDRCxPQUZELE1BRU8sSUFBSUEsS0FBSyxHQUFHVCxRQUFaLEVBQXNCO0FBQzNCLGVBQU9PLGFBQWEsQ0FBQyxVQUFELEVBQWFILFVBQWIsQ0FBYixDQUFzQyxDQUFDLEVBQUVLLEtBQUssR0FBR1YsUUFBVixDQUF2QyxDQUFQO0FBQ0QsT0FGTSxNQUVBLElBQUlVLEtBQUssR0FBR1IsUUFBWixFQUFzQjtBQUMzQixlQUFPTSxhQUFhLENBQUMsVUFBRCxFQUFhSCxVQUFiLENBQWIsQ0FBc0MsQ0FBQyxFQUFFSyxLQUFLLEdBQUdULFFBQVYsQ0FBdkMsQ0FBUDtBQUNEOztBQUVELGFBQU9PLGFBQWEsQ0FBQyxVQUFELEVBQWFILFVBQWIsQ0FBYixDQUFzQyxDQUFDLEVBQUVLLEtBQUssR0FBR1IsUUFBVixDQUF2QyxDQUFQO0FBQ0QsS0FWRDtBQVdELEdBZE0sRUFjSixDQUFDSyxTQUFELENBZEksQ0FBUDtBQWVEIiwic291cmNlUm9vdCI6ImNvbXBvbmVudDovLy8iLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQgbm8tbWFnaWMtbnVtYmVyczogW1wiZXJyb3JcIiwgeyBcImlnbm9yZVwiOiBbMTAyNCwgMTA0ODU3NiwgMTA3Mzc0MTgyNF0gfV0gKi9cblxuaW1wb3J0IHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB1c2VMb2NhbGl6ZWRHbG9iYWxpemUgZnJvbSAnLi9pbnRlcm5hbC91c2VMb2NhbGl6ZWRHbG9iYWxpemUnO1xuXG5jb25zdCBLSUxPQllURSA9IDEwMjQ7XG5jb25zdCBNRUdBQllURSA9IDEwNDg1NzY7XG5jb25zdCBHSUdBQllURSA9IDEwNzM3NDE4MjQ7XG5cbmNvbnN0IExPTkdfRk9STSA9IHtcbiAgZm9ybTogJ2xvbmcnXG59O1xuXG5jb25zdCBTSE9SVF9GT1JNID0ge1xuICBmb3JtOiAnc2hvcnQnXG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VCeXRlRm9ybWF0dGVyKCk6IChieXRlczogbnVtYmVyKSA9PiBzdHJpbmcge1xuICBjb25zdCBbZ2xvYmFsaXplXSA9IHVzZUxvY2FsaXplZEdsb2JhbGl6ZSgpO1xuXG4gIHJldHVybiB1c2VNZW1vKCgpID0+IHtcbiAgICBjb25zdCB1bml0Rm9ybWF0dGVyID0gZ2xvYmFsaXplLnVuaXRGb3JtYXR0ZXIuYmluZChnbG9iYWxpemUpO1xuXG4gICAgcmV0dXJuIGJ5dGVzID0+IHtcbiAgICAgIGlmIChieXRlcyA8IEtJTE9CWVRFKSB7XG4gICAgICAgIHJldHVybiB1bml0Rm9ybWF0dGVyKCdieXRlJywgTE9OR19GT1JNKShieXRlcyk7XG4gICAgICB9IGVsc2UgaWYgKGJ5dGVzIDwgTUVHQUJZVEUpIHtcbiAgICAgICAgcmV0dXJuIHVuaXRGb3JtYXR0ZXIoJ2tpbG9ieXRlJywgU0hPUlRfRk9STSkofn4oYnl0ZXMgLyBLSUxPQllURSkpO1xuICAgICAgfSBlbHNlIGlmIChieXRlcyA8IEdJR0FCWVRFKSB7XG4gICAgICAgIHJldHVybiB1bml0Rm9ybWF0dGVyKCdtZWdhYnl0ZScsIFNIT1JUX0ZPUk0pKH5+KGJ5dGVzIC8gTUVHQUJZVEUpKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuaXRGb3JtYXR0ZXIoJ2dpZ2FieXRlJywgU0hPUlRfRk9STSkofn4oYnl0ZXMgLyBHSUdBQllURSkpO1xuICAgIH07XG4gIH0sIFtnbG9iYWxpemVdKTtcbn1cbiJdfQ==