"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useDebugDeps;

var _botframeworkWebchatCore = require("botframework-webchat-core");

var _react = require("react");

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function useDebugDeps(depsMap, name) {
  var lastDepsMapRef = (0, _react.useRef)({});
  var lastDepsMap = lastDepsMapRef.current;
  var keys = new Set([].concat(_toConsumableArray(Object.keys(depsMap)), _toConsumableArray(Object.keys(lastDepsMap))));
  var keysChanged = Array.from(keys).filter( // Mitigation through denylisting.
  // eslint-disable-next-line security/detect-object-injection
  function (key) {
    return !(0, _botframeworkWebchatCore.isForbiddenPropertyNames)(key) && !Object.is(depsMap[key], lastDepsMap[key]);
  });

  if (keysChanged.length) {
    console.groupCollapsed("Changes found in ".concat(name));
    keysChanged.forEach(function (key) {
      // Mitigation through denylisting.
      // eslint-disable-next-line security/detect-object-injection
      (0, _botframeworkWebchatCore.isForbiddenPropertyNames)(key) || console.log(key, {
        from: lastDepsMap[key],
        to: depsMap[key]
      });
    });
    console.groupEnd();
  }

  lastDepsMapRef.current = depsMap;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ob29rcy9pbnRlcm5hbC91c2VEZWJ1Z0RlcHMuanMiXSwibmFtZXMiOlsidXNlRGVidWdEZXBzIiwiZGVwc01hcCIsIm5hbWUiLCJsYXN0RGVwc01hcFJlZiIsImxhc3REZXBzTWFwIiwiY3VycmVudCIsImtleXMiLCJTZXQiLCJPYmplY3QiLCJrZXlzQ2hhbmdlZCIsIkFycmF5IiwiZnJvbSIsImZpbHRlciIsImtleSIsImlzIiwibGVuZ3RoIiwiY29uc29sZSIsImdyb3VwQ29sbGFwc2VkIiwiZm9yRWFjaCIsImxvZyIsInRvIiwiZ3JvdXBFbmQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7QUFFZSxTQUFTQSxZQUFULENBQXNCQyxPQUF0QixFQUErQkMsSUFBL0IsRUFBcUM7QUFDbEQsTUFBTUMsY0FBYyxHQUFHLG1CQUFPLEVBQVAsQ0FBdkI7QUFFQSxNQUFpQkMsV0FBakIsR0FBaUNELGNBQWpDLENBQVFFLE9BQVI7QUFDQSxNQUFNQyxJQUFJLEdBQUcsSUFBSUMsR0FBSiw4QkFBWUMsTUFBTSxDQUFDRixJQUFQLENBQVlMLE9BQVosQ0FBWixzQkFBcUNPLE1BQU0sQ0FBQ0YsSUFBUCxDQUFZRixXQUFaLENBQXJDLEdBQWI7QUFDQSxNQUFNSyxXQUFXLEdBQUdDLEtBQUssQ0FBQ0MsSUFBTixDQUFXTCxJQUFYLEVBQWlCTSxNQUFqQixFQUNsQjtBQUNBO0FBQ0EsWUFBQUMsR0FBRztBQUFBLFdBQUksQ0FBQyx1REFBeUJBLEdBQXpCLENBQUQsSUFBa0MsQ0FBQ0wsTUFBTSxDQUFDTSxFQUFQLENBQVViLE9BQU8sQ0FBQ1ksR0FBRCxDQUFqQixFQUF3QlQsV0FBVyxDQUFDUyxHQUFELENBQW5DLENBQXZDO0FBQUEsR0FIZSxDQUFwQjs7QUFNQSxNQUFJSixXQUFXLENBQUNNLE1BQWhCLEVBQXdCO0FBQ3RCQyxJQUFBQSxPQUFPLENBQUNDLGNBQVIsNEJBQTJDZixJQUEzQztBQUVBTyxJQUFBQSxXQUFXLENBQUNTLE9BQVosQ0FBb0IsVUFBQUwsR0FBRyxFQUFJO0FBQ3pCO0FBQ0E7QUFDQSw2REFBeUJBLEdBQXpCLEtBQWlDRyxPQUFPLENBQUNHLEdBQVIsQ0FBWU4sR0FBWixFQUFpQjtBQUFFRixRQUFBQSxJQUFJLEVBQUVQLFdBQVcsQ0FBQ1MsR0FBRCxDQUFuQjtBQUEwQk8sUUFBQUEsRUFBRSxFQUFFbkIsT0FBTyxDQUFDWSxHQUFEO0FBQXJDLE9BQWpCLENBQWpDO0FBQ0QsS0FKRDtBQU1BRyxJQUFBQSxPQUFPLENBQUNLLFFBQVI7QUFDRDs7QUFFRGxCLEVBQUFBLGNBQWMsQ0FBQ0UsT0FBZixHQUF5QkosT0FBekI7QUFDRCIsInNvdXJjZVJvb3QiOiJjb21wb25lbnQ6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50IG5vLWNvbnNvbGU6IFwib2ZmXCIgKi9cblxuaW1wb3J0IHsgaXNGb3JiaWRkZW5Qcm9wZXJ0eU5hbWVzIH0gZnJvbSAnYm90ZnJhbWV3b3JrLXdlYmNoYXQtY29yZSc7XG5pbXBvcnQgeyB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHVzZURlYnVnRGVwcyhkZXBzTWFwLCBuYW1lKSB7XG4gIGNvbnN0IGxhc3REZXBzTWFwUmVmID0gdXNlUmVmKHt9KTtcblxuICBjb25zdCB7IGN1cnJlbnQ6IGxhc3REZXBzTWFwIH0gPSBsYXN0RGVwc01hcFJlZjtcbiAgY29uc3Qga2V5cyA9IG5ldyBTZXQoWy4uLk9iamVjdC5rZXlzKGRlcHNNYXApLCAuLi5PYmplY3Qua2V5cyhsYXN0RGVwc01hcCldKTtcbiAgY29uc3Qga2V5c0NoYW5nZWQgPSBBcnJheS5mcm9tKGtleXMpLmZpbHRlcihcbiAgICAvLyBNaXRpZ2F0aW9uIHRocm91Z2ggZGVueWxpc3RpbmcuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHNlY3VyaXR5L2RldGVjdC1vYmplY3QtaW5qZWN0aW9uXG4gICAga2V5ID0+ICFpc0ZvcmJpZGRlblByb3BlcnR5TmFtZXMoa2V5KSAmJiAhT2JqZWN0LmlzKGRlcHNNYXBba2V5XSwgbGFzdERlcHNNYXBba2V5XSlcbiAgKTtcblxuICBpZiAoa2V5c0NoYW5nZWQubGVuZ3RoKSB7XG4gICAgY29uc29sZS5ncm91cENvbGxhcHNlZChgQ2hhbmdlcyBmb3VuZCBpbiAke25hbWV9YCk7XG5cbiAgICBrZXlzQ2hhbmdlZC5mb3JFYWNoKGtleSA9PiB7XG4gICAgICAvLyBNaXRpZ2F0aW9uIHRocm91Z2ggZGVueWxpc3RpbmcuXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgc2VjdXJpdHkvZGV0ZWN0LW9iamVjdC1pbmplY3Rpb25cbiAgICAgIGlzRm9yYmlkZGVuUHJvcGVydHlOYW1lcyhrZXkpIHx8IGNvbnNvbGUubG9nKGtleSwgeyBmcm9tOiBsYXN0RGVwc01hcFtrZXldLCB0bzogZGVwc01hcFtrZXldIH0pO1xuICAgIH0pO1xuXG4gICAgY29uc29sZS5ncm91cEVuZCgpO1xuICB9XG5cbiAgbGFzdERlcHNNYXBSZWYuY3VycmVudCA9IGRlcHNNYXA7XG59XG4iXX0=