"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = findLastIndex;

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function findLastIndex(array, predicate) {
  var index = _toConsumableArray(array).reverse().findIndex(predicate);

  if (~index) {
    var _ref = array || [],
        length = _ref.length;

    return length - index - 1;
  }

  return index;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9maW5kTGFzdEluZGV4LnRzIl0sIm5hbWVzIjpbImZpbmRMYXN0SW5kZXgiLCJhcnJheSIsInByZWRpY2F0ZSIsImluZGV4IiwicmV2ZXJzZSIsImZpbmRJbmRleCIsImxlbmd0aCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFlLFNBQVNBLGFBQVQsQ0FBMEJDLEtBQTFCLEVBQStDQyxTQUEvQyxFQUF3RztBQUNySCxNQUFNQyxLQUFLLEdBQUcsbUJBQUlGLEtBQUosRUFBV0csT0FBWCxHQUFxQkMsU0FBckIsQ0FBK0JILFNBQS9CLENBQWQ7O0FBRUEsTUFBSSxDQUFDQyxLQUFMLEVBQVk7QUFDVixlQUFtQkYsS0FBSyxJQUFJLEVBQTVCO0FBQUEsUUFBUUssTUFBUixRQUFRQSxNQUFSOztBQUVBLFdBQU9BLE1BQU0sR0FBR0gsS0FBVCxHQUFpQixDQUF4QjtBQUNEOztBQUVELFNBQU9BLEtBQVA7QUFDRCIsInNvdXJjZVJvb3QiOiJjb21wb25lbnQ6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZmluZExhc3RJbmRleDxUPihhcnJheTogcmVhZG9ubHkgVFtdLCBwcmVkaWNhdGU6ICh2YWx1ZTogVCwgaW5kZXg6IG51bWJlcikgPT4gYm9vbGVhbik6IG51bWJlciB7XG4gIGNvbnN0IGluZGV4ID0gWy4uLmFycmF5XS5yZXZlcnNlKCkuZmluZEluZGV4KHByZWRpY2F0ZSk7XG5cbiAgaWYgKH5pbmRleCkge1xuICAgIGNvbnN0IHsgbGVuZ3RoIH0gPSBhcnJheSB8fCBbXTtcblxuICAgIHJldHVybiBsZW5ndGggLSBpbmRleCAtIDE7XG4gIH1cblxuICByZXR1cm4gaW5kZXg7XG59XG4iXX0=