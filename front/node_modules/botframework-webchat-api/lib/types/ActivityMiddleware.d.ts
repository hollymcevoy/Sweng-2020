import { DirectLineActivity } from 'botframework-webchat-core';
import { ReactNode } from 'react';
import { AvatarComponentFactory } from './AvatarMiddleware';
import { RenderAttachment } from './AttachmentMiddleware';
declare type ActivityProps = {
    hideTimestamp: boolean;
    renderActivityStatus: ({ hideTimestamp: boolean }: {
        hideTimestamp: any;
    }) => ReactNode;
    renderAvatar: AvatarComponentFactory;
    showCallout: boolean;
};
declare type ActivityComponent = (props: ActivityProps) => Exclude<ReactNode, boolean>;
declare type ActivityComponentFactoryOptions = {
    activity: DirectLineActivity;
    nextVisibleActivity: DirectLineActivity;
};
declare type ActivityComponentFactory = (options: ActivityComponentFactoryOptions) => ActivityComponent | false;
declare type LegacyRenderActivity = (renderAttachment: RenderAttachment, { hideTimestamp, renderActivityStatus, renderAvatar, showCallout }: ActivityProps) => Exclude<ReactNode, boolean>;
declare type LegacyActivityRenderer = (options: ActivityComponentFactoryOptions) => LegacyRenderActivity | false;
declare type ActivityEnhancer = (next: LegacyActivityRenderer) => LegacyActivityRenderer;
declare type ActivityMiddleware = () => ActivityEnhancer;
export default ActivityMiddleware;
export type { ActivityComponentFactory, LegacyActivityRenderer };
//# sourceMappingURL=ActivityMiddleware.d.ts.map