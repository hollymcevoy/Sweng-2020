declare type BaseTelemetryMeasurementEvent = {
    dimension?: any;
};
declare type TelemetryEventMeasurementEvent = BaseTelemetryMeasurementEvent & {
    type: 'event';
    name: string;
    level: 'debug' | 'info' | 'warn' | 'error';
    data?: number | string | {
        [key: string]: number | string;
    };
};
declare type TelemetryExceptionMeasurementEvent = BaseTelemetryMeasurementEvent & {
    type: 'exception';
    error: Error;
    fatal: boolean;
};
declare type TelemetryTimingStartMeasurementEvent = BaseTelemetryMeasurementEvent & {
    type: 'timingstart';
    name: string;
    timingId: string;
};
declare type TelemetryTimingEndMeasurementEvent = BaseTelemetryMeasurementEvent & {
    type: 'timingend';
    name: string;
    timingId: string;
    duration: number;
};
declare type TelemetryMeasurementEvent = TelemetryEventMeasurementEvent | TelemetryExceptionMeasurementEvent | TelemetryTimingStartMeasurementEvent | TelemetryTimingEndMeasurementEvent;
export default TelemetryMeasurementEvent;
export { TelemetryEventMeasurementEvent, TelemetryExceptionMeasurementEvent, TelemetryTimingStartMeasurementEvent, TelemetryTimingEndMeasurementEvent };
//# sourceMappingURL=TelemetryMeasurementEvent.d.ts.map