"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = mergeLocalizedStrings;

var _botframeworkWebchatCore = require("botframework-webchat-core");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function mergeLocalizedStrings() {
  var merged = {};

  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  var languages = args.reduce(function (keys, arg) {
    return [].concat(_toConsumableArray(keys), _toConsumableArray(Object.keys(arg)));
  }, []);

  var _iterator = _createForOfIteratorHelper(new Set(languages)),
      _step;

  try {
    var _loop = function _loop() {
      var language = _step.value;

      if (!(0, _botframeworkWebchatCore.isForbiddenPropertyName)(language)) {
        // Mitigation through denylisting.
        // eslint-disable-next-line security/detect-object-injection
        merged[language] = args.reduce(function (merged, arg) {
          return _objectSpread(_objectSpread({}, merged), arg[language]);
        }, {});
      }
    };

    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      _loop();
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  return merged;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9sb2NhbGl6YXRpb24vbWVyZ2VMb2NhbGl6ZWRTdHJpbmdzLnRzIl0sIm5hbWVzIjpbIm1lcmdlTG9jYWxpemVkU3RyaW5ncyIsIm1lcmdlZCIsImFyZ3MiLCJsYW5ndWFnZXMiLCJyZWR1Y2UiLCJrZXlzIiwiYXJnIiwiT2JqZWN0IiwiU2V0IiwibGFuZ3VhZ2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQU1lLFNBQVNBLHFCQUFULEdBQW9GO0FBQ2pHLE1BQU1DLE1BQU0sR0FBRyxFQUFmOztBQURpRyxvQ0FBbERDLElBQWtEO0FBQWxEQSxJQUFBQSxJQUFrRDtBQUFBOztBQUVqRyxNQUFNQyxTQUFTLEdBQUdELElBQUksQ0FBQ0UsTUFBTCxDQUFZLFVBQUNDLElBQUQsRUFBT0MsR0FBUDtBQUFBLHdDQUFtQkQsSUFBbkIsc0JBQTRCRSxNQUFNLENBQUNGLElBQVAsQ0FBWUMsR0FBWixDQUE1QjtBQUFBLEdBQVosRUFBMkQsRUFBM0QsQ0FBbEI7O0FBRmlHLDZDQUkxRSxJQUFJRSxHQUFKLENBQVFMLFNBQVIsQ0FKMEU7QUFBQTs7QUFBQTtBQUFBO0FBQUEsVUFJdEZNLFFBSnNGOztBQUsvRixVQUFJLENBQUMsc0RBQXdCQSxRQUF4QixDQUFMLEVBQXdDO0FBQ3RDO0FBQ0E7QUFDQVIsUUFBQUEsTUFBTSxDQUFDUSxRQUFELENBQU4sR0FBbUJQLElBQUksQ0FBQ0UsTUFBTCxDQUFZLFVBQUNILE1BQUQsRUFBU0ssR0FBVDtBQUFBLGlEQUF1QkwsTUFBdkIsR0FBa0NLLEdBQUcsQ0FBQ0csUUFBRCxDQUFyQztBQUFBLFNBQVosRUFBZ0UsRUFBaEUsQ0FBbkI7QUFDRDtBQVQ4Rjs7QUFJakcsd0RBQTJDO0FBQUE7QUFNMUM7QUFWZ0c7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFZakcsU0FBT1IsTUFBUDtBQUNEIiwic291cmNlUm9vdCI6ImNvbXBvbmVudDovLy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0ZvcmJpZGRlblByb3BlcnR5TmFtZSB9IGZyb20gJ2JvdGZyYW1ld29yay13ZWJjaGF0LWNvcmUnO1xuXG5pbXBvcnQgTG9jYWxpemVkU3RyaW5ncyBmcm9tICcuLi90eXBlcy9Mb2NhbGl6ZWRTdHJpbmdzJztcblxudHlwZSBMb2NhbGl6ZWRTdHJpbmdzTWFwID0geyBbbGFuZ3VhZ2U6IHN0cmluZ106IExvY2FsaXplZFN0cmluZ3MgfTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbWVyZ2VMb2NhbGl6ZWRTdHJpbmdzKC4uLmFyZ3M6IExvY2FsaXplZFN0cmluZ3NNYXBbXSk6IExvY2FsaXplZFN0cmluZ3NNYXAge1xuICBjb25zdCBtZXJnZWQgPSB7fTtcbiAgY29uc3QgbGFuZ3VhZ2VzID0gYXJncy5yZWR1Y2UoKGtleXMsIGFyZykgPT4gWy4uLmtleXMsIC4uLk9iamVjdC5rZXlzKGFyZyldLCBbXSk7XG5cbiAgZm9yIChjb25zdCBsYW5ndWFnZSBvZiBuZXcgU2V0KGxhbmd1YWdlcykpIHtcbiAgICBpZiAoIWlzRm9yYmlkZGVuUHJvcGVydHlOYW1lKGxhbmd1YWdlKSkge1xuICAgICAgLy8gTWl0aWdhdGlvbiB0aHJvdWdoIGRlbnlsaXN0aW5nLlxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHNlY3VyaXR5L2RldGVjdC1vYmplY3QtaW5qZWN0aW9uXG4gICAgICBtZXJnZWRbbGFuZ3VhZ2VdID0gYXJncy5yZWR1Y2UoKG1lcmdlZCwgYXJnKSA9PiAoeyAuLi5tZXJnZWQsIC4uLmFyZ1tsYW5ndWFnZV0gfSksIHt9KTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbWVyZ2VkO1xufVxuIl19