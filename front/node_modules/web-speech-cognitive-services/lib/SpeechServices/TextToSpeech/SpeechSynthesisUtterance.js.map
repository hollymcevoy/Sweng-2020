{"version":3,"sources":["../../../src/SpeechServices/TextToSpeech/SpeechSynthesisUtterance.js"],"names":["asyncDecodeAudioData","audioContext","arrayBuffer","Promise","resolve","reject","promise","decodeAudioData","then","playDecoded","audioBuffer","source","audioContextClosed","EventAsPromise","sourceEnded","unsubscribe","state","target","eventListener","buffer","onended","connect","destination","start","race","upcoming","err","SpeechSynthesisUtterance","text","_lang","_pitch","_rate","_voice","_volume","onboundary","onend","onerror","onmark","onpause","onresume","onstart","value","deploymentId","fetchCredentials","outputFormat","arrayBufferPromise","lang","window","navigator","language","pitch","rate","voice","voiceURI","volume","catch","dispatchEvent","SpeechSynthesisEvent","createBufferSource","_playingSource","ErrorEvent","error","message","stack","stop","EventTarget"],"mappings":"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","sourcesContent":["/* eslint no-empty: [\"error\", { \"allowEmptyCatch\": true }] */\n\nimport { EventTarget, getEventAttributeValue, setEventAttributeValue } from 'event-target-shim/es5';\nimport EventAsPromise from 'event-as-promise';\n\nimport fetchSpeechData from './fetchSpeechData';\nimport SpeechSynthesisEvent from './SpeechSynthesisEvent';\nimport subscribeEvent from './subscribeEvent';\n\nfunction asyncDecodeAudioData(audioContext, arrayBuffer) {\n  return new Promise((resolve, reject) => {\n    const promise = audioContext.decodeAudioData(arrayBuffer, resolve, reject);\n\n    // Newer implementation of \"decodeAudioData\" will return a Promise\n    promise && typeof promise.then === 'function' && resolve(promise);\n  });\n}\n\nfunction playDecoded(audioContext, audioBuffer, source) {\n  return new Promise((resolve, reject) => {\n    const audioContextClosed = new EventAsPromise();\n    const sourceEnded = new EventAsPromise();\n    const unsubscribe = subscribeEvent(\n      audioContext,\n      'statechange',\n      ({ target: { state } }) => state === 'closed' && audioContextClosed.eventListener()\n    );\n\n    try {\n      source.buffer = audioBuffer;\n      // \"ended\" may not fire if the underlying AudioContext is closed prematurely\n      source.onended = sourceEnded.eventListener;\n\n      source.connect(audioContext.destination);\n      source.start(0);\n\n      Promise.race([audioContextClosed.upcoming(), sourceEnded.upcoming()]).then(resolve);\n    } catch (err) {\n      reject(err);\n    } finally {\n      unsubscribe();\n    }\n  });\n}\n\nclass SpeechSynthesisUtterance extends EventTarget {\n  constructor(text) {\n    super();\n\n    this._lang = null;\n    this._pitch = 1;\n    this._rate = 1;\n    this._voice = null;\n    this._volume = 1;\n\n    this.text = text;\n\n    this.onboundary = null;\n    this.onend = null;\n    this.onerror = null;\n    this.onmark = null;\n    this.onpause = null;\n    this.onresume = null;\n    this.onstart = null;\n  }\n\n  get lang() {\n    return this._lang;\n  }\n\n  set lang(value) {\n    this._lang = value;\n  }\n\n  get onboundary() {\n    return getEventAttributeValue(this, 'boundary');\n  }\n\n  set onboundary(value) {\n    setEventAttributeValue(this, 'boundary', value);\n  }\n\n  get onend() {\n    return getEventAttributeValue(this, 'end');\n  }\n\n  set onend(value) {\n    setEventAttributeValue(this, 'end', value);\n  }\n\n  get onerror() {\n    return getEventAttributeValue(this, 'error');\n  }\n\n  set onerror(value) {\n    setEventAttributeValue(this, 'error', value);\n  }\n\n  get onmark() {\n    return getEventAttributeValue(this, 'mark');\n  }\n\n  set onmark(value) {\n    setEventAttributeValue(this, 'mark', value);\n  }\n\n  get onpause() {\n    return getEventAttributeValue(this, 'pause');\n  }\n\n  set onpause(value) {\n    setEventAttributeValue(this, 'pause', value);\n  }\n\n  get onresume() {\n    return getEventAttributeValue(this, 'resume');\n  }\n\n  set onresume(value) {\n    setEventAttributeValue(this, 'resume', value);\n  }\n\n  get onstart() {\n    return getEventAttributeValue(this, 'start');\n  }\n\n  set onstart(value) {\n    setEventAttributeValue(this, 'start', value);\n  }\n\n  get pitch() {\n    return this._pitch;\n  }\n\n  set pitch(value) {\n    this._pitch = value;\n  }\n\n  get rate() {\n    return this._rate;\n  }\n\n  set rate(value) {\n    this._rate = value;\n  }\n\n  get voice() {\n    return this._voice;\n  }\n\n  set voice(value) {\n    this._voice = value;\n  }\n\n  get volume() {\n    return this._volume;\n  }\n\n  set volume(value) {\n    this._volume = value;\n  }\n\n  preload({ deploymentId, fetchCredentials, outputFormat }) {\n    this.arrayBufferPromise = fetchSpeechData({\n      fetchCredentials,\n      deploymentId,\n      lang: this.lang || window.navigator.language,\n      outputFormat,\n      pitch: this.pitch,\n      rate: this.rate,\n      text: this.text,\n      voice: this.voice && this.voice.voiceURI,\n      volume: this.volume\n    });\n\n    // We need to call \"catch\" to make sure the Promise is running.\n    // We will ignore the reject result and handled in play() later.\n    this.arrayBufferPromise.catch();\n  }\n\n  async play(audioContext) {\n    try {\n      // We should emit \"start\" event even if preload() failed.\n      this.dispatchEvent(new SpeechSynthesisEvent('start'));\n\n      // HACK: iOS requires bufferSourceNode to be constructed before decoding data.\n      const source = audioContext.createBufferSource();\n      const audioBuffer = await asyncDecodeAudioData(audioContext, await this.arrayBufferPromise);\n\n      this._playingSource = source;\n\n      await playDecoded(audioContext, audioBuffer, source);\n\n      this._playingSource = null;\n      this.dispatchEvent(new SpeechSynthesisEvent('end'));\n    } catch (error) {\n      // \"message\" is not in spec but to provide a friendly message.\n      this.dispatchEvent(new ErrorEvent('error', { error: 'synthesis-failed', message: error.stack }));\n    }\n  }\n\n  stop() {\n    this._playingSource && this._playingSource.stop();\n  }\n}\n\nexport default SpeechSynthesisUtterance;\n"],"file":"SpeechSynthesisUtterance.js"}