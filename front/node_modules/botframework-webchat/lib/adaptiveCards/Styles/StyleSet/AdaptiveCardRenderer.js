"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(_ref) {
  var cardPushButtonBackgroundColor = _ref.cardPushButtonBackgroundColor,
      cardPushButtonTextColor = _ref.cardPushButtonTextColor,
      accent = _ref.accent,
      paddingRegular = _ref.paddingRegular,
      primaryFont = _ref.primaryFont;
  return {
    '&.webchat__adaptive-card-renderer': {
      // Related to #4075.
      // Adaptive Cards assume its host is in "forced border-box" mode.
      // In CSS, the default is "content-box" mode.
      // https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing#values
      '& *': {
        boxSizing: 'border-box'
      },
      '& .ac-input, & .ac-inlineActionButton, & .ac-quickActionButton': {
        fontFamily: primaryFont
      },
      '& .ac-multichoiceInput': {
        padding: paddingRegular
      },
      '& .ac-pushButton': {
        appearance: 'none',
        backgroundColor: 'White',
        borderStyle: 'solid',
        borderWidth: 1,
        color: accent,
        fontWeight: 600,
        padding: paddingRegular
      },
      '& .ac-pushButton.style-destructive': {
        backgroundColor: '#E50000',
        color: 'white'
      },
      '& .ac-pushButton.style-destructive:hover, & .ac-pushButton.style-destructive:active': {
        backgroundColor: '#BF0000'
      },
      '& .ac-pushButton.style-positive': {
        backgroundColor: '#0078D7',
        color: 'white'
      },
      '& .ac-pushButton.style-positive:hover, & .ac-pushButton.style-positive:active': {
        backgroundColor: '#006ABC'
      },
      // The following styles are copied from :disabled via Chromium.
      '& .ac-pushButton, & input, & select, & textarea': {
        '&[aria-disabled="true"]': {
          backgroundColor: '#EBEBE4',
          borderColor: '#A9A9A9',
          borderStyle: 'solid',
          borderWidth: 1,
          color: '#545454'
        }
      },
      '& .ac-pushButton[aria-disabled="true"]': {
        backgroundColor: '#F0F0F0',
        color: '#6D6D6D'
      },
      '& .ac-pushButton[aria-pressed="true"]': {
        backgroundColor: cardPushButtonBackgroundColor,
        borderColor: cardPushButtonBackgroundColor,
        color: cardPushButtonTextColor
      },
      '& input[aria-disabled="true"]': {
        padding: '2px 1px'
      }
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hZGFwdGl2ZUNhcmRzL1N0eWxlcy9TdHlsZVNldC9BZGFwdGl2ZUNhcmRSZW5kZXJlci50cyJdLCJuYW1lcyI6WyJjYXJkUHVzaEJ1dHRvbkJhY2tncm91bmRDb2xvciIsImNhcmRQdXNoQnV0dG9uVGV4dENvbG9yIiwiYWNjZW50IiwicGFkZGluZ1JlZ3VsYXIiLCJwcmltYXJ5Rm9udCIsImJveFNpemluZyIsImZvbnRGYW1pbHkiLCJwYWRkaW5nIiwiYXBwZWFyYW5jZSIsImJhY2tncm91bmRDb2xvciIsImJvcmRlclN0eWxlIiwiYm9yZGVyV2lkdGgiLCJjb2xvciIsImZvbnRXZWlnaHQiLCJib3JkZXJDb2xvciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUVlLHdCQU1ZO0FBQUEsTUFMekJBLDZCQUt5QixRQUx6QkEsNkJBS3lCO0FBQUEsTUFKekJDLHVCQUl5QixRQUp6QkEsdUJBSXlCO0FBQUEsTUFIekJDLE1BR3lCLFFBSHpCQSxNQUd5QjtBQUFBLE1BRnpCQyxjQUV5QixRQUZ6QkEsY0FFeUI7QUFBQSxNQUR6QkMsV0FDeUIsUUFEekJBLFdBQ3lCO0FBQ3pCLFNBQU87QUFDTCx5Q0FBcUM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFPO0FBQ0xDLFFBQUFBLFNBQVMsRUFBRTtBQUROLE9BTDRCO0FBU25DLHdFQUFrRTtBQUNoRUMsUUFBQUEsVUFBVSxFQUFFRjtBQURvRCxPQVQvQjtBQWFuQyxnQ0FBMEI7QUFDeEJHLFFBQUFBLE9BQU8sRUFBRUo7QUFEZSxPQWJTO0FBaUJuQywwQkFBb0I7QUFDbEJLLFFBQUFBLFVBQVUsRUFBRSxNQURNO0FBRWxCQyxRQUFBQSxlQUFlLEVBQUUsT0FGQztBQUdsQkMsUUFBQUEsV0FBVyxFQUFFLE9BSEs7QUFJbEJDLFFBQUFBLFdBQVcsRUFBRSxDQUpLO0FBS2xCQyxRQUFBQSxLQUFLLEVBQUVWLE1BTFc7QUFNbEJXLFFBQUFBLFVBQVUsRUFBRSxHQU5NO0FBT2xCTixRQUFBQSxPQUFPLEVBQUVKO0FBUFMsT0FqQmU7QUEyQm5DLDRDQUFzQztBQUNwQ00sUUFBQUEsZUFBZSxFQUFFLFNBRG1CO0FBRXBDRyxRQUFBQSxLQUFLLEVBQUU7QUFGNkIsT0EzQkg7QUFnQ25DLDZGQUF1RjtBQUNyRkgsUUFBQUEsZUFBZSxFQUFFO0FBRG9FLE9BaENwRDtBQW9DbkMseUNBQW1DO0FBQ2pDQSxRQUFBQSxlQUFlLEVBQUUsU0FEZ0I7QUFFakNHLFFBQUFBLEtBQUssRUFBRTtBQUYwQixPQXBDQTtBQXlDbkMsdUZBQWlGO0FBQy9FSCxRQUFBQSxlQUFlLEVBQUU7QUFEOEQsT0F6QzlDO0FBNkNuQztBQUVBLHlEQUFtRDtBQUNqRCxtQ0FBMkI7QUFDekJBLFVBQUFBLGVBQWUsRUFBRSxTQURRO0FBRXpCSyxVQUFBQSxXQUFXLEVBQUUsU0FGWTtBQUd6QkosVUFBQUEsV0FBVyxFQUFFLE9BSFk7QUFJekJDLFVBQUFBLFdBQVcsRUFBRSxDQUpZO0FBS3pCQyxVQUFBQSxLQUFLLEVBQUU7QUFMa0I7QUFEc0IsT0EvQ2hCO0FBeURuQyxnREFBMEM7QUFDeENILFFBQUFBLGVBQWUsRUFBRSxTQUR1QjtBQUV4Q0csUUFBQUEsS0FBSyxFQUFFO0FBRmlDLE9BekRQO0FBOERuQywrQ0FBeUM7QUFDdkNILFFBQUFBLGVBQWUsRUFBRVQsNkJBRHNCO0FBRXZDYyxRQUFBQSxXQUFXLEVBQUVkLDZCQUYwQjtBQUd2Q1ksUUFBQUEsS0FBSyxFQUFFWDtBQUhnQyxPQTlETjtBQW9FbkMsdUNBQWlDO0FBQy9CTSxRQUFBQSxPQUFPLEVBQUU7QUFEc0I7QUFwRUU7QUFEaEMsR0FBUDtBQTBFRCIsInNvdXJjZVJvb3QiOiJidW5kbGU6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEZ1bGxCdW5kbGVTdHlsZU9wdGlvbnMgZnJvbSAnLi4vLi4vLi4vdHlwZXMvRnVsbEJ1bmRsZVN0eWxlT3B0aW9ucyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uICh7XG4gIGNhcmRQdXNoQnV0dG9uQmFja2dyb3VuZENvbG9yLFxuICBjYXJkUHVzaEJ1dHRvblRleHRDb2xvcixcbiAgYWNjZW50LFxuICBwYWRkaW5nUmVndWxhcixcbiAgcHJpbWFyeUZvbnRcbn06IEZ1bGxCdW5kbGVTdHlsZU9wdGlvbnMpIHtcbiAgcmV0dXJuIHtcbiAgICAnJi53ZWJjaGF0X19hZGFwdGl2ZS1jYXJkLXJlbmRlcmVyJzoge1xuICAgICAgLy8gUmVsYXRlZCB0byAjNDA3NS5cbiAgICAgIC8vIEFkYXB0aXZlIENhcmRzIGFzc3VtZSBpdHMgaG9zdCBpcyBpbiBcImZvcmNlZCBib3JkZXItYm94XCIgbW9kZS5cbiAgICAgIC8vIEluIENTUywgdGhlIGRlZmF1bHQgaXMgXCJjb250ZW50LWJveFwiIG1vZGUuXG4gICAgICAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9DU1MvYm94LXNpemluZyN2YWx1ZXNcbiAgICAgICcmIConOiB7XG4gICAgICAgIGJveFNpemluZzogJ2JvcmRlci1ib3gnXG4gICAgICB9LFxuXG4gICAgICAnJiAuYWMtaW5wdXQsICYgLmFjLWlubGluZUFjdGlvbkJ1dHRvbiwgJiAuYWMtcXVpY2tBY3Rpb25CdXR0b24nOiB7XG4gICAgICAgIGZvbnRGYW1pbHk6IHByaW1hcnlGb250XG4gICAgICB9LFxuXG4gICAgICAnJiAuYWMtbXVsdGljaG9pY2VJbnB1dCc6IHtcbiAgICAgICAgcGFkZGluZzogcGFkZGluZ1JlZ3VsYXJcbiAgICAgIH0sXG5cbiAgICAgICcmIC5hYy1wdXNoQnV0dG9uJzoge1xuICAgICAgICBhcHBlYXJhbmNlOiAnbm9uZScsXG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogJ1doaXRlJyxcbiAgICAgICAgYm9yZGVyU3R5bGU6ICdzb2xpZCcsXG4gICAgICAgIGJvcmRlcldpZHRoOiAxLFxuICAgICAgICBjb2xvcjogYWNjZW50LFxuICAgICAgICBmb250V2VpZ2h0OiA2MDAsXG4gICAgICAgIHBhZGRpbmc6IHBhZGRpbmdSZWd1bGFyXG4gICAgICB9LFxuXG4gICAgICAnJiAuYWMtcHVzaEJ1dHRvbi5zdHlsZS1kZXN0cnVjdGl2ZSc6IHtcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnI0U1MDAwMCcsXG4gICAgICAgIGNvbG9yOiAnd2hpdGUnXG4gICAgICB9LFxuXG4gICAgICAnJiAuYWMtcHVzaEJ1dHRvbi5zdHlsZS1kZXN0cnVjdGl2ZTpob3ZlciwgJiAuYWMtcHVzaEJ1dHRvbi5zdHlsZS1kZXN0cnVjdGl2ZTphY3RpdmUnOiB7XG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogJyNCRjAwMDAnXG4gICAgICB9LFxuXG4gICAgICAnJiAuYWMtcHVzaEJ1dHRvbi5zdHlsZS1wb3NpdGl2ZSc6IHtcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnIzAwNzhENycsXG4gICAgICAgIGNvbG9yOiAnd2hpdGUnXG4gICAgICB9LFxuXG4gICAgICAnJiAuYWMtcHVzaEJ1dHRvbi5zdHlsZS1wb3NpdGl2ZTpob3ZlciwgJiAuYWMtcHVzaEJ1dHRvbi5zdHlsZS1wb3NpdGl2ZTphY3RpdmUnOiB7XG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogJyMwMDZBQkMnXG4gICAgICB9LFxuXG4gICAgICAvLyBUaGUgZm9sbG93aW5nIHN0eWxlcyBhcmUgY29waWVkIGZyb20gOmRpc2FibGVkIHZpYSBDaHJvbWl1bS5cblxuICAgICAgJyYgLmFjLXB1c2hCdXR0b24sICYgaW5wdXQsICYgc2VsZWN0LCAmIHRleHRhcmVhJzoge1xuICAgICAgICAnJlthcmlhLWRpc2FibGVkPVwidHJ1ZVwiXSc6IHtcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjRUJFQkU0JyxcbiAgICAgICAgICBib3JkZXJDb2xvcjogJyNBOUE5QTknLFxuICAgICAgICAgIGJvcmRlclN0eWxlOiAnc29saWQnLFxuICAgICAgICAgIGJvcmRlcldpZHRoOiAxLFxuICAgICAgICAgIGNvbG9yOiAnIzU0NTQ1NCdcbiAgICAgICAgfVxuICAgICAgfSxcblxuICAgICAgJyYgLmFjLXB1c2hCdXR0b25bYXJpYS1kaXNhYmxlZD1cInRydWVcIl0nOiB7XG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogJyNGMEYwRjAnLFxuICAgICAgICBjb2xvcjogJyM2RDZENkQnXG4gICAgICB9LFxuXG4gICAgICAnJiAuYWMtcHVzaEJ1dHRvblthcmlhLXByZXNzZWQ9XCJ0cnVlXCJdJzoge1xuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGNhcmRQdXNoQnV0dG9uQmFja2dyb3VuZENvbG9yLFxuICAgICAgICBib3JkZXJDb2xvcjogY2FyZFB1c2hCdXR0b25CYWNrZ3JvdW5kQ29sb3IsXG4gICAgICAgIGNvbG9yOiBjYXJkUHVzaEJ1dHRvblRleHRDb2xvclxuICAgICAgfSxcblxuICAgICAgJyYgaW5wdXRbYXJpYS1kaXNhYmxlZD1cInRydWVcIl0nOiB7XG4gICAgICAgIHBhZGRpbmc6ICcycHggMXB4J1xuICAgICAgfVxuICAgIH1cbiAgfTtcbn1cbiJdfQ==