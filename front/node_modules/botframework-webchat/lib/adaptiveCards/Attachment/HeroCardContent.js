"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _botframeworkWebchatComponent = require("botframework-webchat-component");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _AdaptiveCardBuilder = _interopRequireDefault(require("./AdaptiveCardBuilder"));

var _AdaptiveCardRenderer = _interopRequireDefault(require("./AdaptiveCardRenderer"));

var _useAdaptiveCardsPackage = _interopRequireDefault(require("../hooks/useAdaptiveCardsPackage"));

var _useStyleOptions3 = _interopRequireDefault(require("../../hooks/useStyleOptions"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var useDirection = _botframeworkWebchatComponent.hooks.useDirection;

var HeroCardContent = function HeroCardContent(_ref) {
  var actionPerformedClassName = _ref.actionPerformedClassName,
      content = _ref.content,
      disabled = _ref.disabled;

  var _useAdaptiveCardsPack = (0, _useAdaptiveCardsPackage.default)(),
      _useAdaptiveCardsPack2 = (0, _slicedToArray2.default)(_useAdaptiveCardsPack, 1),
      adaptiveCardsPackage = _useAdaptiveCardsPack2[0];

  var _useStyleOptions = (0, _useStyleOptions3.default)(),
      _useStyleOptions2 = (0, _slicedToArray2.default)(_useStyleOptions, 1),
      styleOptions = _useStyleOptions2[0];

  var _useDirection = useDirection(),
      _useDirection2 = (0, _slicedToArray2.default)(_useDirection, 1),
      direction = _useDirection2[0];

  var builtCard = (0, _react.useMemo)(function () {
    var builder = new _AdaptiveCardBuilder.default(adaptiveCardsPackage, styleOptions, direction);

    if (content) {
      (content.images || []).forEach(function (image) {
        return builder.addImage(image.url, null, image.tap, image.alt);
      });
      builder.addCommon(content);
      return builder.card;
    }
  }, [adaptiveCardsPackage, content, direction, styleOptions]);
  return /*#__PURE__*/_react.default.createElement(_AdaptiveCardRenderer.default, {
    actionPerformedClassName: actionPerformedClassName,
    adaptiveCard: builtCard,
    disabled: disabled,
    tapAction: content && content.tap
  });
};

HeroCardContent.defaultProps = {
  actionPerformedClassName: '',
  disabled: undefined
};
HeroCardContent.propTypes = {
  actionPerformedClassName: _propTypes.default.string,
  content: _propTypes.default.shape({
    images: _propTypes.default.arrayOf(_propTypes.default.shape({
      alt: _propTypes.default.string,
      tap: _propTypes.default.any,
      url: _propTypes.default.string.isRequired
    })),
    tap: _propTypes.default.any
  }).isRequired,
  disabled: _propTypes.default.bool
};
var _default = HeroCardContent;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hZGFwdGl2ZUNhcmRzL0F0dGFjaG1lbnQvSGVyb0NhcmRDb250ZW50LnRzeCJdLCJuYW1lcyI6WyJ1c2VEaXJlY3Rpb24iLCJob29rcyIsIkhlcm9DYXJkQ29udGVudCIsImFjdGlvblBlcmZvcm1lZENsYXNzTmFtZSIsImNvbnRlbnQiLCJkaXNhYmxlZCIsImFkYXB0aXZlQ2FyZHNQYWNrYWdlIiwic3R5bGVPcHRpb25zIiwiZGlyZWN0aW9uIiwiYnVpbHRDYXJkIiwiYnVpbGRlciIsIkFkYXB0aXZlQ2FyZEJ1aWxkZXIiLCJpbWFnZXMiLCJmb3JFYWNoIiwiaW1hZ2UiLCJhZGRJbWFnZSIsInVybCIsInRhcCIsImFsdCIsImFkZENvbW1vbiIsImNhcmQiLCJkZWZhdWx0UHJvcHMiLCJ1bmRlZmluZWQiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJzdHJpbmciLCJzaGFwZSIsImFycmF5T2YiLCJhbnkiLCJpc1JlcXVpcmVkIiwiYm9vbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUNBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7QUFFQSxJQUFRQSxZQUFSLEdBQXlCQyxtQ0FBekIsQ0FBUUQsWUFBUjs7QUFRQSxJQUFNRSxlQUF5QyxHQUFHLFNBQTVDQSxlQUE0QyxPQUFxRDtBQUFBLE1BQWxEQyx3QkFBa0QsUUFBbERBLHdCQUFrRDtBQUFBLE1BQXhCQyxPQUF3QixRQUF4QkEsT0FBd0I7QUFBQSxNQUFmQyxRQUFlLFFBQWZBLFFBQWU7O0FBQ3JHLDhCQUErQix1Q0FBL0I7QUFBQTtBQUFBLE1BQU9DLG9CQUFQOztBQUNBLHlCQUF1QixnQ0FBdkI7QUFBQTtBQUFBLE1BQU9DLFlBQVA7O0FBQ0Esc0JBQW9CUCxZQUFZLEVBQWhDO0FBQUE7QUFBQSxNQUFPUSxTQUFQOztBQUVBLE1BQU1DLFNBQVMsR0FBRyxvQkFBUSxZQUFNO0FBQzlCLFFBQU1DLE9BQU8sR0FBRyxJQUFJQyw0QkFBSixDQUF3Qkwsb0JBQXhCLEVBQThDQyxZQUE5QyxFQUE0REMsU0FBNUQsQ0FBaEI7O0FBRUEsUUFBSUosT0FBSixFQUFhO0FBQ1gsT0FBQ0EsT0FBTyxDQUFDUSxNQUFSLElBQWtCLEVBQW5CLEVBQXVCQyxPQUF2QixDQUErQixVQUFBQyxLQUFLO0FBQUEsZUFBSUosT0FBTyxDQUFDSyxRQUFSLENBQWlCRCxLQUFLLENBQUNFLEdBQXZCLEVBQTRCLElBQTVCLEVBQWtDRixLQUFLLENBQUNHLEdBQXhDLEVBQTZDSCxLQUFLLENBQUNJLEdBQW5ELENBQUo7QUFBQSxPQUFwQztBQUVBUixNQUFBQSxPQUFPLENBQUNTLFNBQVIsQ0FBa0JmLE9BQWxCO0FBRUEsYUFBT00sT0FBTyxDQUFDVSxJQUFmO0FBQ0Q7QUFDRixHQVZpQixFQVVmLENBQUNkLG9CQUFELEVBQXVCRixPQUF2QixFQUFnQ0ksU0FBaEMsRUFBMkNELFlBQTNDLENBVmUsQ0FBbEI7QUFZQSxzQkFDRSw2QkFBQyw2QkFBRDtBQUNFLElBQUEsd0JBQXdCLEVBQUVKLHdCQUQ1QjtBQUVFLElBQUEsWUFBWSxFQUFFTSxTQUZoQjtBQUdFLElBQUEsUUFBUSxFQUFFSixRQUhaO0FBSUUsSUFBQSxTQUFTLEVBQUVELE9BQU8sSUFBSUEsT0FBTyxDQUFDYTtBQUpoQyxJQURGO0FBUUQsQ0F6QkQ7O0FBMkJBZixlQUFlLENBQUNtQixZQUFoQixHQUErQjtBQUM3QmxCLEVBQUFBLHdCQUF3QixFQUFFLEVBREc7QUFFN0JFLEVBQUFBLFFBQVEsRUFBRWlCO0FBRm1CLENBQS9CO0FBS0FwQixlQUFlLENBQUNxQixTQUFoQixHQUE0QjtBQUMxQnBCLEVBQUFBLHdCQUF3QixFQUFFcUIsbUJBQVVDLE1BRFY7QUFFMUJyQixFQUFBQSxPQUFPLEVBQUVvQixtQkFBVUUsS0FBVixDQUFnQjtBQUN2QmQsSUFBQUEsTUFBTSxFQUFFWSxtQkFBVUcsT0FBVixDQUNOSCxtQkFBVUUsS0FBVixDQUFnQjtBQUNkUixNQUFBQSxHQUFHLEVBQUVNLG1CQUFVQyxNQUREO0FBRWRSLE1BQUFBLEdBQUcsRUFBRU8sbUJBQVVJLEdBRkQ7QUFHZFosTUFBQUEsR0FBRyxFQUFFUSxtQkFBVUMsTUFBVixDQUFpQkk7QUFIUixLQUFoQixDQURNLENBRGU7QUFRdkJaLElBQUFBLEdBQUcsRUFBRU8sbUJBQVVJO0FBUlEsR0FBaEIsRUFTTkMsVUFYdUI7QUFZMUJ4QixFQUFBQSxRQUFRLEVBQUVtQixtQkFBVU07QUFaTSxDQUE1QjtlQWVlNUIsZSIsInNvdXJjZVJvb3QiOiJidW5kbGU6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0TGluZUhlcm9DYXJkIH0gZnJvbSAnYm90ZnJhbWV3b3JrLXdlYmNoYXQtY29yZSc7XG5pbXBvcnQgeyBob29rcyB9IGZyb20gJ2JvdGZyYW1ld29yay13ZWJjaGF0LWNvbXBvbmVudCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0LCB7IEZDLCB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgQWRhcHRpdmVDYXJkQnVpbGRlciBmcm9tICcuL0FkYXB0aXZlQ2FyZEJ1aWxkZXInO1xuaW1wb3J0IEFkYXB0aXZlQ2FyZFJlbmRlcmVyIGZyb20gJy4vQWRhcHRpdmVDYXJkUmVuZGVyZXInO1xuaW1wb3J0IHVzZUFkYXB0aXZlQ2FyZHNQYWNrYWdlIGZyb20gJy4uL2hvb2tzL3VzZUFkYXB0aXZlQ2FyZHNQYWNrYWdlJztcbmltcG9ydCB1c2VTdHlsZU9wdGlvbnMgZnJvbSAnLi4vLi4vaG9va3MvdXNlU3R5bGVPcHRpb25zJztcblxuY29uc3QgeyB1c2VEaXJlY3Rpb24gfSA9IGhvb2tzO1xuXG50eXBlIEhlcm9DYXJkQ29udGVudFByb3BzID0ge1xuICBhY3Rpb25QZXJmb3JtZWRDbGFzc05hbWU/OiBzdHJpbmc7XG4gIGNvbnRlbnQ6IERpcmVjdExpbmVIZXJvQ2FyZDtcbiAgZGlzYWJsZWQ/OiBib29sZWFuO1xufTtcblxuY29uc3QgSGVyb0NhcmRDb250ZW50OiBGQzxIZXJvQ2FyZENvbnRlbnRQcm9wcz4gPSAoeyBhY3Rpb25QZXJmb3JtZWRDbGFzc05hbWUsIGNvbnRlbnQsIGRpc2FibGVkIH0pID0+IHtcbiAgY29uc3QgW2FkYXB0aXZlQ2FyZHNQYWNrYWdlXSA9IHVzZUFkYXB0aXZlQ2FyZHNQYWNrYWdlKCk7XG4gIGNvbnN0IFtzdHlsZU9wdGlvbnNdID0gdXNlU3R5bGVPcHRpb25zKCk7XG4gIGNvbnN0IFtkaXJlY3Rpb25dID0gdXNlRGlyZWN0aW9uKCk7XG5cbiAgY29uc3QgYnVpbHRDYXJkID0gdXNlTWVtbygoKSA9PiB7XG4gICAgY29uc3QgYnVpbGRlciA9IG5ldyBBZGFwdGl2ZUNhcmRCdWlsZGVyKGFkYXB0aXZlQ2FyZHNQYWNrYWdlLCBzdHlsZU9wdGlvbnMsIGRpcmVjdGlvbik7XG5cbiAgICBpZiAoY29udGVudCkge1xuICAgICAgKGNvbnRlbnQuaW1hZ2VzIHx8IFtdKS5mb3JFYWNoKGltYWdlID0+IGJ1aWxkZXIuYWRkSW1hZ2UoaW1hZ2UudXJsLCBudWxsLCBpbWFnZS50YXAsIGltYWdlLmFsdCkpO1xuXG4gICAgICBidWlsZGVyLmFkZENvbW1vbihjb250ZW50KTtcblxuICAgICAgcmV0dXJuIGJ1aWxkZXIuY2FyZDtcbiAgICB9XG4gIH0sIFthZGFwdGl2ZUNhcmRzUGFja2FnZSwgY29udGVudCwgZGlyZWN0aW9uLCBzdHlsZU9wdGlvbnNdKTtcblxuICByZXR1cm4gKFxuICAgIDxBZGFwdGl2ZUNhcmRSZW5kZXJlclxuICAgICAgYWN0aW9uUGVyZm9ybWVkQ2xhc3NOYW1lPXthY3Rpb25QZXJmb3JtZWRDbGFzc05hbWV9XG4gICAgICBhZGFwdGl2ZUNhcmQ9e2J1aWx0Q2FyZH1cbiAgICAgIGRpc2FibGVkPXtkaXNhYmxlZH1cbiAgICAgIHRhcEFjdGlvbj17Y29udGVudCAmJiBjb250ZW50LnRhcH1cbiAgICAvPlxuICApO1xufTtcblxuSGVyb0NhcmRDb250ZW50LmRlZmF1bHRQcm9wcyA9IHtcbiAgYWN0aW9uUGVyZm9ybWVkQ2xhc3NOYW1lOiAnJyxcbiAgZGlzYWJsZWQ6IHVuZGVmaW5lZFxufTtcblxuSGVyb0NhcmRDb250ZW50LnByb3BUeXBlcyA9IHtcbiAgYWN0aW9uUGVyZm9ybWVkQ2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjb250ZW50OiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGltYWdlczogUHJvcFR5cGVzLmFycmF5T2YoXG4gICAgICBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgICBhbHQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgICAgIHRhcDogUHJvcFR5cGVzLmFueSxcbiAgICAgICAgdXJsOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWRcbiAgICAgIH0pXG4gICAgKSxcbiAgICB0YXA6IFByb3BUeXBlcy5hbnlcbiAgfSkuaXNSZXF1aXJlZCxcbiAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sXG59O1xuXG5leHBvcnQgZGVmYXVsdCBIZXJvQ2FyZENvbnRlbnQ7XG4iXX0=