"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _botframeworkWebchatComponent = require("botframework-webchat-component");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _CommonCard = _interopRequireDefault(require("./CommonCard"));

/* eslint react/no-array-index-key: "off" */
var ImageContent = _botframeworkWebchatComponent.Components.ImageContent,
    VideoContent = _botframeworkWebchatComponent.Components.VideoContent;
var useStyleSet = _botframeworkWebchatComponent.hooks.useStyleSet;

var AnimationCardContent = function AnimationCardContent(_ref) {
  var actionPerformedClassName = _ref.actionPerformedClassName,
      content = _ref.content,
      disabled = _ref.disabled;
  var _content$media = content.media,
      media = _content$media === void 0 ? [] : _content$media;

  var _useStyleSet = useStyleSet(),
      _useStyleSet2 = (0, _slicedToArray2.default)(_useStyleSet, 1),
      animationCardAttachmentStyleSet = _useStyleSet2[0].animationCardAttachment;

  return /*#__PURE__*/_react.default.createElement("div", {
    className: animationCardAttachmentStyleSet
  }, /*#__PURE__*/_react.default.createElement("ul", {
    className: "media-list"
  }, media.map(function (_ref2, index) {
    var _ref2$profile = _ref2.profile,
        profile = _ref2$profile === void 0 ? '' : _ref2$profile,
        url = _ref2.url;
    return /*#__PURE__*/_react.default.createElement("li", {
      key: index
    }, /\.gif$/i.test(url) ? /*#__PURE__*/_react.default.createElement(ImageContent, {
      alt: profile,
      src: url
    }) : /*#__PURE__*/_react.default.createElement(VideoContent, {
      alt: profile,
      src: url
    }));
  })), /*#__PURE__*/_react.default.createElement(_CommonCard.default, {
    actionPerformedClassName: actionPerformedClassName,
    content: content,
    disabled: disabled
  }));
};

AnimationCardContent.defaultProps = {
  actionPerformedClassName: '',
  disabled: undefined
};
AnimationCardContent.propTypes = {
  actionPerformedClassName: _propTypes.default.string,
  content: _propTypes.default.shape({
    media: _propTypes.default.arrayOf(_propTypes.default.shape({
      profile: _propTypes.default.string,
      url: _propTypes.default.string.isRequired
    })).isRequired
  }).isRequired,
  disabled: _propTypes.default.bool
};
var _default = AnimationCardContent;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hZGFwdGl2ZUNhcmRzL0F0dGFjaG1lbnQvQW5pbWF0aW9uQ2FyZENvbnRlbnQudHN4Il0sIm5hbWVzIjpbIkltYWdlQ29udGVudCIsIkNvbXBvbmVudHMiLCJWaWRlb0NvbnRlbnQiLCJ1c2VTdHlsZVNldCIsImhvb2tzIiwiQW5pbWF0aW9uQ2FyZENvbnRlbnQiLCJhY3Rpb25QZXJmb3JtZWRDbGFzc05hbWUiLCJjb250ZW50IiwiZGlzYWJsZWQiLCJtZWRpYSIsImFuaW1hdGlvbkNhcmRBdHRhY2htZW50U3R5bGVTZXQiLCJhbmltYXRpb25DYXJkQXR0YWNobWVudCIsIm1hcCIsImluZGV4IiwicHJvZmlsZSIsInVybCIsInRlc3QiLCJkZWZhdWx0UHJvcHMiLCJ1bmRlZmluZWQiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJzdHJpbmciLCJzaGFwZSIsImFycmF5T2YiLCJpc1JlcXVpcmVkIiwiYm9vbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFHQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFQQTtBQVNBLElBQVFBLFlBQVIsR0FBdUNDLHdDQUF2QyxDQUFRRCxZQUFSO0FBQUEsSUFBc0JFLFlBQXRCLEdBQXVDRCx3Q0FBdkMsQ0FBc0JDLFlBQXRCO0FBQ0EsSUFBUUMsV0FBUixHQUF3QkMsbUNBQXhCLENBQVFELFdBQVI7O0FBUUEsSUFBTUUsb0JBQW1ELEdBQUcsU0FBdERBLG9CQUFzRCxPQUFxRDtBQUFBLE1BQWxEQyx3QkFBa0QsUUFBbERBLHdCQUFrRDtBQUFBLE1BQXhCQyxPQUF3QixRQUF4QkEsT0FBd0I7QUFBQSxNQUFmQyxRQUFlLFFBQWZBLFFBQWU7QUFDL0csdUJBQXVCRCxPQUF2QixDQUFRRSxLQUFSO0FBQUEsTUFBUUEsS0FBUiwrQkFBZ0IsRUFBaEI7O0FBQ0EscUJBQXVFTixXQUFXLEVBQWxGO0FBQUE7QUFBQSxNQUFrQ08sK0JBQWxDLG9CQUFTQyx1QkFBVDs7QUFFQSxzQkFDRTtBQUFLLElBQUEsU0FBUyxFQUFFRDtBQUFoQixrQkFDRTtBQUFJLElBQUEsU0FBUyxFQUFDO0FBQWQsS0FDR0QsS0FBSyxDQUFDRyxHQUFOLENBQVUsaUJBQXdCQyxLQUF4QjtBQUFBLDhCQUFHQyxPQUFIO0FBQUEsUUFBR0EsT0FBSCw4QkFBYSxFQUFiO0FBQUEsUUFBaUJDLEdBQWpCLFNBQWlCQSxHQUFqQjtBQUFBLHdCQUNUO0FBQUksTUFBQSxHQUFHLEVBQUVGO0FBQVQsT0FDRyxVQUFXRyxJQUFYLENBQWdCRCxHQUFoQixpQkFBdUIsNkJBQUMsWUFBRDtBQUFjLE1BQUEsR0FBRyxFQUFFRCxPQUFuQjtBQUE0QixNQUFBLEdBQUcsRUFBRUM7QUFBakMsTUFBdkIsZ0JBQWtFLDZCQUFDLFlBQUQ7QUFBYyxNQUFBLEdBQUcsRUFBRUQsT0FBbkI7QUFBNEIsTUFBQSxHQUFHLEVBQUVDO0FBQWpDLE1BRHJFLENBRFM7QUFBQSxHQUFWLENBREgsQ0FERixlQVFFLDZCQUFDLG1CQUFEO0FBQVksSUFBQSx3QkFBd0IsRUFBRVQsd0JBQXRDO0FBQWdFLElBQUEsT0FBTyxFQUFFQyxPQUF6RTtBQUFrRixJQUFBLFFBQVEsRUFBRUM7QUFBNUYsSUFSRixDQURGO0FBWUQsQ0FoQkQ7O0FBa0JBSCxvQkFBb0IsQ0FBQ1ksWUFBckIsR0FBb0M7QUFDbENYLEVBQUFBLHdCQUF3QixFQUFFLEVBRFE7QUFFbENFLEVBQUFBLFFBQVEsRUFBRVU7QUFGd0IsQ0FBcEM7QUFLQWIsb0JBQW9CLENBQUNjLFNBQXJCLEdBQWlDO0FBQy9CYixFQUFBQSx3QkFBd0IsRUFBRWMsbUJBQVVDLE1BREw7QUFFL0JkLEVBQUFBLE9BQU8sRUFBRWEsbUJBQVVFLEtBQVYsQ0FBZ0I7QUFDdkJiLElBQUFBLEtBQUssRUFBRVcsbUJBQVVHLE9BQVYsQ0FDTEgsbUJBQVVFLEtBQVYsQ0FBZ0I7QUFDZFIsTUFBQUEsT0FBTyxFQUFFTSxtQkFBVUMsTUFETDtBQUVkTixNQUFBQSxHQUFHLEVBQUVLLG1CQUFVQyxNQUFWLENBQWlCRztBQUZSLEtBQWhCLENBREssRUFLTEE7QUFOcUIsR0FBaEIsRUFPTkEsVUFUNEI7QUFVL0JoQixFQUFBQSxRQUFRLEVBQUVZLG1CQUFVSztBQVZXLENBQWpDO2VBYWVwQixvQiIsInNvdXJjZVJvb3QiOiJidW5kbGU6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50IHJlYWN0L25vLWFycmF5LWluZGV4LWtleTogXCJvZmZcIiAqL1xuXG5pbXBvcnQgeyBEaXJlY3RMaW5lQW5pbWF0aW9uQ2FyZCB9IGZyb20gJ2JvdGZyYW1ld29yay13ZWJjaGF0LWNvcmUnO1xuaW1wb3J0IHsgQ29tcG9uZW50cywgaG9va3MgfSBmcm9tICdib3RmcmFtZXdvcmstd2ViY2hhdC1jb21wb25lbnQnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCwgeyBGQyB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IENvbW1vbkNhcmQgZnJvbSAnLi9Db21tb25DYXJkJztcblxuY29uc3QgeyBJbWFnZUNvbnRlbnQsIFZpZGVvQ29udGVudCB9ID0gQ29tcG9uZW50cztcbmNvbnN0IHsgdXNlU3R5bGVTZXQgfSA9IGhvb2tzO1xuXG50eXBlIEFuaW1hdGlvbkNhcmRDb250ZW50UHJvcHMgPSB7XG4gIGFjdGlvblBlcmZvcm1lZENsYXNzTmFtZT86IHN0cmluZztcbiAgY29udGVudDogRGlyZWN0TGluZUFuaW1hdGlvbkNhcmQ7XG4gIGRpc2FibGVkPzogYm9vbGVhbjtcbn07XG5cbmNvbnN0IEFuaW1hdGlvbkNhcmRDb250ZW50OiBGQzxBbmltYXRpb25DYXJkQ29udGVudFByb3BzPiA9ICh7IGFjdGlvblBlcmZvcm1lZENsYXNzTmFtZSwgY29udGVudCwgZGlzYWJsZWQgfSkgPT4ge1xuICBjb25zdCB7IG1lZGlhID0gW10gfSA9IGNvbnRlbnQ7XG4gIGNvbnN0IFt7IGFuaW1hdGlvbkNhcmRBdHRhY2htZW50OiBhbmltYXRpb25DYXJkQXR0YWNobWVudFN0eWxlU2V0IH1dID0gdXNlU3R5bGVTZXQoKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXthbmltYXRpb25DYXJkQXR0YWNobWVudFN0eWxlU2V0fT5cbiAgICAgIDx1bCBjbGFzc05hbWU9XCJtZWRpYS1saXN0XCI+XG4gICAgICAgIHttZWRpYS5tYXAoKHsgcHJvZmlsZSA9ICcnLCB1cmwgfSwgaW5kZXgpID0+IChcbiAgICAgICAgICA8bGkga2V5PXtpbmRleH0+XG4gICAgICAgICAgICB7L1xcLmdpZiQvaXUudGVzdCh1cmwpID8gPEltYWdlQ29udGVudCBhbHQ9e3Byb2ZpbGV9IHNyYz17dXJsfSAvPiA6IDxWaWRlb0NvbnRlbnQgYWx0PXtwcm9maWxlfSBzcmM9e3VybH0gLz59XG4gICAgICAgICAgPC9saT5cbiAgICAgICAgKSl9XG4gICAgICA8L3VsPlxuICAgICAgPENvbW1vbkNhcmQgYWN0aW9uUGVyZm9ybWVkQ2xhc3NOYW1lPXthY3Rpb25QZXJmb3JtZWRDbGFzc05hbWV9IGNvbnRlbnQ9e2NvbnRlbnR9IGRpc2FibGVkPXtkaXNhYmxlZH0gLz5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbkFuaW1hdGlvbkNhcmRDb250ZW50LmRlZmF1bHRQcm9wcyA9IHtcbiAgYWN0aW9uUGVyZm9ybWVkQ2xhc3NOYW1lOiAnJyxcbiAgZGlzYWJsZWQ6IHVuZGVmaW5lZFxufTtcblxuQW5pbWF0aW9uQ2FyZENvbnRlbnQucHJvcFR5cGVzID0ge1xuICBhY3Rpb25QZXJmb3JtZWRDbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGNvbnRlbnQ6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgbWVkaWE6IFByb3BUeXBlcy5hcnJheU9mKFxuICAgICAgUHJvcFR5cGVzLnNoYXBlKHtcbiAgICAgICAgcHJvZmlsZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICAgICAgdXJsOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWRcbiAgICAgIH0pXG4gICAgKS5pc1JlcXVpcmVkXG4gIH0pLmlzUmVxdWlyZWQsXG4gIGRpc2FibGVkOiBQcm9wVHlwZXMuYm9vbFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQW5pbWF0aW9uQ2FyZENvbnRlbnQ7XG4iXX0=