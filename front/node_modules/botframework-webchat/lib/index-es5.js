"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  createDirectLine: true,
  createDirectLineAppServiceExtension: true
};
exports.createDirectLineAppServiceExtension = exports.createDirectLine = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

require("./polyfill");

var _indexMinimal = require("./index-minimal");

var _addVersion = _interopRequireDefault(require("./addVersion"));

var _createDirectLine = _interopRequireDefault(require("./createDirectLine"));

var _createDirectLineAppServiceExtension = _interopRequireDefault(require("./createDirectLineAppServiceExtension"));

var _index = require("./index");

Object.keys(_index).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _index[key];
    }
  });
});

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var createDirectLine = function createDirectLine(options) {
  options.botAgent && console.warn('Web Chat: Developers are not currently allowed to set botAgent in the createDirectLine function. See https://github.com/microsoft/BotFramework-WebChat/issues/2119 for more details.');
  return (0, _createDirectLine.default)(_objectSpread(_objectSpread({}, options), {}, {
    botAgent: "WebChat/".concat(_indexMinimal.version, " (ES5)")
  }));
};

exports.createDirectLine = createDirectLine;

var createDirectLineAppServiceExtension = function createDirectLineAppServiceExtension(options) {
  options.botAgent && console.warn('Web Chat: Developers are not currently allowed to set botAgent in the createDirectLine function. See https://github.com/microsoft/BotFramework-WebChat/issues/2119 for more details.');
  return (0, _createDirectLineAppServiceExtension.default)(_objectSpread(_objectSpread({}, options), {}, {
    botAgent: "WebChat/".concat(_indexMinimal.version, " (ES5)")
  }));
};

exports.createDirectLineAppServiceExtension = createDirectLineAppServiceExtension;
window['WebChat'] = _objectSpread(_objectSpread({}, window['WebChat']), {}, {
  createDirectLine: createDirectLine,
  createDirectLineAppServiceExtension: createDirectLineAppServiceExtension
});
(0, _addVersion.default)('full-es5');
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC1lczUudHMiXSwibmFtZXMiOlsiY3JlYXRlRGlyZWN0TGluZSIsIm9wdGlvbnMiLCJib3RBZ2VudCIsImNvbnNvbGUiLCJ3YXJuIiwidmVyc2lvbiIsImNyZWF0ZURpcmVjdExpbmVBcHBTZXJ2aWNlRXh0ZW5zaW9uIiwid2luZG93Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFJQTs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOzs7Ozs7QUFFTyxJQUFNQSxnQkFBZ0IsR0FBRyxTQUFuQkEsZ0JBQW1CLENBQUFDLE9BQU8sRUFBSTtBQUN6Q0EsRUFBQUEsT0FBTyxDQUFDQyxRQUFSLElBQ0VDLE9BQU8sQ0FBQ0MsSUFBUixDQUNFLHNMQURGLENBREY7QUFLQSxTQUFPLCtEQUE2QkgsT0FBN0I7QUFBc0NDLElBQUFBLFFBQVEsb0JBQWFHLHFCQUFiO0FBQTlDLEtBQVA7QUFDRCxDQVBNOzs7O0FBU0EsSUFBTUMsbUNBQW1DLEdBQUcsU0FBdENBLG1DQUFzQyxDQUFBTCxPQUFPLEVBQUk7QUFDNURBLEVBQUFBLE9BQU8sQ0FBQ0MsUUFBUixJQUNFQyxPQUFPLENBQUNDLElBQVIsQ0FDRSxzTEFERixDQURGO0FBS0EsU0FBTyxrRkFBZ0RILE9BQWhEO0FBQXlEQyxJQUFBQSxRQUFRLG9CQUFhRyxxQkFBYjtBQUFqRSxLQUFQO0FBQ0QsQ0FQTTs7O0FBU1BFLE1BQU0sQ0FBQyxTQUFELENBQU4sbUNBQ0tBLE1BQU0sQ0FBQyxTQUFELENBRFg7QUFFRVAsRUFBQUEsZ0JBQWdCLEVBQWhCQSxnQkFGRjtBQUdFTSxFQUFBQSxtQ0FBbUMsRUFBbkNBO0FBSEY7QUFNQSx5QkFBVyxVQUFYIiwic291cmNlUm9vdCI6ImJ1bmRsZTovLy8iLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQgZG90LW5vdGF0aW9uOiBbXCJlcnJvclwiLCB7IFwiYWxsb3dQYXR0ZXJuXCI6IFwiXldlYkNoYXQkXCIgfV0gKi9cbi8vIHdpbmRvd1snV2ViQ2hhdCddIGlzIHJlcXVpcmVkIGZvciBUeXBlU2NyaXB0XG5cbi8vIEltcG9ydGluZyBwb2x5ZmlsbHMgcmVxdWlyZWQgZm9yIElFMTEvRVM1LlxuaW1wb3J0ICcuL3BvbHlmaWxsJztcblxuaW1wb3J0IHsgdmVyc2lvbiB9IGZyb20gJy4vaW5kZXgtbWluaW1hbCc7XG5pbXBvcnQgYWRkVmVyc2lvbiBmcm9tICcuL2FkZFZlcnNpb24nO1xuaW1wb3J0IGRlZmF1bHRDcmVhdGVEaXJlY3RMaW5lIGZyb20gJy4vY3JlYXRlRGlyZWN0TGluZSc7XG5pbXBvcnQgZGVmYXVsdENyZWF0ZURpcmVjdExpbmVBcHBTZXJ2aWNlRXh0ZW5zaW9uIGZyb20gJy4vY3JlYXRlRGlyZWN0TGluZUFwcFNlcnZpY2VFeHRlbnNpb24nO1xuXG5leHBvcnQgKiBmcm9tICcuL2luZGV4JztcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZURpcmVjdExpbmUgPSBvcHRpb25zID0+IHtcbiAgb3B0aW9ucy5ib3RBZ2VudCAmJlxuICAgIGNvbnNvbGUud2FybihcbiAgICAgICdXZWIgQ2hhdDogRGV2ZWxvcGVycyBhcmUgbm90IGN1cnJlbnRseSBhbGxvd2VkIHRvIHNldCBib3RBZ2VudCBpbiB0aGUgY3JlYXRlRGlyZWN0TGluZSBmdW5jdGlvbi4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9taWNyb3NvZnQvQm90RnJhbWV3b3JrLVdlYkNoYXQvaXNzdWVzLzIxMTkgZm9yIG1vcmUgZGV0YWlscy4nXG4gICAgKTtcblxuICByZXR1cm4gZGVmYXVsdENyZWF0ZURpcmVjdExpbmUoeyAuLi5vcHRpb25zLCBib3RBZ2VudDogYFdlYkNoYXQvJHt2ZXJzaW9ufSAoRVM1KWAgfSk7XG59O1xuXG5leHBvcnQgY29uc3QgY3JlYXRlRGlyZWN0TGluZUFwcFNlcnZpY2VFeHRlbnNpb24gPSBvcHRpb25zID0+IHtcbiAgb3B0aW9ucy5ib3RBZ2VudCAmJlxuICAgIGNvbnNvbGUud2FybihcbiAgICAgICdXZWIgQ2hhdDogRGV2ZWxvcGVycyBhcmUgbm90IGN1cnJlbnRseSBhbGxvd2VkIHRvIHNldCBib3RBZ2VudCBpbiB0aGUgY3JlYXRlRGlyZWN0TGluZSBmdW5jdGlvbi4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9taWNyb3NvZnQvQm90RnJhbWV3b3JrLVdlYkNoYXQvaXNzdWVzLzIxMTkgZm9yIG1vcmUgZGV0YWlscy4nXG4gICAgKTtcblxuICByZXR1cm4gZGVmYXVsdENyZWF0ZURpcmVjdExpbmVBcHBTZXJ2aWNlRXh0ZW5zaW9uKHsgLi4ub3B0aW9ucywgYm90QWdlbnQ6IGBXZWJDaGF0LyR7dmVyc2lvbn0gKEVTNSlgIH0pO1xufTtcblxud2luZG93WydXZWJDaGF0J10gPSB7XG4gIC4uLndpbmRvd1snV2ViQ2hhdCddLFxuICBjcmVhdGVEaXJlY3RMaW5lLFxuICBjcmVhdGVEaXJlY3RMaW5lQXBwU2VydmljZUV4dGVuc2lvblxufTtcblxuYWRkVmVyc2lvbignZnVsbC1lczUnKTtcbiJdfQ==