{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar Subject_1 = require('./Subject');\n\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\n/**\n * @class BehaviorSubject<T>\n */\n\n\nvar BehaviorSubject = function (_super) {\n  __extends(BehaviorSubject, _super);\n\n  function BehaviorSubject(_value) {\n    _super.call(this);\n\n    this._value = _value;\n  }\n\n  Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n    get: function () {\n      return this.getValue();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /** @deprecated internal use only */\n\n  BehaviorSubject.prototype._subscribe = function (subscriber) {\n    var subscription = _super.prototype._subscribe.call(this, subscriber);\n\n    if (subscription && !subscription.closed) {\n      subscriber.next(this._value);\n    }\n\n    return subscription;\n  };\n\n  BehaviorSubject.prototype.getValue = function () {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  };\n\n  BehaviorSubject.prototype.next = function (value) {\n    _super.prototype.next.call(this, this._value = value);\n  };\n\n  return BehaviorSubject;\n}(Subject_1.Subject);\n\nexports.BehaviorSubject = BehaviorSubject;","map":{"version":3,"mappings":";;;;;;;;;;;;AAAA,wBAAwB,WAAxB;;AAGA,wCAAwC,gCAAxC;AAEA;;;;;AAGA;AAAwCA;;AAEtC,2BAAoBC,MAApB,EAA6B;AAC3BC;;AADkB;AAEnB;;AAEDC,wBAAIC,yBAAJ,EAAI,OAAJ,EAAS;SAAT;AACE,aAAO,KAAKC,QAAL,EAAP;AACD,KAFQ;oBAAA;;AAAA,GAAT;AAIA;;AAAqCD,mDAAWE,UAAX,EAAoC;AACvE,QAAMC,YAAY,GAAGL,iBAAMM,UAAN,CAAgBC,IAAhB,CAAgB,IAAhB,EAAiBH,UAAjB,CAArB;;AACA,QAAIC,YAAY,IAAI,CAAiBA,YAAa,CAACG,MAAnD,EAA2D;AACzDJ,gBAAU,CAACK,IAAX,CAAgB,KAAKV,MAArB;AACD;;AACD,WAAOM,YAAP;AACD,GANoC;;AAQrCH;AACE,QAAI,KAAKQ,QAAT,EAAmB;AACjB,YAAM,KAAKC,WAAX;AACD,KAFD,MAEO,IAAI,KAAKH,MAAT,EAAiB;AACtB,YAAM,IAAII,iDAAJ,EAAN;AACD,KAFM,MAEA;AACL,aAAO,KAAKb,MAAZ;AACD;AACF,GARD;;AAUAG,6CAAKW,KAAL,EAAa;AACXb,qBAAMS,IAAN,CAAUF,IAAV,CAAU,IAAV,EAAW,KAAKR,MAAL,GAAcc,KAAzB;AACD,GAFD;;AAGF;AA/BA,EAAwCC,iBAAxC;;AAAaC,0BAAeb,eAAf","names":["__extends","_value","_super","Object","BehaviorSubject","getValue","subscriber","subscription","_subscribe","call","closed","next","hasError","thrownError","ObjectUnsubscribedError_1","value","Subject_1","exports"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/src/BehaviorSubject.ts"],"sourcesContent":["import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, ISubscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<ISubscription>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}