{"ast":null,"code":"\"use strict\"; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Contracts = void 0;\n/**\n * @class Contracts\n * @private\n */\n\nvar Contracts =\n/** @class */\nfunction () {\n  function Contracts() {}\n\n  Contracts.throwIfNullOrUndefined = function (param, name) {\n    if (param === undefined || param === null) {\n      throw new Error(\"throwIfNullOrUndefined:\" + name);\n    }\n  };\n\n  Contracts.throwIfNull = function (param, name) {\n    if (param === null) {\n      throw new Error(\"throwIfNull:\" + name);\n    }\n  };\n\n  Contracts.throwIfNullOrWhitespace = function (param, name) {\n    Contracts.throwIfNullOrUndefined(param, name);\n\n    if ((\"\" + param).trim().length < 1) {\n      throw new Error(\"throwIfNullOrWhitespace:\" + name);\n    }\n  };\n\n  Contracts.throwIfDisposed = function (isDisposed) {\n    if (isDisposed) {\n      throw new Error(\"the object is already disposed\");\n    }\n  };\n\n  Contracts.throwIfArrayEmptyOrWhitespace = function (array, name) {\n    Contracts.throwIfNullOrUndefined(array, name);\n\n    if (array.length === 0) {\n      throw new Error(\"throwIfArrayEmptyOrWhitespace:\" + name);\n    }\n\n    for (var _i = 0, array_1 = array; _i < array_1.length; _i++) {\n      var item = array_1[_i];\n      Contracts.throwIfNullOrWhitespace(item, name);\n    }\n  };\n\n  Contracts.throwIfFileDoesNotExist = function (param, name) {\n    Contracts.throwIfNullOrWhitespace(param, name); // TODO check for file existence.\n  };\n\n  Contracts.throwIfNotUndefined = function (param, name) {\n    if (param !== undefined) {\n      throw new Error(\"throwIfNotUndefined:\" + name);\n    }\n  };\n\n  return Contracts;\n}();\n\nexports.Contracts = Contracts;","map":{"version":3,"mappings":"cAAA;AACA;;;;;;AAEA;;;;;AAIA;AAAA;AAAA;AAAA,wBAkDC;;AAjDiBA,qCAAd,UAAqCC,KAArC,EAAiDC,IAAjD,EAA6D;AACzD,QAAID,KAAK,KAAKE,SAAV,IAAuBF,KAAK,KAAK,IAArC,EAA2C;AACvC,YAAM,IAAIG,KAAJ,CAAU,4BAA4BF,IAAtC,CAAN;AACH;AACJ,GAJa;;AAMAF,0BAAd,UAA0BC,KAA1B,EAAsCC,IAAtC,EAAkD;AAC9C,QAAID,KAAK,KAAK,IAAd,EAAoB;AAChB,YAAM,IAAIG,KAAJ,CAAU,iBAAiBF,IAA3B,CAAN;AACH;AACJ,GAJa;;AAMAF,sCAAd,UAAsCC,KAAtC,EAAqDC,IAArD,EAAiE;AAC7DF,aAAS,CAACK,sBAAV,CAAiCJ,KAAjC,EAAwCC,IAAxC;;AAEA,QAAI,CAAC,KAAKD,KAAN,EAAaK,IAAb,GAAoBC,MAApB,GAA6B,CAAjC,EAAoC;AAChC,YAAM,IAAIH,KAAJ,CAAU,6BAA6BF,IAAvC,CAAN;AACH;AACJ,GANa;;AAQAF,8BAAd,UAA8BQ,UAA9B,EAAiD;AAC7C,QAAIA,UAAJ,EAAgB;AACZ,YAAM,IAAIJ,KAAJ,CAAU,gCAAV,CAAN;AACH;AACJ,GAJa;;AAMAJ,4CAAd,UAA4CS,KAA5C,EAA6DP,IAA7D,EAAyE;AACrEF,aAAS,CAACK,sBAAV,CAAiCI,KAAjC,EAAwCP,IAAxC;;AAEA,QAAIO,KAAK,CAACF,MAAN,KAAiB,CAArB,EAAwB;AACpB,YAAM,IAAIH,KAAJ,CAAU,mCAAmCF,IAA7C,CAAN;AACH;;AAED,SAAmB,2BAAnB,EAAmBQ,mBAAnB,EAAmBA,IAAnB,EAA0B;AAArB,UAAMC,IAAI,cAAV;AACDX,eAAS,CAACY,uBAAV,CAAkCD,IAAlC,EAAwCT,IAAxC;AACH;AACJ,GAVa;;AAYAF,sCAAd,UAAsCC,KAAtC,EAAkDC,IAAlD,EAA8D;AAC1DF,aAAS,CAACY,uBAAV,CAAkCX,KAAlC,EAAyCC,IAAzC,EAD0D,CAG1D;AACH,GAJa;;AAMAF,kCAAd,UAAkCC,KAAlC,EAA8CC,IAA9C,EAA0D;AACtD,QAAID,KAAK,KAAKE,SAAd,EAAyB;AACrB,YAAM,IAAIC,KAAJ,CAAU,yBAAyBF,IAAnC,CAAN;AACH;AACJ,GAJa;;AAKlB;AAlDA;;AAAaW","names":["Contracts","param","name","undefined","Error","throwIfNullOrUndefined","trim","length","isDisposed","array","_i","item","throwIfNullOrWhitespace","exports"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/Contracts.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * @class Contracts\r\n * @private\r\n */\r\nexport class Contracts {\r\n    public static throwIfNullOrUndefined(param: any, name: string): void {\r\n        if (param === undefined || param === null) {\r\n            throw new Error(\"throwIfNullOrUndefined:\" + name);\r\n        }\r\n    }\r\n\r\n    public static throwIfNull(param: any, name: string): void {\r\n        if (param === null) {\r\n            throw new Error(\"throwIfNull:\" + name);\r\n        }\r\n    }\r\n\r\n    public static throwIfNullOrWhitespace(param: string, name: string): void {\r\n        Contracts.throwIfNullOrUndefined(param, name);\r\n\r\n        if ((\"\" + param).trim().length < 1) {\r\n            throw new Error(\"throwIfNullOrWhitespace:\" + name);\r\n        }\r\n    }\r\n\r\n    public static throwIfDisposed(isDisposed: boolean): void {\r\n        if (isDisposed) {\r\n            throw new Error(\"the object is already disposed\");\r\n        }\r\n    }\r\n\r\n    public static throwIfArrayEmptyOrWhitespace(array: string[], name: string): void {\r\n        Contracts.throwIfNullOrUndefined(array, name);\r\n\r\n        if (array.length === 0) {\r\n            throw new Error(\"throwIfArrayEmptyOrWhitespace:\" + name);\r\n        }\r\n\r\n        for (const item of array) {\r\n            Contracts.throwIfNullOrWhitespace(item, name);\r\n        }\r\n    }\r\n\r\n    public static throwIfFileDoesNotExist(param: any, name: string): void {\r\n        Contracts.throwIfNullOrWhitespace(param, name);\r\n\r\n        // TODO check for file existence.\r\n    }\r\n\r\n    public static throwIfNotUndefined(param: any, name: string): void {\r\n        if (param !== undefined) {\r\n            throw new Error(\"throwIfNotUndefined:\" + name);\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}