{"ast":null,"code":"\"use strict\"; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SpeechSynthesisWordBoundaryEventArgs = void 0;\n/**\n * Defines contents of speech synthesis word boundary event.\n * @class SpeechSynthesisWordBoundaryEventArgs\n * Added in version 1.11.0\n */\n\nvar SpeechSynthesisWordBoundaryEventArgs =\n/** @class */\nfunction () {\n  /**\n   * Creates and initializes an instance of this class.\n   * @constructor\n   * @param {number} audioOffset - The audio offset.\n   * @param {string} text - The text.\n   * @param {number} wordLength - The length of the word.\n   * @param {number} textOffset - The text offset.\n   */\n  function SpeechSynthesisWordBoundaryEventArgs(audioOffset, text, wordLength, textOffset) {\n    this.privAudioOffset = audioOffset;\n    this.privText = text;\n    this.privWordLength = wordLength;\n    this.privTextOffset = textOffset;\n  }\n\n  Object.defineProperty(SpeechSynthesisWordBoundaryEventArgs.prototype, \"audioOffset\", {\n    /**\n     * Specifies the audio offset.\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.audioOffset\n     * @function\n     * @public\n     * @returns {number} the audio offset.\n     */\n    get: function () {\n      return this.privAudioOffset;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SpeechSynthesisWordBoundaryEventArgs.prototype, \"text\", {\n    /**\n     * Specifies the text of the word boundary event.\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.text\n     * @function\n     * @public\n     * @returns {string} the text.\n     */\n    get: function () {\n      return this.privText;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SpeechSynthesisWordBoundaryEventArgs.prototype, \"wordLength\", {\n    /**\n     * Specifies the word length\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.wordLength\n     * @function\n     * @public\n     * @returns {number} the word length\n     */\n    get: function () {\n      return this.privWordLength;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SpeechSynthesisWordBoundaryEventArgs.prototype, \"textOffset\", {\n    /**\n     * Specifies the text offset.\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.textOffset\n     * @function\n     * @public\n     * @returns {number} the text offset.\n     */\n    get: function () {\n      return this.privTextOffset;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return SpeechSynthesisWordBoundaryEventArgs;\n}();\n\nexports.SpeechSynthesisWordBoundaryEventArgs = SpeechSynthesisWordBoundaryEventArgs;","map":{"version":3,"mappings":"cAAA;AACA;;;;;;AAEA;;;;;;AAKA;AAAA;AAAA;AAMI;;;;;;;;AAQA,gDAAmBA,WAAnB,EAAwCC,IAAxC,EAAsDC,UAAtD,EAA0EC,UAA1E,EAA4F;AACxF,SAAKC,eAAL,GAAuBJ,WAAvB;AACA,SAAKK,QAAL,GAAgBJ,IAAhB;AACA,SAAKK,cAAL,GAAsBJ,UAAtB;AACA,SAAKK,cAAL,GAAsBJ,UAAtB;AACH;;AASDK,wBAAWC,8CAAX,EAAW,aAAX,EAAsB;AAPtB;;;;;;;SAOA;AACI,aAAO,KAAKL,eAAZ;AACH,KAFqB;qBAAA;;AAAA,GAAtB;AAWAI,wBAAWC,8CAAX,EAAW,MAAX,EAAe;AAPf;;;;;;;SAOA;AACI,aAAO,KAAKJ,QAAZ;AACH,KAFc;qBAAA;;AAAA,GAAf;AAWAG,wBAAWC,8CAAX,EAAW,YAAX,EAAqB;AAPrB;;;;;;;SAOA;AACI,aAAO,KAAKH,cAAZ;AACH,KAFoB;qBAAA;;AAAA,GAArB;AAWAE,wBAAWC,8CAAX,EAAW,YAAX,EAAqB;AAPrB;;;;;;;SAOA;AACI,aAAO,KAAKF,cAAZ;AACH,KAFoB;qBAAA;;AAAA,GAArB;AAGJ;AAhEA;;AAAaG","names":["audioOffset","text","wordLength","textOffset","privAudioOffset","privText","privWordLength","privTextOffset","Object","SpeechSynthesisWordBoundaryEventArgs","exports"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/SpeechSynthesisWordBoundaryEventArgs.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines contents of speech synthesis word boundary event.\r\n * @class SpeechSynthesisWordBoundaryEventArgs\r\n * Added in version 1.11.0\r\n */\r\nexport class SpeechSynthesisWordBoundaryEventArgs {\r\n    private privAudioOffset: number;\r\n    private privText: string;\r\n    private privWordLength: number;\r\n    private privTextOffset: number;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {number} audioOffset - The audio offset.\r\n     * @param {string} text - The text.\r\n     * @param {number} wordLength - The length of the word.\r\n     * @param {number} textOffset - The text offset.\r\n     */\r\n    public constructor(audioOffset: number, text: string, wordLength: number, textOffset: number) {\r\n        this.privAudioOffset = audioOffset;\r\n        this.privText = text;\r\n        this.privWordLength = wordLength;\r\n        this.privTextOffset = textOffset;\r\n    }\r\n\r\n    /**\r\n     * Specifies the audio offset.\r\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.audioOffset\r\n     * @function\r\n     * @public\r\n     * @returns {number} the audio offset.\r\n     */\r\n    public get audioOffset(): number {\r\n        return this.privAudioOffset;\r\n    }\r\n\r\n    /**\r\n     * Specifies the text of the word boundary event.\r\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.text\r\n     * @function\r\n     * @public\r\n     * @returns {string} the text.\r\n     */\r\n    public get text(): string {\r\n        return this.privText;\r\n    }\r\n\r\n    /**\r\n     * Specifies the word length\r\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.wordLength\r\n     * @function\r\n     * @public\r\n     * @returns {number} the word length\r\n     */\r\n    public get wordLength(): number {\r\n        return this.privWordLength;\r\n    }\r\n\r\n    /**\r\n     * Specifies the text offset.\r\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.textOffset\r\n     * @function\r\n     * @public\r\n     * @returns {number} the text offset.\r\n     */\r\n    public get textOffset(): number {\r\n        return this.privTextOffset;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}