{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createAdaptiveCardsAttachmentMiddleware;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _AdaptiveCardAttachment = _interopRequireDefault(require(\"./AttachmentForScreenReader/AdaptiveCardAttachment\"));\n\nvar _RichCardAttachment = _interopRequireDefault(require(\"./AttachmentForScreenReader/RichCardAttachment\"));\n\nvar RICH_CARD_CONTENT_TYPES = ['application/vnd.microsoft.card.animation', 'application/vnd.microsoft.card.audio', 'application/vnd.microsoft.card.hero', 'application/vnd.microsoft.card.oauth', 'application/vnd.microsoft.card.receipt', 'application/vnd.microsoft.card.signin', 'application/vnd.microsoft.card.thumbnail', 'application/vnd.microsoft.card.video'];\n\nfunction createAdaptiveCardsAttachmentMiddleware() {\n  return function () {\n    return function (next) {\n      return function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var _args$0$attachment = args[0].attachment,\n            content = _args$0$attachment.content,\n            contentType = _args$0$attachment.contentType;\n        return content && RICH_CARD_CONTENT_TYPES.includes(contentType) ? function () {\n          return /*#__PURE__*/_react.default.createElement(_RichCardAttachment.default, {\n            content: content\n          });\n        } : content && contentType === 'application/vnd.microsoft.card.adaptive' ? function () {\n          return /*#__PURE__*/_react.default.createElement(_AdaptiveCardAttachment.default, {\n            content: content\n          });\n        } : next.apply(void 0, args);\n      };\n    };\n  };\n}","map":{"version":3,"mappings":";;;;;;;;;AACA;;AAEA;;AACA;;AAEA,IAAMA,uBAAuB,GAAG,CAC9B,0CAD8B,EAE9B,sCAF8B,EAG9B,qCAH8B,EAI9B,sCAJ8B,EAK9B,wCAL8B,EAM9B,uCAN8B,EAO9B,0CAP8B,EAQ9B,sCAR8B,CAAhC;;AAWe,SAASC,uCAAT,GAAwF;AACrG,SAAO;AAAA,WACL,gBAAI;AAAA,aACJ,YAAa;AAAA,0CAATC,IAAS;AAATA,cAAS,MAATA,GAASC,eAATD;AAAS;;AACX,iCAIIA,IAJJ,GAIIA,CAFAE,UAFJ;AAAA,YAEkBC,OAFlB,sBAEkBA,OAFlB;AAAA,YAE2BC,WAF3B,sBAE2BA,WAF3B;AAMA,eAAOD,OAAO,IAAIL,uBAAuB,CAACO,QAAxBP,CAAiCM,WAAjCN,CAAXK,GACH;AAAA,8BAAMG,6BAACC,2BAAD;AAAoBJ,mBAAO,EAAEA;AAA7B,YAAN;AADG,YAEHA,OAAO,IAAIC,WAAW,KAAK,yCAA3BD,GACA;AAAA,8BAAMG,6BAACE,+BAAD;AAAwBL,mBAAO,EAAEA;AAAjC,YAAN;AADA,YAEAM,IAAI,MAAJA,SAAQT,IAARS,CAJJ;AARE;AADC;AAAP;AAeD","names":["RICH_CARD_CONTENT_TYPES","createAdaptiveCardsAttachmentMiddleware","args","arguments","attachment","content","contentType","includes","_react","_RichCardAttachment","_AdaptiveCardAttachment","next"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat/lib/src/adaptiveCards/createAdaptiveCardsAttachmentForScreenReaderMiddleware.tsx"],"sourcesContent":["import { AttachmentForScreenReaderMiddleware } from 'botframework-webchat-api';\nimport React from 'react';\n\nimport AdaptiveCardAttachment from './AttachmentForScreenReader/AdaptiveCardAttachment';\nimport RichCardAttachment from './AttachmentForScreenReader/RichCardAttachment';\n\nconst RICH_CARD_CONTENT_TYPES = [\n  'application/vnd.microsoft.card.animation',\n  'application/vnd.microsoft.card.audio',\n  'application/vnd.microsoft.card.hero',\n  'application/vnd.microsoft.card.oauth',\n  'application/vnd.microsoft.card.receipt',\n  'application/vnd.microsoft.card.signin',\n  'application/vnd.microsoft.card.thumbnail',\n  'application/vnd.microsoft.card.video'\n];\n\nexport default function createAdaptiveCardsAttachmentMiddleware(): AttachmentForScreenReaderMiddleware {\n  return () =>\n    next =>\n    (...args) => {\n      const [\n        {\n          attachment: { content, contentType }\n        }\n      ] = args;\n\n      return content && RICH_CARD_CONTENT_TYPES.includes(contentType)\n        ? () => <RichCardAttachment content={content} />\n        : content && contentType === 'application/vnd.microsoft.card.adaptive'\n        ? () => <AdaptiveCardAttachment content={content} />\n        : next(...args);\n    };\n}\n"]},"metadata":{},"sourceType":"script"}