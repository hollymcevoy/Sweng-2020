{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = sendPostBackToPostActivitySaga;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _effects = require(\"redux-saga/effects\");\n\nvar _postActivity = _interopRequireDefault(require(\"../actions/postActivity\"));\n\nvar _sendPostBack = require(\"../actions/sendPostBack\");\n\nvar _whileConnected = _interopRequireDefault(require(\"./effects/whileConnected\"));\n\nvar _marked = /*#__PURE__*/_regenerator[\"default\"].mark(postActivityWithPostBack),\n    _marked2 = /*#__PURE__*/_regenerator[\"default\"].mark(sendPostBackToPostActivity),\n    _marked3 = /*#__PURE__*/_regenerator[\"default\"].mark(sendPostBackToPostActivitySaga); // https://github.com/microsoft/botframework-sdk/blob/main/specs/botframework-activity/botframework-activity.md#post-back\n\n\nfunction postActivityWithPostBack(_ref) {\n  var value;\n  return _regenerator[\"default\"].wrap(function postActivityWithPostBack$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          value = _ref.payload.value;\n          _context.next = 3;\n          return (0, _effects.put)((0, _postActivity[\"default\"])({\n            channelData: {\n              postBack: true\n            },\n            text: typeof value === 'string' ? value : undefined,\n            type: 'message',\n            value: typeof value !== 'string' ? value : undefined\n          }));\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction sendPostBackToPostActivity() {\n  return _regenerator[\"default\"].wrap(function sendPostBackToPostActivity$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return (0, _effects.takeEvery)(_sendPostBack.SEND_POST_BACK, postActivityWithPostBack);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction sendPostBackToPostActivitySaga() {\n  return _regenerator[\"default\"].wrap(function sendPostBackToPostActivitySaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return (0, _whileConnected[\"default\"])(sendPostBackToPostActivity);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"mappings":";;;;;;;;;;;AAGA;;AACA;;AACA;;AACA;;wDAGUA;yDAaAC;yDAIeC,gC,CAlBzB;;;AACA,SAAUF,wBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgDG,eAAhD,QAAqCC,OAArC,CAAgDD;AAAhDE;AACE,iBAAM,kBACJ,8BAAa;AACXC,uBAAW,EAAE;AACXC,sBAAQ,EAAE;AADC,aADF;AAIXC,gBAAI,EAAE,OAAOL,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCM,SAJ/B;AAKXC,gBAAI,EAAE,SALK;AAMXP,iBAAK,EAAE,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCM;AANhC,WAAb,CADI,CAAN;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SAAUR,0BAAV;AAAA;AAAA;AAAA;AAAA;AAAAU;AACE,iBAAM,wBAAUC,4BAAV,EAA0BZ,wBAA1B,CAAN;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIe,SAAUE,8BAAV;AAAA;AAAA;AAAA;AAAA;AAAAW;AACb,iBAAM,gCAAeZ,0BAAf,CAAN;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","names":["postActivityWithPostBack","sendPostBackToPostActivity","sendPostBackToPostActivitySaga","value","payload","_context","channelData","postBack","text","undefined","type","_context2","SEND_POST_BACK","_context3"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-core/lib/src/sagas/sendPostBackToPostActivitySaga.js"],"sourcesContent":["// This is for the ternary operator of text and value.\n/* eslint no-undefined: \"off\" */\n\nimport { put, takeEvery } from 'redux-saga/effects';\nimport postActivity from '../actions/postActivity';\nimport { SEND_POST_BACK } from '../actions/sendPostBack';\nimport whileConnected from './effects/whileConnected';\n\n// https://github.com/microsoft/botframework-sdk/blob/main/specs/botframework-activity/botframework-activity.md#post-back\nfunction* postActivityWithPostBack({ payload: { value } }) {\n  yield put(\n    postActivity({\n      channelData: {\n        postBack: true\n      },\n      text: typeof value === 'string' ? value : undefined,\n      type: 'message',\n      value: typeof value !== 'string' ? value : undefined\n    })\n  );\n}\n\nfunction* sendPostBackToPostActivity() {\n  yield takeEvery(SEND_POST_BACK, postActivityWithPostBack);\n}\n\nexport default function* sendPostBackToPostActivitySaga() {\n  yield whileConnected(sendPostBackToPostActivity);\n}\n"]},"metadata":{},"sourceType":"script"}