{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clearElementChildren = exports.getScrollY = exports.getScrollX = exports.getFitStatus = exports.truncate = exports.stringToCssColor = exports.parseEnum = exports.getEnumValueByName = exports.parseBool = exports.parseNumber = exports.parseString = exports.appendChild = exports.generateUniqueId = exports.isMobileOS = exports.isInternetExplorer = void 0; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nvar Enums = require(\"./enums\");\n\nvar Shared = require(\"./shared\");\n\nfunction isInternetExplorer() {\n  // The documentMode property only exists in IE\n  return window.document.documentMode !== undefined;\n}\n\nexports.isInternetExplorer = isInternetExplorer;\n\nfunction isMobileOS() {\n  var userAgent = window.navigator.userAgent;\n  return !!userAgent.match(/Android/i) || !!userAgent.match(/iPad/i) || !!userAgent.match(/iPhone/i);\n}\n\nexports.isMobileOS = isMobileOS;\n/**\n * Generate a UUID prepended with \"__ac-\"\n */\n\nfunction generateUniqueId() {\n  return \"__ac-\" + Shared.UUID.generate();\n}\n\nexports.generateUniqueId = generateUniqueId;\n\nfunction appendChild(node, child) {\n  if (child) {\n    node.appendChild(child);\n  }\n}\n\nexports.appendChild = appendChild;\n\nfunction parseString(obj, defaultValue) {\n  return typeof obj === \"string\" ? obj : defaultValue;\n}\n\nexports.parseString = parseString;\n\nfunction parseNumber(obj, defaultValue) {\n  return typeof obj === \"number\" ? obj : defaultValue;\n}\n\nexports.parseNumber = parseNumber;\n\nfunction parseBool(value, defaultValue) {\n  if (typeof value === \"boolean\") {\n    return value;\n  } else if (typeof value === \"string\") {\n    switch (value.toLowerCase()) {\n      case \"true\":\n        return true;\n\n      case \"false\":\n        return false;\n\n      default:\n        return defaultValue;\n    }\n  }\n\n  return defaultValue;\n}\n\nexports.parseBool = parseBool;\n\nfunction getEnumValueByName(enumType, name) {\n  for (var key in enumType) {\n    var keyAsNumber = parseInt(key, 10);\n\n    if (keyAsNumber >= 0) {\n      var value = enumType[key];\n\n      if (value && typeof value === \"string\" && value.toLowerCase() === name.toLowerCase()) {\n        return keyAsNumber;\n      }\n    }\n  }\n\n  return undefined;\n}\n\nexports.getEnumValueByName = getEnumValueByName;\n\nfunction parseEnum(enumType, name, defaultValue) {\n  if (!name) {\n    return defaultValue;\n  }\n\n  var enumValue = getEnumValueByName(enumType, name);\n  return enumValue !== undefined ? enumValue : defaultValue;\n}\n\nexports.parseEnum = parseEnum;\n\nfunction stringToCssColor(color) {\n  if (color) {\n    var regEx = /#([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})?/gi;\n    var matches = regEx.exec(color);\n\n    if (matches && matches[4]) {\n      var a = parseInt(matches[1], 16) / 255;\n      var r = parseInt(matches[2], 16);\n      var g = parseInt(matches[3], 16);\n      var b = parseInt(matches[4], 16);\n      return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + a + \")\";\n    }\n  }\n\n  return color;\n}\n\nexports.stringToCssColor = stringToCssColor;\n\nfunction truncate(element, maxHeight, lineHeight) {\n  var fits = function () {\n    // Allow a one pixel overflow to account for rounding differences\n    // between browsers\n    return maxHeight - element.scrollHeight >= -1.0;\n  };\n\n  if (fits()) return;\n  var fullText = element.innerHTML;\n\n  var truncateAt = function (idx) {\n    element.innerHTML = fullText.substring(0, idx) + '...';\n  };\n\n  var breakableIndices = findBreakableIndices(fullText);\n  var lo = 0;\n  var hi = breakableIndices.length;\n  var bestBreakIdx = 0; // Do a binary search for the longest string that fits\n\n  while (lo < hi) {\n    var mid = Math.floor((lo + hi) / 2);\n    truncateAt(breakableIndices[mid]);\n\n    if (fits()) {\n      bestBreakIdx = breakableIndices[mid];\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  truncateAt(bestBreakIdx); // If we have extra room, try to expand the string letter by letter\n  // (covers the case where we have to break in the middle of a long word)\n\n  if (lineHeight && maxHeight - element.scrollHeight >= lineHeight - 1.0) {\n    var idx = findNextCharacter(fullText, bestBreakIdx);\n\n    while (idx < fullText.length) {\n      truncateAt(idx);\n\n      if (fits()) {\n        bestBreakIdx = idx;\n        idx = findNextCharacter(fullText, idx);\n      } else {\n        break;\n      }\n    }\n\n    truncateAt(bestBreakIdx);\n  }\n}\n\nexports.truncate = truncate;\n\nfunction findBreakableIndices(html) {\n  var results = [];\n  var idx = findNextCharacter(html, -1);\n\n  while (idx < html.length) {\n    if (html[idx] == ' ') {\n      results.push(idx);\n    }\n\n    idx = findNextCharacter(html, idx);\n  }\n\n  return results;\n}\n\nfunction findNextCharacter(html, currIdx) {\n  currIdx += 1; // If we found the start of an HTML tag, keep advancing until we get\n  // past it, so we don't end up truncating in the middle of the tag\n\n  while (currIdx < html.length && html[currIdx] == '<') {\n    while (currIdx < html.length && html[currIdx++] != '>');\n  }\n\n  return currIdx;\n}\n\nfunction getFitStatus(element, containerEnd) {\n  var start = element.offsetTop;\n  var end = start + element.clientHeight;\n\n  if (end <= containerEnd) {\n    return Enums.ContainerFitStatus.FullyInContainer;\n  } else if (start < containerEnd) {\n    return Enums.ContainerFitStatus.Overflowing;\n  } else {\n    return Enums.ContainerFitStatus.FullyOutOfContainer;\n  }\n}\n\nexports.getFitStatus = getFitStatus;\n\nfunction getScrollX() {\n  return window.pageXOffset;\n}\n\nexports.getScrollX = getScrollX;\n\nfunction getScrollY() {\n  return window.pageYOffset;\n}\n\nexports.getScrollY = getScrollY;\n\nfunction clearElementChildren(element) {\n  while (element.firstChild) {\n    element.removeChild(element.firstChild);\n  }\n}\n\nexports.clearElementChildren = clearElementChildren;","map":{"version":3,"mappings":"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","names":["isInternetExplorer","window","document","documentMode","undefined","exports","isMobileOS","userAgent","navigator","match","generateUniqueId","Shared","UUID","generate","appendChild","node","child","parseString","obj","defaultValue","parseNumber","parseBool","value","toLowerCase","getEnumValueByName","enumType","name","key","keyAsNumber","parseInt","parseEnum","enumValue","stringToCssColor","color","regEx","matches","exec","a","r","g","b","truncate","element","maxHeight","lineHeight","fits","scrollHeight","fullText","innerHTML","truncateAt","idx","substring","breakableIndices","findBreakableIndices","lo","hi","length","bestBreakIdx","mid","Math","floor","findNextCharacter","html","results","push","currIdx","getFitStatus","containerEnd","start","offsetTop","end","clientHeight","Enums","ContainerFitStatus","FullyInContainer","Overflowing","FullyOutOfContainer","getScrollX","pageXOffset","getScrollY","pageYOffset","clearElementChildren","firstChild","removeChild"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/adaptivecards/src/utils.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport * as Enums from \"./enums\";\nimport * as Shared from \"./shared\";\n\n// To work around TypeScript complaining about documentMode not being declared\n// on type Document\ndeclare global {\n    interface Document {\n        documentMode?: any;\n    }\n}\n\nexport function isInternetExplorer(): boolean {\n    // The documentMode property only exists in IE\n    return window.document.documentMode !== undefined;\n}\n\nexport function isMobileOS(): boolean {\n    let userAgent = window.navigator.userAgent;\n\n    return !!userAgent.match(/Android/i) || !!userAgent.match(/iPad/i) || !!userAgent.match(/iPhone/i);\n}\n\n/**\n * Generate a UUID prepended with \"__ac-\"\n */\nexport function generateUniqueId(): string {\n    return \"__ac-\" + Shared.UUID.generate();\n}\n\nexport function appendChild(node: Node, child: Node | undefined) {\n    if (child) {\n        node.appendChild(child);\n    }\n}\n\nexport function parseString(obj: any, defaultValue?: string): string | undefined {\n    return typeof obj === \"string\" ? obj : defaultValue;\n}\n\nexport function parseNumber(obj: any, defaultValue?: number): number | undefined {\n    return typeof obj === \"number\" ? obj : defaultValue;\n}\n\nexport function parseBool(value: any, defaultValue?: boolean): boolean | undefined {\n    if (typeof value === \"boolean\") {\n        return value;\n    }\n    else if (typeof value === \"string\") {\n        switch (value.toLowerCase()) {\n            case \"true\":\n                return true;\n            case \"false\":\n                return false;\n            default:\n                return defaultValue;\n        }\n    }\n\n    return defaultValue;\n}\n\nexport function getEnumValueByName(enumType: { [s: number]: string }, name: string) : number | undefined {\n    for (let key in enumType) {\n        let keyAsNumber = parseInt(key, 10);\n\n        if (keyAsNumber >= 0) {\n            let value = enumType[key];\n\n            if (value && typeof value === \"string\" && value.toLowerCase() === name.toLowerCase()) {\n                return keyAsNumber;\n            }\n        }\n    }\n\n    return undefined;\n}\n\nexport function parseEnum(enumType: { [s: number]: string }, name: string, defaultValue?: number): number | undefined {\n    if (!name) {\n        return defaultValue;\n    }\n\n    let enumValue = getEnumValueByName(enumType, name);\n\n    return enumValue !== undefined ? enumValue : defaultValue;\n}\n\nexport function stringToCssColor(color: string | undefined): string | undefined {\n    if (color) {\n        let regEx = /#([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})?/gi;\n        let matches = regEx.exec(color);\n\n        if (matches && matches[4]) {\n            let a = parseInt(matches[1], 16) / 255;\n            let r = parseInt(matches[2], 16);\n            let g = parseInt(matches[3], 16);\n            let b = parseInt(matches[4], 16);\n\n            return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + a + \")\";\n        }\n    }\n\n    return color;\n}\n\nexport function truncate(element: HTMLElement,\n    maxHeight: number,\n    lineHeight?: number) {\n    let fits = () => {\n        // Allow a one pixel overflow to account for rounding differences\n        // between browsers\n        return maxHeight - element.scrollHeight >= -1.0;\n    };\n\n    if (fits()) return;\n\n    let fullText = element.innerHTML;\n    let truncateAt = (idx: any) => {\n        element.innerHTML = fullText.substring(0, idx) + '...';\n    }\n\n    let breakableIndices = findBreakableIndices(fullText);\n    let lo = 0;\n    let hi = breakableIndices.length;\n    let bestBreakIdx = 0;\n\n    // Do a binary search for the longest string that fits\n    while (lo < hi) {\n        let mid = Math.floor((lo + hi) / 2);\n        truncateAt(breakableIndices[mid]);\n\n        if (fits()) {\n            bestBreakIdx = breakableIndices[mid];\n            lo = mid + 1;\n        }\n        else {\n            hi = mid;\n        }\n    }\n\n    truncateAt(bestBreakIdx);\n\n    // If we have extra room, try to expand the string letter by letter\n    // (covers the case where we have to break in the middle of a long word)\n    if (lineHeight && maxHeight - element.scrollHeight >= lineHeight - 1.0) {\n        let idx = findNextCharacter(fullText, bestBreakIdx);\n\n        while (idx < fullText.length) {\n            truncateAt(idx);\n\n            if (fits()) {\n                bestBreakIdx = idx;\n                idx = findNextCharacter(fullText, idx);\n            }\n            else {\n                break;\n            }\n        }\n\n        truncateAt(bestBreakIdx);\n    }\n}\n\nfunction findBreakableIndices(html: string): number[] {\n    let results: number[] = [];\n    let idx = findNextCharacter(html, -1);\n\n    while (idx < html.length) {\n        if (html[idx] == ' ') {\n            results.push(idx);\n        }\n\n        idx = findNextCharacter(html, idx);\n    }\n\n    return results;\n}\n\nfunction findNextCharacter(html: string, currIdx: number): number {\n    currIdx += 1;\n\n    // If we found the start of an HTML tag, keep advancing until we get\n    // past it, so we don't end up truncating in the middle of the tag\n    while (currIdx < html.length && html[currIdx] == '<') {\n        while (currIdx < html.length && html[currIdx++] != '>');\n    }\n\n    return currIdx;\n}\n\nexport function getFitStatus(element: HTMLElement, containerEnd: number): Enums.ContainerFitStatus {\n    let start = element.offsetTop;\n    let end = start + element.clientHeight;\n\n    if (end <= containerEnd) {\n        return Enums.ContainerFitStatus.FullyInContainer;\n    }\n    else if (start < containerEnd) {\n        return Enums.ContainerFitStatus.Overflowing;\n    }\n    else {\n        return Enums.ContainerFitStatus.FullyOutOfContainer;\n    }\n}\n\nexport function getScrollX(): number {\n    return window.pageXOffset;\n}\n\nexport function getScrollY(): number {\n    return window.pageYOffset;\n}\n\nexport function clearElementChildren(element: HTMLElement) {\n    while (element.firstChild) {\n        element.removeChild(element.firstChild);\n    }\n}\n"]},"metadata":{},"sourceType":"script"}