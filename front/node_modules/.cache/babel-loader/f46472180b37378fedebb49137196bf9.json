{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createDefaultCardActionMiddleware;\n\nvar _botframeworkWebchatCore = require(\"botframework-webchat-core\");\n\nfunction createDefaultCardActionMiddleware() {\n  return function (_ref) {\n    var dispatch = _ref.dispatch;\n    return function (next) {\n      return function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var _args$ = args[0],\n            cardAction = _args$.cardAction,\n            value = _args$.cardAction.value; // We cannot use destructured \"type\" here because TypeScript don't recognize \"messageBack\" is \"MessageBackCardAction\".\n\n        switch (cardAction.type) {\n          case 'imBack':\n            if (typeof value === 'string') {\n              // TODO: [P4] Instead of calling dispatch, we should move to dispatchers instead for completeness\n              dispatch((0, _botframeworkWebchatCore.sendMessage)(value, 'imBack'));\n            } else {\n              throw new Error('cannot send \"imBack\" with a non-string value');\n            }\n\n            break;\n\n          case 'messageBack':\n            dispatch((0, _botframeworkWebchatCore.sendMessageBack)(value, cardAction.text, cardAction.displayText));\n            break;\n\n          case 'postBack':\n            dispatch((0, _botframeworkWebchatCore.sendPostBack)(value));\n            break;\n\n          default:\n            return next.apply(void 0, args);\n        }\n      };\n    };\n  };\n}","map":{"version":3,"mappings":";;;;;;;AAAA;;AAIe,SAASA,iCAAT,GAAmE;AAChF,SAAO;AAAA,QAAGC,QAAH,QAAGA,QAAH;AAAA,WACL,gBAAI;AAAA,aACJ,YAAa;AAAA,0CAATC,IAAS;AAATA,cAAS,MAATA,GAASC,eAATD;AAAS;;AACX,qBAKIA,IALJ;AAAA,YAEIE,UAFJ,UAEIA,UAFJ;AAAA,YAGkBC,KAHlB,UAGID,UAHJ,CAGkBC,KAHlB,CADW,CAQX;;AACA,gBAAQD,UAAU,CAACE,IAAnB;AACE,eAAK,QAAL;AACE,gBAAI,OAAOD,KAAP,KAAiB,QAArB,EAA+B;AAC7B;AACAJ,sBAAQ,CAAC,0CAAYI,KAAZ,EAAmB,QAAnB,CAAD,CAARJ;AAFF,mBAGO;AACL,oBAAM,IAAIM,KAAJ,CAAU,8CAAV,CAAN;AACD;;AAED;;AAEF,eAAK,aAAL;AACEN,oBAAQ,CAAC,8CAAgBI,KAAhB,EAAuBD,UAAU,CAACI,IAAlC,EAAwCJ,UAAU,CAACK,WAAnD,CAAD,CAARR;AAEA;;AAEF,eAAK,UAAL;AACEA,oBAAQ,CAAC,2CAAaI,KAAb,CAAD,CAARJ;AAEA;;AAEF;AACE,mBAAOS,IAAI,MAAJA,SAAQR,IAARQ,CAAP;AAtBJ;AAVE;AADC;AAAP;AAoCD","names":["createDefaultCardActionMiddleware","dispatch","args","arguments","cardAction","value","type","Error","text","displayText","next"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-api/lib/src/hooks/middleware/createDefaultCardActionMiddleware.ts"],"sourcesContent":["import { sendMessage, sendMessageBack, sendPostBack } from 'botframework-webchat-core';\n\nimport CardActionMiddleware from '../../types/CardActionMiddleware';\n\nexport default function createDefaultCardActionMiddleware(): CardActionMiddleware {\n  return ({ dispatch }) =>\n    next =>\n    (...args) => {\n      const [\n        {\n          cardAction,\n          cardAction: { value }\n        }\n      ] = args;\n\n      // We cannot use destructured \"type\" here because TypeScript don't recognize \"messageBack\" is \"MessageBackCardAction\".\n      switch (cardAction.type) {\n        case 'imBack':\n          if (typeof value === 'string') {\n            // TODO: [P4] Instead of calling dispatch, we should move to dispatchers instead for completeness\n            dispatch(sendMessage(value, 'imBack'));\n          } else {\n            throw new Error('cannot send \"imBack\" with a non-string value');\n          }\n\n          break;\n\n        case 'messageBack':\n          dispatch(sendMessageBack(value, cardAction.text, cardAction.displayText));\n\n          break;\n\n        case 'postBack':\n          dispatch(sendPostBack(value));\n\n          break;\n\n        default:\n          return next(...args);\n      }\n    };\n}\n"]},"metadata":{},"sourceType":"script"}