{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useSubmitSendBox;\n\nvar _react = require(\"react\");\n\nvar _useTrackEvent = _interopRequireDefault(require(\"./useTrackEvent\"));\n\nvar _useWebChatAPIContext2 = _interopRequireDefault(require(\"./internal/useWebChatAPIContext\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction useSubmitSendBox() {\n  var _useWebChatAPIContext = (0, _useWebChatAPIContext2.default)(),\n      submitSendBox = _useWebChatAPIContext.submitSendBox;\n\n  var trackEvent = (0, _useTrackEvent.default)();\n  return (0, _react.useCallback)(function (method) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        channelData = _ref.channelData;\n\n    trackEvent('submitSendBox', method);\n    return submitSendBox(method, channelData && {\n      channelData: channelData\n    });\n  }, [submitSendBox, trackEvent]);\n}","map":{"version":3,"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;;;;;AAEe,SAASA,gBAAT,GAA+F;AAC5G,8BAA0B,qCAA1B;AAAA,MAAQC,aAAR,yBAAQA,aAAR;;AACA,MAAMC,UAAU,GAAG,6BAAnB;AAEA,SAAO,wBACL,UAACC,MAAD,EAAiE;AAAA,mFAAP,EAAO;AAAA,QAA9CC,WAA8C,QAA9CA,WAA8C;;AAC/DF,cAAU,CAAC,eAAD,EAAkBC,MAAlB,CAAVD;AAEA,WAAOD,aAAa,CAACE,MAAD,EAASC,WAAW,IAAI;AAAEA,iBAAW,EAAXA;AAAF,KAAxB,CAApB;AAJG,KAML,CAACH,aAAD,EAAgBC,UAAhB,CANK,CAAP;AAQD","names":["useSubmitSendBox","submitSendBox","trackEvent","method","channelData"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-api/lib/src/hooks/useSubmitSendBox.ts"],"sourcesContent":["import { useCallback } from 'react';\n\nimport useTrackEvent from './useTrackEvent';\nimport useWebChatAPIContext from './internal/useWebChatAPIContext';\n\nexport default function useSubmitSendBox(): (method?: string, { channelData }?: { channelData: any }) => void {\n  const { submitSendBox } = useWebChatAPIContext();\n  const trackEvent = useTrackEvent();\n\n  return useCallback(\n    (method: string, { channelData }: { channelData?: any } = {}) => {\n      trackEvent('submitSendBox', method);\n\n      return submitSendBox(method, channelData && { channelData });\n    },\n    [submitSendBox, trackEvent]\n  );\n}\n"]},"metadata":{},"sourceType":"script"}