{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { CancellationErrorCode, CancellationReason, ResultReason } from \"../sdk/Exports\";\nimport { RecognitionStatus } from \"./Exports\";\nexport class EnumTranslation {\n  static implTranslateRecognitionResult(recognitionStatus) {\n    let reason = ResultReason.Canceled;\n\n    switch (recognitionStatus) {\n      case RecognitionStatus.Success:\n        reason = ResultReason.RecognizedSpeech;\n        break;\n\n      case RecognitionStatus.NoMatch:\n      case RecognitionStatus.InitialSilenceTimeout:\n      case RecognitionStatus.BabbleTimeout:\n      case RecognitionStatus.EndOfDictation:\n        reason = ResultReason.NoMatch;\n        break;\n\n      case RecognitionStatus.Error:\n      default:\n        reason = ResultReason.Canceled;\n        break;\n    }\n\n    return reason;\n  }\n\n  static implTranslateCancelResult(recognitionStatus) {\n    let reason = CancellationReason.EndOfStream;\n\n    switch (recognitionStatus) {\n      case RecognitionStatus.Success:\n      case RecognitionStatus.EndOfDictation:\n      case RecognitionStatus.NoMatch:\n        reason = CancellationReason.EndOfStream;\n        break;\n\n      case RecognitionStatus.InitialSilenceTimeout:\n      case RecognitionStatus.BabbleTimeout:\n      case RecognitionStatus.Error:\n      default:\n        reason = CancellationReason.Error;\n        break;\n    }\n\n    return reason;\n  }\n\n  static implTranslateCancelErrorCode(recognitionStatus) {\n    let reason = CancellationErrorCode.NoError;\n\n    switch (recognitionStatus) {\n      case RecognitionStatus.Error:\n        reason = CancellationErrorCode.ServiceError;\n        break;\n\n      case RecognitionStatus.TooManyRequests:\n        reason = CancellationErrorCode.TooManyRequests;\n        break;\n\n      default:\n        reason = CancellationErrorCode.NoError;\n        break;\n    }\n\n    return reason;\n  }\n\n}","map":{"version":3,"mappings":"AAAA;AACA;AAEA,SACIA,qBADJ,EAEIC,kBAFJ,EAGIC,YAHJ,QAIO,gBAJP;AAKA,SAASC,iBAAT,QAAkC,WAAlC;AAEA,OAAM,MAAOC,eAAP,CAAsB;AACoB,SAA9BC,8BAA8B,CAACC,iBAAD,EAAqC;AAC7E,QAAIC,MAAM,GAAGL,YAAY,CAACM,QAA1B;;AACA,YAAQF,iBAAR;AACI,WAAKH,iBAAiB,CAACM,OAAvB;AACIF,cAAM,GAAGL,YAAY,CAACQ,gBAAtB;AACA;;AACJ,WAAKP,iBAAiB,CAACQ,OAAvB;AACA,WAAKR,iBAAiB,CAACS,qBAAvB;AACA,WAAKT,iBAAiB,CAACU,aAAvB;AACA,WAAKV,iBAAiB,CAACW,cAAvB;AACIP,cAAM,GAAGL,YAAY,CAACS,OAAtB;AACA;;AACJ,WAAKR,iBAAiB,CAACY,KAAvB;AACA;AACIR,cAAM,GAAGL,YAAY,CAACM,QAAtB;AACA;AAbR;;AAeA,WAAOD,MAAP;AACH;;AAEsC,SAAzBS,yBAAyB,CAACV,iBAAD,EAAqC;AACxE,QAAIC,MAAM,GAAGN,kBAAkB,CAACgB,WAAhC;;AACA,YAAQX,iBAAR;AACI,WAAKH,iBAAiB,CAACM,OAAvB;AACA,WAAKN,iBAAiB,CAACW,cAAvB;AACA,WAAKX,iBAAiB,CAACQ,OAAvB;AACIJ,cAAM,GAAGN,kBAAkB,CAACgB,WAA5B;AACA;;AACJ,WAAKd,iBAAiB,CAACS,qBAAvB;AACA,WAAKT,iBAAiB,CAACU,aAAvB;AACA,WAAKV,iBAAiB,CAACY,KAAvB;AACA;AACIR,cAAM,GAAGN,kBAAkB,CAACc,KAA5B;AACA;AAXR;;AAaA,WAAOR,MAAP;AACH;;AAEyC,SAA5BW,4BAA4B,CAACZ,iBAAD,EAAqC;AAC3E,QAAIC,MAAM,GAA0BP,qBAAqB,CAACmB,OAA1D;;AACA,YAAQb,iBAAR;AACI,WAAKH,iBAAiB,CAACY,KAAvB;AACIR,cAAM,GAAGP,qBAAqB,CAACoB,YAA/B;AACA;;AACJ,WAAKjB,iBAAiB,CAACkB,eAAvB;AACId,cAAM,GAAGP,qBAAqB,CAACqB,eAA/B;AACA;;AACJ;AACId,cAAM,GAAGP,qBAAqB,CAACmB,OAA/B;AACA;AATR;;AAYA,WAAOZ,MAAP;AAEH;;AAvDuB","names":["CancellationErrorCode","CancellationReason","ResultReason","RecognitionStatus","EnumTranslation","implTranslateRecognitionResult","recognitionStatus","reason","Canceled","Success","RecognizedSpeech","NoMatch","InitialSilenceTimeout","BabbleTimeout","EndOfDictation","Error","implTranslateCancelResult","EndOfStream","implTranslateCancelErrorCode","NoError","ServiceError","TooManyRequests"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/EnumTranslation.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    ResultReason\r\n} from \"../sdk/Exports\";\r\nimport { RecognitionStatus } from \"./Exports\";\r\n\r\nexport class EnumTranslation {\r\n    public static implTranslateRecognitionResult(recognitionStatus: RecognitionStatus): ResultReason {\r\n        let reason = ResultReason.Canceled;\r\n        switch (recognitionStatus) {\r\n            case RecognitionStatus.Success:\r\n                reason = ResultReason.RecognizedSpeech;\r\n                break;\r\n            case RecognitionStatus.NoMatch:\r\n            case RecognitionStatus.InitialSilenceTimeout:\r\n            case RecognitionStatus.BabbleTimeout:\r\n            case RecognitionStatus.EndOfDictation:\r\n                reason = ResultReason.NoMatch;\r\n                break;\r\n            case RecognitionStatus.Error:\r\n            default:\r\n                reason = ResultReason.Canceled;\r\n                break;\r\n        }\r\n        return reason;\r\n    }\r\n\r\n    public static implTranslateCancelResult(recognitionStatus: RecognitionStatus): CancellationReason {\r\n        let reason = CancellationReason.EndOfStream;\r\n        switch (recognitionStatus) {\r\n            case RecognitionStatus.Success:\r\n            case RecognitionStatus.EndOfDictation:\r\n            case RecognitionStatus.NoMatch:\r\n                reason = CancellationReason.EndOfStream;\r\n                break;\r\n            case RecognitionStatus.InitialSilenceTimeout:\r\n            case RecognitionStatus.BabbleTimeout:\r\n            case RecognitionStatus.Error:\r\n            default:\r\n                reason = CancellationReason.Error;\r\n                break;\r\n        }\r\n        return reason;\r\n    }\r\n\r\n    public static implTranslateCancelErrorCode(recognitionStatus: RecognitionStatus): CancellationErrorCode {\r\n        let reason: CancellationErrorCode = CancellationErrorCode.NoError;\r\n        switch (recognitionStatus) {\r\n            case RecognitionStatus.Error:\r\n                reason = CancellationErrorCode.ServiceError;\r\n                break;\r\n            case RecognitionStatus.TooManyRequests:\r\n                reason = CancellationErrorCode.TooManyRequests;\r\n                break;\r\n            default:\r\n                reason = CancellationErrorCode.NoError;\r\n                break;\r\n        }\r\n\r\n        return reason;\r\n\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}