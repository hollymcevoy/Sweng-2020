{"ast":null,"code":"\"use strict\";\n\nvar errorObject_1 = require('./errorObject');\n\nvar tryCatchTarget;\n\nfunction tryCatcher() {\n  try {\n    return tryCatchTarget.apply(this, arguments);\n  } catch (e) {\n    errorObject_1.errorObject.e = e;\n    return errorObject_1.errorObject;\n  }\n}\n\nfunction tryCatch(fn) {\n  tryCatchTarget = fn;\n  return tryCatcher;\n}\n\nexports.tryCatch = tryCatch;\n;","map":{"version":3,"mappings":";;AAAA,4BAA4B,eAA5B;;AAEA,IAAIA,cAAJ;;AAEA;AACE,MAAI;AACF,WAAOA,cAAc,CAACC,KAAf,CAAqB,IAArB,EAA2BC,SAA3B,CAAP;AACA,GAFF,CAEE,OAAOC,CAAP,EAAU;AACVC,8BAAYD,CAAZ,GAAgBA,CAAhB;AACA,WAAOC,yBAAP;AACD;AACF;;AAED,kBAA6CC,EAA7C,EAAkD;AAChDL,gBAAc,GAAGK,EAAjB;AACA,SAAYC,UAAZ;AACD;;AAHeC,mBAAQC,QAAR;AAGf","names":["tryCatchTarget","apply","arguments","e","errorObject_1","fn","tryCatcher","exports","tryCatch"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/src/util/tryCatch.ts"],"sourcesContent":["import { errorObject } from './errorObject';\n\nlet tryCatchTarget: Function;\n\nfunction tryCatcher(this: any): any {\n  try {\n    return tryCatchTarget.apply(this, arguments);\n  } catch (e) {\n    errorObject.e = e;\n    return errorObject;\n  }\n}\n\nexport function tryCatch<T extends Function>(fn: T): T {\n  tryCatchTarget = fn;\n  return <any>tryCatcher;\n};\n"]},"metadata":{},"sourceType":"script"}