{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useShouldSpeakIncomingActivity;\n\nvar _react = require(\"react\");\n\nvar _WebChatReduxContext = require(\"./internal/WebChatReduxContext\");\n\nvar _useWebChatAPIContext2 = _interopRequireDefault(require(\"./internal/useWebChatAPIContext\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction useShouldSpeakIncomingActivity() {\n  var _useWebChatAPIContext = (0, _useWebChatAPIContext2.default)(),\n      startSpeakingActivity = _useWebChatAPIContext.startSpeakingActivity,\n      stopSpeakingActivity = _useWebChatAPIContext.stopSpeakingActivity;\n\n  return [(0, _WebChatReduxContext.useSelector)(function (_ref) {\n    var shouldSpeakIncomingActivity = _ref.shouldSpeakIncomingActivity;\n    return shouldSpeakIncomingActivity;\n  }), (0, _react.useCallback)(function (value) {\n    value ? startSpeakingActivity() : stopSpeakingActivity();\n  }, [startSpeakingActivity, stopSpeakingActivity])];\n}","map":{"version":3,"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;;;;;AAEe,SAASA,8BAAT,GAA+E;AAC5F,8BAAwD,qCAAxD;AAAA,MAAQC,qBAAR,yBAAQA,qBAAR;AAAA,MAA+BC,oBAA/B,yBAA+BA,oBAA/B;;AAEA,SAAO,CACL,sCAAY;AAAA,QAAGC,2BAAH,QAAGA,2BAAH;AAAA,WAAqCA,2BAArC;AAAZ,IADK,EAEL,wBACE,iBAAS;AACPC,SAAK,GAAGH,qBAAqB,EAAxB,GAA6BC,oBAAoB,EAAtDE;AAFJ,KAIE,CAACH,qBAAD,EAAwBC,oBAAxB,CAJF,CAFK,CAAP;AASD","names":["useShouldSpeakIncomingActivity","startSpeakingActivity","stopSpeakingActivity","shouldSpeakIncomingActivity","value"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-api/lib/src/hooks/useShouldSpeakIncomingActivity.ts"],"sourcesContent":["import { useCallback } from 'react';\n\nimport { useSelector } from './internal/WebChatReduxContext';\nimport useWebChatAPIContext from './internal/useWebChatAPIContext';\n\nexport default function useShouldSpeakIncomingActivity(): [boolean, (value: boolean) => void] {\n  const { startSpeakingActivity, stopSpeakingActivity } = useWebChatAPIContext();\n\n  return [\n    useSelector(({ shouldSpeakIncomingActivity }) => shouldSpeakIncomingActivity),\n    useCallback(\n      value => {\n        value ? startSpeakingActivity() : stopSpeakingActivity();\n      },\n      [startSpeakingActivity, stopSpeakingActivity]\n    )\n  ];\n}\n"]},"metadata":{},"sourceType":"script"}