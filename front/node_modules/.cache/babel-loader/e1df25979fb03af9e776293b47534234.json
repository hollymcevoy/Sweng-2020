{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.connectStackedLayout = void 0;\n\nvar _botframeworkWebchatApi = require(\"botframework-webchat-api\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Bubble = _interopRequireDefault(require(\"./Bubble\"));\n\nvar _connectToWebChat = _interopRequireDefault(require(\"../connectToWebChat\"));\n\nvar _isZeroOrPositive = _interopRequireDefault(require(\"../Utils/isZeroOrPositive\"));\n\nvar _ScreenReaderText = _interopRequireDefault(require(\"../ScreenReaderText\"));\n\nvar _textFormatToContentType = _interopRequireDefault(require(\"../Utils/textFormatToContentType\"));\n\nvar _useStyleSet3 = _interopRequireDefault(require(\"../hooks/useStyleSet\"));\n\nvar _useStyleToEmotionObject = _interopRequireDefault(require(\"../hooks/internal/useStyleToEmotionObject\"));\n\nvar _useUniqueId = _interopRequireDefault(require(\"../hooks/internal/useUniqueId\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar useAvatarForBot = _botframeworkWebchatApi.hooks.useAvatarForBot,\n    useAvatarForUser = _botframeworkWebchatApi.hooks.useAvatarForUser,\n    useLocalizer = _botframeworkWebchatApi.hooks.useLocalizer,\n    useStyleOptions = _botframeworkWebchatApi.hooks.useStyleOptions;\nvar ROOT_STYLE = {\n  '&.webchat__stacked-layout': {\n    position: 'relative',\n    // This is to keep screen reader text in the destinated area.\n    '& .webchat__stacked-layout__attachment-row, & .webchat__stacked-layout__main, & .webchat__stacked-layout__message-row, & .webchat__stacked-layout__status': {\n      display: 'flex'\n    },\n    '& .webchat__stacked-layout__alignment-pad': {\n      flexShrink: 0\n    },\n    '& .webchat__stacked-layout__attachment': {\n      width: '100%'\n    },\n    '& .webchat__stacked-layout__avatar-gutter': {\n      display: 'flex',\n      flexDirection: 'column',\n      flexShrink: 0\n    },\n    '&.webchat__stacked-layout--from-user': {\n      '& .webchat__stacked-layout__attachment-row, & .webchat__stacked-layout__main, & .webchat__stacked-layout__message-row, & .webchat__stacked-layout__status': {\n        flexDirection: 'row-reverse'\n      }\n    },\n    '& .webchat__stacked-layout__content': {\n      flex: 1,\n      // This is for bottom aligning an avatar with a message bubble shorter than the avatar.\n      // Related to the test at activityGrouping.avatarMiddleware.atBottom.js.\n      display: 'flex',\n      flexDirection: 'column',\n      // This \"overflow: hidden\" is to make sure text overflow will get clipped correctly.\n      // Related to the test at basic.js \"long URLs with keep-all\".\n      overflow: 'hidden'\n    },\n    '& .webchat__stacked-layout__nub-pad': {\n      flexShrink: 0\n    }\n  }\n};\n\nvar connectStackedLayout = function connectStackedLayout() {\n  for (var _len = arguments.length, selectors = new Array(_len), _key = 0; _key < _len; _key++) {\n    selectors[_key] = arguments[_key];\n  }\n\n  return _connectToWebChat.default.apply(void 0, [function (_ref, _ref2) {\n    var language = _ref.language,\n        _ref$styleSet$options = _ref.styleSet.options,\n        botAvatarInitials = _ref$styleSet$options.botAvatarInitials,\n        userAvatarInitials = _ref$styleSet$options.userAvatarInitials;\n    var _ref2$activity = _ref2.activity;\n    _ref2$activity = _ref2$activity === void 0 ? {} : _ref2$activity;\n    var _ref2$activity$from = _ref2$activity.from;\n    _ref2$activity$from = _ref2$activity$from === void 0 ? {} : _ref2$activity$from;\n    var _ref2$activity$from$r = _ref2$activity$from.role,\n        role = _ref2$activity$from$r === void 0 ? undefined : _ref2$activity$from$r;\n    return {\n      avatarInitials: role === 'user' ? userAvatarInitials : botAvatarInitials,\n      language: language,\n      // TODO: [P4] We want to deprecate botAvatarInitials/userAvatarInitials because they are not as helpful as avatarInitials\n      botAvatarInitials: botAvatarInitials,\n      userAvatarInitials: userAvatarInitials\n    };\n  }].concat(selectors));\n};\n\nexports.connectStackedLayout = connectStackedLayout;\n\nvar StackedLayout = function StackedLayout(_ref3) {\n  var activity = _ref3.activity,\n      hideTimestamp = _ref3.hideTimestamp,\n      renderActivityStatus = _ref3.renderActivityStatus,\n      renderAttachment = _ref3.renderAttachment,\n      renderAvatar = _ref3.renderAvatar,\n      showCallout = _ref3.showCallout;\n\n  var _useStyleOptions = useStyleOptions(),\n      _useStyleOptions2 = _slicedToArray(_useStyleOptions, 1),\n      styleOptions = _useStyleOptions2[0];\n\n  var _useAvatarForBot = useAvatarForBot(),\n      _useAvatarForBot2 = _slicedToArray(_useAvatarForBot, 1),\n      botInitials = _useAvatarForBot2[0].initials;\n\n  var _useAvatarForUser = useAvatarForUser(),\n      _useAvatarForUser2 = _slicedToArray(_useAvatarForUser, 1),\n      userInitials = _useAvatarForUser2[0].initials;\n\n  var _useStyleSet = (0, _useStyleSet3.default)(),\n      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),\n      stackedLayoutStyleSet = _useStyleSet2[0].stackedLayout;\n\n  var ariaLabelId = (0, _useUniqueId.default)('webchat__stacked-layout__id');\n  var localize = useLocalizer();\n  var rootClassName = (0, _useStyleToEmotionObject.default)()(ROOT_STYLE) + '';\n  var bubbleNubOffset = styleOptions.bubbleNubOffset,\n      bubbleNubSize = styleOptions.bubbleNubSize,\n      bubbleFromUserNubOffset = styleOptions.bubbleFromUserNubOffset,\n      bubbleFromUserNubSize = styleOptions.bubbleFromUserNubSize;\n  var _activity$attachments = activity.attachments,\n      attachments = _activity$attachments === void 0 ? [] : _activity$attachments,\n      _activity$channelData = activity.channelData;\n  _activity$channelData = _activity$channelData === void 0 ? {} : _activity$channelData;\n  var _activity$channelData2 = _activity$channelData.messageBack;\n  _activity$channelData2 = _activity$channelData2 === void 0 ? {} : _activity$channelData2;\n  var messageBackDisplayText = _activity$channelData2.displayText,\n      _activity$from = activity.from;\n  _activity$from = _activity$from === void 0 ? {} : _activity$from;\n  var role = _activity$from.role,\n      text = activity.text,\n      textFormat = activity.textFormat;\n  var activityDisplayText = messageBackDisplayText || text;\n  var fromUser = role === 'user';\n  var attachedAlt = localize(fromUser ? 'ACTIVITY_YOU_ATTACHED_ALT' : 'ACTIVITY_BOT_ATTACHED_ALT');\n  var greetingAlt = (fromUser ? localize('ACTIVITY_YOU_SAID_ALT') : localize('ACTIVITY_BOT_SAID_ALT', botInitials || '')).replace(/[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]{2,}/g, ' ');\n  var initials = fromUser ? userInitials : botInitials;\n  var nubOffset = fromUser ? bubbleFromUserNubOffset : bubbleNubOffset;\n  var nubSize = fromUser ? bubbleFromUserNubSize : bubbleNubSize;\n  var otherInitials = fromUser ? botInitials : userInitials;\n  var otherNubSize = fromUser ? bubbleNubSize : bubbleFromUserNubSize;\n  var hasAvatar = initials || typeof initials === 'string';\n  var hasOtherAvatar = otherInitials || typeof otherInitials === 'string';\n  var hasNub = typeof nubSize === 'number';\n  var hasOtherNub = typeof otherNubSize === 'number';\n  var topAlignedCallout = (0, _isZeroOrPositive.default)(nubOffset);\n  var extraTrailing = !hasOtherAvatar && hasOtherNub; // This is for bot message with user nub and no user avatar. And vice versa.\n\n  var showAvatar = showCallout && hasAvatar && !!renderAvatar;\n  var showNub = showCallout && hasNub && (topAlignedCallout || !attachments.length);\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    \"aria-labelledby\": activityDisplayText ? ariaLabelId : undefined,\n    \"aria-roledescription\": \"activity\",\n    className: (0, _classnames.default)('webchat__stacked-layout', rootClassName, stackedLayoutStyleSet + '', {\n      'webchat__stacked-layout--extra-trailing': extraTrailing,\n      'webchat__stacked-layout--from-user': fromUser,\n      'webchat__stacked-layout--hide-avatar': hasAvatar && !showAvatar,\n      'webchat__stacked-layout--hide-nub': hasNub && !showNub,\n      'webchat__stacked-layout--no-message': !activityDisplayText,\n      'webchat__stacked-layout--show-avatar': showAvatar,\n      'webchat__stacked-layout--show-nub': showNub,\n      'webchat__stacked-layout--top-callout': topAlignedCallout\n    }),\n    role: \"group\"\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__stacked-layout__main\"\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__stacked-layout__avatar-gutter\"\n  }, showAvatar && renderAvatar && renderAvatar({\n    activity: activity\n  })), /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__stacked-layout__content\"\n  }, !!activityDisplayText && /*#__PURE__*/_react.default.createElement(\"div\", {\n    \"aria-roledescription\": \"message\",\n    className: \"webchat__stacked-layout__message-row\" // Disable \"Prop `id` is forbidden on DOM Nodes\" rule because we are using the ID prop for accessibility.\n\n    /* eslint-disable-next-line react/forbid-dom-props */\n    ,\n    id: ariaLabelId,\n    role: \"group\"\n  }, /*#__PURE__*/_react.default.createElement(_ScreenReaderText.default, {\n    text: greetingAlt\n  }), /*#__PURE__*/_react.default.createElement(_Bubble.default, {\n    className: \"webchat__stacked-layout__message\",\n    fromUser: fromUser,\n    nub: showNub || (hasAvatar || hasNub ? 'hidden' : false)\n  }, renderAttachment({\n    activity: activity,\n    attachment: {\n      content: activityDisplayText,\n      contentType: (0, _textFormatToContentType.default)(textFormat)\n    }\n  }))), attachments.map(function (attachment, index) {\n    return /*#__PURE__*/_react.default.createElement(\"div\", {\n      \"aria-roledescription\": \"attachment\",\n      className: (0, _classnames.default)('webchat__stacked-layout__attachment-row', {\n        'webchat__stacked-layout__attachment-row--first': !index\n      })\n      /* attachments do not have an ID, it is always indexed by number */\n\n      /* eslint-disable-next-line react/no-array-index-key */\n      ,\n      key: index,\n      role: \"group\"\n    }, /*#__PURE__*/_react.default.createElement(_ScreenReaderText.default, {\n      text: attachedAlt\n    }), /*#__PURE__*/_react.default.createElement(_Bubble.default, {\n      className: \"webchat__stacked-layout__attachment\",\n      fromUser: fromUser\n      /* eslint-disable-next-line react/no-array-index-key */\n      ,\n      key: index,\n      nub: hasAvatar || hasNub ? 'hidden' : false\n    }, renderAttachment({\n      activity: activity,\n      attachment: attachment\n    })));\n  })), /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__stacked-layout__alignment-pad\"\n  })), typeof renderActivityStatus === 'function' && /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__stacked-layout__status\"\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__stacked-layout__avatar-gutter\"\n  }), /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__stacked-layout__nub-pad\"\n  }), renderActivityStatus({\n    hideTimestamp: hideTimestamp\n  }), /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__stacked-layout__alignment-pad\"\n  })));\n};\n\nStackedLayout.defaultProps = {\n  hideTimestamp: false,\n  renderActivityStatus: false,\n  renderAvatar: undefined,\n  showCallout: true\n};\nStackedLayout.propTypes = {\n  activity: _propTypes.default.shape({\n    attachments: _propTypes.default.array,\n    channelData: _propTypes.default.shape({\n      messageBack: _propTypes.default.shape({\n        displayText: _propTypes.default.string\n      })\n    }),\n    from: _propTypes.default.shape({\n      role: _propTypes.default.string.isRequired\n    }).isRequired,\n    text: _propTypes.default.string,\n    textFormat: _propTypes.default.string,\n    timestamp: _propTypes.default.string,\n    type: _propTypes.default.string.isRequired\n  }).isRequired,\n  hideTimestamp: _propTypes.default.bool,\n  // PropTypes cannot validate precisely with its TypeScript counterpart.\n  // @ts-ignore\n  renderActivityStatus: _propTypes.default.oneOfType([_propTypes.default.oneOf([false]), _propTypes.default.func]),\n  renderAttachment: _propTypes.default.func.isRequired,\n  // PropTypes cannot validate precisely with its TypeScript counterpart.\n  // @ts-ignore\n  renderAvatar: _propTypes.default.oneOfType([_propTypes.default.oneOf([false]), _propTypes.default.func]),\n  showCallout: _propTypes.default.bool\n};\nvar _default = StackedLayout;\nexports.default = _default;","map":{"version":3,"mappings":"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","names":["useAvatarForBot","hooks","useAvatarForUser","useLocalizer","useStyleOptions","ROOT_STYLE","position","display","flexShrink","width","flexDirection","flex","overflow","connectStackedLayout","selectors","arguments","connectToWebChat","language","styleSet","options","botAvatarInitials","userAvatarInitials","activity","_ref2$activity","from","_ref2$activity$from","role","undefined","avatarInitials","StackedLayout","hideTimestamp","renderActivityStatus","renderAttachment","renderAvatar","showCallout","styleOptions","botInitials","initials","userInitials","stackedLayoutStyleSet","stackedLayout","ariaLabelId","localize","rootClassName","bubbleNubOffset","bubbleNubSize","bubbleFromUserNubOffset","bubbleFromUserNubSize","attachments","channelData","_activity$channelData","messageBack","_activity$channelData2","messageBackDisplayText","displayText","_activity$from","text","textFormat","activityDisplayText","fromUser","attachedAlt","greetingAlt","replace","nubOffset","nubSize","otherInitials","otherNubSize","hasAvatar","hasOtherAvatar","hasNub","hasOtherNub","topAlignedCallout","extraTrailing","showAvatar","showNub","length","_react","className","id","_ScreenReaderText","_Bubble","nub","attachment","content","contentType","map","index","key","defaultProps","propTypes","PropTypes","shape","array","string","isRequired","timestamp","type","bool","oneOfType","oneOf","func"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-component/lib/src/Activity/StackedLayout.tsx"],"sourcesContent":["/* eslint complexity: [\"error\", 30] */\n\nimport { DirectLineActivity } from 'botframework-webchat-core';\nimport { hooks, RenderAttachment } from 'botframework-webchat-api';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { FC, ReactNode } from 'react';\n\nimport Bubble from './Bubble';\nimport connectToWebChat from '../connectToWebChat';\nimport isZeroOrPositive from '../Utils/isZeroOrPositive';\nimport ScreenReaderText from '../ScreenReaderText';\nimport textFormatToContentType from '../Utils/textFormatToContentType';\nimport useStyleSet from '../hooks/useStyleSet';\nimport useStyleToEmotionObject from '../hooks/internal/useStyleToEmotionObject';\n\nimport useUniqueId from '../hooks/internal/useUniqueId';\n\nconst { useAvatarForBot, useAvatarForUser, useLocalizer, useStyleOptions } = hooks;\n\nconst ROOT_STYLE = {\n  '&.webchat__stacked-layout': {\n    position: 'relative', // This is to keep screen reader text in the destinated area.\n\n    '& .webchat__stacked-layout__attachment-row, & .webchat__stacked-layout__main, & .webchat__stacked-layout__message-row, & .webchat__stacked-layout__status':\n      {\n        display: 'flex'\n      },\n\n    '& .webchat__stacked-layout__alignment-pad': {\n      flexShrink: 0\n    },\n\n    '& .webchat__stacked-layout__attachment': {\n      width: '100%'\n    },\n\n    '& .webchat__stacked-layout__avatar-gutter': {\n      display: 'flex',\n      flexDirection: 'column',\n      flexShrink: 0\n    },\n\n    '&.webchat__stacked-layout--from-user': {\n      '& .webchat__stacked-layout__attachment-row, & .webchat__stacked-layout__main, & .webchat__stacked-layout__message-row, & .webchat__stacked-layout__status':\n        {\n          flexDirection: 'row-reverse'\n        }\n    },\n\n    '& .webchat__stacked-layout__content': {\n      flex: 1,\n\n      // This is for bottom aligning an avatar with a message bubble shorter than the avatar.\n      // Related to the test at activityGrouping.avatarMiddleware.atBottom.js.\n      display: 'flex',\n      flexDirection: 'column',\n\n      // This \"overflow: hidden\" is to make sure text overflow will get clipped correctly.\n      // Related to the test at basic.js \"long URLs with keep-all\".\n      overflow: 'hidden'\n    },\n\n    '& .webchat__stacked-layout__nub-pad': {\n      flexShrink: 0\n    }\n  }\n};\n\nconst connectStackedLayout = (...selectors) =>\n  connectToWebChat(\n    (\n      {\n        language,\n        styleSet: {\n          options: { botAvatarInitials, userAvatarInitials }\n        }\n      },\n      { activity: { from: { role = undefined } = {} } = {} }\n    ) => ({\n      avatarInitials: role === 'user' ? userAvatarInitials : botAvatarInitials,\n      language,\n\n      // TODO: [P4] We want to deprecate botAvatarInitials/userAvatarInitials because they are not as helpful as avatarInitials\n      botAvatarInitials,\n      userAvatarInitials\n    }),\n    ...selectors\n  );\n\ntype StackedLayoutProps = {\n  activity: DirectLineActivity;\n  hideTimestamp?: boolean;\n  renderActivityStatus?: (({ hideTimestamp: boolean }) => Exclude<ReactNode, boolean | null | undefined>) | false;\n  renderAttachment?: RenderAttachment;\n  renderAvatar?: (activity: DirectLineActivity) => (() => Exclude<ReactNode, boolean | null | undefined>) | false;\n  showCallout?: boolean;\n};\n\nconst StackedLayout: FC<StackedLayoutProps> = ({\n  activity,\n  hideTimestamp,\n  renderActivityStatus,\n  renderAttachment,\n  renderAvatar,\n  showCallout\n}) => {\n  const [styleOptions] = useStyleOptions();\n  const [{ initials: botInitials }] = useAvatarForBot();\n  const [{ initials: userInitials }] = useAvatarForUser();\n  const [{ stackedLayout: stackedLayoutStyleSet }] = useStyleSet();\n  const ariaLabelId = useUniqueId('webchat__stacked-layout__id');\n  const localize = useLocalizer();\n  const rootClassName = useStyleToEmotionObject()(ROOT_STYLE) + '';\n\n  const { bubbleNubOffset, bubbleNubSize, bubbleFromUserNubOffset, bubbleFromUserNubSize } = styleOptions;\n\n  const {\n    attachments = [],\n    channelData: { messageBack: { displayText: messageBackDisplayText } = {} } = {},\n    from: { role } = {},\n    text,\n    textFormat\n  }: {\n    attachments?: [];\n    channelData?: { messageBack?: { displayText?: string } };\n    from?: { role?: 'bot' | 'user' };\n    text?: string;\n    textFormat?: string;\n  } = activity;\n\n  const activityDisplayText = messageBackDisplayText || text;\n  const fromUser = role === 'user';\n\n  const attachedAlt = localize(fromUser ? 'ACTIVITY_YOU_ATTACHED_ALT' : 'ACTIVITY_BOT_ATTACHED_ALT');\n  const greetingAlt = (\n    fromUser ? localize('ACTIVITY_YOU_SAID_ALT') : localize('ACTIVITY_BOT_SAID_ALT', botInitials || '')\n  ).replace(/\\s{2,}/gu, ' ');\n\n  const initials = fromUser ? userInitials : botInitials;\n  const nubOffset = fromUser ? bubbleFromUserNubOffset : bubbleNubOffset;\n  const nubSize = fromUser ? bubbleFromUserNubSize : bubbleNubSize;\n  const otherInitials = fromUser ? botInitials : userInitials;\n  const otherNubSize = fromUser ? bubbleNubSize : bubbleFromUserNubSize;\n\n  const hasAvatar = initials || typeof initials === 'string';\n  const hasOtherAvatar = otherInitials || typeof otherInitials === 'string';\n  const hasNub = typeof nubSize === 'number';\n  const hasOtherNub = typeof otherNubSize === 'number';\n  const topAlignedCallout = isZeroOrPositive(nubOffset);\n\n  const extraTrailing = !hasOtherAvatar && hasOtherNub; // This is for bot message with user nub and no user avatar. And vice versa.\n\n  const showAvatar = showCallout && hasAvatar && !!renderAvatar;\n  const showNub = showCallout && hasNub && (topAlignedCallout || !attachments.length);\n\n  return (\n    <div\n      aria-labelledby={activityDisplayText ? ariaLabelId : undefined}\n      aria-roledescription=\"activity\"\n      className={classNames('webchat__stacked-layout', rootClassName, stackedLayoutStyleSet + '', {\n        'webchat__stacked-layout--extra-trailing': extraTrailing,\n        'webchat__stacked-layout--from-user': fromUser,\n        'webchat__stacked-layout--hide-avatar': hasAvatar && !showAvatar,\n        'webchat__stacked-layout--hide-nub': hasNub && !showNub,\n        'webchat__stacked-layout--no-message': !activityDisplayText,\n        'webchat__stacked-layout--show-avatar': showAvatar,\n        'webchat__stacked-layout--show-nub': showNub,\n        'webchat__stacked-layout--top-callout': topAlignedCallout\n      })}\n      role=\"group\"\n    >\n      <div className=\"webchat__stacked-layout__main\">\n        <div className=\"webchat__stacked-layout__avatar-gutter\">\n          {showAvatar && renderAvatar && renderAvatar({ activity })}\n        </div>\n        <div className=\"webchat__stacked-layout__content\">\n          {!!activityDisplayText && (\n            <div\n              aria-roledescription=\"message\"\n              className=\"webchat__stacked-layout__message-row\"\n              // Disable \"Prop `id` is forbidden on DOM Nodes\" rule because we are using the ID prop for accessibility.\n              /* eslint-disable-next-line react/forbid-dom-props */\n              id={ariaLabelId}\n              role=\"group\"\n            >\n              <ScreenReaderText text={greetingAlt} />\n              <Bubble\n                className=\"webchat__stacked-layout__message\"\n                fromUser={fromUser}\n                nub={showNub || (hasAvatar || hasNub ? 'hidden' : false)}\n              >\n                {renderAttachment({\n                  activity,\n                  attachment: {\n                    content: activityDisplayText,\n                    contentType: textFormatToContentType(textFormat)\n                  }\n                })}\n              </Bubble>\n            </div>\n          )}\n          {attachments.map((attachment, index) => (\n            <div\n              aria-roledescription=\"attachment\"\n              className={classNames('webchat__stacked-layout__attachment-row', {\n                'webchat__stacked-layout__attachment-row--first': !index\n              })}\n              /* attachments do not have an ID, it is always indexed by number */\n              /* eslint-disable-next-line react/no-array-index-key */\n              key={index}\n              role=\"group\"\n            >\n              <ScreenReaderText text={attachedAlt} />\n              <Bubble\n                className=\"webchat__stacked-layout__attachment\"\n                fromUser={fromUser}\n                /* eslint-disable-next-line react/no-array-index-key */\n                key={index}\n                nub={hasAvatar || hasNub ? 'hidden' : false}\n              >\n                {renderAttachment({ activity, attachment })}\n              </Bubble>\n            </div>\n          ))}\n        </div>\n        <div className=\"webchat__stacked-layout__alignment-pad\" />\n      </div>\n      {typeof renderActivityStatus === 'function' && (\n        <div className=\"webchat__stacked-layout__status\">\n          <div className=\"webchat__stacked-layout__avatar-gutter\" />\n          <div className=\"webchat__stacked-layout__nub-pad\" />\n          {renderActivityStatus({ hideTimestamp })}\n          <div className=\"webchat__stacked-layout__alignment-pad\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nStackedLayout.defaultProps = {\n  hideTimestamp: false,\n  renderActivityStatus: false,\n  renderAvatar: undefined,\n  showCallout: true\n};\n\nStackedLayout.propTypes = {\n  activity: PropTypes.shape({\n    attachments: PropTypes.array,\n    channelData: PropTypes.shape({\n      messageBack: PropTypes.shape({\n        displayText: PropTypes.string\n      })\n    }),\n    from: PropTypes.shape({\n      role: PropTypes.string.isRequired\n    }).isRequired,\n    text: PropTypes.string,\n    textFormat: PropTypes.string,\n    timestamp: PropTypes.string,\n    type: PropTypes.string.isRequired\n  }).isRequired,\n  hideTimestamp: PropTypes.bool,\n\n  // PropTypes cannot validate precisely with its TypeScript counterpart.\n  // @ts-ignore\n  renderActivityStatus: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.func]),\n  renderAttachment: PropTypes.func.isRequired,\n\n  // PropTypes cannot validate precisely with its TypeScript counterpart.\n  // @ts-ignore\n  renderAvatar: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.func]),\n  showCallout: PropTypes.bool\n};\n\nexport default StackedLayout;\n\nexport { connectStackedLayout };\n"]},"metadata":{},"sourceType":"script"}