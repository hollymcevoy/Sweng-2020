{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _es = require(\"event-target-shim/es5\");\n\nvar _eventAsPromise = _interopRequireDefault(require(\"event-as-promise\"));\n\nvar _fetchSpeechData = _interopRequireDefault(require(\"./fetchSpeechData\"));\n\nvar _SpeechSynthesisEvent = _interopRequireDefault(require(\"./SpeechSynthesisEvent\"));\n\nvar _subscribeEvent = _interopRequireDefault(require(\"./subscribeEvent\"));\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction asyncDecodeAudioData(audioContext, arrayBuffer) {\n  return new Promise(function (resolve, reject) {\n    var promise = audioContext.decodeAudioData(arrayBuffer, resolve, reject); // Newer implementation of \"decodeAudioData\" will return a Promise\n\n    promise && typeof promise.then === 'function' && resolve(promise);\n  });\n}\n\nfunction playDecoded(audioContext, audioBuffer, source) {\n  return new Promise(function (resolve, reject) {\n    var audioContextClosed = new _eventAsPromise.default();\n    var sourceEnded = new _eventAsPromise.default();\n    var unsubscribe = (0, _subscribeEvent.default)(audioContext, 'statechange', function (_ref) {\n      var state = _ref.target.state;\n      return state === 'closed' && audioContextClosed.eventListener();\n    });\n\n    try {\n      source.buffer = audioBuffer; // \"ended\" may not fire if the underlying AudioContext is closed prematurely\n\n      source.onended = sourceEnded.eventListener;\n      source.connect(audioContext.destination);\n      source.start(0);\n      Promise.race([audioContextClosed.upcoming(), sourceEnded.upcoming()]).then(resolve);\n    } catch (err) {\n      reject(err);\n    } finally {\n      unsubscribe();\n    }\n  });\n}\n\nvar SpeechSynthesisUtterance = /*#__PURE__*/function (_EventTarget) {\n  (0, _inherits2.default)(SpeechSynthesisUtterance, _EventTarget);\n\n  var _super = _createSuper(SpeechSynthesisUtterance);\n\n  function SpeechSynthesisUtterance(text) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, SpeechSynthesisUtterance);\n    _this = _super.call(this);\n    _this._lang = null;\n    _this._pitch = 1;\n    _this._rate = 1;\n    _this._voice = null;\n    _this._volume = 1;\n    _this.text = text;\n    _this.onboundary = null;\n    _this.onend = null;\n    _this.onerror = null;\n    _this.onmark = null;\n    _this.onpause = null;\n    _this.onresume = null;\n    _this.onstart = null;\n    return _this;\n  }\n\n  (0, _createClass2.default)(SpeechSynthesisUtterance, [{\n    key: \"lang\",\n    get: function get() {\n      return this._lang;\n    },\n    set: function set(value) {\n      this._lang = value;\n    }\n  }, {\n    key: \"onboundary\",\n    get: function get() {\n      return (0, _es.getEventAttributeValue)(this, 'boundary');\n    },\n    set: function set(value) {\n      (0, _es.setEventAttributeValue)(this, 'boundary', value);\n    }\n  }, {\n    key: \"onend\",\n    get: function get() {\n      return (0, _es.getEventAttributeValue)(this, 'end');\n    },\n    set: function set(value) {\n      (0, _es.setEventAttributeValue)(this, 'end', value);\n    }\n  }, {\n    key: \"onerror\",\n    get: function get() {\n      return (0, _es.getEventAttributeValue)(this, 'error');\n    },\n    set: function set(value) {\n      (0, _es.setEventAttributeValue)(this, 'error', value);\n    }\n  }, {\n    key: \"onmark\",\n    get: function get() {\n      return (0, _es.getEventAttributeValue)(this, 'mark');\n    },\n    set: function set(value) {\n      (0, _es.setEventAttributeValue)(this, 'mark', value);\n    }\n  }, {\n    key: \"onpause\",\n    get: function get() {\n      return (0, _es.getEventAttributeValue)(this, 'pause');\n    },\n    set: function set(value) {\n      (0, _es.setEventAttributeValue)(this, 'pause', value);\n    }\n  }, {\n    key: \"onresume\",\n    get: function get() {\n      return (0, _es.getEventAttributeValue)(this, 'resume');\n    },\n    set: function set(value) {\n      (0, _es.setEventAttributeValue)(this, 'resume', value);\n    }\n  }, {\n    key: \"onstart\",\n    get: function get() {\n      return (0, _es.getEventAttributeValue)(this, 'start');\n    },\n    set: function set(value) {\n      (0, _es.setEventAttributeValue)(this, 'start', value);\n    }\n  }, {\n    key: \"pitch\",\n    get: function get() {\n      return this._pitch;\n    },\n    set: function set(value) {\n      this._pitch = value;\n    }\n  }, {\n    key: \"rate\",\n    get: function get() {\n      return this._rate;\n    },\n    set: function set(value) {\n      this._rate = value;\n    }\n  }, {\n    key: \"voice\",\n    get: function get() {\n      return this._voice;\n    },\n    set: function set(value) {\n      this._voice = value;\n    }\n  }, {\n    key: \"volume\",\n    get: function get() {\n      return this._volume;\n    },\n    set: function set(value) {\n      this._volume = value;\n    }\n  }, {\n    key: \"preload\",\n    value: function preload(_ref2) {\n      var deploymentId = _ref2.deploymentId,\n          fetchCredentials = _ref2.fetchCredentials,\n          outputFormat = _ref2.outputFormat;\n      this.arrayBufferPromise = (0, _fetchSpeechData.default)({\n        fetchCredentials: fetchCredentials,\n        deploymentId: deploymentId,\n        lang: this.lang || window.navigator.language,\n        outputFormat: outputFormat,\n        pitch: this.pitch,\n        rate: this.rate,\n        text: this.text,\n        voice: this.voice && this.voice.voiceURI,\n        volume: this.volume\n      }); // We need to call \"catch\" to make sure the Promise is running.\n      // We will ignore the reject result and handled in play() later.\n\n      this.arrayBufferPromise.catch();\n    }\n  }, {\n    key: \"play\",\n    value: function () {\n      var _play = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(audioContext) {\n        var source, audioBuffer;\n        return _regenerator.default.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0; // We should emit \"start\" event even if preload() failed.\n\n                this.dispatchEvent(new _SpeechSynthesisEvent.default('start')); // HACK: iOS requires bufferSourceNode to be constructed before decoding data.\n\n                source = audioContext.createBufferSource();\n                _context.t0 = asyncDecodeAudioData;\n                _context.t1 = audioContext;\n                _context.next = 7;\n                return this.arrayBufferPromise;\n\n              case 7:\n                _context.t2 = _context.sent;\n                _context.next = 10;\n                return (0, _context.t0)(_context.t1, _context.t2);\n\n              case 10:\n                audioBuffer = _context.sent;\n                this._playingSource = source;\n                _context.next = 14;\n                return playDecoded(audioContext, audioBuffer, source);\n\n              case 14:\n                this._playingSource = null;\n                this.dispatchEvent(new _SpeechSynthesisEvent.default('end'));\n                _context.next = 21;\n                break;\n\n              case 18:\n                _context.prev = 18;\n                _context.t3 = _context[\"catch\"](0); // \"message\" is not in spec but to provide a friendly message.\n\n                this.dispatchEvent(new ErrorEvent('error', {\n                  error: 'synthesis-failed',\n                  message: _context.t3.stack\n                }));\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 18]]);\n      }));\n\n      function play(_x) {\n        return _play.apply(this, arguments);\n      }\n\n      return play;\n    }()\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this._playingSource && this._playingSource.stop();\n    }\n  }]);\n  return SpeechSynthesisUtterance;\n}(_es.EventTarget);\n\nvar _default = SpeechSynthesisUtterance;\nexports.default = _default;","map":{"version":3,"mappings":"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","names":["asyncDecodeAudioData","audioContext","arrayBuffer","Promise","resolve","reject","promise","decodeAudioData","then","playDecoded","audioBuffer","source","audioContextClosed","EventAsPromise","sourceEnded","unsubscribe","state","target","eventListener","buffer","onended","connect","destination","start","race","upcoming","err","SpeechSynthesisUtterance","text","_this","_lang","_pitch","_rate","_voice","_volume","onboundary","onend","onerror","onmark","onpause","onresume","onstart","value","deploymentId","fetchCredentials","outputFormat","arrayBufferPromise","lang","window","navigator","language","pitch","rate","voice","voiceURI","volume","catch","_context","dispatchEvent","SpeechSynthesisEvent","createBufferSource","_playingSource","ErrorEvent","error","message","stack","stop","EventTarget"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/web-speech-cognitive-services/src/SpeechServices/TextToSpeech/SpeechSynthesisUtterance.js"],"sourcesContent":["/* eslint no-empty: [\"error\", { \"allowEmptyCatch\": true }] */\n\nimport { EventTarget, getEventAttributeValue, setEventAttributeValue } from 'event-target-shim/es5';\nimport EventAsPromise from 'event-as-promise';\n\nimport fetchSpeechData from './fetchSpeechData';\nimport SpeechSynthesisEvent from './SpeechSynthesisEvent';\nimport subscribeEvent from './subscribeEvent';\n\nfunction asyncDecodeAudioData(audioContext, arrayBuffer) {\n  return new Promise((resolve, reject) => {\n    const promise = audioContext.decodeAudioData(arrayBuffer, resolve, reject);\n\n    // Newer implementation of \"decodeAudioData\" will return a Promise\n    promise && typeof promise.then === 'function' && resolve(promise);\n  });\n}\n\nfunction playDecoded(audioContext, audioBuffer, source) {\n  return new Promise((resolve, reject) => {\n    const audioContextClosed = new EventAsPromise();\n    const sourceEnded = new EventAsPromise();\n    const unsubscribe = subscribeEvent(\n      audioContext,\n      'statechange',\n      ({ target: { state } }) => state === 'closed' && audioContextClosed.eventListener()\n    );\n\n    try {\n      source.buffer = audioBuffer;\n      // \"ended\" may not fire if the underlying AudioContext is closed prematurely\n      source.onended = sourceEnded.eventListener;\n\n      source.connect(audioContext.destination);\n      source.start(0);\n\n      Promise.race([audioContextClosed.upcoming(), sourceEnded.upcoming()]).then(resolve);\n    } catch (err) {\n      reject(err);\n    } finally {\n      unsubscribe();\n    }\n  });\n}\n\nclass SpeechSynthesisUtterance extends EventTarget {\n  constructor(text) {\n    super();\n\n    this._lang = null;\n    this._pitch = 1;\n    this._rate = 1;\n    this._voice = null;\n    this._volume = 1;\n\n    this.text = text;\n\n    this.onboundary = null;\n    this.onend = null;\n    this.onerror = null;\n    this.onmark = null;\n    this.onpause = null;\n    this.onresume = null;\n    this.onstart = null;\n  }\n\n  get lang() {\n    return this._lang;\n  }\n\n  set lang(value) {\n    this._lang = value;\n  }\n\n  get onboundary() {\n    return getEventAttributeValue(this, 'boundary');\n  }\n\n  set onboundary(value) {\n    setEventAttributeValue(this, 'boundary', value);\n  }\n\n  get onend() {\n    return getEventAttributeValue(this, 'end');\n  }\n\n  set onend(value) {\n    setEventAttributeValue(this, 'end', value);\n  }\n\n  get onerror() {\n    return getEventAttributeValue(this, 'error');\n  }\n\n  set onerror(value) {\n    setEventAttributeValue(this, 'error', value);\n  }\n\n  get onmark() {\n    return getEventAttributeValue(this, 'mark');\n  }\n\n  set onmark(value) {\n    setEventAttributeValue(this, 'mark', value);\n  }\n\n  get onpause() {\n    return getEventAttributeValue(this, 'pause');\n  }\n\n  set onpause(value) {\n    setEventAttributeValue(this, 'pause', value);\n  }\n\n  get onresume() {\n    return getEventAttributeValue(this, 'resume');\n  }\n\n  set onresume(value) {\n    setEventAttributeValue(this, 'resume', value);\n  }\n\n  get onstart() {\n    return getEventAttributeValue(this, 'start');\n  }\n\n  set onstart(value) {\n    setEventAttributeValue(this, 'start', value);\n  }\n\n  get pitch() {\n    return this._pitch;\n  }\n\n  set pitch(value) {\n    this._pitch = value;\n  }\n\n  get rate() {\n    return this._rate;\n  }\n\n  set rate(value) {\n    this._rate = value;\n  }\n\n  get voice() {\n    return this._voice;\n  }\n\n  set voice(value) {\n    this._voice = value;\n  }\n\n  get volume() {\n    return this._volume;\n  }\n\n  set volume(value) {\n    this._volume = value;\n  }\n\n  preload({ deploymentId, fetchCredentials, outputFormat }) {\n    this.arrayBufferPromise = fetchSpeechData({\n      fetchCredentials,\n      deploymentId,\n      lang: this.lang || window.navigator.language,\n      outputFormat,\n      pitch: this.pitch,\n      rate: this.rate,\n      text: this.text,\n      voice: this.voice && this.voice.voiceURI,\n      volume: this.volume\n    });\n\n    // We need to call \"catch\" to make sure the Promise is running.\n    // We will ignore the reject result and handled in play() later.\n    this.arrayBufferPromise.catch();\n  }\n\n  async play(audioContext) {\n    try {\n      // We should emit \"start\" event even if preload() failed.\n      this.dispatchEvent(new SpeechSynthesisEvent('start'));\n\n      // HACK: iOS requires bufferSourceNode to be constructed before decoding data.\n      const source = audioContext.createBufferSource();\n      const audioBuffer = await asyncDecodeAudioData(audioContext, await this.arrayBufferPromise);\n\n      this._playingSource = source;\n\n      await playDecoded(audioContext, audioBuffer, source);\n\n      this._playingSource = null;\n      this.dispatchEvent(new SpeechSynthesisEvent('end'));\n    } catch (error) {\n      // \"message\" is not in spec but to provide a friendly message.\n      this.dispatchEvent(new ErrorEvent('error', { error: 'synthesis-failed', message: error.stack }));\n    }\n  }\n\n  stop() {\n    this._playingSource && this._playingSource.stop();\n  }\n}\n\nexport default SpeechSynthesisUtterance;\n"]},"metadata":{},"sourceType":"script"}