{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _default(array, extras) {\n  var map = _objectSpread(_objectSpread(_objectSpread({}, [].reduce.call(array, function (map, value, index) {\n    map[index] = value;\n    return map;\n  }, {})), extras), {}, (0, _defineProperty2.default)({\n    length: array.length\n  }, Symbol.iterator, function () {\n    return [].slice.call(map)[Symbol.iterator]();\n  }));\n\n  return map;\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAe,kBAASA,KAAT,EAAgBC,MAAhB,EAAwB;AACrC,MAAMC,GAAG,iDACJ,GAAGC,MAAH,CAAUC,IAAV,CACDJ,KADC,EAED,UAACE,GAAD,EAAMG,KAAN,EAAaC,KAAb,EAAuB;AACrBJ,OAAG,CAACI,KAAD,CAAHJ,GAAaG,KAAbH;AAEA,WAAOA,GAAP;AALD,KAOD,EAPC,CADI,GAUJD,MAVI;AAWPM,UAAM,EAAEP,KAAK,CAACO;AAXP,KAYNC,MAAM,CAACC,QAZD,EAYY;AAAA,WAAM,GAAGC,KAAH,CAASN,IAAT,CAAcF,GAAd,EAAmBM,MAAM,CAACC,QAA1B,GAAN;AAZZ,KAAT;;AAeA,SAAOP,GAAP;AACD","names":["array","extras","map","reduce","call","value","index","length","Symbol","iterator","slice"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/web-speech-cognitive-services/src/Util/arrayToMap.js"],"sourcesContent":["export default function(array, extras) {\n  const map = {\n    ...[].reduce.call(\n      array,\n      (map, value, index) => {\n        map[index] = value;\n\n        return map;\n      },\n      {}\n    ),\n    ...extras,\n    length: array.length,\n    [Symbol.iterator]: () => [].slice.call(map)[Symbol.iterator]()\n  };\n\n  return map;\n}\n"]},"metadata":{},"sourceType":"script"}