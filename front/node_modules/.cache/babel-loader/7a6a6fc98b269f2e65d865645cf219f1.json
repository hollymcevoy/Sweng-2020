{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { Contracts } from \"./Contracts\";\nimport { VoiceProfileResult } from \"./Exports\";\n/**\n * Output format\n * @class VoiceProfileAuthorizationPhraseResult\n */\n\nexport class VoiceProfileAuthorizationPhraseResult extends VoiceProfileResult {\n  constructor(reason, statusText, json) {\n    super(reason, statusText);\n    this.privPhrases = [];\n    Contracts.throwIfNullOrUndefined(json, \"phrases array\");\n\n    for (const item of json) {\n      this.privPhrases.push(item.passPhrase);\n    }\n  }\n\n  get phrases() {\n    return this.privPhrases;\n  }\n\n}","map":{"version":3,"mappings":"AAAA;AACA;AAEA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAEIC,kBAFJ,QAGO,WAHP;AAKA;;;;;AAIA,OAAM,MAAOC,qCAAP,SAAqDD,kBAArD,CAAuE;AAGzEE,cAAmBC,MAAnB,EAAyCC,UAAzC,EAA6DC,IAA7D,EAAsE;AAClE,UAAMF,MAAN,EAAcC,UAAd;AAHI,uBAAwB,EAAxB;AAIJL,aAAS,CAACO,sBAAV,CAAiCD,IAAjC,EAAuC,eAAvC;;AACA,SAAK,MAAME,IAAX,IAAmBF,IAAnB,EAAyB;AACrB,WAAKG,WAAL,CAAiBC,IAAjB,CAAsBF,IAAI,CAACG,UAA3B;AACH;AACJ;;AAEiB,MAAPC,OAAO;AACd,WAAO,KAAKH,WAAZ;AACH;;AAbwE","names":["Contracts","VoiceProfileResult","VoiceProfileAuthorizationPhraseResult","constructor","reason","statusText","json","throwIfNullOrUndefined","item","privPhrases","push","passPhrase","phrases"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/VoiceProfileAuthorizationPhraseResult.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    ResultReason,\r\n    VoiceProfileResult\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Output format\r\n * @class VoiceProfileAuthorizationPhraseResult\r\n */\r\nexport class VoiceProfileAuthorizationPhraseResult extends VoiceProfileResult {\r\n    private privPhrases: string[] = [];\r\n\r\n    public constructor(reason: ResultReason, statusText: string, json: any) {\r\n        super(reason, statusText);\r\n        Contracts.throwIfNullOrUndefined(json, \"phrases array\");\r\n        for (const item of json) {\r\n            this.privPhrases.push(item.passPhrase);\r\n        }\r\n    }\r\n\r\n    public get phrases(): string[] {\r\n        return this.privPhrases;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}