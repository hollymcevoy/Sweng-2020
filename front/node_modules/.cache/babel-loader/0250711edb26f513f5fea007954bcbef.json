{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime2 = require(\"@babel/runtime/regenerator\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = stopDictateOnCardActionSaga;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _effects = require(\"redux-saga/effects\");\n\nvar _postActivity = require(\"../actions/postActivity\");\n\nvar _stopDictate = _interopRequireDefault(require(\"../actions/stopDictate\"));\n\nvar _whileConnected = _interopRequireDefault(require(\"./effects/whileConnected\"));\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime2.mark(stopDictateOnCardAction),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime2.mark(stopDictateOnCardActionSaga);\n\nfunction stopDictateOnCardAction() {\n  return _regenerator[\"default\"].wrap(function stopDictateOnCardAction$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return (0, _effects.takeEvery)( // Currently, there are no actions that are related to card input\n          // For now, we are using POST_ACTIVITY of a \"message\" activity\n          // In the future, if we have an action for card input, we should use that instead\n          function (_ref) {\n            var payload = _ref.payload,\n                type = _ref.type;\n            return type === _postActivity.POST_ACTIVITY_PENDING && payload.activity.type === 'message';\n          }, /*#__PURE__*/_regenerator[\"default\"].mark(function putStopDictate() {\n            return _regenerator[\"default\"].wrap(function putStopDictate$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return (0, _effects.put)((0, _stopDictate[\"default\"])());\n\n                  case 2:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, putStopDictate);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction stopDictateOnCardActionSaga() {\n  return _regenerator[\"default\"].wrap(function stopDictateOnCardActionSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return (0, _whileConnected[\"default\"])(stopDictateOnCardAction);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;qDAEUA;sDAeeC;;AAfzB,SAAUD,uBAAV;AAAA;AAAA;AAAA;AAAA;AAAAE;AAIE,iBAAM,yBACJ;AACA;AACA;AACA;AAAA,gBAAGC,OAAH,QAAGA,OAAH;AAAA,gBAAYC,IAAZ,QAAYA,IAAZ;AAAA,mBAAuBA,IAAI,KAAKC,mCAATD,IAAkCD,OAAO,CAACG,QAARH,CAAiBC,IAAjBD,KAA0B,SAAnF;AAJI,uDAKJ,SAAUI,cAAV;AAAA;AAAA;AAAA;AAAA;AAAAC;AACE,2BAAM,kBAAI,8BAAJ,CAAN;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUD,cAAV;AALI,aAAN;;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAee,SAAUN,2BAAV;AAAA;AAAA;AAAA;AAAA;AAAAQ;AACb,iBAAM,gCAAeT,uBAAf,CAAN;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","names":["stopDictateOnCardAction","stopDictateOnCardActionSaga","_context2","payload","type","POST_ACTIVITY_PENDING","activity","putStopDictate","_context","_context3"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-core/lib/src/sagas/stopDictateOnCardActionSaga.js"],"sourcesContent":["import { put, takeEvery } from 'redux-saga/effects';\n\nimport { POST_ACTIVITY_PENDING } from '../actions/postActivity';\nimport stopDictate from '../actions/stopDictate';\nimport whileConnected from './effects/whileConnected';\n\nfunction* stopDictateOnCardAction() {\n  // TODO: [P2] We should stop speech input when the user click on anything on a card, including open URL which doesn't generate postActivity\n  //       This functionality was not implemented in v3\n\n  yield takeEvery(\n    // Currently, there are no actions that are related to card input\n    // For now, we are using POST_ACTIVITY of a \"message\" activity\n    // In the future, if we have an action for card input, we should use that instead\n    ({ payload, type }) => type === POST_ACTIVITY_PENDING && payload.activity.type === 'message',\n    function* putStopDictate() {\n      yield put(stopDictate());\n    }\n  );\n}\n\nexport default function* stopDictateOnCardActionSaga() {\n  yield whileConnected(stopDictateOnCardAction);\n}\n"]},"metadata":{},"sourceType":"script"}