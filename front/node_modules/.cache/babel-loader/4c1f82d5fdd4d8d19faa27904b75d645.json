{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = firstTabbableDescendant;\nexports.orSelf = orSelf;\n\nvar _getTabIndex = _interopRequireDefault(require(\"./TypeFocusSink/getTabIndex\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar ALWAYS_TRUE_FN = function ALWAYS_TRUE_FN() {\n  return true;\n};\n\nvar SELECTOR = 'a[href], audio, button, details, details summary, embed, iframe, input, object, rect, select, svg[focusable], textarea, video, [tabindex]';\n\nfunction firstTabbableDescendant(element) {\n  var filter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ALWAYS_TRUE_FN;\n\n  if (!element) {\n    return;\n  } // This is best-effort for finding a tabbable element.\n  // For a comprehensive list, please refer to https://allyjs.io/data-tables/focusable.html and update this list accordingly.\n\n\n  var focusables = [].filter.call(element.querySelectorAll(SELECTOR), filter);\n  return [].find.call(focusables, function (focusable) {\n    var tabIndex = (0, _getTabIndex.default)(focusable);\n    return typeof tabIndex === 'number' && tabIndex >= 0;\n  });\n}\n\nfunction orSelf(element) {\n  if (!element) {\n    return;\n  }\n\n  if (element.matches(SELECTOR)) {\n    return element;\n  }\n\n  return firstTabbableDescendant(element);\n}","map":{"version":3,"mappings":";;;;;;;;AAAA;;;;;;;;AAEA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAM,IAAN;AAAvB;;AAEA,IAAMC,QAAQ,GACZ,2IADF;;AAGe,SAASC,uBAAT,CAAiCC,OAAjC,EAAmE;AAAA,MAAzBC,MAAyB,uEAAhBJ,cAAgB;;AAChF,MAAI,CAACG,OAAL,EAAc;AACZ;AAF8E,IAKhF;AACA;;;AACA,MAAME,UAAU,GAAG,GAAGD,MAAH,CAAUE,IAAV,CAAeH,OAAO,CAACI,gBAARJ,CAAyBF,QAAzBE,CAAf,EAAmDC,MAAnD,CAAnB;AAEA,SAAO,GAAGI,IAAH,CAAQF,IAAR,CAAaD,UAAb,EAAyB,qBAAa;AAC3C,QAAMI,QAAQ,GAAG,0BAAYC,SAAZ,CAAjB;AAEA,WAAO,OAAOD,QAAP,KAAoB,QAApB,IAAgCA,QAAQ,IAAI,CAAnD;AAHK,IAAP;AAKD;;AAED,SAASE,MAAT,CAAgBR,OAAhB,EAAyB;AACvB,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAIA,OAAO,CAACS,OAART,CAAgBF,QAAhBE,CAAJ,EAA+B;AAC7B,WAAOA,OAAP;AACD;;AAED,SAAOD,uBAAuB,CAACC,OAAD,CAA9B;AACD","names":["ALWAYS_TRUE_FN","SELECTOR","firstTabbableDescendant","element","filter","focusables","call","querySelectorAll","find","tabIndex","focusable","orSelf","matches"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-component/lib/src/Utils/firstTabbableDescendant.js"],"sourcesContent":["import getTabIndex from './TypeFocusSink/getTabIndex';\n\nconst ALWAYS_TRUE_FN = () => true;\n\nconst SELECTOR =\n  'a[href], audio, button, details, details summary, embed, iframe, input, object, rect, select, svg[focusable], textarea, video, [tabindex]';\n\nexport default function firstTabbableDescendant(element, filter = ALWAYS_TRUE_FN) {\n  if (!element) {\n    return;\n  }\n\n  // This is best-effort for finding a tabbable element.\n  // For a comprehensive list, please refer to https://allyjs.io/data-tables/focusable.html and update this list accordingly.\n  const focusables = [].filter.call(element.querySelectorAll(SELECTOR), filter);\n\n  return [].find.call(focusables, focusable => {\n    const tabIndex = getTabIndex(focusable);\n\n    return typeof tabIndex === 'number' && tabIndex >= 0;\n  });\n}\n\nfunction orSelf(element) {\n  if (!element) {\n    return;\n  }\n\n  if (element.matches(SELECTOR)) {\n    return element;\n  }\n\n  return firstTabbableDescendant(element);\n}\n\nexport { orSelf };\n"]},"metadata":{},"sourceType":"script"}