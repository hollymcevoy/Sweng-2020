{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar Observable_1 = require('./Observable');\n\nvar Subscriber_1 = require('./Subscriber');\n\nvar Subscription_1 = require('./Subscription');\n\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\n\nvar SubjectSubscription_1 = require('./SubjectSubscription');\n\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * @class SubjectSubscriber<T>\n */\n\n\nvar SubjectSubscriber = function (_super) {\n  __extends(SubjectSubscriber, _super);\n\n  function SubjectSubscriber(destination) {\n    _super.call(this, destination);\n\n    this.destination = destination;\n  }\n\n  return SubjectSubscriber;\n}(Subscriber_1.Subscriber);\n\nexports.SubjectSubscriber = SubjectSubscriber;\n/**\n * @class Subject<T>\n */\n\nvar Subject = function (_super) {\n  __extends(Subject, _super);\n\n  function Subject() {\n    _super.call(this);\n\n    this.observers = [];\n    this.closed = false;\n    this.isStopped = false;\n    this.hasError = false;\n    this.thrownError = null;\n  }\n\n  Subject.prototype[rxSubscriber_1.rxSubscriber] = function () {\n    return new SubjectSubscriber(this);\n  };\n\n  Subject.prototype.lift = function (operator) {\n    var subject = new AnonymousSubject(this, this);\n    subject.operator = operator;\n    return subject;\n  };\n\n  Subject.prototype.next = function (value) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n    }\n\n    if (!this.isStopped) {\n      var observers = this.observers;\n      var len = observers.length;\n      var copy = observers.slice();\n\n      for (var i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  };\n\n  Subject.prototype.error = function (err) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n    }\n\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    var observers = this.observers;\n    var len = observers.length;\n    var copy = observers.slice();\n\n    for (var i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n\n    this.observers.length = 0;\n  };\n\n  Subject.prototype.complete = function () {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n    }\n\n    this.isStopped = true;\n    var observers = this.observers;\n    var len = observers.length;\n    var copy = observers.slice();\n\n    for (var i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n\n    this.observers.length = 0;\n  };\n\n  Subject.prototype.unsubscribe = function () {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  };\n\n  Subject.prototype._trySubscribe = function (subscriber) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n    } else {\n      return _super.prototype._trySubscribe.call(this, subscriber);\n    }\n  };\n  /** @deprecated internal use only */\n\n\n  Subject.prototype._subscribe = function (subscriber) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription_1.Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription_1.Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n    }\n  };\n\n  Subject.prototype.asObservable = function () {\n    var observable = new Observable_1.Observable();\n    observable.source = this;\n    return observable;\n  };\n\n  Subject.create = function (destination, source) {\n    return new AnonymousSubject(destination, source);\n  };\n\n  return Subject;\n}(Observable_1.Observable);\n\nexports.Subject = Subject;\n/**\n * @class AnonymousSubject<T>\n */\n\nvar AnonymousSubject = function (_super) {\n  __extends(AnonymousSubject, _super);\n\n  function AnonymousSubject(destination, source) {\n    _super.call(this);\n\n    this.destination = destination;\n    this.source = source;\n  }\n\n  AnonymousSubject.prototype.next = function (value) {\n    var destination = this.destination;\n\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  };\n\n  AnonymousSubject.prototype.error = function (err) {\n    var destination = this.destination;\n\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  };\n\n  AnonymousSubject.prototype.complete = function () {\n    var destination = this.destination;\n\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  };\n  /** @deprecated internal use only */\n\n\n  AnonymousSubject.prototype._subscribe = function (subscriber) {\n    var source = this.source;\n\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription_1.Subscription.EMPTY;\n    }\n  };\n\n  return AnonymousSubject;\n}(Subject);\n\nexports.AnonymousSubject = AnonymousSubject;","map":{"version":3,"mappings":"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","names":["__extends","destination","_super","Subscriber_1","exports","SubjectSubscriber","Subject","rxSubscriber_1","operator","subject","AnonymousSubject","value","closed","ObjectUnsubscribedError_1","isStopped","len","observers","length","copy","slice","i","next","err","hasError","thrownError","error","complete","subscriber","_trySubscribe","call","Subscription_1","EMPTY","push","SubjectSubscription_1","observable","Observable_1","source","subscribe"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/src/Subject.ts"],"sourcesContent":["import { Operator } from './Operator';\nimport { Observer } from './Observer';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { ISubscription, Subscription, TeardownLogic } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements ISubscription {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}