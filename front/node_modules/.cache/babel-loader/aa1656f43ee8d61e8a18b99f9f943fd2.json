{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = sendMessageBackToPostActivitySaga;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _effects = require(\"redux-saga/effects\");\n\nvar _postActivity = _interopRequireDefault(require(\"../actions/postActivity\"));\n\nvar _sendMessageBack = require(\"../actions/sendMessageBack\");\n\nvar _whileConnected = _interopRequireDefault(require(\"./effects/whileConnected\"));\n\nvar _marked = /*#__PURE__*/_regenerator[\"default\"].mark(postActivityWithMessageBack),\n    _marked2 = /*#__PURE__*/_regenerator[\"default\"].mark(sendMessageBackToPostActivity),\n    _marked3 = /*#__PURE__*/_regenerator[\"default\"].mark(sendMessageBackToPostActivitySaga); // https://github.com/microsoft/botframework-sdk/blob/main/specs/botframework-activity/botframework-activity.md#message-back\n\n\nfunction postActivityWithMessageBack(_ref) {\n  var _ref$payload, displayText, text, value;\n\n  return _regenerator[\"default\"].wrap(function postActivityWithMessageBack$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _ref$payload = _ref.payload, displayText = _ref$payload.displayText, text = _ref$payload.text, value = _ref$payload.value;\n          _context.next = 3;\n          return (0, _effects.put)((0, _postActivity[\"default\"])({\n            channelData: {\n              messageBack: {\n                displayText: displayText\n              }\n            },\n            text: text,\n            type: 'message',\n            value: value\n          }));\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction sendMessageBackToPostActivity() {\n  return _regenerator[\"default\"].wrap(function sendMessageBackToPostActivity$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return (0, _effects.takeEvery)(_sendMessageBack.SEND_MESSAGE_BACK, postActivityWithMessageBack);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction sendMessageBackToPostActivitySaga() {\n  return _regenerator[\"default\"].wrap(function sendMessageBackToPostActivitySaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return (0, _whileConnected[\"default\"])(sendMessageBackToPostActivity);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;wDAGUA;yDAeAC;yDAIeC,mC,CApBzB;;;AACA,SAAUF,2BAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAAG,8BAAwCC,OAAxC,EAAmDC,WAAnD,gBAAmDA,WAAnD,EAAgEC,IAAhE,gBAAgEA,IAAhE,EAAsEC,KAAtE,gBAAsEA,KAAtE;AAAAC;AACE,iBAAM,kBACJ,8BAAa;AACXC,uBAAW,EAAE;AACXC,yBAAW,EAAE;AACXL,2BAAW,EAAXA;AADW;AADF,aADF;AAMXC,gBAAI,EAAJA,IANW;AAOXK,gBAAI,EAAE,SAPK;AAQXJ,iBAAK,EAALA;AARW,WAAb,CADI,CAAN;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeA,SAAUN,6BAAV;AAAA;AAAA;AAAA;AAAA;AAAAW;AACE,iBAAM,wBAAUC,kCAAV,EAA6Bb,2BAA7B,CAAN;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIe,SAAUE,iCAAV;AAAA;AAAA;AAAA;AAAA;AAAAY;AACb,iBAAM,gCAAeb,6BAAf,CAAN;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","names":["postActivityWithMessageBack","sendMessageBackToPostActivity","sendMessageBackToPostActivitySaga","_ref$payload","payload","displayText","text","value","_context","channelData","messageBack","type","_context2","SEND_MESSAGE_BACK","_context3"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-core/lib/src/sagas/sendMessageBackToPostActivitySaga.js"],"sourcesContent":["import { put, takeEvery } from 'redux-saga/effects';\nimport postActivity from '../actions/postActivity';\nimport { SEND_MESSAGE_BACK } from '../actions/sendMessageBack';\nimport whileConnected from './effects/whileConnected';\n\n// https://github.com/microsoft/botframework-sdk/blob/main/specs/botframework-activity/botframework-activity.md#message-back\nfunction* postActivityWithMessageBack({ payload: { displayText, text, value } }) {\n  yield put(\n    postActivity({\n      channelData: {\n        messageBack: {\n          displayText\n        }\n      },\n      text,\n      type: 'message',\n      value\n    })\n  );\n}\n\nfunction* sendMessageBackToPostActivity() {\n  yield takeEvery(SEND_MESSAGE_BACK, postActivityWithMessageBack);\n}\n\nexport default function* sendMessageBackToPostActivitySaga() {\n  yield whileConnected(sendMessageBackToPostActivity);\n}\n"]},"metadata":{},"sourceType":"script"}