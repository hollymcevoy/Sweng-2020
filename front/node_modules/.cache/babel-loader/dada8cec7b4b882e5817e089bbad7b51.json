{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime2 = require(\"@babel/runtime/regenerator\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = markAllAsSpokenOnStopSpeakActivitySaga;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _effects = require(\"redux-saga/effects\");\n\nvar _activities = require(\"../selectors/activities\");\n\nvar _stopSpeakingActivity = require(\"../actions/stopSpeakingActivity\");\n\nvar _markActivity = _interopRequireDefault(require(\"../actions/markActivity\"));\n\nvar _speakingActivity = _interopRequireDefault(require(\"../definitions/speakingActivity\"));\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime2.mark(markAllAsSpoken),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime2.mark(markAllAsSpokenOnStopSpeakActivitySaga);\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction markAllAsSpoken() {\n  var speakingActivities, _iterator, _step, activity;\n\n  return _regenerator[\"default\"].wrap(function markAllAsSpoken$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return (0, _effects.select)((0, _activities.of)(_speakingActivity[\"default\"]));\n\n        case 2:\n          speakingActivities = _context.sent;\n          _iterator = _createForOfIteratorHelper(speakingActivities);\n          _context.prev = 4;\n\n          _iterator.s();\n\n        case 6:\n          if ((_step = _iterator.n()).done) {\n            _context.next = 12;\n            break;\n          }\n\n          activity = _step.value;\n          _context.next = 10;\n          return (0, _effects.put)((0, _markActivity[\"default\"])(activity, 'speak', false));\n\n        case 10:\n          _context.next = 6;\n          break;\n\n        case 12:\n          _context.next = 17;\n          break;\n\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context[\"catch\"](4);\n\n          _iterator.e(_context.t0);\n\n        case 17:\n          _context.prev = 17;\n\n          _iterator.f();\n\n          return _context.finish(17);\n\n        case 20:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[4, 14, 17, 20]]);\n} // TODO: [P4] We should turn this into a reducer instead\n\n\nfunction markAllAsSpokenOnStopSpeakActivitySaga() {\n  return _regenerator[\"default\"].wrap(function markAllAsSpokenOnStopSpeakActivitySaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return (0, _effects.takeEvery)(_stopSpeakingActivity.STOP_SPEAKING_ACTIVITY, markAllAsSpoken);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;qDAEUA;sDASeC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AATzB,SAAUD,eAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAAE;AAC6B,iBAAM,qBAAO,oBAAaC,4BAAb,CAAP,CAAN;;AAD7B;AACQC,4BADR,gBACQA;AADRC,iDAGyBD,kBAHzB;AAAAF;;AAAAG;;AAAA;AAAA;AAAAH;AAAA;AAAA;;AAGaI,kBAHb,cAGaA;AAHbJ;AAII,iBAAM,kBAAI,8BAAaI,QAAb,EAAuB,OAAvB,EAAgC,KAAhC,CAAJ,CAAN;;AAJJ;AAAAJ;AAAA;;AAAA;AAAAA;AAAA;;AAAA;AAAAA;AAAAA;;AAAAG;;AAAA;AAAAH;;AAAAG;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQA;;;AACe,SAAUJ,sCAAV;AAAA;AAAA;AAAA;AAAA;AAAAM;AACb,iBAAM,wBAAUC,4CAAV,EAAkCR,eAAlC,CAAN;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","names":["markAllAsSpoken","markAllAsSpokenOnStopSpeakActivitySaga","_context","speakingActivity","speakingActivities","_iterator","activity","_context2","STOP_SPEAKING_ACTIVITY"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-core/lib/src/sagas/markAllAsSpokenOnStopSpeakActivitySaga.js"],"sourcesContent":["import { put, select, takeEvery } from 'redux-saga/effects';\n\nimport { of as activitiesOf } from '../selectors/activities';\nimport { STOP_SPEAKING_ACTIVITY } from '../actions/stopSpeakingActivity';\nimport markActivity from '../actions/markActivity';\nimport speakingActivity from '../definitions/speakingActivity';\n\nfunction* markAllAsSpoken() {\n  const speakingActivities = yield select(activitiesOf(speakingActivity));\n\n  for (const activity of speakingActivities) {\n    yield put(markActivity(activity, 'speak', false));\n  }\n}\n\n// TODO: [P4] We should turn this into a reducer instead\nexport default function* markAllAsSpokenOnStopSpeakActivitySaga() {\n  yield takeEvery(STOP_SPEAKING_ACTIVITY, markAllAsSpoken);\n}\n"]},"metadata":{},"sourceType":"script"}