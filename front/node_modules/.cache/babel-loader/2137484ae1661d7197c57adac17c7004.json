{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _botframeworkWebchatApi = require(\"botframework-webchat-api\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _ScreenReaderText = _interopRequireDefault(require(\"./ScreenReaderText\"));\n\nvar _useStyleSet3 = _interopRequireDefault(require(\"./hooks/useStyleSet\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar useLocalizer = _botframeworkWebchatApi.hooks.useLocalizer;\n\nvar ErrorBox = function ErrorBox(_ref) {\n  var error = _ref.error,\n      type = _ref.type;\n\n  var _useStyleSet = (0, _useStyleSet3.default)(),\n      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),\n      errorBoxStyleSet = _useStyleSet2[0].errorBox;\n\n  var localize = useLocalizer();\n  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_ScreenReaderText.default, {\n    text: localize('ACTIVITY_ERROR_BOX_TITLE')\n  }), /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: errorBoxStyleSet\n  }, /*#__PURE__*/_react.default.createElement(\"div\", null, type), /*#__PURE__*/_react.default.createElement(\"details\", null, /*#__PURE__*/_react.default.createElement(\"summary\", null, error.message), /*#__PURE__*/_react.default.createElement(\"pre\", null, error.stack))));\n};\n\nErrorBox.defaultProps = {\n  type: ''\n};\nErrorBox.propTypes = {\n  error: _propTypes.default.instanceOf(Error).isRequired,\n  type: _propTypes.default.string\n};\nvar _default = ErrorBox;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;AAEA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAQA,YAAR,GAAyBC,8BAAjBD,YAAR;;AAOA,IAAME,QAA2B,GAAG,SAA9BA,QAA8B,OAAqB;AAAA,MAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AACvD,qBAAyC,4BAAzC;AAAA;AAAA,MAAmBC,gBAAnB,oBAASC,QAAT;;AACA,MAAMC,QAAQ,GAAGP,YAAY,EAA7B;AAEA,sBACEQ,6BAACA,eAAMC,QAAP,qBACED,6BAACE,yBAAD;AAAkBC,QAAI,EAAEJ,QAAQ,CAAC,0BAAD;AAAhC,IADF,eAEEC;AAAKI,aAAS,EAAEP;AAAhB,kBACEG,0CAAMJ,IAAN,CADF,eAGEI,2DACEA,8CAAUL,KAAK,CAACU,OAAhB,CADF,eAEEL,0CAAML,KAAK,CAACW,KAAZ,CAFF,CAHF,CAFF,CADF;AAJF;;AAmBAZ,QAAQ,CAACa,YAATb,GAAwB;AACtBE,MAAI,EAAE;AADgB,CAAxBF;AAIAA,QAAQ,CAACc,SAATd,GAAqB;AACnBC,OAAK,EAAEc,mBAAUC,UAAVD,CAAqBE,KAArBF,EAA4BG,UADhB;AAEnBhB,MAAI,EAAEa,mBAAUI;AAFG,CAArBnB;eAKeA","names":["useLocalizer","hooks","ErrorBox","error","type","errorBoxStyleSet","errorBox","localize","_react","Fragment","_ScreenReaderText","text","className","message","stack","defaultProps","propTypes","PropTypes","instanceOf","Error","isRequired","string"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-component/lib/src/ErrorBox.tsx"],"sourcesContent":["/* eslint no-console: \"off\" */\n\nimport { hooks } from 'botframework-webchat-api';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\n\nimport ScreenReaderText from './ScreenReaderText';\nimport useStyleSet from './hooks/useStyleSet';\n\nconst { useLocalizer } = hooks;\n\ntype ErrorBoxProps = {\n  error: Error;\n  type?: string;\n};\n\nconst ErrorBox: FC<ErrorBoxProps> = ({ error, type }) => {\n  const [{ errorBox: errorBoxStyleSet }] = useStyleSet();\n  const localize = useLocalizer();\n\n  return (\n    <React.Fragment>\n      <ScreenReaderText text={localize('ACTIVITY_ERROR_BOX_TITLE')} />\n      <div className={errorBoxStyleSet}>\n        <div>{type}</div>\n        {/* The callstack between production and development are different, thus, we should hide it for visual regression test */}\n        <details>\n          <summary>{error.message}</summary>\n          <pre>{error.stack}</pre>\n        </details>\n      </div>\n    </React.Fragment>\n  );\n};\n\nErrorBox.defaultProps = {\n  type: ''\n};\n\nErrorBox.propTypes = {\n  error: PropTypes.instanceOf(Error).isRequired,\n  type: PropTypes.string\n};\n\nexport default ErrorBox;\n"]},"metadata":{},"sourceType":"script"}