{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime2 = require(\"@babel/runtime/regenerator\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = submitSendBoxSaga;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _effects = require(\"redux-saga/effects\");\n\nvar _submitSendBox = require(\"../actions/submitSendBox\");\n\nvar _sendBoxValue = _interopRequireDefault(require(\"../selectors/sendBoxValue\"));\n\nvar _sendMessage = _interopRequireDefault(require(\"../actions/sendMessage\"));\n\nvar _setSendBox = _interopRequireDefault(require(\"../actions/setSendBox\"));\n\nvar _whileConnected = _interopRequireDefault(require(\"./effects/whileConnected\"));\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime2.mark(submitSendBox),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime2.mark(submitSendBoxSaga);\n\nfunction submitSendBox() {\n  return _regenerator[\"default\"].wrap(function submitSendBox$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return (0, _effects.takeEvery)(_submitSendBox.SUBMIT_SEND_BOX, /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(_ref) {\n            var _ref$payload, channelData, method, sendBoxValue;\n\n            return _regenerator[\"default\"].wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _ref$payload = _ref.payload, channelData = _ref$payload.channelData, method = _ref$payload.method;\n                    _context.next = 3;\n                    return (0, _effects.select)(_sendBoxValue[\"default\"]);\n\n                  case 3:\n                    sendBoxValue = _context.sent;\n\n                    if (!sendBoxValue) {\n                      _context.next = 9;\n                      break;\n                    }\n\n                    _context.next = 7;\n                    return (0, _effects.put)((0, _sendMessage[\"default\"])(sendBoxValue.trim(), method, {\n                      channelData: channelData\n                    }));\n\n                  case 7:\n                    _context.next = 9;\n                    return (0, _effects.put)((0, _setSendBox[\"default\"])(''));\n\n                  case 9:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction submitSendBoxSaga() {\n  return _regenerator[\"default\"].wrap(function submitSendBoxSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return (0, _whileConnected[\"default\"])(submitSendBox);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;qDAEUA;sDAWeC;;AAXzB,SAAUD,aAAV;AAAA;AAAA;AAAA;AAAA;AAAAE;AACE,iBAAM,wBAAUC,8BAAV,4CAA2B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAAC,wCAAaC,OAAb,EAAwBC,WAAxB,gBAAwBA,WAAxB,EAAqCC,MAArC,gBAAqCA,MAArC;AAAAC;AACV,2BAAM,qBAAOC,wBAAP,CAAN;;AADU;AACzBC,gCADyB,gBACzBA;;AADyB,yBAG3BA,YAH2B;AAAAF;AAAA;AAAA;;AAAAA;AAI7B,2BAAM,kBAAI,6BAAYE,YAAY,CAACC,IAAbD,EAAZ,EAAiCH,MAAjC,EAAyC;AAAED,iCAAW,EAAXA;AAAF,qBAAzC,CAAJ,CAAN;;AAJ6B;AAAAE;AAK7B,2BAAM,kBAAI,4BAAW,EAAX,CAAJ,CAAN;;AAL6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAA3B,aAAN;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWe,SAAUP,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAAW;AACb,iBAAM,gCAAeZ,aAAf,CAAN;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","names":["submitSendBox","submitSendBoxSaga","_context2","SUBMIT_SEND_BOX","_ref$payload","payload","channelData","method","_context","sendBoxValueSelector","sendBoxValue","trim","_context3"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-core/lib/src/sagas/submitSendBoxSaga.js"],"sourcesContent":["import { put, select, takeEvery } from 'redux-saga/effects';\n\nimport { SUBMIT_SEND_BOX } from '../actions/submitSendBox';\nimport sendBoxValueSelector from '../selectors/sendBoxValue';\nimport sendMessage from '../actions/sendMessage';\nimport setSendBox from '../actions/setSendBox';\nimport whileConnected from './effects/whileConnected';\n\nfunction* submitSendBox() {\n  yield takeEvery(SUBMIT_SEND_BOX, function* ({ payload: { channelData, method } }) {\n    const sendBoxValue = yield select(sendBoxValueSelector);\n\n    if (sendBoxValue) {\n      yield put(sendMessage(sendBoxValue.trim(), method, { channelData }));\n      yield put(setSendBox(''));\n    }\n  });\n}\n\nexport default function* submitSendBoxSaga() {\n  yield whileConnected(submitSendBox);\n}\n"]},"metadata":{},"sourceType":"script"}