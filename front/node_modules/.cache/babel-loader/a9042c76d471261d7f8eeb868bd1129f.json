{"ast":null,"code":"\"use strict\"; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PronunciationAssessmentResult = void 0;\n\nvar Contracts_1 = require(\"./Contracts\");\n\nvar Exports_1 = require(\"./Exports\");\n/**\n * Pronunciation assessment results.\n * @class PronunciationAssessmentResult\n * Added in version 1.15.0.\n */\n\n\nvar PronunciationAssessmentResult =\n/** @class */\nfunction () {\n  function PronunciationAssessmentResult(jsonString) {\n    var j = JSON.parse(jsonString);\n    Contracts_1.Contracts.throwIfNullOrUndefined(j.NBest[0], \"NBest\");\n    this.privPronJson = j.NBest[0];\n  }\n  /**\n   * @member PronunciationAssessmentResult.fromResult\n   * @function\n   * @public\n   * @param {RecognitionResult} result The recognition result.\n   * @return {PronunciationAssessmentConfig} Instance of PronunciationAssessmentConfig\n   * @summary Creates an instance of the PronunciationAssessmentResult from recognition result.\n   */\n\n\n  PronunciationAssessmentResult.fromResult = function (result) {\n    Contracts_1.Contracts.throwIfNullOrUndefined(result, \"result\");\n    var json = result.properties.getProperty(Exports_1.PropertyId.SpeechServiceResponse_JsonResult);\n    Contracts_1.Contracts.throwIfNullOrUndefined(json, \"json\");\n    return new PronunciationAssessmentResult(json);\n  };\n\n  Object.defineProperty(PronunciationAssessmentResult.prototype, \"detailResult\", {\n    /**\n     * Gets the detail result of pronunciation assessment.\n     * @member PronunciationAssessmentConfig.prototype.detailResult\n     * @function\n     * @public\n     * @returns {any} detail result.\n     */\n    get: function () {\n      return this.privPronJson;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(PronunciationAssessmentResult.prototype, \"accuracyScore\", {\n    /**\n     * The score indicating the pronunciation accuracy of the given speech, which indicates\n     * how closely the phonemes match a native speaker's pronunciation.\n     * @member PronunciationAssessmentResult.prototype.accuracyScore\n     * @function\n     * @public\n     * @returns {number} Accuracy score.\n     */\n    get: function () {\n      return this.detailResult.PronunciationAssessment.AccuracyScore;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(PronunciationAssessmentResult.prototype, \"pronunciationScore\", {\n    /**\n     * The overall score indicating the pronunciation quality of the given speech.\n     * This is calculated from AccuracyScore, FluencyScore and CompletenessScore with weight.\n     * @member PronunciationAssessmentResult.prototype.pronunciationScore\n     * @function\n     * @public\n     * @returns {number} Pronunciation score.\n     */\n    get: function () {\n      return this.detailResult.PronunciationAssessment.PronScore;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(PronunciationAssessmentResult.prototype, \"completenessScore\", {\n    /**\n     * The score indicating the completeness of the given speech by calculating the ratio of pronounced words towards entire input.\n     * @member PronunciationAssessmentResult.prototype.completenessScore\n     * @function\n     * @public\n     * @returns {number} Completeness score.\n     */\n    get: function () {\n      return this.detailResult.PronunciationAssessment.CompletenessScore;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(PronunciationAssessmentResult.prototype, \"fluencyScore\", {\n    /**\n     * The score indicating the fluency of the given speech.\n     * @member PronunciationAssessmentResult.prototype.fluencyScore\n     * @function\n     * @public\n     * @returns {number} Fluency score.\n     */\n    get: function () {\n      return this.detailResult.PronunciationAssessment.FluencyScore;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return PronunciationAssessmentResult;\n}();\n\nexports.PronunciationAssessmentResult = PronunciationAssessmentResult;","map":{"version":3,"mappings":"cAAA;AACA;;;;;;;AAEA;;AACA;AAKA;;;;;;;AAKA;AAAA;AAAA;AAGI,yCAAoBA,UAApB,EAAsC;AAClC,QAAMC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWH,UAAX,CAAV;AACAI,0BAAUC,sBAAV,CAAiCJ,CAAC,CAACK,KAAF,CAAQ,CAAR,CAAjC,EAA6C,OAA7C;AACA,SAAKC,YAAL,GAAoBN,CAAC,CAACK,KAAF,CAAQ,CAAR,CAApB;AACH;AAED;;;;;;;;;;AAQcE,6CAAd,UAAyBC,MAAzB,EAAkD;AAC9CL,0BAAUC,sBAAV,CAAiCI,MAAjC,EAAyC,QAAzC;AACA,QAAMC,IAAI,GAAWD,MAAM,CAACE,UAAP,CAAkBC,WAAlB,CAA8BC,qBAAWC,gCAAzC,CAArB;AACAV,0BAAUC,sBAAV,CAAiCK,IAAjC,EAAuC,MAAvC;AACA,WAAO,IAAIF,6BAAJ,CAAkCE,IAAlC,CAAP;AACH,GALa;;AAcdK,wBAAWP,uCAAX,EAAW,cAAX,EAAuB;AAPvB;;;;;;;SAOA;AACI,aAAO,KAAKD,YAAZ;AACH,KAFsB;qBAAA;;AAAA,GAAvB;AAYAQ,wBAAWP,uCAAX,EAAW,eAAX,EAAwB;AARxB;;;;;;;;SAQA;AACI,aAAO,KAAKQ,YAAL,CAAkBC,uBAAlB,CAA0CC,aAAjD;AACH,KAFuB;qBAAA;;AAAA,GAAxB;AAYAH,wBAAWP,uCAAX,EAAW,oBAAX,EAA6B;AAR7B;;;;;;;;SAQA;AACI,aAAO,KAAKQ,YAAL,CAAkBC,uBAAlB,CAA0CE,SAAjD;AACH,KAF4B;qBAAA;;AAAA,GAA7B;AAWAJ,wBAAWP,uCAAX,EAAW,mBAAX,EAA4B;AAP5B;;;;;;;SAOA;AACI,aAAO,KAAKQ,YAAL,CAAkBC,uBAAlB,CAA0CG,iBAAjD;AACH,KAF2B;qBAAA;;AAAA,GAA5B;AAWAL,wBAAWP,uCAAX,EAAW,cAAX,EAAuB;AAPvB;;;;;;;SAOA;AACI,aAAO,KAAKQ,YAAL,CAAkBC,uBAAlB,CAA0CI,YAAjD;AACH,KAFsB;qBAAA;;AAAA,GAAvB;AAGJ;AAhFA;;AAAaC","names":["jsonString","j","JSON","parse","Contracts_1","throwIfNullOrUndefined","NBest","privPronJson","PronunciationAssessmentResult","result","json","properties","getProperty","Exports_1","SpeechServiceResponse_JsonResult","Object","detailResult","PronunciationAssessment","AccuracyScore","PronScore","CompletenessScore","FluencyScore","exports"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/PronunciationAssessmentResult.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {Contracts} from \"./Contracts\";\r\nimport {\r\n    PropertyId,\r\n    RecognitionResult\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Pronunciation assessment results.\r\n * @class PronunciationAssessmentResult\r\n * Added in version 1.15.0.\r\n */\r\nexport class PronunciationAssessmentResult {\r\n    private privPronJson: any;\r\n\r\n    private constructor(jsonString: string) {\r\n        const j = JSON.parse(jsonString);\r\n        Contracts.throwIfNullOrUndefined(j.NBest[0], \"NBest\");\r\n        this.privPronJson = j.NBest[0];\r\n    }\r\n\r\n    /**\r\n     * @member PronunciationAssessmentResult.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {RecognitionResult} result The recognition result.\r\n     * @return {PronunciationAssessmentConfig} Instance of PronunciationAssessmentConfig\r\n     * @summary Creates an instance of the PronunciationAssessmentResult from recognition result.\r\n     */\r\n    public static fromResult(result: RecognitionResult): PronunciationAssessmentResult {\r\n        Contracts.throwIfNullOrUndefined(result, \"result\");\r\n        const json: string = result.properties.getProperty(PropertyId.SpeechServiceResponse_JsonResult);\r\n        Contracts.throwIfNullOrUndefined(json, \"json\");\r\n        return new PronunciationAssessmentResult(json);\r\n    }\r\n\r\n    /**\r\n     * Gets the detail result of pronunciation assessment.\r\n     * @member PronunciationAssessmentConfig.prototype.detailResult\r\n     * @function\r\n     * @public\r\n     * @returns {any} detail result.\r\n     */\r\n    public get detailResult(): any {\r\n        return this.privPronJson;\r\n    }\r\n\r\n    /**\r\n     * The score indicating the pronunciation accuracy of the given speech, which indicates\r\n     * how closely the phonemes match a native speaker's pronunciation.\r\n     * @member PronunciationAssessmentResult.prototype.accuracyScore\r\n     * @function\r\n     * @public\r\n     * @returns {number} Accuracy score.\r\n     */\r\n    public get accuracyScore(): number {\r\n        return this.detailResult.PronunciationAssessment.AccuracyScore;\r\n    }\r\n\r\n    /**\r\n     * The overall score indicating the pronunciation quality of the given speech.\r\n     * This is calculated from AccuracyScore, FluencyScore and CompletenessScore with weight.\r\n     * @member PronunciationAssessmentResult.prototype.pronunciationScore\r\n     * @function\r\n     * @public\r\n     * @returns {number} Pronunciation score.\r\n     */\r\n    public get pronunciationScore(): number {\r\n        return this.detailResult.PronunciationAssessment.PronScore;\r\n    }\r\n\r\n    /**\r\n     * The score indicating the completeness of the given speech by calculating the ratio of pronounced words towards entire input.\r\n     * @member PronunciationAssessmentResult.prototype.completenessScore\r\n     * @function\r\n     * @public\r\n     * @returns {number} Completeness score.\r\n     */\r\n    public get completenessScore(): number {\r\n        return this.detailResult.PronunciationAssessment.CompletenessScore;\r\n    }\r\n\r\n    /**\r\n     * The score indicating the fluency of the given speech.\r\n     * @member PronunciationAssessmentResult.prototype.fluencyScore\r\n     * @function\r\n     * @public\r\n     * @returns {number} Fluency score.\r\n     */\r\n    public get fluencyScore(): number {\r\n        return this.detailResult.PronunciationAssessment.FluencyScore;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}