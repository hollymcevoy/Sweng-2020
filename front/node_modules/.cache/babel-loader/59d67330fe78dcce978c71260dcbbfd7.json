{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime2 = require(\"@babel/runtime/regenerator\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = connectionStatusUpdateSaga;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _effects = require(\"redux-saga/effects\");\n\nvar _connectionStatusUpdate = _interopRequireDefault(require(\"../actions/connectionStatusUpdate\"));\n\nvar _observeEach = _interopRequireDefault(require(\"./effects/observeEach\"));\n\nvar _setReferenceGrammarID = _interopRequireDefault(require(\"../actions/setReferenceGrammarID\"));\n\nvar _whileConnected = _interopRequireDefault(require(\"./effects/whileConnected\"));\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime2.mark(observeConnectionStatus),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime2.mark(connectionStatusUpdateSaga);\n\nfunction observeConnectionStatus(_ref) {\n  var directLine;\n  return _regenerator[\"default\"].wrap(function observeConnectionStatus$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          directLine = _ref.directLine;\n          _context2.next = 3;\n          return (0, _observeEach[\"default\"])(directLine.connectionStatus$, /*#__PURE__*/_regenerator[\"default\"].mark(function updateConnectionStatus(connectionStatus) {\n            return _regenerator[\"default\"].wrap(function updateConnectionStatus$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return (0, _effects.put)((0, _connectionStatusUpdate[\"default\"])(connectionStatus));\n\n                  case 2:\n                    _context.next = 4;\n                    return (0, _effects.put)((0, _setReferenceGrammarID[\"default\"])(directLine.referenceGrammarId));\n\n                  case 4:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, updateConnectionStatus);\n          }));\n\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction connectionStatusUpdateSaga() {\n  return _regenerator[\"default\"].wrap(function connectionStatusUpdateSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return (0, _whileConnected[\"default\"])(observeConnectionStatus);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;qDAEUA;sDAOeC;;AAPzB,SAAUD,uBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoCE,oBAApC,QAAoCA;AAApCC;AACE,iBAAM,6BAAYD,UAAU,CAACE,iBAAvB,4CAA0C,SAAUC,sBAAV,CAAiCC,gBAAjC;AAAA;AAAA;AAAA;AAAA;AAAAC;AAC9C,2BAAM,kBAAI,wCAAuBD,gBAAvB,CAAJ,CAAN;;AAD8C;AAAAC;AAE9C,2BAAM,kBAAI,uCAAsBL,UAAU,CAACM,kBAAjC,CAAJ,CAAN;;AAF8C;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUH,sBAAV;AAA1C,aAAN;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOe,SAAUJ,0BAAV;AAAA;AAAA;AAAA;AAAA;AAAAQ;AACb,iBAAM,gCAAeT,uBAAf,CAAN;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","names":["observeConnectionStatus","connectionStatusUpdateSaga","directLine","_context2","connectionStatus$","updateConnectionStatus","connectionStatus","_context","referenceGrammarId","_context3"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-core/lib/src/sagas/connectionStatusUpdateSaga.js"],"sourcesContent":["import { put } from 'redux-saga/effects';\n\nimport connectionStatusUpdate from '../actions/connectionStatusUpdate';\nimport observeEach from './effects/observeEach';\nimport setReferenceGrammarID from '../actions/setReferenceGrammarID';\nimport whileConnected from './effects/whileConnected';\n\nfunction* observeConnectionStatus({ directLine }) {\n  yield observeEach(directLine.connectionStatus$, function* updateConnectionStatus(connectionStatus) {\n    yield put(connectionStatusUpdate(connectionStatus));\n    yield put(setReferenceGrammarID(directLine.referenceGrammarId));\n  });\n}\n\nexport default function* connectionStatusUpdateSaga() {\n  yield whileConnected(observeConnectionStatus);\n}\n"]},"metadata":{},"sourceType":"script"}