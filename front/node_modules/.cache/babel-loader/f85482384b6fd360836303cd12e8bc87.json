{"ast":null,"code":"(function (f) {\n  if (typeof exports === \"object\" && typeof module !== \"undefined\") {\n    module.exports = f();\n  } else if (typeof define === \"function\" && define.amd) {\n    define([], f);\n  } else {\n    var g;\n\n    if (typeof window !== \"undefined\") {\n      g = window;\n    } else if (typeof global !== \"undefined\") {\n      g = global;\n    } else if (typeof self !== \"undefined\") {\n      g = self;\n    } else {\n      g = this;\n    }\n\n    g.BFSE = f();\n  }\n})(function () {\n  var define, module, exports;\n  return function () {\n    function r(e, n, t) {\n      function o(i, f) {\n        if (!n[i]) {\n          if (!e[i]) {\n            var c = \"function\" == typeof require && require;\n            if (!f && c) return c(i, !0);\n            if (u) return u(i, !0);\n            var a = new Error(\"Cannot find module '\" + i + \"'\");\n            throw a.code = \"MODULE_NOT_FOUND\", a;\n          }\n\n          var p = n[i] = {\n            exports: {}\n          };\n          e[i][0].call(p.exports, function (r) {\n            var n = e[i][1][r];\n            return o(n || r);\n          }, p, p.exports, r, e, n, t);\n        }\n\n        return n[i].exports;\n      }\n\n      for (var u = \"function\" == typeof require && require, i = 0; i < t.length; i++) o(t[i]);\n\n      return o;\n    }\n\n    return r;\n  }()({\n    1: [function (require, module, exports) {\n      \"use strict\";\n      /**\n       * @module botframework-streaming\n       */\n\n      /**\n       * Copyright (c) Microsoft Corporation. All rights reserved.\n       * Licensed under the MIT License.\n       */\n\n      var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n        function adopt(value) {\n          return value instanceof P ? value : new P(function (resolve) {\n            resolve(value);\n          });\n        }\n\n        return new (P || (P = Promise))(function (resolve, reject) {\n          function fulfilled(value) {\n            try {\n              step(generator.next(value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n\n          function rejected(value) {\n            try {\n              step(generator[\"throw\"](value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n\n          function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n          }\n\n          step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n      };\n\n      var __generator = this && this.__generator || function (thisArg, body) {\n        var _ = {\n          label: 0,\n          sent: function () {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n          },\n          trys: [],\n          ops: []\n        },\n            f,\n            y,\n            t,\n            g;\n        return g = {\n          next: verb(0),\n          \"throw\": verb(1),\n          \"return\": verb(2)\n        }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n          return this;\n        }), g;\n\n        function verb(n) {\n          return function (v) {\n            return step([n, v]);\n          };\n        }\n\n        function step(op) {\n          if (f) throw new TypeError(\"Generator is already executing.\");\n\n          while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n\n            switch (op[0]) {\n              case 0:\n              case 1:\n                t = op;\n                break;\n\n              case 4:\n                _.label++;\n                return {\n                  value: op[1],\n                  done: false\n                };\n\n              case 5:\n                _.label++;\n                y = op[1];\n                op = [0];\n                continue;\n\n              case 7:\n                op = _.ops.pop();\n\n                _.trys.pop();\n\n                continue;\n\n              default:\n                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                  _ = 0;\n                  continue;\n                }\n\n                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                  _.label = op[1];\n                  break;\n                }\n\n                if (op[0] === 6 && _.label < t[1]) {\n                  _.label = t[1];\n                  t = op;\n                  break;\n                }\n\n                if (t && _.label < t[2]) {\n                  _.label = t[2];\n\n                  _.ops.push(op);\n\n                  break;\n                }\n\n                if (t[2]) _.ops.pop();\n\n                _.trys.pop();\n\n                continue;\n            }\n\n            op = body.call(thisArg, _);\n          } catch (e) {\n            op = [6, e];\n            y = 0;\n          } finally {\n            f = t = 0;\n          }\n\n          if (op[0] & 5) throw op[1];\n          return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n          };\n        }\n      };\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PayloadAssembler = void 0;\n\n      var subscribableStream_1 = require(\"../subscribableStream\");\n\n      var payloads_1 = require(\"../payloads\");\n\n      var contentStream_1 = require(\"../contentStream\");\n      /**\n       * Assembles payloads for streaming library.\n       *\n       * @internal\n       */\n\n\n      var PayloadAssembler =\n      /** @class */\n      function () {\n        /**\n         * Initializes a new instance of the [PayloadAssembler](xref:botframework-streaming.PayloadAssembler) class.\n         *\n         * @param streamManager The [StreamManager](xref:botframework-streaming.StreamManager) managing the stream being assembled.\n         * @param params Parameters for a streaming assembler.\n         */\n        function PayloadAssembler(streamManager, params) {\n          this.streamManager = streamManager;\n          this._byteOrderMark = 0xfeff;\n          this._utf = 'utf8';\n\n          if (params.header) {\n            this.id = params.header.id;\n            this.payloadType = params.header.payloadType;\n            this.contentLength = params.header.payloadLength;\n            this.end = params.header.end;\n          } else {\n            this.id = params.id;\n          }\n\n          if (!this.id) {\n            throw Error('An ID must be supplied when creating an assembler.');\n          }\n\n          this._onCompleted = params.onCompleted;\n        }\n        /**\n         * Retrieves the assembler's payload as a stream.\n         *\n         * @returns A [SubscribableStream](xref:botframework-streaming.SubscribableStream) of the assembler's payload.\n         */\n\n\n        PayloadAssembler.prototype.getPayloadStream = function () {\n          if (!this.stream) {\n            this.stream = this.createPayloadStream();\n          }\n\n          return this.stream;\n        };\n        /**\n         * The action the assembler executes when new bytes are received on the incoming stream.\n         *\n         * @param header The stream's Header.\n         * @param stream The incoming stream being assembled.\n         * @param _contentLength The length of the stream, if finite.\n         */\n\n\n        PayloadAssembler.prototype.onReceive = function (header, stream, _contentLength) {\n          this.end = header.end;\n\n          if (header.payloadType === payloads_1.PayloadTypes.response || header.payloadType === payloads_1.PayloadTypes.request) {\n            this.process(stream).then().catch();\n          } else if (header.end) {\n            stream.end();\n          }\n        };\n        /**\n         * Closes the assembler.\n         */\n\n\n        PayloadAssembler.prototype.close = function () {\n          this.streamManager.closeStream(this.id);\n        };\n        /**\n         * Creates a new [SubscribableStream](xref:botframework-streaming.SubscribableStream) instance.\n         *\n         * @returns The new stream ready for consumption.\n         */\n\n\n        PayloadAssembler.prototype.createPayloadStream = function () {\n          return new subscribableStream_1.SubscribableStream();\n        };\n\n        PayloadAssembler.prototype.payloadFromJson = function (json) {\n          return JSON.parse(json.charCodeAt(0) === this._byteOrderMark ? json.slice(1) : json);\n        };\n\n        PayloadAssembler.prototype.stripBOM = function (input) {\n          return input.charCodeAt(0) === this._byteOrderMark ? input.slice(1) : input;\n        };\n\n        PayloadAssembler.prototype.process = function (stream) {\n          return __awaiter(this, void 0, void 0, function () {\n            var streamData, streamDataAsString;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  streamData = stream.read(stream.length);\n\n                  if (!streamData) {\n                    return [2\n                    /*return*/\n                    ];\n                  }\n\n                  streamDataAsString = streamData.toString(this._utf);\n                  if (!(this.payloadType === payloads_1.PayloadTypes.request)) return [3\n                  /*break*/\n                  , 2];\n                  return [4\n                  /*yield*/\n                  , this.processRequest(streamDataAsString)];\n\n                case 1:\n                  _a.sent();\n\n                  return [3\n                  /*break*/\n                  , 4];\n\n                case 2:\n                  if (!(this.payloadType === payloads_1.PayloadTypes.response)) return [3\n                  /*break*/\n                  , 4];\n                  return [4\n                  /*yield*/\n                  , this.processResponse(streamDataAsString)];\n\n                case 3:\n                  _a.sent();\n\n                  _a.label = 4;\n\n                case 4:\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        };\n\n        PayloadAssembler.prototype.processResponse = function (streamDataAsString) {\n          return __awaiter(this, void 0, void 0, function () {\n            var responsePayload, receiveResponse;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  responsePayload = this.payloadFromJson(this.stripBOM(streamDataAsString));\n                  receiveResponse = {\n                    streams: [],\n                    statusCode: responsePayload.statusCode\n                  };\n                  return [4\n                  /*yield*/\n                  , this.processStreams(responsePayload, receiveResponse)];\n\n                case 1:\n                  _a.sent();\n\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        };\n\n        PayloadAssembler.prototype.processRequest = function (streamDataAsString) {\n          return __awaiter(this, void 0, void 0, function () {\n            var requestPayload, receiveRequest;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  requestPayload = this.payloadFromJson(streamDataAsString);\n                  receiveRequest = {\n                    streams: [],\n                    path: requestPayload.path,\n                    verb: requestPayload.verb\n                  };\n                  return [4\n                  /*yield*/\n                  , this.processStreams(requestPayload, receiveRequest)];\n\n                case 1:\n                  _a.sent();\n\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n        PayloadAssembler.prototype.processStreams = function (responsePayload, receiveResponse) {\n          return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  if (responsePayload.streams) {\n                    responsePayload.streams.forEach(function (responseStream) {\n                      var contentAssembler = _this.streamManager.getPayloadAssembler(responseStream.id);\n\n                      contentAssembler.payloadType = responseStream.contentType;\n                      contentAssembler.contentLength = responseStream.length;\n                      receiveResponse.streams.push(new contentStream_1.ContentStream(responseStream.id, contentAssembler));\n                    });\n                  }\n\n                  return [4\n                  /*yield*/\n                  , this._onCompleted(this.id, receiveResponse)];\n\n                case 1:\n                  _a.sent();\n\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        };\n\n        return PayloadAssembler;\n      }();\n\n      exports.PayloadAssembler = PayloadAssembler;\n    }, {\n      \"../contentStream\": 2,\n      \"../payloads\": 16,\n      \"../subscribableStream\": 27\n    }],\n    2: [function (require, module, exports) {\n      \"use strict\";\n      /**\n       * @module botframework-streaming\n       */\n\n      /**\n       * Copyright (c) Microsoft Corporation. All rights reserved.\n       * Licensed under the MIT License.\n       */\n\n      var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n        function adopt(value) {\n          return value instanceof P ? value : new P(function (resolve) {\n            resolve(value);\n          });\n        }\n\n        return new (P || (P = Promise))(function (resolve, reject) {\n          function fulfilled(value) {\n            try {\n              step(generator.next(value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n\n          function rejected(value) {\n            try {\n              step(generator[\"throw\"](value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n\n          function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n          }\n\n          step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n      };\n\n      var __generator = this && this.__generator || function (thisArg, body) {\n        var _ = {\n          label: 0,\n          sent: function () {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n          },\n          trys: [],\n          ops: []\n        },\n            f,\n            y,\n            t,\n            g;\n        return g = {\n          next: verb(0),\n          \"throw\": verb(1),\n          \"return\": verb(2)\n        }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n          return this;\n        }), g;\n\n        function verb(n) {\n          return function (v) {\n            return step([n, v]);\n          };\n        }\n\n        function step(op) {\n          if (f) throw new TypeError(\"Generator is already executing.\");\n\n          while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n\n            switch (op[0]) {\n              case 0:\n              case 1:\n                t = op;\n                break;\n\n              case 4:\n                _.label++;\n                return {\n                  value: op[1],\n                  done: false\n                };\n\n              case 5:\n                _.label++;\n                y = op[1];\n                op = [0];\n                continue;\n\n              case 7:\n                op = _.ops.pop();\n\n                _.trys.pop();\n\n                continue;\n\n              default:\n                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                  _ = 0;\n                  continue;\n                }\n\n                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                  _.label = op[1];\n                  break;\n                }\n\n                if (op[0] === 6 && _.label < t[1]) {\n                  _.label = t[1];\n                  t = op;\n                  break;\n                }\n\n                if (t && _.label < t[2]) {\n                  _.label = t[2];\n\n                  _.ops.push(op);\n\n                  break;\n                }\n\n                if (t[2]) _.ops.pop();\n\n                _.trys.pop();\n\n                continue;\n            }\n\n            op = body.call(thisArg, _);\n          } catch (e) {\n            op = [6, e];\n            y = 0;\n          } finally {\n            f = t = 0;\n          }\n\n          if (op[0] & 5) throw op[1];\n          return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n          };\n        }\n      };\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.ContentStream = void 0;\n      /**\n       * A stream of fixed or infinite length containing content to be decoded.\n       */\n\n      var ContentStream =\n      /** @class */\n      function () {\n        /**\n         * Initializes a new instance of the [ContentStream](xref:botframework-streaming.ContentStream) class.\n         *\n         * @param id The ID assigned to this instance.\n         * @param assembler The [PayloadAssembler](xref:botframework-streaming.PayloadAssembler) assigned to this instance.\n         */\n        function ContentStream(id, assembler) {\n          if (!assembler) {\n            throw Error('Null Argument Exception');\n          }\n\n          this.id = id;\n          this.assembler = assembler;\n        }\n\n        Object.defineProperty(ContentStream.prototype, \"contentType\", {\n          /**\n           * Gets the name of the type of the object contained within this [ContentStream](xref:botframework-streaming.ContentStream).\n           *\n           * @returns The [PayloadType](xref:botframework-streaming.PayloadType) of this [ContentStream](xref:botframework-streaming.ContentStream).\n           */\n          get: function () {\n            return this.assembler.payloadType;\n          },\n          enumerable: false,\n          configurable: true\n        });\n        Object.defineProperty(ContentStream.prototype, \"length\", {\n          /**\n           * Gets the length of this [ContentStream](xref:botframework-streaming.ContentStream).\n           *\n           * @returns A number representing the length of this [ContentStream](xref:botframework-streaming.ContentStream).\n           */\n          get: function () {\n            return this.assembler.contentLength;\n          },\n          enumerable: false,\n          configurable: true\n        });\n        /**\n         * Gets the data contained within this [ContentStream](xref:botframework-streaming.ContentStream).\n         *\n         * @returns This [ContentStream's](xref:botframework-streaming.ContentStream) [SubscribableStream](xref:botframework-streaming.SubscribableStream).\n         */\n\n        ContentStream.prototype.getStream = function () {\n          if (!this.stream) {\n            this.stream = this.assembler.getPayloadStream();\n          }\n\n          return this.stream;\n        };\n        /**\n         * Closes the assembler.\n         */\n\n\n        ContentStream.prototype.cancel = function () {\n          this.assembler.close();\n        };\n        /**\n         * Gets the [SubscribableStream](xref:botframework-streaming.SubscribableStream) content as a string.\n         *\n         * @returns A string Promise with [SubscribableStream](xref:botframework-streaming.SubscribableStream) content.\n         */\n\n\n        ContentStream.prototype.readAsString = function () {\n          return __awaiter(this, void 0, void 0, function () {\n            var bufferArray;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  return [4\n                  /*yield*/\n                  , this.readAll()];\n\n                case 1:\n                  bufferArray = _a.sent().bufferArray;\n                  return [2\n                  /*return*/\n                  , (bufferArray || []).map(function (result) {\n                    return result.toString('utf8');\n                  }).join('')];\n              }\n            });\n          });\n        };\n        /**\n         * Gets the [SubscribableStream](xref:botframework-streaming.SubscribableStream) content as a typed JSON object.\n         *\n         * @returns A typed object Promise with `SubscribableStream` content.\n         */\n\n\n        ContentStream.prototype.readAsJson = function () {\n          return __awaiter(this, void 0, void 0, function () {\n            var stringToParse;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  return [4\n                  /*yield*/\n                  , this.readAsString()];\n\n                case 1:\n                  stringToParse = _a.sent();\n                  return [2\n                  /*return*/\n                  , JSON.parse(stringToParse)];\n              }\n            });\n          });\n        }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n        ContentStream.prototype.readAll = function () {\n          return __awaiter(this, void 0, void 0, function () {\n            var allData, count, stream, chunk, readToEnd;\n\n            var _this = this;\n\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  allData = [];\n                  count = 0;\n                  stream = this.getStream(); // populate the array with any existing buffers\n\n                  while (count < stream.length) {\n                    chunk = stream.read(stream.length);\n                    allData.push(chunk);\n                    count += chunk.length;\n                  }\n\n                  if (!(count < this.length)) return [3\n                  /*break*/\n                  , 2];\n                  readToEnd = new Promise(function (resolve) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var callback = function (cs) {\n                      return function (chunk) {\n                        allData.push(chunk);\n                        count += chunk.length;\n\n                        if (count === cs.length) {\n                          resolve(true);\n                        }\n                      };\n                    };\n\n                    stream.subscribe(callback(_this));\n                  });\n                  return [4\n                  /*yield*/\n                  , readToEnd];\n\n                case 1:\n                  _a.sent();\n\n                  _a.label = 2;\n\n                case 2:\n                  return [2\n                  /*return*/\n                  , {\n                    bufferArray: allData,\n                    size: count\n                  }];\n              }\n            });\n          });\n        };\n\n        return ContentStream;\n      }();\n\n      exports.ContentStream = ContentStream;\n    }, {}],\n    3: [function (require, module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.CancelDisassembler = void 0;\n      /**\n       * Streaming cancel disassembler.\n       */\n\n      var CancelDisassembler =\n      /** @class */\n      function () {\n        /**\n         * Initializes a new instance of the [CancelDisassembler](xref:botframework-streaming.CancelDisassembler) class.\n         *\n         * @param sender The [PayloadSender](xref:botframework-streaming.PayloadSender) that this Cancel request will be sent by.\n         * @param id The ID of the Stream to cancel.\n         * @param payloadType The type of the Stream that is being cancelled.\n         */\n        function CancelDisassembler(sender, id, payloadType) {\n          this.sender = sender;\n          this.id = id;\n          this.payloadType = payloadType;\n        }\n        /**\n         * Initiates the process of disassembling the request and signals the [PayloadSender](xref:botframework-streaming.PayloadSender) to begin sending.\n         */\n\n\n        CancelDisassembler.prototype.disassemble = function () {\n          var header = {\n            payloadType: this.payloadType,\n            payloadLength: 0,\n            id: this.id,\n            end: true\n          };\n          this.sender.sendPayload(header);\n        };\n\n        return CancelDisassembler;\n      }();\n\n      exports.CancelDisassembler = CancelDisassembler;\n    }, {}],\n    4: [function (require, module, exports) {\n      \"use strict\";\n\n      var __extends = this && this.__extends || function () {\n        var extendStatics = function (d, b) {\n          extendStatics = Object.setPrototypeOf || {\n            __proto__: []\n          } instanceof Array && function (d, b) {\n            d.__proto__ = b;\n          } || function (d, b) {\n            for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n          };\n\n          return extendStatics(d, b);\n        };\n\n        return function (d, b) {\n          extendStatics(d, b);\n\n          function __() {\n            this.constructor = d;\n          }\n\n          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n      }();\n\n      var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n        function adopt(value) {\n          return value instanceof P ? value : new P(function (resolve) {\n            resolve(value);\n          });\n        }\n\n        return new (P || (P = Promise))(function (resolve, reject) {\n          function fulfilled(value) {\n            try {\n              step(generator.next(value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n\n          function rejected(value) {\n            try {\n              step(generator[\"throw\"](value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n\n          function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n          }\n\n          step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n      };\n\n      var __generator = this && this.__generator || function (thisArg, body) {\n        var _ = {\n          label: 0,\n          sent: function () {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n          },\n          trys: [],\n          ops: []\n        },\n            f,\n            y,\n            t,\n            g;\n        return g = {\n          next: verb(0),\n          \"throw\": verb(1),\n          \"return\": verb(2)\n        }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n          return this;\n        }), g;\n\n        function verb(n) {\n          return function (v) {\n            return step([n, v]);\n          };\n        }\n\n        function step(op) {\n          if (f) throw new TypeError(\"Generator is already executing.\");\n\n          while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n\n            switch (op[0]) {\n              case 0:\n              case 1:\n                t = op;\n                break;\n\n              case 4:\n                _.label++;\n                return {\n                  value: op[1],\n                  done: false\n                };\n\n              case 5:\n                _.label++;\n                y = op[1];\n                op = [0];\n                continue;\n\n              case 7:\n                op = _.ops.pop();\n\n                _.trys.pop();\n\n                continue;\n\n              default:\n                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                  _ = 0;\n                  continue;\n                }\n\n                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                  _.label = op[1];\n                  break;\n                }\n\n                if (op[0] === 6 && _.label < t[1]) {\n                  _.label = t[1];\n                  t = op;\n                  break;\n                }\n\n                if (t && _.label < t[2]) {\n                  _.label = t[2];\n\n                  _.ops.push(op);\n\n                  break;\n                }\n\n                if (t[2]) _.ops.pop();\n\n                _.trys.pop();\n\n                continue;\n            }\n\n            op = body.call(thisArg, _);\n          } catch (e) {\n            op = [6, e];\n            y = 0;\n          } finally {\n            f = t = 0;\n          }\n\n          if (op[0] & 5) throw op[1];\n          return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n          };\n        }\n      };\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.HttpContentStreamDisassembler = void 0;\n\n      var payloadDisassembler_1 = require(\"./payloadDisassembler\");\n\n      var payloads_1 = require(\"../payloads\");\n      /**\n       * Disassembler for Http content stream\n       */\n\n\n      var HttpContentStreamDisassembler =\n      /** @class */\n      function (_super) {\n        __extends(HttpContentStreamDisassembler, _super);\n        /**\n         * Initializes a new instance of the [HttpContentStreamDisassembler](xref:botframework-streaming.HttpContentStreamDisassembler) class.\n         *\n         * @param sender The [PayloadSender](xref:botframework-streaming.PayloadSender) to send the disassembled data to.\n         * @param contentStream The [HttpContentStream](xref:botframework-streaming.HttpContentStream) to be disassembled.\n         */\n\n\n        function HttpContentStreamDisassembler(sender, contentStream) {\n          var _this = _super.call(this, sender, contentStream.id) || this;\n\n          _this.payloadType = payloads_1.PayloadTypes.stream;\n          _this.contentStream = contentStream;\n          return _this;\n        }\n        /**\n         * Gets the stream this disassembler is operating on.\n         *\n         * @returns An [IStreamWrapper](xref:botframework-streaming.IStreamWrapper) with a Subscribable Strea.\n         */\n\n\n        HttpContentStreamDisassembler.prototype.getStream = function () {\n          return __awaiter(this, void 0, void 0, function () {\n            var stream;\n            return __generator(this, function (_a) {\n              stream = this.contentStream.content.getStream();\n              return [2\n              /*return*/\n              , {\n                stream: stream,\n                streamLength: stream.length\n              }];\n            });\n          });\n        };\n\n        return HttpContentStreamDisassembler;\n      }(payloadDisassembler_1.PayloadDisassembler);\n\n      exports.HttpContentStreamDisassembler = HttpContentStreamDisassembler;\n    }, {\n      \"../payloads\": 16,\n      \"./payloadDisassembler\": 5\n    }],\n    5: [function (require, module, exports) {\n      \"use strict\";\n\n      var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n        function adopt(value) {\n          return value instanceof P ? value : new P(function (resolve) {\n            resolve(value);\n          });\n        }\n\n        return new (P || (P = Promise))(function (resolve, reject) {\n          function fulfilled(value) {\n            try {\n              step(generator.next(value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n\n          function rejected(value) {\n            try {\n              step(generator[\"throw\"](value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n\n          function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n          }\n\n          step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n      };\n\n      var __generator = this && this.__generator || function (thisArg, body) {\n        var _ = {\n          label: 0,\n          sent: function () {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n          },\n          trys: [],\n          ops: []\n        },\n            f,\n            y,\n            t,\n            g;\n        return g = {\n          next: verb(0),\n          \"throw\": verb(1),\n          \"return\": verb(2)\n        }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n          return this;\n        }), g;\n\n        function verb(n) {\n          return function (v) {\n            return step([n, v]);\n          };\n        }\n\n        function step(op) {\n          if (f) throw new TypeError(\"Generator is already executing.\");\n\n          while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n\n            switch (op[0]) {\n              case 0:\n              case 1:\n                t = op;\n                break;\n\n              case 4:\n                _.label++;\n                return {\n                  value: op[1],\n                  done: false\n                };\n\n              case 5:\n                _.label++;\n                y = op[1];\n                op = [0];\n                continue;\n\n              case 7:\n                op = _.ops.pop();\n\n                _.trys.pop();\n\n                continue;\n\n              default:\n                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                  _ = 0;\n                  continue;\n                }\n\n                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                  _.label = op[1];\n                  break;\n                }\n\n                if (op[0] === 6 && _.label < t[1]) {\n                  _.label = t[1];\n                  t = op;\n                  break;\n                }\n\n                if (t && _.label < t[2]) {\n                  _.label = t[2];\n\n                  _.ops.push(op);\n\n                  break;\n                }\n\n                if (t[2]) _.ops.pop();\n\n                _.trys.pop();\n\n                continue;\n            }\n\n            op = body.call(thisArg, _);\n          } catch (e) {\n            op = [6, e];\n            y = 0;\n          } finally {\n            f = t = 0;\n          }\n\n          if (op[0] & 5) throw op[1];\n          return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n          };\n        }\n      };\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PayloadDisassembler = void 0;\n\n      var subscribableStream_1 = require(\"../subscribableStream\");\n      /**\n       * Base class streaming payload disassembling.\n       */\n\n\n      var PayloadDisassembler =\n      /** @class */\n      function () {\n        /**\n         * Initializes a new instance of the [PayloadDisassembler](xref:botframework-streaming.PayloadDisassembler) class.\n         *\n         * @param sender The [PayloadSender](xref:botframework-streaming.PayloadSender) used to send the disassembled payload chunks.\n         * @param id The ID of this disassembler.\n         */\n        function PayloadDisassembler(sender, id) {\n          this.sender = sender;\n          this.id = id;\n        }\n        /**\n         * Serializes the item into the [IStreamWrapper](xref:botframework-streaming.IStreamWrapper) that exposes the stream and length of the result.\n         *\n         * @param item The item to be serialized.\n         * @returns The stream containing the serialized item and the length of the stream.\n         */\n\n\n        PayloadDisassembler.serialize = function (item) {\n          var stream = new subscribableStream_1.SubscribableStream();\n          stream.write(JSON.stringify(item));\n          stream.end();\n          return {\n            stream: stream,\n            streamLength: stream.length\n          };\n        };\n        /**\n         * Begins the process of disassembling a payload and sending the resulting chunks to the [PayloadSender](xref:botframework-streaming.PayloadSender) to dispatch over the transport.\n         *\n         * @returns A completed Promise after the disassembled payload has been sent.\n         */\n\n\n        PayloadDisassembler.prototype.disassemble = function () {\n          return __awaiter(this, void 0, void 0, function () {\n            var _a, stream, streamLength;\n\n            return __generator(this, function (_b) {\n              switch (_b.label) {\n                case 0:\n                  return [4\n                  /*yield*/\n                  , this.getStream()];\n\n                case 1:\n                  _a = _b.sent(), stream = _a.stream, streamLength = _a.streamLength;\n                  this.stream = stream;\n                  this.streamLength = streamLength;\n                  return [2\n                  /*return*/\n                  , this.send()];\n              }\n            });\n          });\n        };\n        /**\n         * Begins the process of disassembling a payload and signals the [PayloadSender](xref:botframework-streaming.PayloadSender).\n         */\n\n\n        PayloadDisassembler.prototype.send = function () {\n          return __awaiter(this, void 0, void 0, function () {\n            var header;\n            return __generator(this, function (_a) {\n              header = {\n                payloadType: this.payloadType,\n                payloadLength: this.streamLength,\n                id: this.id,\n                end: true\n              };\n              this.sender.sendPayload(header, this.stream);\n              return [2\n              /*return*/\n              ];\n            });\n          });\n        };\n\n        return PayloadDisassembler;\n      }();\n\n      exports.PayloadDisassembler = PayloadDisassembler;\n    }, {\n      \"../subscribableStream\": 27\n    }],\n    6: [function (require, module, exports) {\n      \"use strict\";\n      /**\n       * @module botframework-streaming\n       */\n\n      /**\n       * Copyright (c) Microsoft Corporation. All rights reserved.\n       * Licensed under the MIT License.\n       */\n\n      var __extends = this && this.__extends || function () {\n        var extendStatics = function (d, b) {\n          extendStatics = Object.setPrototypeOf || {\n            __proto__: []\n          } instanceof Array && function (d, b) {\n            d.__proto__ = b;\n          } || function (d, b) {\n            for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n          };\n\n          return extendStatics(d, b);\n        };\n\n        return function (d, b) {\n          extendStatics(d, b);\n\n          function __() {\n            this.constructor = d;\n          }\n\n          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n      }();\n\n      var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n        function adopt(value) {\n          return value instanceof P ? value : new P(function (resolve) {\n            resolve(value);\n          });\n        }\n\n        return new (P || (P = Promise))(function (resolve, reject) {\n          function fulfilled(value) {\n            try {\n              step(generator.next(value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n\n          function rejected(value) {\n            try {\n              step(generator[\"throw\"](value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n\n          function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n          }\n\n          step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n      };\n\n      var __generator = this && this.__generator || function (thisArg, body) {\n        var _ = {\n          label: 0,\n          sent: function () {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n          },\n          trys: [],\n          ops: []\n        },\n            f,\n            y,\n            t,\n            g;\n        return g = {\n          next: verb(0),\n          \"throw\": verb(1),\n          \"return\": verb(2)\n        }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n          return this;\n        }), g;\n\n        function verb(n) {\n          return function (v) {\n            return step([n, v]);\n          };\n        }\n\n        function step(op) {\n          if (f) throw new TypeError(\"Generator is already executing.\");\n\n          while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n\n            switch (op[0]) {\n              case 0:\n              case 1:\n                t = op;\n                break;\n\n              case 4:\n                _.label++;\n                return {\n                  value: op[1],\n                  done: false\n                };\n\n              case 5:\n                _.label++;\n                y = op[1];\n                op = [0];\n                continue;\n\n              case 7:\n                op = _.ops.pop();\n\n                _.trys.pop();\n\n                continue;\n\n              default:\n                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                  _ = 0;\n                  continue;\n                }\n\n                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                  _.label = op[1];\n                  break;\n                }\n\n                if (op[0] === 6 && _.label < t[1]) {\n                  _.label = t[1];\n                  t = op;\n                  break;\n                }\n\n                if (t && _.label < t[2]) {\n                  _.label = t[2];\n\n                  _.ops.push(op);\n\n                  break;\n                }\n\n                if (t[2]) _.ops.pop();\n\n                _.trys.pop();\n\n                continue;\n            }\n\n            op = body.call(thisArg, _);\n          } catch (e) {\n            op = [6, e];\n            y = 0;\n          } finally {\n            f = t = 0;\n          }\n\n          if (op[0] & 5) throw op[1];\n          return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n          };\n        }\n      };\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.RequestDisassembler = void 0;\n\n      var payloadTypes_1 = require(\"../payloads/payloadTypes\");\n\n      var payloadDisassembler_1 = require(\"./payloadDisassembler\");\n      /**\n       * Streaming request disassembler.\n       */\n\n\n      var RequestDisassembler =\n      /** @class */\n      function (_super) {\n        __extends(RequestDisassembler, _super);\n        /**\n         * Initializes a new instance of the [RequestDisassembler](xref:botframework-streaming.RequestDisassembler) class.\n         *\n         * @param sender The [PayloadSender](xref:botframework-streaming.PayloadSender) to send the disassembled data to.\n         * @param id The ID of this disassembler.\n         * @param request The request to be disassembled.\n         */\n\n\n        function RequestDisassembler(sender, id, request) {\n          var _this = _super.call(this, sender, id) || this;\n\n          _this.request = request;\n          _this.payloadType = payloadTypes_1.PayloadTypes.request;\n          return _this;\n        }\n        /**\n         * Gets the stream this disassembler is operating on.\n         *\n         * @returns An [IStreamWrapper](xref:botframework-streaming.IStreamWrapper) with a Subscribable Stream.\n         */\n\n\n        RequestDisassembler.prototype.getStream = function () {\n          var _a, _b, _c, _d;\n\n          return __awaiter(this, void 0, void 0, function () {\n            var payload;\n            return __generator(this, function (_e) {\n              payload = {\n                verb: (_a = this.request) === null || _a === void 0 ? void 0 : _a.verb,\n                path: (_b = this.request) === null || _b === void 0 ? void 0 : _b.path,\n                streams: []\n              };\n              (_d = (_c = this.request) === null || _c === void 0 ? void 0 : _c.streams) === null || _d === void 0 ? void 0 : _d.forEach(function (stream) {\n                payload.streams.push(stream.description);\n              });\n              return [2\n              /*return*/\n              , payloadDisassembler_1.PayloadDisassembler.serialize(payload)];\n            });\n          });\n        };\n\n        return RequestDisassembler;\n      }(payloadDisassembler_1.PayloadDisassembler);\n\n      exports.RequestDisassembler = RequestDisassembler;\n    }, {\n      \"../payloads/payloadTypes\": 19,\n      \"./payloadDisassembler\": 5\n    }],\n    7: [function (require, module, exports) {\n      \"use strict\";\n\n      var __extends = this && this.__extends || function () {\n        var extendStatics = function (d, b) {\n          extendStatics = Object.setPrototypeOf || {\n            __proto__: []\n          } instanceof Array && function (d, b) {\n            d.__proto__ = b;\n          } || function (d, b) {\n            for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n          };\n\n          return extendStatics(d, b);\n        };\n\n        return function (d, b) {\n          extendStatics(d, b);\n\n          function __() {\n            this.constructor = d;\n          }\n\n          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n      }();\n\n      var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n        function adopt(value) {\n          return value instanceof P ? value : new P(function (resolve) {\n            resolve(value);\n          });\n        }\n\n        return new (P || (P = Promise))(function (resolve, reject) {\n          function fulfilled(value) {\n            try {\n              step(generator.next(value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n\n          function rejected(value) {\n            try {\n              step(generator[\"throw\"](value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n\n          function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n          }\n\n          step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n      };\n\n      var __generator = this && this.__generator || function (thisArg, body) {\n        var _ = {\n          label: 0,\n          sent: function () {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n          },\n          trys: [],\n          ops: []\n        },\n            f,\n            y,\n            t,\n            g;\n        return g = {\n          next: verb(0),\n          \"throw\": verb(1),\n          \"return\": verb(2)\n        }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n          return this;\n        }), g;\n\n        function verb(n) {\n          return function (v) {\n            return step([n, v]);\n          };\n        }\n\n        function step(op) {\n          if (f) throw new TypeError(\"Generator is already executing.\");\n\n          while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n\n            switch (op[0]) {\n              case 0:\n              case 1:\n                t = op;\n                break;\n\n              case 4:\n                _.label++;\n                return {\n                  value: op[1],\n                  done: false\n                };\n\n              case 5:\n                _.label++;\n                y = op[1];\n                op = [0];\n                continue;\n\n              case 7:\n                op = _.ops.pop();\n\n                _.trys.pop();\n\n                continue;\n\n              default:\n                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                  _ = 0;\n                  continue;\n                }\n\n                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                  _.label = op[1];\n                  break;\n                }\n\n                if (op[0] === 6 && _.label < t[1]) {\n                  _.label = t[1];\n                  t = op;\n                  break;\n                }\n\n                if (t && _.label < t[2]) {\n                  _.label = t[2];\n\n                  _.ops.push(op);\n\n                  break;\n                }\n\n                if (t[2]) _.ops.pop();\n\n                _.trys.pop();\n\n                continue;\n            }\n\n            op = body.call(thisArg, _);\n          } catch (e) {\n            op = [6, e];\n            y = 0;\n          } finally {\n            f = t = 0;\n          }\n\n          if (op[0] & 5) throw op[1];\n          return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n          };\n        }\n      };\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.ResponseDisassembler = void 0;\n      /**\n       * @module botframework-streaming\n       */\n\n      /**\n       * Copyright (c) Microsoft Corporation. All rights reserved.\n       * Licensed under the MIT License.\n       */\n\n      var payloadTypes_1 = require(\"../payloads/payloadTypes\");\n\n      var payloadDisassembler_1 = require(\"./payloadDisassembler\");\n      /**\n       * Streaming response disassembler.\n       */\n\n\n      var ResponseDisassembler =\n      /** @class */\n      function (_super) {\n        __extends(ResponseDisassembler, _super);\n        /**\n         * Initializes a new instance of the [ResponseDisassembler](xref:botframework-streaming.ResponseDisassembler) class.\n         *\n         * @param sender The [PayloadSender](xref:botframework-streaming.PayloadSender) to send the disassembled data to.\n         * @param id The ID of this disassembler.\n         * @param response The response to be disassembled.\n         */\n\n\n        function ResponseDisassembler(sender, id, response) {\n          var _this = _super.call(this, sender, id) || this;\n\n          _this.payloadType = payloadTypes_1.PayloadTypes.response;\n          _this.response = response;\n          return _this;\n        }\n        /**\n         * Gets the stream this disassembler is operating on.\n         *\n         * @returns An [IStreamWrapper](xref:botframework-streaming.IStreamWrapper) with a Subscribable Stream.\n         */\n\n\n        ResponseDisassembler.prototype.getStream = function () {\n          return __awaiter(this, void 0, void 0, function () {\n            var payload;\n            return __generator(this, function (_a) {\n              payload = {\n                statusCode: this.response.statusCode,\n                streams: []\n              };\n\n              if (this.response.streams) {\n                this.response.streams.forEach(function (stream) {\n                  payload.streams.push(stream.description);\n                });\n              }\n\n              return [2\n              /*return*/\n              , payloadDisassembler_1.PayloadDisassembler.serialize(payload)];\n            });\n          });\n        };\n\n        return ResponseDisassembler;\n      }(payloadDisassembler_1.PayloadDisassembler);\n\n      exports.ResponseDisassembler = ResponseDisassembler;\n    }, {\n      \"../payloads/payloadTypes\": 19,\n      \"./payloadDisassembler\": 5\n    }],\n    8: [function (require, module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.HttpContent = exports.HttpContentStream = void 0;\n      /**\n       * @module botframework-streaming\n       */\n\n      /**\n       * Copyright (c) Microsoft Corporation. All rights reserved.\n       * Licensed under the MIT License.\n       */\n\n      var protocol_base_1 = require(\"./utilities/protocol-base\");\n      /**\n       * An attachment contained within a StreamingRequest's stream collection, which itself contains any form of media item.\n       */\n\n\n      var HttpContentStream =\n      /** @class */\n      function () {\n        /**\n         * Initializes a new instance of the [HttpContentStream](xref:botframework-streaming.HttpContentStream) class.\n         *\n         * @param content The [HttpContent](xref:botframework-streaming.HttpContent) to assign to the [HttpContentStream](xref:botframework-streaming.HttpContentStream).\n         */\n        function HttpContentStream(content) {\n          var _a, _b, _c, _d, _e, _f;\n\n          this.content = content;\n          this.id = protocol_base_1.generateGuid();\n          this.description = {\n            id: this.id,\n            type: (_c = (_b = (_a = this.content) === null || _a === void 0 ? void 0 : _a.headers) === null || _b === void 0 ? void 0 : _b.type) !== null && _c !== void 0 ? _c : 'unknown',\n            length: (_f = (_e = (_d = this.content) === null || _d === void 0 ? void 0 : _d.headers) === null || _e === void 0 ? void 0 : _e.contentLength) !== null && _f !== void 0 ? _f : 0\n          };\n        }\n\n        return HttpContentStream;\n      }();\n\n      exports.HttpContentStream = HttpContentStream;\n      /**\n       * The HttpContent class that contains a [SubscribableStream](xref:botframework-streaming.SubscribableStream).\n       */\n\n      var HttpContent =\n      /** @class */\n      function () {\n        /**\n         * Initializes a new instance of the [HttpContent](xref:botframework-streaming.HttpContent) class.\n         *\n         * @param headers The Streaming Http content header definition.\n         * @param stream The stream of buffered data.\n         */\n        function HttpContent(headers, stream) {\n          this.headers = headers;\n          this.stream = stream;\n        }\n        /**\n         * Gets the data contained within this [HttpContent](xref:botframework-streaming.HttpContent).\n         *\n         * @returns This [HttpContent's](xref:botframework-streaming.HttpContent) [SubscribableStream](xref:botframework-streaming.SubscribableStream) member.\n         */\n\n\n        HttpContent.prototype.getStream = function () {\n          return this.stream;\n        };\n\n        return HttpContent;\n      }();\n\n      exports.HttpContent = HttpContent;\n    }, {\n      \"./utilities/protocol-base\": 28\n    }],\n    9: [function (require, module, exports) {\n      \"use strict\";\n      /**\n       * @module botframework-streaming\n       */\n\n      /**\n       * Copyright (c) Microsoft Corporation. All rights reserved.\n       * Licensed under the MIT License.\n       */\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.WebSocketClient = exports.BrowserWebSocket = exports.SubscribableStream = exports.StreamingResponse = exports.StreamingRequest = exports.RequestHandler = exports.HttpContent = exports.ContentStream = void 0;\n\n      var contentStream_1 = require(\"./contentStream\");\n\n      Object.defineProperty(exports, \"ContentStream\", {\n        enumerable: true,\n        get: function () {\n          return contentStream_1.ContentStream;\n        }\n      });\n\n      var httpContentStream_1 = require(\"./httpContentStream\");\n\n      Object.defineProperty(exports, \"HttpContent\", {\n        enumerable: true,\n        get: function () {\n          return httpContentStream_1.HttpContent;\n        }\n      });\n\n      var requestHandler_1 = require(\"./requestHandler\");\n\n      Object.defineProperty(exports, \"RequestHandler\", {\n        enumerable: true,\n        get: function () {\n          return requestHandler_1.RequestHandler;\n        }\n      });\n\n      var streamingRequest_1 = require(\"./streamingRequest\");\n\n      Object.defineProperty(exports, \"StreamingRequest\", {\n        enumerable: true,\n        get: function () {\n          return streamingRequest_1.StreamingRequest;\n        }\n      });\n\n      var streamingResponse_1 = require(\"./streamingResponse\");\n\n      Object.defineProperty(exports, \"StreamingResponse\", {\n        enumerable: true,\n        get: function () {\n          return streamingResponse_1.StreamingResponse;\n        }\n      });\n\n      var subscribableStream_1 = require(\"./subscribableStream\");\n\n      Object.defineProperty(exports, \"SubscribableStream\", {\n        enumerable: true,\n        get: function () {\n          return subscribableStream_1.SubscribableStream;\n        }\n      });\n\n      var index_browser_1 = require(\"./webSocket/index-browser\");\n\n      Object.defineProperty(exports, \"BrowserWebSocket\", {\n        enumerable: true,\n        get: function () {\n          return index_browser_1.BrowserWebSocket;\n        }\n      });\n      Object.defineProperty(exports, \"WebSocketClient\", {\n        enumerable: true,\n        get: function () {\n          return index_browser_1.WebSocketClient;\n        }\n      });\n    }, {\n      \"./contentStream\": 2,\n      \"./httpContentStream\": 8,\n      \"./requestHandler\": 24,\n      \"./streamingRequest\": 25,\n      \"./streamingResponse\": 26,\n      \"./subscribableStream\": 27,\n      \"./webSocket/index-browser\": 31\n    }],\n    10: [function (require, module, exports) {\n      \"use strict\";\n      /**\n       * @module botframework-streaming\n       */\n\n      /**\n       * Copyright (c) Microsoft Corporation. All rights reserved.\n       * Licensed under the MIT License.\n       */\n\n      var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n        if (k2 === undefined) k2 = k;\n        Object.defineProperty(o, k2, {\n          enumerable: true,\n          get: function () {\n            return m[k];\n          }\n        });\n      } : function (o, m, k, k2) {\n        if (k2 === undefined) k2 = k;\n        o[k2] = m[k];\n      });\n\n      var __exportStar = this && this.__exportStar || function (m, exports) {\n        for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n      };\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      __exportStar(require(\"./payloadReceiver\"), exports);\n\n      __exportStar(require(\"./payloadSender\"), exports);\n\n      __exportStar(require(\"./transportDisconnectedEvent\"), exports);\n\n      __exportStar(require(\"./transportDisconnectedEventHandler\"), exports);\n    }, {\n      \"./payloadReceiver\": 11,\n      \"./payloadSender\": 12,\n      \"./transportDisconnectedEvent\": 13,\n      \"./transportDisconnectedEventHandler\": 14\n    }],\n    11: [function (require, module, exports) {\n      \"use strict\";\n\n      var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n        function adopt(value) {\n          return value instanceof P ? value : new P(function (resolve) {\n            resolve(value);\n          });\n        }\n\n        return new (P || (P = Promise))(function (resolve, reject) {\n          function fulfilled(value) {\n            try {\n              step(generator.next(value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n\n          function rejected(value) {\n            try {\n              step(generator[\"throw\"](value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n\n          function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n          }\n\n          step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n      };\n\n      var __generator = this && this.__generator || function (thisArg, body) {\n        var _ = {\n          label: 0,\n          sent: function () {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n          },\n          trys: [],\n          ops: []\n        },\n            f,\n            y,\n            t,\n            g;\n        return g = {\n          next: verb(0),\n          \"throw\": verb(1),\n          \"return\": verb(2)\n        }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n          return this;\n        }), g;\n\n        function verb(n) {\n          return function (v) {\n            return step([n, v]);\n          };\n        }\n\n        function step(op) {\n          if (f) throw new TypeError(\"Generator is already executing.\");\n\n          while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n\n            switch (op[0]) {\n              case 0:\n              case 1:\n                t = op;\n                break;\n\n              case 4:\n                _.label++;\n                return {\n                  value: op[1],\n                  done: false\n                };\n\n              case 5:\n                _.label++;\n                y = op[1];\n                op = [0];\n                continue;\n\n              case 7:\n                op = _.ops.pop();\n\n                _.trys.pop();\n\n                continue;\n\n              default:\n                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                  _ = 0;\n                  continue;\n                }\n\n                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                  _.label = op[1];\n                  break;\n                }\n\n                if (op[0] === 6 && _.label < t[1]) {\n                  _.label = t[1];\n                  t = op;\n                  break;\n                }\n\n                if (t && _.label < t[2]) {\n                  _.label = t[2];\n\n                  _.ops.push(op);\n\n                  break;\n                }\n\n                if (t[2]) _.ops.pop();\n\n                _.trys.pop();\n\n                continue;\n            }\n\n            op = body.call(thisArg, _);\n          } catch (e) {\n            op = [6, e];\n            y = 0;\n          } finally {\n            f = t = 0;\n          }\n\n          if (op[0] & 5) throw op[1];\n          return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n          };\n        }\n      };\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PayloadReceiver = void 0;\n\n      var payloadTypes_1 = require(\"../payloads/payloadTypes\");\n\n      var headerSerializer_1 = require(\"../payloads/headerSerializer\");\n\n      var payloadConstants_1 = require(\"../payloads/payloadConstants\");\n\n      var transportDisconnectedEvent_1 = require(\"./transportDisconnectedEvent\");\n      /**\n       * Payload receiver for streaming.\n       */\n\n\n      var PayloadReceiver =\n      /** @class */\n      function () {\n        function PayloadReceiver() {}\n\n        Object.defineProperty(PayloadReceiver.prototype, \"isConnected\", {\n          /**\n           * Get current connected state\n           *\n           * @returns true if connected to a transport sender.\n           */\n          get: function () {\n            return this._receiver != null;\n          },\n          enumerable: false,\n          configurable: true\n        });\n        /**\n         * Connects to a transport receiver\n         *\n         * @param receiver The [ITransportReceiver](xref:botframework-streaming.ITransportReceiver) object to pull incoming data from.\n         * @returns a promise that resolves when the receiver is complete\n         */\n\n        PayloadReceiver.prototype.connect = function (receiver) {\n          this._receiver = receiver;\n          return this.receivePackets();\n        };\n        /**\n         * Allows subscribing to this receiver in order to be notified when new data comes in.\n         *\n         * @param getStream Callback when a new stream has been received.\n         * @param receiveAction Callback when a new message has been received.\n         */\n\n\n        PayloadReceiver.prototype.subscribe = function (getStream, receiveAction) {\n          this._getStream = getStream;\n          this._receiveAction = receiveAction;\n        };\n        /**\n         * Force this receiver to disconnect.\n         *\n         * @param event Event arguments to include when broadcasting disconnection event.\n         */\n\n\n        PayloadReceiver.prototype.disconnect = function (event) {\n          var _a, _b;\n\n          if (event === void 0) {\n            event = transportDisconnectedEvent_1.TransportDisconnectedEvent.Empty;\n          }\n\n          if (!this.isConnected) {\n            return;\n          }\n\n          try {\n            this._receiver.close();\n\n            (_a = this.disconnected) === null || _a === void 0 ? void 0 : _a.call(this, this, event);\n          } catch (err) {\n            (_b = this.disconnected) === null || _b === void 0 ? void 0 : _b.call(this, this, new transportDisconnectedEvent_1.TransportDisconnectedEvent(err.message));\n          } finally {\n            this._receiver = null;\n          }\n        };\n\n        PayloadReceiver.prototype.receivePackets = function () {\n          return __awaiter(this, void 0, void 0, function () {\n            var readSoFar, _a, header, isStream, bytesActuallyRead, contentStream, count, _b, err_1;\n\n            return __generator(this, function (_c) {\n              switch (_c.label) {\n                case 0:\n                  if (!this.isConnected) return [3\n                  /*break*/\n                  , 11];\n                  _c.label = 1;\n\n                case 1:\n                  _c.trys.push([1, 9,, 10]);\n\n                  readSoFar = 0;\n                  _c.label = 2;\n\n                case 2:\n                  if (!(readSoFar < payloadConstants_1.PayloadConstants.MaxHeaderLength)) return [3\n                  /*break*/\n                  , 4];\n                  _a = this;\n                  return [4\n                  /*yield*/\n                  , this._receiver.receive(payloadConstants_1.PayloadConstants.MaxHeaderLength - readSoFar)];\n\n                case 3:\n                  _a._receiveHeaderBuffer = _c.sent();\n\n                  if (this._receiveHeaderBuffer) {\n                    readSoFar += this._receiveHeaderBuffer.length;\n                  }\n\n                  return [3\n                  /*break*/\n                  , 2];\n\n                case 4:\n                  header = headerSerializer_1.HeaderSerializer.deserialize(this._receiveHeaderBuffer);\n                  isStream = header.payloadType === payloadTypes_1.PayloadTypes.stream;\n                  if (!(header.payloadLength > 0)) return [3\n                  /*break*/\n                  , 8];\n                  bytesActuallyRead = 0;\n                  contentStream = this._getStream(header);\n                  _c.label = 5;\n\n                case 5:\n                  if (!(bytesActuallyRead < header.payloadLength && bytesActuallyRead < payloadConstants_1.PayloadConstants.MaxPayloadLength)) return [3\n                  /*break*/\n                  , 7];\n                  count = Math.min(header.payloadLength - bytesActuallyRead, payloadConstants_1.PayloadConstants.MaxPayloadLength);\n                  _b = this;\n                  return [4\n                  /*yield*/\n                  , this._receiver.receive(count)];\n\n                case 6:\n                  _b._receivePayloadBuffer = _c.sent();\n                  bytesActuallyRead += this._receivePayloadBuffer.byteLength;\n                  contentStream.write(this._receivePayloadBuffer); // If this is a stream we want to keep handing it up as it comes in\n\n                  if (isStream) {\n                    this._receiveAction(header, contentStream, bytesActuallyRead);\n                  }\n\n                  return [3\n                  /*break*/\n                  , 5];\n\n                case 7:\n                  if (!isStream) {\n                    this._receiveAction(header, contentStream, bytesActuallyRead);\n                  }\n\n                  _c.label = 8;\n\n                case 8:\n                  return [3\n                  /*break*/\n                  , 10];\n\n                case 9:\n                  err_1 = _c.sent();\n                  this.disconnect(new transportDisconnectedEvent_1.TransportDisconnectedEvent(err_1.message));\n                  return [3\n                  /*break*/\n                  , 10];\n\n                case 10:\n                  return [3\n                  /*break*/\n                  , 0];\n\n                case 11:\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        };\n\n        return PayloadReceiver;\n      }();\n\n      exports.PayloadReceiver = PayloadReceiver;\n    }, {\n      \"../payloads/headerSerializer\": 15,\n      \"../payloads/payloadConstants\": 18,\n      \"../payloads/payloadTypes\": 19,\n      \"./transportDisconnectedEvent\": 13\n    }],\n    12: [function (require, module, exports) {\n      (function (Buffer) {\n        (function () {\n          \"use strict\";\n          /**\n           * @module botframework-streaming\n           */\n\n          /**\n           * Copyright (c) Microsoft Corporation. All rights reserved.\n           * Licensed under the MIT License.\n           */\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports.PayloadSender = void 0;\n\n          var headerSerializer_1 = require(\"../payloads/headerSerializer\");\n\n          var payloadConstants_1 = require(\"../payloads/payloadConstants\");\n\n          var transportDisconnectedEvent_1 = require(\"./transportDisconnectedEvent\");\n          /**\n           * Streaming payload sender.\n           */\n\n\n          var PayloadSender =\n          /** @class */\n          function () {\n            function PayloadSender() {}\n\n            Object.defineProperty(PayloadSender.prototype, \"isConnected\", {\n              /**\n               * Get current connected state\n               *\n               * @returns true if connected to a transport sender.\n               */\n              get: function () {\n                return this._sender != null;\n              },\n              enumerable: false,\n              configurable: true\n            });\n            /**\n             * Connects to the given transport sender.\n             *\n             * @param sender The transport sender to connect this payload sender to.\n             */\n\n            PayloadSender.prototype.connect = function (sender) {\n              this._sender = sender;\n            };\n            /**\n             * Sends a payload out over the connected transport sender.\n             *\n             * @param header The header to attach to the outgoing payload.\n             * @param payload The stream of buffered data to send.\n             * @param sentCallback The function to execute when the send has completed.\n             */\n\n\n            PayloadSender.prototype.sendPayload = function (header, payload, sentCallback) {\n              var packet = {\n                header: header,\n                payload: payload,\n                sentCallback: sentCallback\n              };\n              this.writePacket(packet);\n            };\n            /**\n             * Disconnects this payload sender.\n             *\n             * @param event The disconnected event arguments to include in the disconnected event broadcast.\n             */\n\n\n            PayloadSender.prototype.disconnect = function (event) {\n              var _a, _b;\n\n              if (event === void 0) {\n                event = transportDisconnectedEvent_1.TransportDisconnectedEvent.Empty;\n              }\n\n              if (!this.isConnected) {\n                return;\n              }\n\n              try {\n                this._sender.close();\n\n                (_a = this.disconnected) === null || _a === void 0 ? void 0 : _a.call(this, this, event);\n              } catch (err) {\n                (_b = this.disconnected) === null || _b === void 0 ? void 0 : _b.call(this, this, new transportDisconnectedEvent_1.TransportDisconnectedEvent(err.message));\n              } finally {\n                this._sender = null;\n              }\n            };\n\n            PayloadSender.prototype.writePacket = function (packet) {\n              try {\n                if (packet.header.payloadLength > 0 && packet.payload) {\n                  var leftOver = packet.header.payloadLength;\n\n                  while (leftOver > 0) {\n                    var count = leftOver <= payloadConstants_1.PayloadConstants.MaxPayloadLength ? leftOver : payloadConstants_1.PayloadConstants.MaxPayloadLength;\n                    var chunk = packet.payload.read(count);\n                    var header = packet.header;\n                    header.payloadLength = count;\n                    header.end = leftOver <= payloadConstants_1.PayloadConstants.MaxPayloadLength;\n                    var sendHeaderBuffer = Buffer.alloc(payloadConstants_1.PayloadConstants.MaxHeaderLength);\n                    headerSerializer_1.HeaderSerializer.serialize(header, sendHeaderBuffer);\n\n                    this._sender.send(sendHeaderBuffer);\n\n                    this._sender.send(chunk);\n\n                    leftOver -= chunk.length;\n                  }\n\n                  if (packet.sentCallback) {\n                    packet.sentCallback();\n                  }\n                }\n              } catch (err) {\n                this.disconnect(new transportDisconnectedEvent_1.TransportDisconnectedEvent(err.message));\n              }\n            };\n\n            return PayloadSender;\n          }();\n\n          exports.PayloadSender = PayloadSender;\n        }).call(this);\n      }).call(this, require(\"buffer\").Buffer);\n    }, {\n      \"../payloads/headerSerializer\": 15,\n      \"../payloads/payloadConstants\": 18,\n      \"./transportDisconnectedEvent\": 13,\n      \"buffer\": 50\n    }],\n    13: [function (require, module, exports) {\n      \"use strict\";\n      /**\n       * @module botframework-streaming\n       */\n\n      /**\n       * Copyright (c) Microsoft Corporation. All rights reserved.\n       * Licensed under the MIT License.\n       */\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.TransportDisconnectedEvent = void 0;\n      /**\n       * Event to be included when disconnection events are fired.\n       */\n\n      var TransportDisconnectedEvent =\n      /** @class */\n      function () {\n        /**\n         * Indicates a transport disconnected with the reason provided via the constructor.\n         *\n         * @remarks\n         * This class is used for communicating disconnection events between the\n         * PayloadReceiver and PayloadSender.\n         * @param reason The reason the disconnection event fired, in plain text.\n         */\n        function TransportDisconnectedEvent(reason) {\n          this.reason = reason;\n        }\n        /**\n         * A new and empty TransportDisconnectedEvent.\n         */\n\n\n        TransportDisconnectedEvent.Empty = new TransportDisconnectedEvent();\n        return TransportDisconnectedEvent;\n      }();\n\n      exports.TransportDisconnectedEvent = TransportDisconnectedEvent;\n    }, {}],\n    14: [function (require, module, exports) {\n      \"use strict\";\n      /**\n       * @module botframework-streaming\n       */\n\n      /**\n       * Copyright (c) Microsoft Corporation. All rights reserved.\n       * Licensed under the MIT License.\n       */\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n    }, {}],\n    15: [function (require, module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.HeaderSerializer = void 0;\n\n      var payloadConstants_1 = require(\"./payloadConstants\");\n      /**\n       * Streaming header serializer\n       */\n\n\n      var HeaderSerializer =\n      /** @class */\n      function () {\n        function HeaderSerializer() {}\n        /**\n         * Serializes the header into a buffer\n         *\n         * @param header The header to serialize.\n         * @param buffer The buffer into which to serialize the header.\n         */\n\n\n        HeaderSerializer.serialize = function (header, buffer) {\n          buffer.write(header.payloadType, this.TypeOffset, 1, this.Encoding);\n          buffer.write(this.Delimiter, this.TypeDelimiterOffset, 1, this.Encoding);\n          buffer.write(this.headerLengthPadder(header.payloadLength, this.LengthLength, '0'), this.LengthOffset, this.LengthLength, this.Encoding);\n          buffer.write(this.Delimiter, this.LengthDelimeterOffset, 1, this.Encoding);\n          buffer.write(header.id, this.IdOffset);\n          buffer.write(this.Delimiter, this.IdDelimeterOffset, 1, this.Encoding);\n          buffer.write(header.end ? this.End : this.NotEnd, this.EndOffset);\n          buffer.write(this.Terminator, this.TerminatorOffset);\n        };\n        /**\n         * Deserializes a buffer containing header information.\n         *\n         * @param buffer The buffer from which to obtain the data to deserialize.\n         * @returns The deserialized header from the buffer.\n         */\n\n\n        HeaderSerializer.deserialize = function (buffer) {\n          var jsonBuffer = buffer.toString(this.Encoding);\n          var headerArray = jsonBuffer.split(this.Delimiter);\n\n          if (headerArray.length !== 4) {\n            throw Error(\"Cannot parse header, header is malformed. Header: \" + jsonBuffer);\n          }\n\n          var payloadType = headerArray[0],\n              length = headerArray[1],\n              id = headerArray[2],\n              headerEnd = headerArray[3];\n          var end = headerEnd === '1\\n';\n          var payloadLength = Number(length);\n          var header = {\n            end: end,\n            payloadLength: payloadLength,\n            payloadType: payloadType,\n            id: id\n          };\n\n          if (!(header.payloadLength <= payloadConstants_1.PayloadConstants.MaxPayloadLength && header.payloadLength >= payloadConstants_1.PayloadConstants.MinLength)) {\n            throw Error(\"Header length of \" + header.payloadLength + \" is missing or malformed\");\n          }\n\n          if (header.payloadType.length !== this.TypeDelimiterOffset) {\n            throw Error(\"Header type '\" + header.payloadType.length + \"' is missing or malformed.\");\n          }\n\n          if (!header.id || !header.id.match(/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i) || header.id.length !== this.IdLength) {\n            throw Error(\"Header ID '\" + header.id + \"' is missing or malformed.\");\n          }\n\n          if (!(headerEnd === '0\\n' || headerEnd === '1\\n')) {\n            throw Error(\"Header End is missing or not a valid value. Header end: '\" + headerEnd + \"'\");\n          }\n\n          return header;\n        };\n        /**\n         * Creates a padded string based on a length and character to be padded to.\n         *\n         * @param lengthValue The value to be assingned on the result.\n         * @param totalLength The length of the padded string result.\n         * @param padChar The character value to use as filling.\n         * @returns The padded string.\n         */\n\n\n        HeaderSerializer.headerLengthPadder = function (lengthValue, totalLength, padChar) {\n          var result = Array(totalLength + 1).join(padChar);\n          var lengthString = lengthValue.toString();\n          return (result + lengthString).slice(lengthString.length);\n        };\n\n        HeaderSerializer.Delimiter = '.';\n        HeaderSerializer.Terminator = '\\n';\n        HeaderSerializer.End = '1';\n        HeaderSerializer.NotEnd = '0';\n        HeaderSerializer.TypeOffset = 0;\n        HeaderSerializer.TypeDelimiterOffset = 1;\n        HeaderSerializer.LengthOffset = 2;\n        HeaderSerializer.LengthLength = 6;\n        HeaderSerializer.LengthDelimeterOffset = 8;\n        HeaderSerializer.IdOffset = 9;\n        HeaderSerializer.IdLength = 36;\n        HeaderSerializer.IdDelimeterOffset = 45;\n        HeaderSerializer.EndOffset = 46;\n        HeaderSerializer.TerminatorOffset = 47;\n        HeaderSerializer.Encoding = 'utf8';\n        return HeaderSerializer;\n      }();\n\n      exports.HeaderSerializer = HeaderSerializer;\n    }, {\n      \"./payloadConstants\": 18\n    }],\n    16: [function (require, module, exports) {\n      \"use strict\";\n      /**\n       * @module botframework-streaming\n       */\n\n      /**\n       * Copyright (c) Microsoft Corporation. All rights reserved.\n       * Licensed under the MIT License.\n       */\n\n      var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n        if (k2 === undefined) k2 = k;\n        Object.defineProperty(o, k2, {\n          enumerable: true,\n          get: function () {\n            return m[k];\n          }\n        });\n      } : function (o, m, k, k2) {\n        if (k2 === undefined) k2 = k;\n        o[k2] = m[k];\n      });\n\n      var __exportStar = this && this.__exportStar || function (m, exports) {\n        for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n      };\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      __exportStar(require(\"./headerSerializer\"), exports);\n\n      __exportStar(require(\"./streamManager\"), exports);\n\n      __exportStar(require(\"./payloadAssemblerManager\"), exports);\n\n      __exportStar(require(\"./payloadTypes\"), exports);\n\n      __exportStar(require(\"./requestManager\"), exports);\n\n      __exportStar(require(\"./sendOperations\"), exports);\n\n      __exportStar(require(\"./streamManager\"), exports);\n    }, {\n      \"./headerSerializer\": 15,\n      \"./payloadAssemblerManager\": 17,\n      \"./payloadTypes\": 19,\n      \"./requestManager\": 20,\n      \"./sendOperations\": 21,\n      \"./streamManager\": 22\n    }],\n    17: [function (require, module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PayloadAssemblerManager = void 0;\n\n      var payloadAssembler_1 = require(\"../assemblers/payloadAssembler\");\n\n      var payloadTypes_1 = require(\"./payloadTypes\");\n      /**\n       * Orchestrates assembly of payloads.\n       */\n\n\n      var PayloadAssemblerManager =\n      /** @class */\n      function () {\n        /**\n         * Initializes a new instance of the [PayloadAssemblerManager](xref:botframework-streaming.PayloadAssemblerManager) class.\n         *\n         * @param streamManager The [StreamManager](xref:botframework-streaming.StreamManager) managing the stream being assembled.\n         * @param onReceiveResponse Function that executes when new bytes are received on a `response` stream.\n         * @param onReceiveRequest Function that executes when new bytes are received on a `request` stream.\n         */\n        function PayloadAssemblerManager(streamManager, onReceiveResponse, onReceiveRequest) {\n          this.streamManager = streamManager;\n          this.onReceiveResponse = onReceiveResponse;\n          this.onReceiveRequest = onReceiveRequest;\n          this.activeAssemblers = {};\n        }\n        /**\n         * Retrieves the assembler's payload as a stream.\n         *\n         * @param header The Header of the Stream to retrieve.\n         * @returns A [SubscribableStream](xref:botframework-streaming.SubscribableStream) of the assembler's payload.\n         */\n\n\n        PayloadAssemblerManager.prototype.getPayloadStream = function (header) {\n          if (header.payloadType === payloadTypes_1.PayloadTypes.stream) {\n            return this.streamManager.getPayloadStream(header);\n          } else if (!this.activeAssemblers[header.id]) {\n            var assembler = this.createPayloadAssembler(header);\n\n            if (assembler) {\n              this.activeAssemblers[header.id] = assembler;\n              return assembler.getPayloadStream();\n            }\n          }\n        };\n        /**\n         * The action the assembler executes when new bytes are received on the incoming stream.\n         *\n         * @param header The stream's Header.\n         * @param contentStream The incoming stream being assembled.\n         * @param contentLength The length of the stream, if finite.\n         */\n\n\n        PayloadAssemblerManager.prototype.onReceive = function (header, contentStream, contentLength) {\n          if (header.payloadType === payloadTypes_1.PayloadTypes.stream) {\n            this.streamManager.onReceive(header, contentStream, contentLength);\n          } else {\n            if (this.activeAssemblers && this.activeAssemblers[header.id]) {\n              var assembler = this.activeAssemblers[header.id];\n              assembler.onReceive(header, contentStream, contentLength);\n            }\n\n            if (header.end) {\n              delete this.activeAssemblers[header.id];\n            }\n          }\n        };\n\n        PayloadAssemblerManager.prototype.createPayloadAssembler = function (header) {\n          if (header.payloadType === payloadTypes_1.PayloadTypes.request) {\n            return new payloadAssembler_1.PayloadAssembler(this.streamManager, {\n              header: header,\n              onCompleted: this.onReceiveRequest\n            });\n          } else if (header.payloadType === payloadTypes_1.PayloadTypes.response) {\n            return new payloadAssembler_1.PayloadAssembler(this.streamManager, {\n              header: header,\n              onCompleted: this.onReceiveResponse\n            });\n          }\n        };\n\n        return PayloadAssemblerManager;\n      }();\n\n      exports.PayloadAssemblerManager = PayloadAssemblerManager;\n    }, {\n      \"../assemblers/payloadAssembler\": 1,\n      \"./payloadTypes\": 19\n    }],\n    18: [function (require, module, exports) {\n      \"use strict\";\n      /**\n       * @module botframework-streaming\n       */\n\n      /**\n       * Copyright (c) Microsoft Corporation. All rights reserved.\n       * Licensed under the MIT License.\n       */\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PayloadConstants = void 0;\n      /**\n       * Constants for streaming payloads.\n       */\n\n      var PayloadConstants;\n\n      (function (PayloadConstants) {\n        PayloadConstants[PayloadConstants[\"MaxPayloadLength\"] = 4096] = \"MaxPayloadLength\";\n        PayloadConstants[PayloadConstants[\"MaxHeaderLength\"] = 48] = \"MaxHeaderLength\";\n        PayloadConstants[PayloadConstants[\"MaxLength\"] = 999999] = \"MaxLength\";\n        PayloadConstants[PayloadConstants[\"MinLength\"] = 0] = \"MinLength\";\n      })(PayloadConstants = exports.PayloadConstants || (exports.PayloadConstants = {}));\n    }, {}],\n    19: [function (require, module, exports) {\n      \"use strict\";\n      /**\n       * @module botframework-streaming\n       */\n\n      /**\n       * Copyright (c) Microsoft Corporation. All rights reserved.\n       * Licensed under the MIT License.\n       */\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PayloadTypes = void 0;\n      /**\n       * Typess of payloads supported in the streaming library.\n       */\n\n      var PayloadTypes;\n\n      (function (PayloadTypes) {\n        PayloadTypes[\"request\"] = \"A\";\n        PayloadTypes[\"response\"] = \"B\";\n        PayloadTypes[\"stream\"] = \"S\";\n        PayloadTypes[\"cancelAll\"] = \"X\";\n        PayloadTypes[\"cancelStream\"] = \"C\";\n      })(PayloadTypes = exports.PayloadTypes || (exports.PayloadTypes = {}));\n    }, {}],\n    20: [function (require, module, exports) {\n      \"use strict\";\n\n      var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n        function adopt(value) {\n          return value instanceof P ? value : new P(function (resolve) {\n            resolve(value);\n          });\n        }\n\n        return new (P || (P = Promise))(function (resolve, reject) {\n          function fulfilled(value) {\n            try {\n              step(generator.next(value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n\n          function rejected(value) {\n            try {\n              step(generator[\"throw\"](value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n\n          function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n          }\n\n          step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n      };\n\n      var __generator = this && this.__generator || function (thisArg, body) {\n        var _ = {\n          label: 0,\n          sent: function () {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n          },\n          trys: [],\n          ops: []\n        },\n            f,\n            y,\n            t,\n            g;\n        return g = {\n          next: verb(0),\n          \"throw\": verb(1),\n          \"return\": verb(2)\n        }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n          return this;\n        }), g;\n\n        function verb(n) {\n          return function (v) {\n            return step([n, v]);\n          };\n        }\n\n        function step(op) {\n          if (f) throw new TypeError(\"Generator is already executing.\");\n\n          while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n\n            switch (op[0]) {\n              case 0:\n              case 1:\n                t = op;\n                break;\n\n              case 4:\n                _.label++;\n                return {\n                  value: op[1],\n                  done: false\n                };\n\n              case 5:\n                _.label++;\n                y = op[1];\n                op = [0];\n                continue;\n\n              case 7:\n                op = _.ops.pop();\n\n                _.trys.pop();\n\n                continue;\n\n              default:\n                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                  _ = 0;\n                  continue;\n                }\n\n                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                  _.label = op[1];\n                  break;\n                }\n\n                if (op[0] === 6 && _.label < t[1]) {\n                  _.label = t[1];\n                  t = op;\n                  break;\n                }\n\n                if (t && _.label < t[2]) {\n                  _.label = t[2];\n\n                  _.ops.push(op);\n\n                  break;\n                }\n\n                if (t[2]) _.ops.pop();\n\n                _.trys.pop();\n\n                continue;\n            }\n\n            op = body.call(thisArg, _);\n          } catch (e) {\n            op = [6, e];\n            y = 0;\n          } finally {\n            f = t = 0;\n          }\n\n          if (op[0] & 5) throw op[1];\n          return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n          };\n        }\n      };\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.RequestManager = void 0;\n      /**\n       * A streaming pending request.\n       */\n\n      var PendingRequest =\n      /** @class */\n      function () {\n        function PendingRequest() {}\n\n        return PendingRequest;\n      }();\n      /**\n       * Orchestrates and manages pending streaming requests.\n       */\n\n\n      var RequestManager =\n      /** @class */\n      function () {\n        function RequestManager() {\n          this._pendingRequests = {};\n        }\n        /**\n         * Gets the count of the pending requests.\n         *\n         * @returns Number with the pending requests count.\n         */\n\n\n        RequestManager.prototype.pendingRequestCount = function () {\n          return Object.keys(this._pendingRequests).length;\n        };\n        /**\n         * Signal fired when all response tasks have completed.\n         *\n         * @param requestId The ID of the StreamingRequest.\n         * @param response The [IReceiveResponse](xref:botframework-streaming.IReceiveResponse) in response to the request.\n         * @returns A Promise that when completed returns `true` if the `requestId`'s pending response task was completed, otherwise `false`.\n         */\n\n\n        RequestManager.prototype.signalResponse = function (requestId, response) {\n          return __awaiter(this, void 0, void 0, function () {\n            var pendingRequest;\n            return __generator(this, function (_a) {\n              pendingRequest = this._pendingRequests[requestId];\n\n              if (pendingRequest) {\n                pendingRequest.resolve(response);\n                delete this._pendingRequests[requestId];\n                return [2\n                /*return*/\n                , true];\n              }\n\n              return [2\n              /*return*/\n              , false];\n            });\n          });\n        };\n        /**\n         * Constructs and returns a response for this request.\n         *\n         * @param requestId The ID of the StreamingRequest being responded to.\n         * @returns The response to the specified request.\n         */\n\n\n        RequestManager.prototype.getResponse = function (requestId) {\n          var pendingRequest = this._pendingRequests[requestId];\n\n          if (pendingRequest) {\n            return Promise.reject(\"requestId '\" + requestId + \"' already exists in RequestManager\");\n          }\n\n          pendingRequest = new PendingRequest();\n          pendingRequest.requestId = requestId;\n          var promise = new Promise(function (resolve, reject) {\n            pendingRequest.resolve = resolve;\n            pendingRequest.reject = reject;\n          });\n          this._pendingRequests[requestId] = pendingRequest;\n          return promise;\n        };\n\n        return RequestManager;\n      }();\n\n      exports.RequestManager = RequestManager;\n    }, {}],\n    21: [function (require, module, exports) {\n      \"use strict\";\n\n      var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n        function adopt(value) {\n          return value instanceof P ? value : new P(function (resolve) {\n            resolve(value);\n          });\n        }\n\n        return new (P || (P = Promise))(function (resolve, reject) {\n          function fulfilled(value) {\n            try {\n              step(generator.next(value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n\n          function rejected(value) {\n            try {\n              step(generator[\"throw\"](value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n\n          function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n          }\n\n          step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n      };\n\n      var __generator = this && this.__generator || function (thisArg, body) {\n        var _ = {\n          label: 0,\n          sent: function () {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n          },\n          trys: [],\n          ops: []\n        },\n            f,\n            y,\n            t,\n            g;\n        return g = {\n          next: verb(0),\n          \"throw\": verb(1),\n          \"return\": verb(2)\n        }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n          return this;\n        }), g;\n\n        function verb(n) {\n          return function (v) {\n            return step([n, v]);\n          };\n        }\n\n        function step(op) {\n          if (f) throw new TypeError(\"Generator is already executing.\");\n\n          while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n\n            switch (op[0]) {\n              case 0:\n              case 1:\n                t = op;\n                break;\n\n              case 4:\n                _.label++;\n                return {\n                  value: op[1],\n                  done: false\n                };\n\n              case 5:\n                _.label++;\n                y = op[1];\n                op = [0];\n                continue;\n\n              case 7:\n                op = _.ops.pop();\n\n                _.trys.pop();\n\n                continue;\n\n              default:\n                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                  _ = 0;\n                  continue;\n                }\n\n                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                  _.label = op[1];\n                  break;\n                }\n\n                if (op[0] === 6 && _.label < t[1]) {\n                  _.label = t[1];\n                  t = op;\n                  break;\n                }\n\n                if (t && _.label < t[2]) {\n                  _.label = t[2];\n\n                  _.ops.push(op);\n\n                  break;\n                }\n\n                if (t[2]) _.ops.pop();\n\n                _.trys.pop();\n\n                continue;\n            }\n\n            op = body.call(thisArg, _);\n          } catch (e) {\n            op = [6, e];\n            y = 0;\n          } finally {\n            f = t = 0;\n          }\n\n          if (op[0] & 5) throw op[1];\n          return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n          };\n        }\n      };\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.SendOperations = void 0;\n\n      var cancelDisassembler_1 = require(\"../disassemblers/cancelDisassembler\");\n\n      var httpContentStreamDisassembler_1 = require(\"../disassemblers/httpContentStreamDisassembler\");\n\n      var requestDisassembler_1 = require(\"../disassemblers/requestDisassembler\");\n\n      var responseDisassembler_1 = require(\"../disassemblers/responseDisassembler\");\n\n      var payloadTypes_1 = require(\"./payloadTypes\");\n      /**\n       * Send operations for streaming payloads.\n       */\n\n\n      var SendOperations =\n      /** @class */\n      function () {\n        /**\n         * Initializes a new instance of the [SendOperations](xref:botframework-streaming.SendOperations) class.\n         *\n         * @param payloadSender The [PayloadSender](xref:botframework-streaming.PayloadSender) that will send the disassembled data from all of this instance's send operations.\n         */\n        function SendOperations(payloadSender) {\n          this.payloadSender = payloadSender;\n        }\n        /**\n         * The send operation used to send a [StreamingRequest](xref:botframework-streaming.StreamingRequest).\n         *\n         * @param id The ID to assign to the [RequestDisassembler](xref:botframework-streaming.RequestDisassembler) used by this operation.\n         * @param request The request to send.\n         */\n\n\n        SendOperations.prototype.sendRequest = function (id, request) {\n          return __awaiter(this, void 0, void 0, function () {\n            var disassembler;\n\n            var _this = this;\n\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  disassembler = new requestDisassembler_1.RequestDisassembler(this.payloadSender, id, request);\n                  return [4\n                  /*yield*/\n                  , disassembler.disassemble()];\n\n                case 1:\n                  _a.sent();\n\n                  if (request.streams) {\n                    request.streams.forEach(function (contentStream) {\n                      return __awaiter(_this, void 0, void 0, function () {\n                        return __generator(this, function (_a) {\n                          switch (_a.label) {\n                            case 0:\n                              return [4\n                              /*yield*/\n                              , new httpContentStreamDisassembler_1.HttpContentStreamDisassembler(this.payloadSender, contentStream).disassemble()];\n\n                            case 1:\n                              _a.sent();\n\n                              return [2\n                              /*return*/\n                              ];\n                          }\n                        });\n                      });\n                    });\n                  }\n\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        };\n        /**\n         * The send operation used to send a [PayloadTypes.response](xref:botframework-streaming.PayloadTypes.response).\n         *\n         * @param id The ID to assign to the [ResponseDisassembler](xref:botframework-streaming.ResponseDisassembler) used by this operation.\n         * @param response The response to send.\n         */\n\n\n        SendOperations.prototype.sendResponse = function (id, response) {\n          return __awaiter(this, void 0, void 0, function () {\n            var disassembler;\n\n            var _this = this;\n\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  disassembler = new responseDisassembler_1.ResponseDisassembler(this.payloadSender, id, response);\n                  return [4\n                  /*yield*/\n                  , disassembler.disassemble()];\n\n                case 1:\n                  _a.sent();\n\n                  if (response.streams) {\n                    response.streams.forEach(function (contentStream) {\n                      return __awaiter(_this, void 0, void 0, function () {\n                        return __generator(this, function (_a) {\n                          switch (_a.label) {\n                            case 0:\n                              return [4\n                              /*yield*/\n                              , new httpContentStreamDisassembler_1.HttpContentStreamDisassembler(this.payloadSender, contentStream).disassemble()];\n\n                            case 1:\n                              _a.sent();\n\n                              return [2\n                              /*return*/\n                              ];\n                          }\n                        });\n                      });\n                    });\n                  }\n\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        };\n        /**\n         * The send operation used to send a [PayloadTypes.cancelStream](xref:botframework-streaming.PayloadTypes.cancelStream).\n         *\n         * @param id The ID to assign to the [CancelDisassembler](xref:botframework-streaming.CancelDisassembler) used by this operation.\n         */\n\n\n        SendOperations.prototype.sendCancelStream = function (id) {\n          return __awaiter(this, void 0, void 0, function () {\n            var disassembler;\n            return __generator(this, function (_a) {\n              disassembler = new cancelDisassembler_1.CancelDisassembler(this.payloadSender, id, payloadTypes_1.PayloadTypes.cancelStream);\n              disassembler.disassemble();\n              return [2\n              /*return*/\n              ];\n            });\n          });\n        };\n\n        return SendOperations;\n      }();\n\n      exports.SendOperations = SendOperations;\n    }, {\n      \"../disassemblers/cancelDisassembler\": 3,\n      \"../disassemblers/httpContentStreamDisassembler\": 4,\n      \"../disassemblers/requestDisassembler\": 6,\n      \"../disassemblers/responseDisassembler\": 7,\n      \"./payloadTypes\": 19\n    }],\n    22: [function (require, module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.StreamManager = void 0;\n\n      var payloadAssembler_1 = require(\"../assemblers/payloadAssembler\");\n      /**\n       * Orchestrates and manages streams.\n       */\n\n\n      var StreamManager =\n      /** @class */\n      function () {\n        /**\n         * Initializes a new instance of the [StreamManager](xref:botframework-streaming.StreamManager) class.\n         *\n         * @param onCancelStream Function to trigger if the managed stream is cancelled.\n         */\n        function StreamManager(onCancelStream) {\n          this.onCancelStream = onCancelStream;\n          this.activeAssemblers = [];\n        }\n        /**\n         * Retrieves a [PayloadAssembler](xref:botframework-streaming.PayloadAssembler) with the given ID if one exists, otherwise a new instance is created and assigned the given ID.\n         *\n         * @param id The ID of the [PayloadAssembler](xref:botframework-streaming.PayloadAssembler) to retrieve or create.\n         * @returns The [PayloadAssembler](xref:botframework-streaming.PayloadAssembler) with the given ID.\n         */\n\n\n        StreamManager.prototype.getPayloadAssembler = function (id) {\n          if (!this.activeAssemblers[id]) {\n            // A new id has come in, kick off the process of tracking it.\n            var assembler = new payloadAssembler_1.PayloadAssembler(this, {\n              id: id\n            });\n            this.activeAssemblers[id] = assembler;\n            return assembler;\n          } else {\n            return this.activeAssemblers[id];\n          }\n        };\n        /**\n         * Retrieves the [SubscribableStream](xref:botframework-streaming.SubscribableStream) from the [PayloadAssembler](xref:botframework-streaming.PayloadAssembler) this manager manages.\n         *\n         * @param header The Header of the [SubscribableStream](xref:botframework-streaming.SubscribableStream) to retrieve.\n         * @returns The [SubscribableStream](xref:botframework-streaming.SubscribableStream) with the given header.\n         */\n\n\n        StreamManager.prototype.getPayloadStream = function (header) {\n          var assembler = this.getPayloadAssembler(header.id);\n          return assembler.getPayloadStream();\n        };\n        /**\n         * Used to set the behavior of the managed [PayloadAssembler](xref:botframework-streaming.PayloadAssembler) when data is received.\n         *\n         * @param header The Header of the stream.\n         * @param contentStream The [SubscribableStream](xref:botframework-streaming.SubscribableStream) to write incoming data to.\n         * @param contentLength The amount of data to write to the contentStream.\n         */\n\n\n        StreamManager.prototype.onReceive = function (header, contentStream, contentLength) {\n          if (!this.activeAssemblers[header.id]) {\n            return;\n          }\n\n          this.activeAssemblers[header.id].onReceive(header, contentStream, contentLength);\n        };\n        /**\n         * Closes the [PayloadAssembler](xref:botframework-streaming.PayloadAssembler) assigned to the [SubscribableStream](xref:botframework-streaming.SubscribableStream) with the given ID.\n         *\n         * @param id The ID of the [SubscribableStream](xref:botframework-streaming.SubscribableStream) to close.\n         */\n\n\n        StreamManager.prototype.closeStream = function (id) {\n          if (!this.activeAssemblers[id]) {\n            return;\n          } else {\n            var assembler = this.activeAssemblers[id];\n            this.activeAssemblers.splice(this.activeAssemblers.indexOf(id), 1);\n            var targetStream = assembler.getPayloadStream();\n\n            if (assembler.contentLength && targetStream.length < assembler.contentLength || !assembler.end) {\n              this.onCancelStream(assembler);\n            }\n          }\n        };\n\n        return StreamManager;\n      }();\n\n      exports.StreamManager = StreamManager;\n    }, {\n      \"../assemblers/payloadAssembler\": 1\n    }],\n    23: [function (require, module, exports) {\n      \"use strict\";\n\n      var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n        function adopt(value) {\n          return value instanceof P ? value : new P(function (resolve) {\n            resolve(value);\n          });\n        }\n\n        return new (P || (P = Promise))(function (resolve, reject) {\n          function fulfilled(value) {\n            try {\n              step(generator.next(value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n\n          function rejected(value) {\n            try {\n              step(generator[\"throw\"](value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n\n          function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n          }\n\n          step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n      };\n\n      var __generator = this && this.__generator || function (thisArg, body) {\n        var _ = {\n          label: 0,\n          sent: function () {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n          },\n          trys: [],\n          ops: []\n        },\n            f,\n            y,\n            t,\n            g;\n        return g = {\n          next: verb(0),\n          \"throw\": verb(1),\n          \"return\": verb(2)\n        }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n          return this;\n        }), g;\n\n        function verb(n) {\n          return function (v) {\n            return step([n, v]);\n          };\n        }\n\n        function step(op) {\n          if (f) throw new TypeError(\"Generator is already executing.\");\n\n          while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n\n            switch (op[0]) {\n              case 0:\n              case 1:\n                t = op;\n                break;\n\n              case 4:\n                _.label++;\n                return {\n                  value: op[1],\n                  done: false\n                };\n\n              case 5:\n                _.label++;\n                y = op[1];\n                op = [0];\n                continue;\n\n              case 7:\n                op = _.ops.pop();\n\n                _.trys.pop();\n\n                continue;\n\n              default:\n                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                  _ = 0;\n                  continue;\n                }\n\n                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                  _.label = op[1];\n                  break;\n                }\n\n                if (op[0] === 6 && _.label < t[1]) {\n                  _.label = t[1];\n                  t = op;\n                  break;\n                }\n\n                if (t && _.label < t[2]) {\n                  _.label = t[2];\n\n                  _.ops.push(op);\n\n                  break;\n                }\n\n                if (t[2]) _.ops.pop();\n\n                _.trys.pop();\n\n                continue;\n            }\n\n            op = body.call(thisArg, _);\n          } catch (e) {\n            op = [6, e];\n            y = 0;\n          } finally {\n            f = t = 0;\n          }\n\n          if (op[0] & 5) throw op[1];\n          return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n          };\n        }\n      };\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.ProtocolAdapter = void 0;\n\n      var payloadAssemblerManager_1 = require(\"./payloads/payloadAssemblerManager\");\n\n      var sendOperations_1 = require(\"./payloads/sendOperations\");\n\n      var streamManager_1 = require(\"./payloads/streamManager\");\n\n      var protocol_base_1 = require(\"./utilities/protocol-base\");\n      /**\n       * Creates a protocol adapter for Streaming.\n       */\n\n\n      var ProtocolAdapter =\n      /** @class */\n      function () {\n        /**\n         * Creates a new instance of the protocol adapter class.\n         *\n         * @param requestHandler The [RequestHandler](xref:botframework-streaming.RequestHandler) that will process incoming requests.\n         * @param requestManager The [RequestManager](xref:botframework-streaming.RequestManager) that will process outgoing requests.\n         * @param sender The [PayloadSender](xref:botframework-streaming.PayloadSender) for use with outgoing requests.\n         * @param receiver The [PayloadReceiver](xref:botframework-streaming.PayloadReceiver) for use with incoming requests.\n         */\n        function ProtocolAdapter(requestHandler, requestManager, sender, receiver) {\n          var _this = this;\n\n          this.requestHandler = requestHandler;\n          this.requestManager = requestManager;\n          this.payloadSender = sender;\n          this.payloadReceiver = receiver;\n          this.sendOperations = new sendOperations_1.SendOperations(this.payloadSender);\n          this.streamManager = new streamManager_1.StreamManager(this.onCancelStream);\n          this.assemblerManager = new payloadAssemblerManager_1.PayloadAssemblerManager(this.streamManager, function (id, response) {\n            return _this.onReceiveResponse(id, response);\n          }, function (id, request) {\n            return _this.onReceiveRequest(id, request);\n          });\n          this.payloadReceiver.subscribe(function (header) {\n            return _this.assemblerManager.getPayloadStream(header);\n          }, function (header, contentStream, contentLength) {\n            return _this.assemblerManager.onReceive(header, contentStream, contentLength);\n          });\n        }\n        /**\n         * Sends a request over the attached request manager.\n         *\n         * @param request The outgoing request to send.\n         * @returns The response to the specified request.\n         */\n\n\n        ProtocolAdapter.prototype.sendRequest = function (request) {\n          return __awaiter(this, void 0, void 0, function () {\n            var requestId;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  requestId = protocol_base_1.generateGuid();\n                  return [4\n                  /*yield*/\n                  , this.sendOperations.sendRequest(requestId, request)];\n\n                case 1:\n                  _a.sent();\n\n                  return [2\n                  /*return*/\n                  , this.requestManager.getResponse(requestId)];\n              }\n            });\n          });\n        };\n        /**\n         * Executes the receive pipeline when a request comes in.\n         *\n         * @param id The id the resources created for the response will be assigned.\n         * @param request The incoming request to process.\n         */\n\n\n        ProtocolAdapter.prototype.onReceiveRequest = function (id, request) {\n          return __awaiter(this, void 0, void 0, function () {\n            var response;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  if (!this.requestHandler) return [3\n                  /*break*/\n                  , 3];\n                  return [4\n                  /*yield*/\n                  , this.requestHandler.processRequest(request)];\n\n                case 1:\n                  response = _a.sent();\n                  if (!response) return [3\n                  /*break*/\n                  , 3];\n                  return [4\n                  /*yield*/\n                  , this.sendOperations.sendResponse(id, response)];\n\n                case 2:\n                  _a.sent();\n\n                  _a.label = 3;\n\n                case 3:\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        };\n        /**\n         * Executes the receive pipeline when a response comes in.\n         *\n         * @param id The id the resources created for the response will be assigned.\n         * @param response The incoming response to process.\n         */\n\n\n        ProtocolAdapter.prototype.onReceiveResponse = function (id, response) {\n          return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  return [4\n                  /*yield*/\n                  , this.requestManager.signalResponse(id, response)];\n\n                case 1:\n                  _a.sent();\n\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        };\n        /**\n         * Executes the receive pipeline when a cancellation comes in.\n         *\n         * @param contentStreamAssembler The payload assembler processing the incoming data that this cancellation request targets.\n         */\n\n\n        ProtocolAdapter.prototype.onCancelStream = function (contentStreamAssembler) {\n          this.sendOperations.sendCancelStream(contentStreamAssembler.id).catch();\n        };\n\n        return ProtocolAdapter;\n      }();\n\n      exports.ProtocolAdapter = ProtocolAdapter;\n    }, {\n      \"./payloads/payloadAssemblerManager\": 17,\n      \"./payloads/sendOperations\": 21,\n      \"./payloads/streamManager\": 22,\n      \"./utilities/protocol-base\": 28\n    }],\n    24: [function (require, module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.RequestHandler = void 0;\n      /**\n       * Implemented by classes used to process incoming streaming requests sent over an [IStreamingTransport](xref:botframework-streaming.IStreamingTransport).\n       */\n\n      var RequestHandler =\n      /** @class */\n      function () {\n        function RequestHandler() {}\n\n        return RequestHandler;\n      }();\n\n      exports.RequestHandler = RequestHandler;\n    }, {}],\n    25: [function (require, module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.StreamingRequest = void 0;\n      /**\n       * @module botframework-streaming\n       */\n\n      /**\n       * Copyright (c) Microsoft Corporation. All rights reserved.\n       * Licensed under the MIT License.\n       */\n\n      var httpContentStream_1 = require(\"./httpContentStream\");\n\n      var subscribableStream_1 = require(\"./subscribableStream\");\n      /**\n       * The basic request type sent over Bot Framework Protocol 3 with Streaming Extensions transports, equivalent to HTTP request messages.\n       */\n\n\n      var StreamingRequest =\n      /** @class */\n      function () {\n        function StreamingRequest() {\n          /**\n           * List of associated streams.\n           */\n          this.streams = [];\n        }\n        /**\n         * Creates a streaming request with the passed in method, path, and body.\n         *\n         * @param method The HTTP verb to use for this request.\n         * @param path Optional path where the resource can be found on the remote server.\n         * @param body Optional body to send to the remote server.\n         * @returns On success returns a streaming request with appropriate status code and body.\n         */\n\n\n        StreamingRequest.create = function (method, path, body) {\n          var request = new StreamingRequest();\n          request.verb = method;\n          request.path = path;\n\n          if (body) {\n            request.setBody(body);\n          }\n\n          return request;\n        };\n        /**\n         * Adds a new stream attachment to this streaming request.\n         *\n         * @param content The Http content to include in the new stream attachment.\n         */\n\n\n        StreamingRequest.prototype.addStream = function (content) {\n          if (!content) {\n            throw new Error('Argument Undefined Exception: content undefined.');\n          }\n\n          this.streams.push(new httpContentStream_1.HttpContentStream(content));\n        };\n        /**\n         * Sets the contents of the body of this streamingRequest.\n         *\n         * @param body The JSON text to write to the body of the streamingRequest.\n         */\n        // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\n\n\n        StreamingRequest.prototype.setBody = function (body) {\n          if (typeof body === 'string') {\n            var stream = new subscribableStream_1.SubscribableStream();\n            stream.write(body, 'utf8');\n            this.addStream(new httpContentStream_1.HttpContent({\n              type: 'application/json; charset=utf-8',\n              contentLength: stream.length\n            }, stream));\n          } else if (typeof body === 'object') {\n            this.addStream(body);\n          }\n        };\n\n        return StreamingRequest;\n      }();\n\n      exports.StreamingRequest = StreamingRequest;\n    }, {\n      \"./httpContentStream\": 8,\n      \"./subscribableStream\": 27\n    }],\n    26: [function (require, module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.StreamingResponse = void 0;\n      /**\n       * @module botframework-streaming\n       */\n\n      /**\n       * Copyright (c) Microsoft Corporation. All rights reserved.\n       * Licensed under the MIT License.\n       */\n\n      var httpContentStream_1 = require(\"./httpContentStream\");\n\n      var subscribableStream_1 = require(\"./subscribableStream\");\n      /**\n       * The basic response type sent over Bot Framework Protocol 3 with Streaming Extensions transports, equivalent to HTTP response messages.\n       */\n\n\n      var StreamingResponse =\n      /** @class */\n      function () {\n        function StreamingResponse() {\n          this.streams = [];\n        }\n        /**\n         * Creates a streaming response with the passed in method, path, and body.\n         *\n         * @param statusCode The HTTP verb to use for this request.\n         * @param body Optional body containing additional information.\n         * @returns A streaming response with the appropriate statuscode and passed in body.\n         */\n\n\n        StreamingResponse.create = function (statusCode, body) {\n          var response = new StreamingResponse();\n          response.statusCode = statusCode;\n\n          if (body) {\n            response.addStream(body);\n          }\n\n          return response;\n        };\n        /**\n         * Adds a new stream attachment to this streaming request.\n         *\n         * @param content The Http content to include in the new stream attachment.\n         */\n\n\n        StreamingResponse.prototype.addStream = function (content) {\n          this.streams.push(new httpContentStream_1.HttpContentStream(content));\n        };\n        /**\n         * Sets the contents of the body of this streaming response.\n         *\n         * @param body The JSON text to write to the body of the streaming response.\n         */\n        // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\n\n\n        StreamingResponse.prototype.setBody = function (body) {\n          var stream = new subscribableStream_1.SubscribableStream();\n          stream.write(JSON.stringify(body), 'utf8');\n          this.addStream(new httpContentStream_1.HttpContent({\n            type: 'application/json; charset=utf-8',\n            contentLength: stream.length\n          }, stream));\n        };\n\n        return StreamingResponse;\n      }();\n\n      exports.StreamingResponse = StreamingResponse;\n    }, {\n      \"./httpContentStream\": 8,\n      \"./subscribableStream\": 27\n    }],\n    27: [function (require, module, exports) {\n      (function (Buffer) {\n        (function () {\n          \"use strict\";\n\n          var __extends = this && this.__extends || function () {\n            var extendStatics = function (d, b) {\n              extendStatics = Object.setPrototypeOf || {\n                __proto__: []\n              } instanceof Array && function (d, b) {\n                d.__proto__ = b;\n              } || function (d, b) {\n                for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n              };\n\n              return extendStatics(d, b);\n            };\n\n            return function (d, b) {\n              extendStatics(d, b);\n\n              function __() {\n                this.constructor = d;\n              }\n\n              d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n          }();\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports.SubscribableStream = void 0;\n          /**\n           * @module botframework-streaming\n           */\n\n          /**\n           * Copyright (c) Microsoft Corporation. All rights reserved.\n           * Licensed under the MIT License.\n           */\n\n          var stream_1 = require(\"stream\");\n          /**\n           * An extension of `Duplex` that operates in conjunction with a `PayloadAssembler` to convert raw bytes into a consumable form.\n           */\n\n\n          var SubscribableStream =\n          /** @class */\n          function (_super) {\n            __extends(SubscribableStream, _super);\n            /**\n             * Initializes a new instance of the [SubscribableStream](xref:botframework-streaming.SubscribableStream) class.\n             *\n             * @param options The `DuplexOptions` to use when constructing this stream.\n             */\n\n\n            function SubscribableStream(options) {\n              var _this = _super.call(this, options) || this;\n\n              _this.length = 0;\n              _this.bufferList = [];\n              return _this;\n            }\n            /**\n             * Writes data to the buffered list.\n             * All calls to writable.write() that occur between the time writable._write() is called and the callback is called will cause the written data to be buffered.\n             *\n             * @param chunk The Buffer to be written.\n             * @param _encoding The encoding. Unused in the implementation of Duplex.\n             * @param callback Callback for when this chunk of data is flushed.\n             */\n            // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\n\n\n            SubscribableStream.prototype._write = function (chunk, _encoding, callback) {\n              var buffer = Buffer.from(chunk);\n              this.bufferList.push(buffer);\n              this.length += chunk.length;\n\n              if (this._onData) {\n                this._onData(buffer);\n              }\n\n              callback();\n            };\n            /**\n             * Reads the buffered list.\n             * Once the readable._read() method has been called, it will not be called again until more data is pushed through the readable.push() method.\n             * Empty data such as empty buffers and strings will not cause readable._read() to be called.\n             *\n             * @param size Number of bytes to read.\n             */\n\n\n            SubscribableStream.prototype._read = function (size) {\n              if (this.bufferList.length === 0) {\n                // null signals end of stream\n                this.push(null);\n              } else {\n                var total = 0;\n\n                while (total < size && this.bufferList.length > 0) {\n                  var buffer = this.bufferList[0];\n                  this.push(buffer);\n                  this.bufferList.splice(0, 1);\n                  total += buffer.length;\n                }\n              }\n            };\n            /**\n             * Subscribes to the stream when receives data.\n             *\n             * @param onData Callback to be called when onData is executed.\n             */\n            // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\n\n\n            SubscribableStream.prototype.subscribe = function (onData) {\n              this._onData = onData;\n            };\n\n            return SubscribableStream;\n          }(stream_1.Duplex);\n\n          exports.SubscribableStream = SubscribableStream;\n        }).call(this);\n      }).call(this, require(\"buffer\").Buffer);\n    }, {\n      \"buffer\": 50,\n      \"stream\": 56\n    }],\n    28: [function (require, module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.generateGuid = void 0;\n      /**\n       * @module botframework-streaming\n       */\n\n      /**\n       * Copyright (c) Microsoft Corporation. All rights reserved.\n       * Licensed under the MIT License.\n       */\n\n      var uuid_1 = require(\"uuid\");\n      /**\n       * Generates an uuid v4 string.\n       *\n       * @returns An uuidv4 string.\n       */\n\n\n      function generateGuid() {\n        return uuid_1.v4();\n      }\n\n      exports.generateGuid = generateGuid;\n    }, {\n      \"uuid\": 33\n    }],\n    29: [function (require, module, exports) {\n      \"use strict\";\n\n      var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n        function adopt(value) {\n          return value instanceof P ? value : new P(function (resolve) {\n            resolve(value);\n          });\n        }\n\n        return new (P || (P = Promise))(function (resolve, reject) {\n          function fulfilled(value) {\n            try {\n              step(generator.next(value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n\n          function rejected(value) {\n            try {\n              step(generator[\"throw\"](value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n\n          function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n          }\n\n          step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n      };\n\n      var __generator = this && this.__generator || function (thisArg, body) {\n        var _ = {\n          label: 0,\n          sent: function () {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n          },\n          trys: [],\n          ops: []\n        },\n            f,\n            y,\n            t,\n            g;\n        return g = {\n          next: verb(0),\n          \"throw\": verb(1),\n          \"return\": verb(2)\n        }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n          return this;\n        }), g;\n\n        function verb(n) {\n          return function (v) {\n            return step([n, v]);\n          };\n        }\n\n        function step(op) {\n          if (f) throw new TypeError(\"Generator is already executing.\");\n\n          while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n\n            switch (op[0]) {\n              case 0:\n              case 1:\n                t = op;\n                break;\n\n              case 4:\n                _.label++;\n                return {\n                  value: op[1],\n                  done: false\n                };\n\n              case 5:\n                _.label++;\n                y = op[1];\n                op = [0];\n                continue;\n\n              case 7:\n                op = _.ops.pop();\n\n                _.trys.pop();\n\n                continue;\n\n              default:\n                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                  _ = 0;\n                  continue;\n                }\n\n                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                  _.label = op[1];\n                  break;\n                }\n\n                if (op[0] === 6 && _.label < t[1]) {\n                  _.label = t[1];\n                  t = op;\n                  break;\n                }\n\n                if (t && _.label < t[2]) {\n                  _.label = t[2];\n\n                  _.ops.push(op);\n\n                  break;\n                }\n\n                if (t[2]) _.ops.pop();\n\n                _.trys.pop();\n\n                continue;\n            }\n\n            op = body.call(thisArg, _);\n          } catch (e) {\n            op = [6, e];\n            y = 0;\n          } finally {\n            f = t = 0;\n          }\n\n          if (op[0] & 5) throw op[1];\n          return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n          };\n        }\n      };\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.BrowserWebSocket = void 0;\n      /**\n       * Represents a WebSocket that implements [ISocket](xref:botframework-streaming.ISocket).\n       */\n\n      var BrowserWebSocket =\n      /** @class */\n      function () {\n        /**\n         * Creates a new instance of the [BrowserWebSocket](xref:botframework-streaming.BrowserWebSocket) class.\n         *\n         * @param socket The socket object to build this connection on.\n         */\n        function BrowserWebSocket(socket) {\n          if (socket) {\n            this.webSocket = socket;\n          }\n        }\n        /**\n         * Connects to the supporting socket using WebSocket protocol.\n         *\n         * @param serverAddress The address the server is listening on.\n         * @returns A Promise that resolves the websocket is open and rejects if an error is encountered.\n         */\n\n\n        BrowserWebSocket.prototype.connect = function (serverAddress) {\n          return __awaiter(this, void 0, void 0, function () {\n            var resolver, rejector;\n            return __generator(this, function (_a) {\n              if (!this.webSocket) {\n                this.webSocket = new WebSocket(serverAddress);\n              }\n\n              this.webSocket.onerror = function (e) {\n                rejector(e);\n              };\n\n              this.webSocket.onopen = function (e) {\n                resolver(e);\n              };\n\n              return [2\n              /*return*/\n              , new Promise(function (resolve, reject) {\n                resolver = resolve;\n                rejector = reject;\n              })];\n            });\n          });\n        };\n\n        Object.defineProperty(BrowserWebSocket.prototype, \"isConnected\", {\n          /**\n           * Indicates if the [BrowserWebSocket's](xref:botframework-streaming.BrowserWebSocket) underlying websocket is currently connected.\n           *\n           * @returns `true` if the underlying websocket is ready and availble to send messages, otherwise `false`.\n           */\n          get: function () {\n            return this.webSocket.readyState === 1;\n          },\n          enumerable: false,\n          configurable: true\n        });\n        /**\n         * Writes a buffer to the socket and sends it.\n         *\n         * @param buffer The buffer of data to send across the connection.\n         */\n\n        BrowserWebSocket.prototype.write = function (buffer) {\n          this.webSocket.send(buffer);\n        };\n        /**\n         * Close the socket.\n         */\n\n\n        BrowserWebSocket.prototype.close = function () {\n          this.webSocket.close();\n        };\n        /**\n         * Set the handler for text and binary messages received on the socket.\n         *\n         * @param handler The callback to handle the \"message\" event.\n         */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n        BrowserWebSocket.prototype.setOnMessageHandler = function (handler) {\n          var bufferKey = 'buffer';\n          var packets = [];\n\n          this.webSocket.onmessage = function (evt) {\n            var fileReader = new FileReader();\n            var queueEntry = {\n              buffer: null\n            };\n            packets.push(queueEntry);\n\n            fileReader.onload = function (e) {\n              var t = e.target;\n              queueEntry[bufferKey] = t.result;\n\n              if (packets[0] === queueEntry) {\n                while (0 < packets.length && packets[0][bufferKey]) {\n                  handler(packets[0][bufferKey]);\n                  packets.splice(0, 1);\n                }\n              }\n            };\n\n            fileReader.readAsArrayBuffer(evt.data);\n          };\n        };\n        /**\n         * Set the callback to call when encountering errors.\n         *\n         * @param handler The callback to handle the \"error\" event.\n         */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n        BrowserWebSocket.prototype.setOnErrorHandler = function (handler) {\n          this.webSocket.onerror = function (error) {\n            if (error) {\n              handler(error);\n            }\n          };\n        };\n        /**\n         * Set the callback to call when encountering socket closures.\n         *\n         * @param handler The callback to handle the \"close\" event.\n         */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n        BrowserWebSocket.prototype.setOnCloseHandler = function (handler) {\n          this.webSocket.onclose = handler;\n        };\n\n        return BrowserWebSocket;\n      }();\n\n      exports.BrowserWebSocket = BrowserWebSocket;\n    }, {}],\n    30: [function (require, module, exports) {\n      \"use strict\";\n      /**\n       * @module botframework-streaming\n       */\n\n      /**\n       * Copyright (c) Microsoft Corporation. All rights reserved.\n       * Licensed under the MIT License.\n       */\n\n      var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n        function adopt(value) {\n          return value instanceof P ? value : new P(function (resolve) {\n            resolve(value);\n          });\n        }\n\n        return new (P || (P = Promise))(function (resolve, reject) {\n          function fulfilled(value) {\n            try {\n              step(generator.next(value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n\n          function rejected(value) {\n            try {\n              step(generator[\"throw\"](value));\n            } catch (e) {\n              reject(e);\n            }\n          }\n\n          function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n          }\n\n          step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n      };\n\n      var __generator = this && this.__generator || function (thisArg, body) {\n        var _ = {\n          label: 0,\n          sent: function () {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n          },\n          trys: [],\n          ops: []\n        },\n            f,\n            y,\n            t,\n            g;\n        return g = {\n          next: verb(0),\n          \"throw\": verb(1),\n          \"return\": verb(2)\n        }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n          return this;\n        }), g;\n\n        function verb(n) {\n          return function (v) {\n            return step([n, v]);\n          };\n        }\n\n        function step(op) {\n          if (f) throw new TypeError(\"Generator is already executing.\");\n\n          while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n\n            switch (op[0]) {\n              case 0:\n              case 1:\n                t = op;\n                break;\n\n              case 4:\n                _.label++;\n                return {\n                  value: op[1],\n                  done: false\n                };\n\n              case 5:\n                _.label++;\n                y = op[1];\n                op = [0];\n                continue;\n\n              case 7:\n                op = _.ops.pop();\n\n                _.trys.pop();\n\n                continue;\n\n              default:\n                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                  _ = 0;\n                  continue;\n                }\n\n                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                  _.label = op[1];\n                  break;\n                }\n\n                if (op[0] === 6 && _.label < t[1]) {\n                  _.label = t[1];\n                  t = op;\n                  break;\n                }\n\n                if (t && _.label < t[2]) {\n                  _.label = t[2];\n\n                  _.ops.push(op);\n\n                  break;\n                }\n\n                if (t[2]) _.ops.pop();\n\n                _.trys.pop();\n\n                continue;\n            }\n\n            op = body.call(thisArg, _);\n          } catch (e) {\n            op = [6, e];\n            y = 0;\n          } finally {\n            f = t = 0;\n          }\n\n          if (op[0] & 5) throw op[1];\n          return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n          };\n        }\n      };\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.WebSocketClient = void 0;\n\n      var browserWebSocket_1 = require(\"./browserWebSocket\");\n\n      var payloadTransport_1 = require(\"../payloadTransport\");\n\n      var protocolAdapter_1 = require(\"../protocolAdapter\");\n\n      var payloads_1 = require(\"../payloads\");\n\n      var webSocketTransport_1 = require(\"./webSocketTransport\");\n      /**\n       * Web socket based client to be used as streaming transport.\n       */\n\n\n      var WebSocketClient =\n      /** @class */\n      function () {\n        /**\n         * Creates a new instance of the [WebSocketClient](xref:botframework-streaming.WebSocketClient) class.\n         *\n         * @param config For configuring a [WebSocketClient](xref:botframework-streaming.WebSocketClient) instance to communicate with a WebSocket server.\n         * @param config.url The URL of the remote server to connect to.\n         * @param config.requestHandler The [RequestHandler](xref:botframework-streaming.RequestHandler) used to process incoming messages received by this client.\n         * @param config.disconnectionHandler Optional function to handle the disconnection message.\n         */\n        function WebSocketClient(_a) {\n          var url = _a.url,\n              requestHandler = _a.requestHandler,\n              _b = _a.disconnectionHandler,\n              disconnectionHandler = _b === void 0 ? null : _b;\n          this._url = url;\n          this._requestHandler = requestHandler;\n          this._disconnectionHandler = disconnectionHandler;\n          this._requestManager = new payloads_1.RequestManager();\n          this._sender = new payloadTransport_1.PayloadSender();\n          this._sender.disconnected = this.onConnectionDisconnected.bind(this);\n          this._receiver = new payloadTransport_1.PayloadReceiver();\n          this._receiver.disconnected = this.onConnectionDisconnected.bind(this);\n          this._protocolAdapter = new protocolAdapter_1.ProtocolAdapter(this._requestHandler, this._requestManager, this._sender, this._receiver);\n        }\n        /**\n         * Establish a connection with no custom headers.\n         *\n         * @returns A promise that will not resolve until the client stops listening for incoming messages.\n         */\n\n\n        WebSocketClient.prototype.connect = function () {\n          return __awaiter(this, void 0, void 0, function () {\n            var ws, transport;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  ws = new browserWebSocket_1.BrowserWebSocket();\n                  return [4\n                  /*yield*/\n                  , ws.connect(this._url)];\n\n                case 1:\n                  _a.sent();\n\n                  transport = new webSocketTransport_1.WebSocketTransport(ws);\n\n                  this._sender.connect(transport);\n\n                  this._receiver.connect(transport);\n\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        };\n        /**\n         * Stop this client from listening.\n         */\n\n\n        WebSocketClient.prototype.disconnect = function () {\n          this._sender.disconnect(new payloadTransport_1.TransportDisconnectedEvent('Disconnect was called.'));\n\n          this._receiver.disconnect(new payloadTransport_1.TransportDisconnectedEvent('Disconnect was called.'));\n        };\n        /**\n         * Task used to send data over this client connection.\n         *\n         * @param request The streaming request to send.\n         * @returns A promise that will produce an instance of receive response on completion of the send operation.\n         */\n\n\n        WebSocketClient.prototype.send = function (request) {\n          return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n              return [2\n              /*return*/\n              , this._protocolAdapter.sendRequest(request)];\n            });\n          });\n        }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n        WebSocketClient.prototype.onConnectionDisconnected = function (sender, args) {\n          if (this._disconnectionHandler != null) {\n            this._disconnectionHandler('Disconnected');\n\n            return;\n          }\n\n          throw new Error(\"Unable to re-connect client to transport for url \" + this._url + \". Sender: '\" + JSON.stringify(sender) + \"'. Args:' \" + JSON.stringify(args));\n        };\n\n        return WebSocketClient;\n      }();\n\n      exports.WebSocketClient = WebSocketClient;\n    }, {\n      \"../payloadTransport\": 10,\n      \"../payloads\": 16,\n      \"../protocolAdapter\": 23,\n      \"./browserWebSocket\": 29,\n      \"./webSocketTransport\": 32\n    }],\n    31: [function (require, module, exports) {\n      \"use strict\";\n      /**\n       * @module botframework-streaming\n       */\n\n      /**\n       * Copyright (c) Microsoft Corporation. All rights reserved.\n       * Licensed under the MIT License.\n       */\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.WebSocketTransport = exports.WebSocketClient = exports.BrowserWebSocket = void 0;\n\n      var browserWebSocket_1 = require(\"./browserWebSocket\");\n\n      Object.defineProperty(exports, \"BrowserWebSocket\", {\n        enumerable: true,\n        get: function () {\n          return browserWebSocket_1.BrowserWebSocket;\n        }\n      });\n\n      var browserWebSocketClient_1 = require(\"./browserWebSocketClient\");\n\n      Object.defineProperty(exports, \"WebSocketClient\", {\n        enumerable: true,\n        get: function () {\n          return browserWebSocketClient_1.WebSocketClient;\n        }\n      });\n      /** @internal */\n\n      var webSocketTransport_1 = require(\"./webSocketTransport\");\n\n      Object.defineProperty(exports, \"WebSocketTransport\", {\n        enumerable: true,\n        get: function () {\n          return webSocketTransport_1.WebSocketTransport;\n        }\n      });\n    }, {\n      \"./browserWebSocket\": 29,\n      \"./browserWebSocketClient\": 30,\n      \"./webSocketTransport\": 32\n    }],\n    32: [function (require, module, exports) {\n      (function (Buffer) {\n        (function () {\n          \"use strict\";\n          /**\n           * @module botframework-streaming\n           */\n\n          /**\n           * Copyright (c) Microsoft Corporation. All rights reserved.\n           * Licensed under the MIT License.\n           */\n\n          var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n            function adopt(value) {\n              return value instanceof P ? value : new P(function (resolve) {\n                resolve(value);\n              });\n            }\n\n            return new (P || (P = Promise))(function (resolve, reject) {\n              function fulfilled(value) {\n                try {\n                  step(generator.next(value));\n                } catch (e) {\n                  reject(e);\n                }\n              }\n\n              function rejected(value) {\n                try {\n                  step(generator[\"throw\"](value));\n                } catch (e) {\n                  reject(e);\n                }\n              }\n\n              function step(result) {\n                result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n              }\n\n              step((generator = generator.apply(thisArg, _arguments || [])).next());\n            });\n          };\n\n          var __generator = this && this.__generator || function (thisArg, body) {\n            var _ = {\n              label: 0,\n              sent: function () {\n                if (t[0] & 1) throw t[1];\n                return t[1];\n              },\n              trys: [],\n              ops: []\n            },\n                f,\n                y,\n                t,\n                g;\n            return g = {\n              next: verb(0),\n              \"throw\": verb(1),\n              \"return\": verb(2)\n            }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n              return this;\n            }), g;\n\n            function verb(n) {\n              return function (v) {\n                return step([n, v]);\n              };\n            }\n\n            function step(op) {\n              if (f) throw new TypeError(\"Generator is already executing.\");\n\n              while (_) try {\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n                if (y = 0, t) op = [op[0] & 2, t.value];\n\n                switch (op[0]) {\n                  case 0:\n                  case 1:\n                    t = op;\n                    break;\n\n                  case 4:\n                    _.label++;\n                    return {\n                      value: op[1],\n                      done: false\n                    };\n\n                  case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [0];\n                    continue;\n\n                  case 7:\n                    op = _.ops.pop();\n\n                    _.trys.pop();\n\n                    continue;\n\n                  default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                      _ = 0;\n                      continue;\n                    }\n\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                      _.label = op[1];\n                      break;\n                    }\n\n                    if (op[0] === 6 && _.label < t[1]) {\n                      _.label = t[1];\n                      t = op;\n                      break;\n                    }\n\n                    if (t && _.label < t[2]) {\n                      _.label = t[2];\n\n                      _.ops.push(op);\n\n                      break;\n                    }\n\n                    if (t[2]) _.ops.pop();\n\n                    _.trys.pop();\n\n                    continue;\n                }\n\n                op = body.call(thisArg, _);\n              } catch (e) {\n                op = [6, e];\n                y = 0;\n              } finally {\n                f = t = 0;\n              }\n\n              if (op[0] & 5) throw op[1];\n              return {\n                value: op[0] ? op[1] : void 0,\n                done: true\n              };\n            }\n          };\n\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports.WebSocketTransport = void 0;\n          /**\n           * Web socket based transport.\n           */\n\n          var WebSocketTransport =\n          /** @class */\n          function () {\n            /**\n             * Creates a new instance of the [WebSocketTransport](xref:botframework-streaming.WebSocketTransport) class.\n             *\n             * @param ws The ISocket to build this transport on top of.\n             */\n            function WebSocketTransport(ws) {\n              var _this = this;\n\n              this.ws = ws;\n              this._queue = [];\n              this._activeOffset = 0;\n              this._activeReceiveCount = 0;\n              this.ws.setOnMessageHandler(function (data) {\n                _this.onReceive(data);\n              });\n              this.ws.setOnErrorHandler(function (err) {\n                _this.onError(err);\n              });\n              this.ws.setOnCloseHandler(function () {\n                _this.onClose();\n              });\n            }\n            /**\n             * Sends the given buffer out over the socket's connection.\n             *\n             * @param buffer The buffered data to send out over the connection.\n             * @returns A number indicating the length of the sent data if the data was successfully sent, otherwise 0.\n             */\n\n\n            WebSocketTransport.prototype.send = function (buffer) {\n              var _a;\n\n              if ((_a = this.ws) === null || _a === void 0 ? void 0 : _a.isConnected) {\n                this.ws.write(buffer);\n                return buffer.length;\n              }\n\n              return 0;\n            };\n\n            Object.defineProperty(WebSocketTransport.prototype, \"isConnected\", {\n              /**\n               * Returns true if the transport is connected to a socket.\n               *\n               * @returns `true` if the the transport is connected and ready to send data, `false` otherwise.\n               */\n              get: function () {\n                var _a;\n\n                return (_a = this.ws) === null || _a === void 0 ? void 0 : _a.isConnected;\n              },\n              enumerable: false,\n              configurable: true\n            });\n            /**\n             * Close the socket this transport is connected to.\n             */\n\n            WebSocketTransport.prototype.close = function () {\n              var _a;\n\n              if ((_a = this.ws) === null || _a === void 0 ? void 0 : _a.isConnected) {\n                this.ws.close();\n              }\n            };\n            /**\n             * Attempt to receive incoming data from the connected socket.\n             *\n             * @param count The number of bytes to attempt to receive.\n             * @returns A buffer populated with the received data.\n             */\n\n\n            WebSocketTransport.prototype.receive = function (count) {\n              return __awaiter(this, void 0, void 0, function () {\n                var promise;\n\n                var _this = this;\n\n                return __generator(this, function (_a) {\n                  if (this._activeReceiveResolve) {\n                    throw new Error('Cannot call receive more than once before it has returned.');\n                  }\n\n                  this._activeReceiveCount = count;\n                  promise = new Promise(function (resolve, reject) {\n                    _this._activeReceiveResolve = resolve;\n                    _this._activeReceiveReject = reject;\n                  });\n                  this.trySignalData();\n                  return [2\n                  /*return*/\n                  , promise];\n                });\n              });\n            };\n            /**\n             * Sets the transport to attempt to receive incoming data that has not yet arrived.\n             *\n             * @param data A buffer to store incoming data in.\n             */\n\n\n            WebSocketTransport.prototype.onReceive = function (data) {\n              if (this._queue && data && data.byteLength > 0) {\n                this._queue.push(Buffer.from(data));\n\n                this.trySignalData();\n              }\n            };\n\n            WebSocketTransport.prototype.onClose = function () {\n              if (this._activeReceiveReject) {\n                this._activeReceiveReject(new Error('Socket was closed.'));\n              }\n\n              this._active = null;\n              this._activeOffset = 0;\n              this._activeReceiveResolve = null;\n              this._activeReceiveReject = null;\n              this._activeReceiveCount = 0;\n              this.ws = null;\n            };\n\n            WebSocketTransport.prototype.onError = function (err) {\n              if (this._activeReceiveReject) {\n                this._activeReceiveReject(err);\n              }\n\n              this.onClose();\n            };\n\n            WebSocketTransport.prototype.trySignalData = function () {\n              if (this._activeReceiveResolve) {\n                if (!this._active && this._queue.length > 0) {\n                  this._active = this._queue.shift();\n                  this._activeOffset = 0;\n                }\n\n                if (this._active) {\n                  if (this._activeOffset === 0 && this._active.length === this._activeReceiveCount) {\n                    // can send the entire _active buffer\n                    var buffer = this._active;\n                    this._active = null;\n\n                    this._activeReceiveResolve(buffer);\n                  } else {\n                    // create a Buffer.from and copy some of the contents into it\n                    var available = Math.min(this._activeReceiveCount, this._active.length - this._activeOffset);\n                    var buffer = Buffer.alloc(available);\n\n                    this._active.copy(buffer, 0, this._activeOffset, this._activeOffset + available);\n\n                    this._activeOffset += available; // if we used all of active, set it to undefined\n\n                    if (this._activeOffset >= this._active.length) {\n                      this._active = null;\n                      this._activeOffset = 0;\n                    }\n\n                    this._activeReceiveResolve(buffer);\n                  }\n\n                  this._activeReceiveCount = 0;\n                  this._activeReceiveReject = null;\n                  this._activeReceiveResolve = null;\n                }\n              }\n            };\n\n            return WebSocketTransport;\n          }();\n\n          exports.WebSocketTransport = WebSocketTransport;\n        }).call(this);\n      }).call(this, require(\"buffer\").Buffer);\n    }, {\n      \"buffer\": 50\n    }],\n    33: [function (require, module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      Object.defineProperty(exports, \"v1\", {\n        enumerable: true,\n        get: function () {\n          return _v.default;\n        }\n      });\n      Object.defineProperty(exports, \"v3\", {\n        enumerable: true,\n        get: function () {\n          return _v2.default;\n        }\n      });\n      Object.defineProperty(exports, \"v4\", {\n        enumerable: true,\n        get: function () {\n          return _v3.default;\n        }\n      });\n      Object.defineProperty(exports, \"v5\", {\n        enumerable: true,\n        get: function () {\n          return _v4.default;\n        }\n      });\n      Object.defineProperty(exports, \"NIL\", {\n        enumerable: true,\n        get: function () {\n          return _nil.default;\n        }\n      });\n      Object.defineProperty(exports, \"version\", {\n        enumerable: true,\n        get: function () {\n          return _version.default;\n        }\n      });\n      Object.defineProperty(exports, \"validate\", {\n        enumerable: true,\n        get: function () {\n          return _validate.default;\n        }\n      });\n      Object.defineProperty(exports, \"stringify\", {\n        enumerable: true,\n        get: function () {\n          return _stringify.default;\n        }\n      });\n      Object.defineProperty(exports, \"parse\", {\n        enumerable: true,\n        get: function () {\n          return _parse.default;\n        }\n      });\n\n      var _v = _interopRequireDefault(require(\"./v1.js\"));\n\n      var _v2 = _interopRequireDefault(require(\"./v3.js\"));\n\n      var _v3 = _interopRequireDefault(require(\"./v4.js\"));\n\n      var _v4 = _interopRequireDefault(require(\"./v5.js\"));\n\n      var _nil = _interopRequireDefault(require(\"./nil.js\"));\n\n      var _version = _interopRequireDefault(require(\"./version.js\"));\n\n      var _validate = _interopRequireDefault(require(\"./validate.js\"));\n\n      var _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\n      var _parse = _interopRequireDefault(require(\"./parse.js\"));\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n    }, {\n      \"./nil.js\": 35,\n      \"./parse.js\": 36,\n      \"./stringify.js\": 40,\n      \"./v1.js\": 41,\n      \"./v3.js\": 42,\n      \"./v4.js\": 44,\n      \"./v5.js\": 45,\n      \"./validate.js\": 46,\n      \"./version.js\": 47\n    }],\n    34: [function (require, module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.default = void 0;\n      /*\n       * Browser-compatible JavaScript MD5\n       *\n       * Modification of JavaScript MD5\n       * https://github.com/blueimp/JavaScript-MD5\n       *\n       * Copyright 2011, Sebastian Tschan\n       * https://blueimp.net\n       *\n       * Licensed under the MIT license:\n       * https://opensource.org/licenses/MIT\n       *\n       * Based on\n       * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n       * Digest Algorithm, as defined in RFC 1321.\n       * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n       * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n       * Distributed under the BSD License\n       * See http://pajhome.org.uk/crypt/md5 for more info.\n       */\n\n      function md5(bytes) {\n        if (typeof bytes === 'string') {\n          const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n          bytes = new Uint8Array(msg.length);\n\n          for (let i = 0; i < msg.length; ++i) {\n            bytes[i] = msg.charCodeAt(i);\n          }\n        }\n\n        return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n      }\n      /*\n       * Convert an array of little-endian words to an array of bytes\n       */\n\n\n      function md5ToHexEncodedArray(input) {\n        const output = [];\n        const length32 = input.length * 32;\n        const hexTab = '0123456789abcdef';\n\n        for (let i = 0; i < length32; i += 8) {\n          const x = input[i >> 5] >>> i % 32 & 0xff;\n          const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n          output.push(hex);\n        }\n\n        return output;\n      }\n      /**\n       * Calculate output length with padding and bit length\n       */\n\n\n      function getOutputLength(inputLength8) {\n        return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n      }\n      /*\n       * Calculate the MD5 of an array of little-endian words, and a bit length.\n       */\n\n\n      function wordsToMd5(x, len) {\n        /* append padding */\n        x[len >> 5] |= 0x80 << len % 32;\n        x[getOutputLength(len) - 1] = len;\n        let a = 1732584193;\n        let b = -271733879;\n        let c = -1732584194;\n        let d = 271733878;\n\n        for (let i = 0; i < x.length; i += 16) {\n          const olda = a;\n          const oldb = b;\n          const oldc = c;\n          const oldd = d;\n          a = md5ff(a, b, c, d, x[i], 7, -680876936);\n          d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n          c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n          b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n          a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n          d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n          c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n          b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n          a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n          d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n          c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n          b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n          a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n          d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n          c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n          b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n          a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n          d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n          c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n          b = md5gg(b, c, d, a, x[i], 20, -373897302);\n          a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n          d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n          c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n          b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n          a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n          d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n          c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n          b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n          a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n          d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n          c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n          b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n          a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n          d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n          c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n          b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n          a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n          d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n          c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n          b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n          a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n          d = md5hh(d, a, b, c, x[i], 11, -358537222);\n          c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n          b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n          a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n          d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n          c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n          b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n          a = md5ii(a, b, c, d, x[i], 6, -198630844);\n          d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n          c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n          b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n          a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n          d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n          c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n          b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n          a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n          d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n          c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n          b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n          a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n          d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n          c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n          b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n          a = safeAdd(a, olda);\n          b = safeAdd(b, oldb);\n          c = safeAdd(c, oldc);\n          d = safeAdd(d, oldd);\n        }\n\n        return [a, b, c, d];\n      }\n      /*\n       * Convert an array bytes to an array of little-endian words\n       * Characters >255 have their high-byte silently ignored.\n       */\n\n\n      function bytesToWords(input) {\n        if (input.length === 0) {\n          return [];\n        }\n\n        const length8 = input.length * 8;\n        const output = new Uint32Array(getOutputLength(length8));\n\n        for (let i = 0; i < length8; i += 8) {\n          output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n        }\n\n        return output;\n      }\n      /*\n       * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n       * to work around bugs in some JS interpreters.\n       */\n\n\n      function safeAdd(x, y) {\n        const lsw = (x & 0xffff) + (y & 0xffff);\n        const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n        return msw << 16 | lsw & 0xffff;\n      }\n      /*\n       * Bitwise rotate a 32-bit number to the left.\n       */\n\n\n      function bitRotateLeft(num, cnt) {\n        return num << cnt | num >>> 32 - cnt;\n      }\n      /*\n       * These functions implement the four basic operations the algorithm uses.\n       */\n\n\n      function md5cmn(q, a, b, x, s, t) {\n        return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n      }\n\n      function md5ff(a, b, c, d, x, s, t) {\n        return md5cmn(b & c | ~b & d, a, b, x, s, t);\n      }\n\n      function md5gg(a, b, c, d, x, s, t) {\n        return md5cmn(b & d | c & ~d, a, b, x, s, t);\n      }\n\n      function md5hh(a, b, c, d, x, s, t) {\n        return md5cmn(b ^ c ^ d, a, b, x, s, t);\n      }\n\n      function md5ii(a, b, c, d, x, s, t) {\n        return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n      }\n\n      var _default = md5;\n      exports.default = _default;\n    }, {}],\n    35: [function (require, module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.default = void 0;\n      var _default = '00000000-0000-0000-0000-000000000000';\n      exports.default = _default;\n    }, {}],\n    36: [function (require, module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.default = void 0;\n\n      var _validate = _interopRequireDefault(require(\"./validate.js\"));\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function parse(uuid) {\n        if (!(0, _validate.default)(uuid)) {\n          throw TypeError('Invalid UUID');\n        }\n\n        let v;\n        const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n        arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n        arr[1] = v >>> 16 & 0xff;\n        arr[2] = v >>> 8 & 0xff;\n        arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n        arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n        arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n        arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n        arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n        arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n        arr[9] = v & 0xff; // Parse ........-....-....-....-############\n        // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n        arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n        arr[11] = v / 0x100000000 & 0xff;\n        arr[12] = v >>> 24 & 0xff;\n        arr[13] = v >>> 16 & 0xff;\n        arr[14] = v >>> 8 & 0xff;\n        arr[15] = v & 0xff;\n        return arr;\n      }\n\n      var _default = parse;\n      exports.default = _default;\n    }, {\n      \"./validate.js\": 46\n    }],\n    37: [function (require, module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.default = void 0;\n      var _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\n      exports.default = _default;\n    }, {}],\n    38: [function (require, module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.default = rng; // Unique ID creation requires a high quality random # generator. In the browser we therefore\n      // require the crypto API and do not support built-in fallback to lower quality random number\n      // generators (like Math.random()).\n\n      let getRandomValues;\n      const rnds8 = new Uint8Array(16);\n\n      function rng() {\n        // lazy load so that environments that need to polyfill have a chance to do so\n        if (!getRandomValues) {\n          // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n          // find the complete implementation of crypto (msCrypto) on IE11.\n          getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n          if (!getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n          }\n        }\n\n        return getRandomValues(rnds8);\n      }\n    }, {}],\n    39: [function (require, module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.default = void 0; // Adapted from Chris Veness' SHA1 code at\n      // http://www.movable-type.co.uk/scripts/sha1.html\n\n      function f(s, x, y, z) {\n        switch (s) {\n          case 0:\n            return x & y ^ ~x & z;\n\n          case 1:\n            return x ^ y ^ z;\n\n          case 2:\n            return x & y ^ x & z ^ y & z;\n\n          case 3:\n            return x ^ y ^ z;\n        }\n      }\n\n      function ROTL(x, n) {\n        return x << n | x >>> 32 - n;\n      }\n\n      function sha1(bytes) {\n        const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n        const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n        if (typeof bytes === 'string') {\n          const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n          bytes = [];\n\n          for (let i = 0; i < msg.length; ++i) {\n            bytes.push(msg.charCodeAt(i));\n          }\n        } else if (!Array.isArray(bytes)) {\n          // Convert Array-like to Array\n          bytes = Array.prototype.slice.call(bytes);\n        }\n\n        bytes.push(0x80);\n        const l = bytes.length / 4 + 2;\n        const N = Math.ceil(l / 16);\n        const M = new Array(N);\n\n        for (let i = 0; i < N; ++i) {\n          const arr = new Uint32Array(16);\n\n          for (let j = 0; j < 16; ++j) {\n            arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n          }\n\n          M[i] = arr;\n        }\n\n        M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n        M[N - 1][14] = Math.floor(M[N - 1][14]);\n        M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n        for (let i = 0; i < N; ++i) {\n          const W = new Uint32Array(80);\n\n          for (let t = 0; t < 16; ++t) {\n            W[t] = M[i][t];\n          }\n\n          for (let t = 16; t < 80; ++t) {\n            W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n          }\n\n          let a = H[0];\n          let b = H[1];\n          let c = H[2];\n          let d = H[3];\n          let e = H[4];\n\n          for (let t = 0; t < 80; ++t) {\n            const s = Math.floor(t / 20);\n            const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n            e = d;\n            d = c;\n            c = ROTL(b, 30) >>> 0;\n            b = a;\n            a = T;\n          }\n\n          H[0] = H[0] + a >>> 0;\n          H[1] = H[1] + b >>> 0;\n          H[2] = H[2] + c >>> 0;\n          H[3] = H[3] + d >>> 0;\n          H[4] = H[4] + e >>> 0;\n        }\n\n        return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n      }\n\n      var _default = sha1;\n      exports.default = _default;\n    }, {}],\n    40: [function (require, module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.default = void 0;\n\n      var _validate = _interopRequireDefault(require(\"./validate.js\"));\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n      /**\n       * Convert array of 16 byte values to UUID string format of the form:\n       * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n       */\n\n\n      const byteToHex = [];\n\n      for (let i = 0; i < 256; ++i) {\n        byteToHex.push((i + 0x100).toString(16).substr(1));\n      }\n\n      function stringify(arr) {\n        let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        // Note: Be careful editing this code!  It's been tuned for performance\n        // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n        const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n        // of the following:\n        // - One or more input array values don't map to a hex octet (leading to\n        // \"undefined\" in the uuid)\n        // - Invalid input values for the RFC `version` or `variant` fields\n\n        if (!(0, _validate.default)(uuid)) {\n          throw TypeError('Stringified UUID is invalid');\n        }\n\n        return uuid;\n      }\n\n      var _default = stringify;\n      exports.default = _default;\n    }, {\n      \"./validate.js\": 46\n    }],\n    41: [function (require, module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.default = void 0;\n\n      var _rng = _interopRequireDefault(require(\"./rng.js\"));\n\n      var _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      } // **`v1()` - Generate time-based UUID**\n      //\n      // Inspired by https://github.com/LiosK/UUID.js\n      // and http://docs.python.org/library/uuid.html\n\n\n      let _nodeId;\n\n      let _clockseq; // Previous uuid creation time\n\n\n      let _lastMSecs = 0;\n      let _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\n      function v1(options, buf, offset) {\n        let i = buf && offset || 0;\n        const b = buf || new Array(16);\n        options = options || {};\n        let node = options.node || _nodeId;\n        let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n        // specified.  We do this lazily to minimize issues related to insufficient\n        // system entropy.  See #189\n\n        if (node == null || clockseq == null) {\n          const seedBytes = options.random || (options.rng || _rng.default)();\n\n          if (node == null) {\n            // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n            node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n          }\n\n          if (clockseq == null) {\n            // Per 4.2.2, randomize (14 bit) clockseq\n            clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n          }\n        } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n        // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n        // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n        // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n        let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n        // cycle to simulate higher resolution clock\n\n        let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n        const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n        if (dt < 0 && options.clockseq === undefined) {\n          clockseq = clockseq + 1 & 0x3fff;\n        } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n        // time interval\n\n\n        if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n          nsecs = 0;\n        } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n        if (nsecs >= 10000) {\n          throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n        }\n\n        _lastMSecs = msecs;\n        _lastNSecs = nsecs;\n        _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n        msecs += 12219292800000; // `time_low`\n\n        const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n        b[i++] = tl >>> 24 & 0xff;\n        b[i++] = tl >>> 16 & 0xff;\n        b[i++] = tl >>> 8 & 0xff;\n        b[i++] = tl & 0xff; // `time_mid`\n\n        const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n        b[i++] = tmh >>> 8 & 0xff;\n        b[i++] = tmh & 0xff; // `time_high_and_version`\n\n        b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n        b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n        b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n        b[i++] = clockseq & 0xff; // `node`\n\n        for (let n = 0; n < 6; ++n) {\n          b[i + n] = node[n];\n        }\n\n        return buf || (0, _stringify.default)(b);\n      }\n\n      var _default = v1;\n      exports.default = _default;\n    }, {\n      \"./rng.js\": 38,\n      \"./stringify.js\": 40\n    }],\n    42: [function (require, module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.default = void 0;\n\n      var _v = _interopRequireDefault(require(\"./v35.js\"));\n\n      var _md = _interopRequireDefault(require(\"./md5.js\"));\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      const v3 = (0, _v.default)('v3', 0x30, _md.default);\n      var _default = v3;\n      exports.default = _default;\n    }, {\n      \"./md5.js\": 34,\n      \"./v35.js\": 43\n    }],\n    43: [function (require, module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.default = _default;\n      exports.URL = exports.DNS = void 0;\n\n      var _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\n      var _parse = _interopRequireDefault(require(\"./parse.js\"));\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function stringToBytes(str) {\n        str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n        const bytes = [];\n\n        for (let i = 0; i < str.length; ++i) {\n          bytes.push(str.charCodeAt(i));\n        }\n\n        return bytes;\n      }\n\n      const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\n      exports.DNS = DNS;\n      const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\n      exports.URL = URL;\n\n      function _default(name, version, hashfunc) {\n        function generateUUID(value, namespace, buf, offset) {\n          if (typeof value === 'string') {\n            value = stringToBytes(value);\n          }\n\n          if (typeof namespace === 'string') {\n            namespace = (0, _parse.default)(namespace);\n          }\n\n          if (namespace.length !== 16) {\n            throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n          } // Compute hash of namespace and value, Per 4.3\n          // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n          // hashfunc([...namespace, ... value])`\n\n\n          let bytes = new Uint8Array(16 + value.length);\n          bytes.set(namespace);\n          bytes.set(value, namespace.length);\n          bytes = hashfunc(bytes);\n          bytes[6] = bytes[6] & 0x0f | version;\n          bytes[8] = bytes[8] & 0x3f | 0x80;\n\n          if (buf) {\n            offset = offset || 0;\n\n            for (let i = 0; i < 16; ++i) {\n              buf[offset + i] = bytes[i];\n            }\n\n            return buf;\n          }\n\n          return (0, _stringify.default)(bytes);\n        } // Function#name is not settable on some platforms (#270)\n\n\n        try {\n          generateUUID.name = name; // eslint-disable-next-line no-empty\n        } catch (err) {} // For CommonJS default export support\n\n\n        generateUUID.DNS = DNS;\n        generateUUID.URL = URL;\n        return generateUUID;\n      }\n    }, {\n      \"./parse.js\": 36,\n      \"./stringify.js\": 40\n    }],\n    44: [function (require, module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.default = void 0;\n\n      var _rng = _interopRequireDefault(require(\"./rng.js\"));\n\n      var _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function v4(options, buf, offset) {\n        options = options || {};\n\n        const rnds = options.random || (options.rng || _rng.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n\n        rnds[6] = rnds[6] & 0x0f | 0x40;\n        rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n        if (buf) {\n          offset = offset || 0;\n\n          for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n          }\n\n          return buf;\n        }\n\n        return (0, _stringify.default)(rnds);\n      }\n\n      var _default = v4;\n      exports.default = _default;\n    }, {\n      \"./rng.js\": 38,\n      \"./stringify.js\": 40\n    }],\n    45: [function (require, module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.default = void 0;\n\n      var _v = _interopRequireDefault(require(\"./v35.js\"));\n\n      var _sha = _interopRequireDefault(require(\"./sha1.js\"));\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      const v5 = (0, _v.default)('v5', 0x50, _sha.default);\n      var _default = v5;\n      exports.default = _default;\n    }, {\n      \"./sha1.js\": 39,\n      \"./v35.js\": 43\n    }],\n    46: [function (require, module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.default = void 0;\n\n      var _regex = _interopRequireDefault(require(\"./regex.js\"));\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function validate(uuid) {\n        return typeof uuid === 'string' && _regex.default.test(uuid);\n      }\n\n      var _default = validate;\n      exports.default = _default;\n    }, {\n      \"./regex.js\": 37\n    }],\n    47: [function (require, module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.default = void 0;\n\n      var _validate = _interopRequireDefault(require(\"./validate.js\"));\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function version(uuid) {\n        if (!(0, _validate.default)(uuid)) {\n          throw TypeError('Invalid UUID');\n        }\n\n        return parseInt(uuid.substr(14, 1), 16);\n      }\n\n      var _default = version;\n      exports.default = _default;\n    }, {\n      \"./validate.js\": 46\n    }],\n    48: [function (require, module, exports) {\n      'use strict';\n\n      exports.byteLength = byteLength;\n      exports.toByteArray = toByteArray;\n      exports.fromByteArray = fromByteArray;\n      var lookup = [];\n      var revLookup = [];\n      var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\n      var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n      for (var i = 0, len = code.length; i < len; ++i) {\n        lookup[i] = code[i];\n        revLookup[code.charCodeAt(i)] = i;\n      } // Support decoding URL-safe base64 strings, as Node.js does.\n      // See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\n\n      revLookup['-'.charCodeAt(0)] = 62;\n      revLookup['_'.charCodeAt(0)] = 63;\n\n      function getLens(b64) {\n        var len = b64.length;\n\n        if (len % 4 > 0) {\n          throw new Error('Invalid string. Length must be a multiple of 4');\n        } // Trim off extra bytes after placeholder bytes are found\n        // See: https://github.com/beatgammit/base64-js/issues/42\n\n\n        var validLen = b64.indexOf('=');\n        if (validLen === -1) validLen = len;\n        var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n        return [validLen, placeHoldersLen];\n      } // base64 is 4/3 + up to two characters of the original data\n\n\n      function byteLength(b64) {\n        var lens = getLens(b64);\n        var validLen = lens[0];\n        var placeHoldersLen = lens[1];\n        return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n      }\n\n      function _byteLength(b64, validLen, placeHoldersLen) {\n        return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n      }\n\n      function toByteArray(b64) {\n        var tmp;\n        var lens = getLens(b64);\n        var validLen = lens[0];\n        var placeHoldersLen = lens[1];\n        var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n        var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars\n\n        var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n        var i;\n\n        for (i = 0; i < len; i += 4) {\n          tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n          arr[curByte++] = tmp >> 16 & 0xFF;\n          arr[curByte++] = tmp >> 8 & 0xFF;\n          arr[curByte++] = tmp & 0xFF;\n        }\n\n        if (placeHoldersLen === 2) {\n          tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n          arr[curByte++] = tmp & 0xFF;\n        }\n\n        if (placeHoldersLen === 1) {\n          tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n          arr[curByte++] = tmp >> 8 & 0xFF;\n          arr[curByte++] = tmp & 0xFF;\n        }\n\n        return arr;\n      }\n\n      function tripletToBase64(num) {\n        return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n      }\n\n      function encodeChunk(uint8, start, end) {\n        var tmp;\n        var output = [];\n\n        for (var i = start; i < end; i += 3) {\n          tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n          output.push(tripletToBase64(tmp));\n        }\n\n        return output.join('');\n      }\n\n      function fromByteArray(uint8) {\n        var tmp;\n        var len = uint8.length;\n        var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n        var parts = [];\n        var maxChunkLength = 16383; // must be multiple of 3\n        // go through the array every three bytes, we'll deal with trailing stuff later\n\n        for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n          parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n        } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n        if (extraBytes === 1) {\n          tmp = uint8[len - 1];\n          parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n        } else if (extraBytes === 2) {\n          tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n          parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n        }\n\n        return parts.join('');\n      }\n    }, {}],\n    49: [function (require, module, exports) {}, {}],\n    50: [function (require, module, exports) {\n      (function (Buffer) {\n        (function () {\n          /*!\n           * The buffer module from node.js, for the browser.\n           *\n           * @author   Feross Aboukhadijeh <https://feross.org>\n           * @license  MIT\n           */\n\n          /* eslint-disable no-proto */\n          'use strict';\n\n          var base64 = require('base64-js');\n\n          var ieee754 = require('ieee754');\n\n          exports.Buffer = Buffer;\n          exports.SlowBuffer = SlowBuffer;\n          exports.INSPECT_MAX_BYTES = 50;\n          var K_MAX_LENGTH = 0x7fffffff;\n          exports.kMaxLength = K_MAX_LENGTH;\n          /**\n           * If `Buffer.TYPED_ARRAY_SUPPORT`:\n           *   === true    Use Uint8Array implementation (fastest)\n           *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n           *               implementation (most compatible, even IE6)\n           *\n           * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n           * Opera 11.6+, iOS 4.2+.\n           *\n           * We report that the browser does not support typed arrays if the are not subclassable\n           * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n           * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n           * for __proto__ and has a buggy typed array implementation.\n           */\n\n          Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\n\n          if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') {\n            console.error('This browser lacks typed array (Uint8Array) support which is required by ' + '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');\n          }\n\n          function typedArraySupport() {\n            // Can typed array instances can be augmented?\n            try {\n              var arr = new Uint8Array(1);\n              arr.__proto__ = {\n                __proto__: Uint8Array.prototype,\n                foo: function () {\n                  return 42;\n                }\n              };\n              return arr.foo() === 42;\n            } catch (e) {\n              return false;\n            }\n          }\n\n          Object.defineProperty(Buffer.prototype, 'parent', {\n            enumerable: true,\n            get: function () {\n              if (!Buffer.isBuffer(this)) return undefined;\n              return this.buffer;\n            }\n          });\n          Object.defineProperty(Buffer.prototype, 'offset', {\n            enumerable: true,\n            get: function () {\n              if (!Buffer.isBuffer(this)) return undefined;\n              return this.byteOffset;\n            }\n          });\n\n          function createBuffer(length) {\n            if (length > K_MAX_LENGTH) {\n              throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n            } // Return an augmented `Uint8Array` instance\n\n\n            var buf = new Uint8Array(length);\n            buf.__proto__ = Buffer.prototype;\n            return buf;\n          }\n          /**\n           * The Buffer constructor returns instances of `Uint8Array` that have their\n           * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n           * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n           * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n           * returns a single octet.\n           *\n           * The `Uint8Array` prototype remains unmodified.\n           */\n\n\n          function Buffer(arg, encodingOrOffset, length) {\n            // Common case.\n            if (typeof arg === 'number') {\n              if (typeof encodingOrOffset === 'string') {\n                throw new TypeError('The \"string\" argument must be of type string. Received type number');\n              }\n\n              return allocUnsafe(arg);\n            }\n\n            return from(arg, encodingOrOffset, length);\n          } // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n\n\n          if (typeof Symbol !== 'undefined' && Symbol.species != null && Buffer[Symbol.species] === Buffer) {\n            Object.defineProperty(Buffer, Symbol.species, {\n              value: null,\n              configurable: true,\n              enumerable: false,\n              writable: false\n            });\n          }\n\n          Buffer.poolSize = 8192; // not used by this implementation\n\n          function from(value, encodingOrOffset, length) {\n            if (typeof value === 'string') {\n              return fromString(value, encodingOrOffset);\n            }\n\n            if (ArrayBuffer.isView(value)) {\n              return fromArrayLike(value);\n            }\n\n            if (value == null) {\n              throw TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);\n            }\n\n            if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {\n              return fromArrayBuffer(value, encodingOrOffset, length);\n            }\n\n            if (typeof value === 'number') {\n              throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n            }\n\n            var valueOf = value.valueOf && value.valueOf();\n\n            if (valueOf != null && valueOf !== value) {\n              return Buffer.from(valueOf, encodingOrOffset, length);\n            }\n\n            var b = fromObject(value);\n            if (b) return b;\n\n            if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === 'function') {\n              return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length);\n            }\n\n            throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);\n          }\n          /**\n           * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n           * if value is a number.\n           * Buffer.from(str[, encoding])\n           * Buffer.from(array)\n           * Buffer.from(buffer)\n           * Buffer.from(arrayBuffer[, byteOffset[, length]])\n           **/\n\n\n          Buffer.from = function (value, encodingOrOffset, length) {\n            return from(value, encodingOrOffset, length);\n          }; // Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n          // https://github.com/feross/buffer/pull/148\n\n\n          Buffer.prototype.__proto__ = Uint8Array.prototype;\n          Buffer.__proto__ = Uint8Array;\n\n          function assertSize(size) {\n            if (typeof size !== 'number') {\n              throw new TypeError('\"size\" argument must be of type number');\n            } else if (size < 0) {\n              throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n            }\n          }\n\n          function alloc(size, fill, encoding) {\n            assertSize(size);\n\n            if (size <= 0) {\n              return createBuffer(size);\n            }\n\n            if (fill !== undefined) {\n              // Only pay attention to encoding if it's a string. This\n              // prevents accidentally sending in a number that would\n              // be interpretted as a start offset.\n              return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);\n            }\n\n            return createBuffer(size);\n          }\n          /**\n           * Creates a new filled Buffer instance.\n           * alloc(size[, fill[, encoding]])\n           **/\n\n\n          Buffer.alloc = function (size, fill, encoding) {\n            return alloc(size, fill, encoding);\n          };\n\n          function allocUnsafe(size) {\n            assertSize(size);\n            return createBuffer(size < 0 ? 0 : checked(size) | 0);\n          }\n          /**\n           * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n           * */\n\n\n          Buffer.allocUnsafe = function (size) {\n            return allocUnsafe(size);\n          };\n          /**\n           * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n           */\n\n\n          Buffer.allocUnsafeSlow = function (size) {\n            return allocUnsafe(size);\n          };\n\n          function fromString(string, encoding) {\n            if (typeof encoding !== 'string' || encoding === '') {\n              encoding = 'utf8';\n            }\n\n            if (!Buffer.isEncoding(encoding)) {\n              throw new TypeError('Unknown encoding: ' + encoding);\n            }\n\n            var length = byteLength(string, encoding) | 0;\n            var buf = createBuffer(length);\n            var actual = buf.write(string, encoding);\n\n            if (actual !== length) {\n              // Writing a hex string, for example, that contains invalid characters will\n              // cause everything after the first invalid character to be ignored. (e.g.\n              // 'abxxcd' will be treated as 'ab')\n              buf = buf.slice(0, actual);\n            }\n\n            return buf;\n          }\n\n          function fromArrayLike(array) {\n            var length = array.length < 0 ? 0 : checked(array.length) | 0;\n            var buf = createBuffer(length);\n\n            for (var i = 0; i < length; i += 1) {\n              buf[i] = array[i] & 255;\n            }\n\n            return buf;\n          }\n\n          function fromArrayBuffer(array, byteOffset, length) {\n            if (byteOffset < 0 || array.byteLength < byteOffset) {\n              throw new RangeError('\"offset\" is outside of buffer bounds');\n            }\n\n            if (array.byteLength < byteOffset + (length || 0)) {\n              throw new RangeError('\"length\" is outside of buffer bounds');\n            }\n\n            var buf;\n\n            if (byteOffset === undefined && length === undefined) {\n              buf = new Uint8Array(array);\n            } else if (length === undefined) {\n              buf = new Uint8Array(array, byteOffset);\n            } else {\n              buf = new Uint8Array(array, byteOffset, length);\n            } // Return an augmented `Uint8Array` instance\n\n\n            buf.__proto__ = Buffer.prototype;\n            return buf;\n          }\n\n          function fromObject(obj) {\n            if (Buffer.isBuffer(obj)) {\n              var len = checked(obj.length) | 0;\n              var buf = createBuffer(len);\n\n              if (buf.length === 0) {\n                return buf;\n              }\n\n              obj.copy(buf, 0, 0, len);\n              return buf;\n            }\n\n            if (obj.length !== undefined) {\n              if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n                return createBuffer(0);\n              }\n\n              return fromArrayLike(obj);\n            }\n\n            if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n              return fromArrayLike(obj.data);\n            }\n          }\n\n          function checked(length) {\n            // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n            // length is NaN (which is otherwise coerced to zero.)\n            if (length >= K_MAX_LENGTH) {\n              throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');\n            }\n\n            return length | 0;\n          }\n\n          function SlowBuffer(length) {\n            if (+length != length) {\n              // eslint-disable-line eqeqeq\n              length = 0;\n            }\n\n            return Buffer.alloc(+length);\n          }\n\n          Buffer.isBuffer = function isBuffer(b) {\n            return b != null && b._isBuffer === true && b !== Buffer.prototype; // so Buffer.isBuffer(Buffer.prototype) will be false\n          };\n\n          Buffer.compare = function compare(a, b) {\n            if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);\n            if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);\n\n            if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n              throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n            }\n\n            if (a === b) return 0;\n            var x = a.length;\n            var y = b.length;\n\n            for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n              if (a[i] !== b[i]) {\n                x = a[i];\n                y = b[i];\n                break;\n              }\n            }\n\n            if (x < y) return -1;\n            if (y < x) return 1;\n            return 0;\n          };\n\n          Buffer.isEncoding = function isEncoding(encoding) {\n            switch (String(encoding).toLowerCase()) {\n              case 'hex':\n              case 'utf8':\n              case 'utf-8':\n              case 'ascii':\n              case 'latin1':\n              case 'binary':\n              case 'base64':\n              case 'ucs2':\n              case 'ucs-2':\n              case 'utf16le':\n              case 'utf-16le':\n                return true;\n\n              default:\n                return false;\n            }\n          };\n\n          Buffer.concat = function concat(list, length) {\n            if (!Array.isArray(list)) {\n              throw new TypeError('\"list\" argument must be an Array of Buffers');\n            }\n\n            if (list.length === 0) {\n              return Buffer.alloc(0);\n            }\n\n            var i;\n\n            if (length === undefined) {\n              length = 0;\n\n              for (i = 0; i < list.length; ++i) {\n                length += list[i].length;\n              }\n            }\n\n            var buffer = Buffer.allocUnsafe(length);\n            var pos = 0;\n\n            for (i = 0; i < list.length; ++i) {\n              var buf = list[i];\n\n              if (isInstance(buf, Uint8Array)) {\n                buf = Buffer.from(buf);\n              }\n\n              if (!Buffer.isBuffer(buf)) {\n                throw new TypeError('\"list\" argument must be an Array of Buffers');\n              }\n\n              buf.copy(buffer, pos);\n              pos += buf.length;\n            }\n\n            return buffer;\n          };\n\n          function byteLength(string, encoding) {\n            if (Buffer.isBuffer(string)) {\n              return string.length;\n            }\n\n            if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n              return string.byteLength;\n            }\n\n            if (typeof string !== 'string') {\n              throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' + 'Received type ' + typeof string);\n            }\n\n            var len = string.length;\n            var mustMatch = arguments.length > 2 && arguments[2] === true;\n            if (!mustMatch && len === 0) return 0; // Use a for loop to avoid recursion\n\n            var loweredCase = false;\n\n            for (;;) {\n              switch (encoding) {\n                case 'ascii':\n                case 'latin1':\n                case 'binary':\n                  return len;\n\n                case 'utf8':\n                case 'utf-8':\n                  return utf8ToBytes(string).length;\n\n                case 'ucs2':\n                case 'ucs-2':\n                case 'utf16le':\n                case 'utf-16le':\n                  return len * 2;\n\n                case 'hex':\n                  return len >>> 1;\n\n                case 'base64':\n                  return base64ToBytes(string).length;\n\n                default:\n                  if (loweredCase) {\n                    return mustMatch ? -1 : utf8ToBytes(string).length; // assume utf8\n                  }\n\n                  encoding = ('' + encoding).toLowerCase();\n                  loweredCase = true;\n              }\n            }\n          }\n\n          Buffer.byteLength = byteLength;\n\n          function slowToString(encoding, start, end) {\n            var loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n            // property of a typed array.\n            // This behaves neither like String nor Uint8Array in that we set start/end\n            // to their upper/lower bounds if the value passed is out of range.\n            // undefined is handled specially as per ECMA-262 6th Edition,\n            // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n            if (start === undefined || start < 0) {\n              start = 0;\n            } // Return early if start > this.length. Done here to prevent potential uint32\n            // coercion fail below.\n\n\n            if (start > this.length) {\n              return '';\n            }\n\n            if (end === undefined || end > this.length) {\n              end = this.length;\n            }\n\n            if (end <= 0) {\n              return '';\n            } // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n            end >>>= 0;\n            start >>>= 0;\n\n            if (end <= start) {\n              return '';\n            }\n\n            if (!encoding) encoding = 'utf8';\n\n            while (true) {\n              switch (encoding) {\n                case 'hex':\n                  return hexSlice(this, start, end);\n\n                case 'utf8':\n                case 'utf-8':\n                  return utf8Slice(this, start, end);\n\n                case 'ascii':\n                  return asciiSlice(this, start, end);\n\n                case 'latin1':\n                case 'binary':\n                  return latin1Slice(this, start, end);\n\n                case 'base64':\n                  return base64Slice(this, start, end);\n\n                case 'ucs2':\n                case 'ucs-2':\n                case 'utf16le':\n                case 'utf-16le':\n                  return utf16leSlice(this, start, end);\n\n                default:\n                  if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n                  encoding = (encoding + '').toLowerCase();\n                  loweredCase = true;\n              }\n            }\n          } // This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n          // to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n          // reliably in a browserify context because there could be multiple different\n          // copies of the 'buffer' package in use. This method works even for Buffer\n          // instances that were created from another copy of the `buffer` package.\n          // See: https://github.com/feross/buffer/issues/154\n\n\n          Buffer.prototype._isBuffer = true;\n\n          function swap(b, n, m) {\n            var i = b[n];\n            b[n] = b[m];\n            b[m] = i;\n          }\n\n          Buffer.prototype.swap16 = function swap16() {\n            var len = this.length;\n\n            if (len % 2 !== 0) {\n              throw new RangeError('Buffer size must be a multiple of 16-bits');\n            }\n\n            for (var i = 0; i < len; i += 2) {\n              swap(this, i, i + 1);\n            }\n\n            return this;\n          };\n\n          Buffer.prototype.swap32 = function swap32() {\n            var len = this.length;\n\n            if (len % 4 !== 0) {\n              throw new RangeError('Buffer size must be a multiple of 32-bits');\n            }\n\n            for (var i = 0; i < len; i += 4) {\n              swap(this, i, i + 3);\n              swap(this, i + 1, i + 2);\n            }\n\n            return this;\n          };\n\n          Buffer.prototype.swap64 = function swap64() {\n            var len = this.length;\n\n            if (len % 8 !== 0) {\n              throw new RangeError('Buffer size must be a multiple of 64-bits');\n            }\n\n            for (var i = 0; i < len; i += 8) {\n              swap(this, i, i + 7);\n              swap(this, i + 1, i + 6);\n              swap(this, i + 2, i + 5);\n              swap(this, i + 3, i + 4);\n            }\n\n            return this;\n          };\n\n          Buffer.prototype.toString = function toString() {\n            var length = this.length;\n            if (length === 0) return '';\n            if (arguments.length === 0) return utf8Slice(this, 0, length);\n            return slowToString.apply(this, arguments);\n          };\n\n          Buffer.prototype.toLocaleString = Buffer.prototype.toString;\n\n          Buffer.prototype.equals = function equals(b) {\n            if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n            if (this === b) return true;\n            return Buffer.compare(this, b) === 0;\n          };\n\n          Buffer.prototype.inspect = function inspect() {\n            var str = '';\n            var max = exports.INSPECT_MAX_BYTES;\n            str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();\n            if (this.length > max) str += ' ... ';\n            return '<Buffer ' + str + '>';\n          };\n\n          Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n            if (isInstance(target, Uint8Array)) {\n              target = Buffer.from(target, target.offset, target.byteLength);\n            }\n\n            if (!Buffer.isBuffer(target)) {\n              throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. ' + 'Received type ' + typeof target);\n            }\n\n            if (start === undefined) {\n              start = 0;\n            }\n\n            if (end === undefined) {\n              end = target ? target.length : 0;\n            }\n\n            if (thisStart === undefined) {\n              thisStart = 0;\n            }\n\n            if (thisEnd === undefined) {\n              thisEnd = this.length;\n            }\n\n            if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n              throw new RangeError('out of range index');\n            }\n\n            if (thisStart >= thisEnd && start >= end) {\n              return 0;\n            }\n\n            if (thisStart >= thisEnd) {\n              return -1;\n            }\n\n            if (start >= end) {\n              return 1;\n            }\n\n            start >>>= 0;\n            end >>>= 0;\n            thisStart >>>= 0;\n            thisEnd >>>= 0;\n            if (this === target) return 0;\n            var x = thisEnd - thisStart;\n            var y = end - start;\n            var len = Math.min(x, y);\n            var thisCopy = this.slice(thisStart, thisEnd);\n            var targetCopy = target.slice(start, end);\n\n            for (var i = 0; i < len; ++i) {\n              if (thisCopy[i] !== targetCopy[i]) {\n                x = thisCopy[i];\n                y = targetCopy[i];\n                break;\n              }\n            }\n\n            if (x < y) return -1;\n            if (y < x) return 1;\n            return 0;\n          }; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n          // OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n          //\n          // Arguments:\n          // - buffer - a Buffer to search\n          // - val - a string, Buffer, or number\n          // - byteOffset - an index into `buffer`; will be clamped to an int32\n          // - encoding - an optional encoding, relevant is val is a string\n          // - dir - true for indexOf, false for lastIndexOf\n\n\n          function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n            // Empty buffer means no match\n            if (buffer.length === 0) return -1; // Normalize byteOffset\n\n            if (typeof byteOffset === 'string') {\n              encoding = byteOffset;\n              byteOffset = 0;\n            } else if (byteOffset > 0x7fffffff) {\n              byteOffset = 0x7fffffff;\n            } else if (byteOffset < -0x80000000) {\n              byteOffset = -0x80000000;\n            }\n\n            byteOffset = +byteOffset; // Coerce to Number.\n\n            if (numberIsNaN(byteOffset)) {\n              // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n              byteOffset = dir ? 0 : buffer.length - 1;\n            } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n            if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n            if (byteOffset >= buffer.length) {\n              if (dir) return -1;else byteOffset = buffer.length - 1;\n            } else if (byteOffset < 0) {\n              if (dir) byteOffset = 0;else return -1;\n            } // Normalize val\n\n\n            if (typeof val === 'string') {\n              val = Buffer.from(val, encoding);\n            } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n            if (Buffer.isBuffer(val)) {\n              // Special case: looking for empty string/buffer always fails\n              if (val.length === 0) {\n                return -1;\n              }\n\n              return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n            } else if (typeof val === 'number') {\n              val = val & 0xFF; // Search for a byte value [0-255]\n\n              if (typeof Uint8Array.prototype.indexOf === 'function') {\n                if (dir) {\n                  return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n                } else {\n                  return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n                }\n              }\n\n              return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n            }\n\n            throw new TypeError('val must be string, number or Buffer');\n          }\n\n          function arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n            var indexSize = 1;\n            var arrLength = arr.length;\n            var valLength = val.length;\n\n            if (encoding !== undefined) {\n              encoding = String(encoding).toLowerCase();\n\n              if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n                if (arr.length < 2 || val.length < 2) {\n                  return -1;\n                }\n\n                indexSize = 2;\n                arrLength /= 2;\n                valLength /= 2;\n                byteOffset /= 2;\n              }\n            }\n\n            function read(buf, i) {\n              if (indexSize === 1) {\n                return buf[i];\n              } else {\n                return buf.readUInt16BE(i * indexSize);\n              }\n            }\n\n            var i;\n\n            if (dir) {\n              var foundIndex = -1;\n\n              for (i = byteOffset; i < arrLength; i++) {\n                if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n                  if (foundIndex === -1) foundIndex = i;\n                  if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n                } else {\n                  if (foundIndex !== -1) i -= i - foundIndex;\n                  foundIndex = -1;\n                }\n              }\n            } else {\n              if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n              for (i = byteOffset; i >= 0; i--) {\n                var found = true;\n\n                for (var j = 0; j < valLength; j++) {\n                  if (read(arr, i + j) !== read(val, j)) {\n                    found = false;\n                    break;\n                  }\n                }\n\n                if (found) return i;\n              }\n            }\n\n            return -1;\n          }\n\n          Buffer.prototype.includes = function includes(val, byteOffset, encoding) {\n            return this.indexOf(val, byteOffset, encoding) !== -1;\n          };\n\n          Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n            return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n          };\n\n          Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n            return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n          };\n\n          function hexWrite(buf, string, offset, length) {\n            offset = Number(offset) || 0;\n            var remaining = buf.length - offset;\n\n            if (!length) {\n              length = remaining;\n            } else {\n              length = Number(length);\n\n              if (length > remaining) {\n                length = remaining;\n              }\n            }\n\n            var strLen = string.length;\n\n            if (length > strLen / 2) {\n              length = strLen / 2;\n            }\n\n            for (var i = 0; i < length; ++i) {\n              var parsed = parseInt(string.substr(i * 2, 2), 16);\n              if (numberIsNaN(parsed)) return i;\n              buf[offset + i] = parsed;\n            }\n\n            return i;\n          }\n\n          function utf8Write(buf, string, offset, length) {\n            return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n          }\n\n          function asciiWrite(buf, string, offset, length) {\n            return blitBuffer(asciiToBytes(string), buf, offset, length);\n          }\n\n          function latin1Write(buf, string, offset, length) {\n            return asciiWrite(buf, string, offset, length);\n          }\n\n          function base64Write(buf, string, offset, length) {\n            return blitBuffer(base64ToBytes(string), buf, offset, length);\n          }\n\n          function ucs2Write(buf, string, offset, length) {\n            return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n          }\n\n          Buffer.prototype.write = function write(string, offset, length, encoding) {\n            // Buffer#write(string)\n            if (offset === undefined) {\n              encoding = 'utf8';\n              length = this.length;\n              offset = 0; // Buffer#write(string, encoding)\n            } else if (length === undefined && typeof offset === 'string') {\n              encoding = offset;\n              length = this.length;\n              offset = 0; // Buffer#write(string, offset[, length][, encoding])\n            } else if (isFinite(offset)) {\n              offset = offset >>> 0;\n\n              if (isFinite(length)) {\n                length = length >>> 0;\n                if (encoding === undefined) encoding = 'utf8';\n              } else {\n                encoding = length;\n                length = undefined;\n              }\n            } else {\n              throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n            }\n\n            var remaining = this.length - offset;\n            if (length === undefined || length > remaining) length = remaining;\n\n            if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n              throw new RangeError('Attempt to write outside buffer bounds');\n            }\n\n            if (!encoding) encoding = 'utf8';\n            var loweredCase = false;\n\n            for (;;) {\n              switch (encoding) {\n                case 'hex':\n                  return hexWrite(this, string, offset, length);\n\n                case 'utf8':\n                case 'utf-8':\n                  return utf8Write(this, string, offset, length);\n\n                case 'ascii':\n                  return asciiWrite(this, string, offset, length);\n\n                case 'latin1':\n                case 'binary':\n                  return latin1Write(this, string, offset, length);\n\n                case 'base64':\n                  // Warning: maxLength not taken into account in base64Write\n                  return base64Write(this, string, offset, length);\n\n                case 'ucs2':\n                case 'ucs-2':\n                case 'utf16le':\n                case 'utf-16le':\n                  return ucs2Write(this, string, offset, length);\n\n                default:\n                  if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n                  encoding = ('' + encoding).toLowerCase();\n                  loweredCase = true;\n              }\n            }\n          };\n\n          Buffer.prototype.toJSON = function toJSON() {\n            return {\n              type: 'Buffer',\n              data: Array.prototype.slice.call(this._arr || this, 0)\n            };\n          };\n\n          function base64Slice(buf, start, end) {\n            if (start === 0 && end === buf.length) {\n              return base64.fromByteArray(buf);\n            } else {\n              return base64.fromByteArray(buf.slice(start, end));\n            }\n          }\n\n          function utf8Slice(buf, start, end) {\n            end = Math.min(buf.length, end);\n            var res = [];\n            var i = start;\n\n            while (i < end) {\n              var firstByte = buf[i];\n              var codePoint = null;\n              var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n              if (i + bytesPerSequence <= end) {\n                var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n                switch (bytesPerSequence) {\n                  case 1:\n                    if (firstByte < 0x80) {\n                      codePoint = firstByte;\n                    }\n\n                    break;\n\n                  case 2:\n                    secondByte = buf[i + 1];\n\n                    if ((secondByte & 0xC0) === 0x80) {\n                      tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n                      if (tempCodePoint > 0x7F) {\n                        codePoint = tempCodePoint;\n                      }\n                    }\n\n                    break;\n\n                  case 3:\n                    secondByte = buf[i + 1];\n                    thirdByte = buf[i + 2];\n\n                    if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n                      tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n                      if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n                        codePoint = tempCodePoint;\n                      }\n                    }\n\n                    break;\n\n                  case 4:\n                    secondByte = buf[i + 1];\n                    thirdByte = buf[i + 2];\n                    fourthByte = buf[i + 3];\n\n                    if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n                      tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n                      if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n                        codePoint = tempCodePoint;\n                      }\n                    }\n\n                }\n              }\n\n              if (codePoint === null) {\n                // we did not generate a valid codePoint so insert a\n                // replacement char (U+FFFD) and advance only 1 byte\n                codePoint = 0xFFFD;\n                bytesPerSequence = 1;\n              } else if (codePoint > 0xFFFF) {\n                // encode to utf16 (surrogate pair dance)\n                codePoint -= 0x10000;\n                res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n                codePoint = 0xDC00 | codePoint & 0x3FF;\n              }\n\n              res.push(codePoint);\n              i += bytesPerSequence;\n            }\n\n            return decodeCodePointsArray(res);\n          } // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n          // the lowest limit is Chrome, with 0x10000 args.\n          // We go 1 magnitude less, for safety\n\n\n          var MAX_ARGUMENTS_LENGTH = 0x1000;\n\n          function decodeCodePointsArray(codePoints) {\n            var len = codePoints.length;\n\n            if (len <= MAX_ARGUMENTS_LENGTH) {\n              return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n            } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n            var res = '';\n            var i = 0;\n\n            while (i < len) {\n              res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n            }\n\n            return res;\n          }\n\n          function asciiSlice(buf, start, end) {\n            var ret = '';\n            end = Math.min(buf.length, end);\n\n            for (var i = start; i < end; ++i) {\n              ret += String.fromCharCode(buf[i] & 0x7F);\n            }\n\n            return ret;\n          }\n\n          function latin1Slice(buf, start, end) {\n            var ret = '';\n            end = Math.min(buf.length, end);\n\n            for (var i = start; i < end; ++i) {\n              ret += String.fromCharCode(buf[i]);\n            }\n\n            return ret;\n          }\n\n          function hexSlice(buf, start, end) {\n            var len = buf.length;\n            if (!start || start < 0) start = 0;\n            if (!end || end < 0 || end > len) end = len;\n            var out = '';\n\n            for (var i = start; i < end; ++i) {\n              out += toHex(buf[i]);\n            }\n\n            return out;\n          }\n\n          function utf16leSlice(buf, start, end) {\n            var bytes = buf.slice(start, end);\n            var res = '';\n\n            for (var i = 0; i < bytes.length; i += 2) {\n              res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n            }\n\n            return res;\n          }\n\n          Buffer.prototype.slice = function slice(start, end) {\n            var len = this.length;\n            start = ~~start;\n            end = end === undefined ? len : ~~end;\n\n            if (start < 0) {\n              start += len;\n              if (start < 0) start = 0;\n            } else if (start > len) {\n              start = len;\n            }\n\n            if (end < 0) {\n              end += len;\n              if (end < 0) end = 0;\n            } else if (end > len) {\n              end = len;\n            }\n\n            if (end < start) end = start;\n            var newBuf = this.subarray(start, end); // Return an augmented `Uint8Array` instance\n\n            newBuf.__proto__ = Buffer.prototype;\n            return newBuf;\n          };\n          /*\n           * Need to make sure that buffer isn't trying to write out of bounds.\n           */\n\n\n          function checkOffset(offset, ext, length) {\n            if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n            if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n          }\n\n          Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n            offset = offset >>> 0;\n            byteLength = byteLength >>> 0;\n            if (!noAssert) checkOffset(offset, byteLength, this.length);\n            var val = this[offset];\n            var mul = 1;\n            var i = 0;\n\n            while (++i < byteLength && (mul *= 0x100)) {\n              val += this[offset + i] * mul;\n            }\n\n            return val;\n          };\n\n          Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n            offset = offset >>> 0;\n            byteLength = byteLength >>> 0;\n\n            if (!noAssert) {\n              checkOffset(offset, byteLength, this.length);\n            }\n\n            var val = this[offset + --byteLength];\n            var mul = 1;\n\n            while (byteLength > 0 && (mul *= 0x100)) {\n              val += this[offset + --byteLength] * mul;\n            }\n\n            return val;\n          };\n\n          Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n            offset = offset >>> 0;\n            if (!noAssert) checkOffset(offset, 1, this.length);\n            return this[offset];\n          };\n\n          Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n            offset = offset >>> 0;\n            if (!noAssert) checkOffset(offset, 2, this.length);\n            return this[offset] | this[offset + 1] << 8;\n          };\n\n          Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n            offset = offset >>> 0;\n            if (!noAssert) checkOffset(offset, 2, this.length);\n            return this[offset] << 8 | this[offset + 1];\n          };\n\n          Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n            offset = offset >>> 0;\n            if (!noAssert) checkOffset(offset, 4, this.length);\n            return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n          };\n\n          Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n            offset = offset >>> 0;\n            if (!noAssert) checkOffset(offset, 4, this.length);\n            return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n          };\n\n          Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n            offset = offset >>> 0;\n            byteLength = byteLength >>> 0;\n            if (!noAssert) checkOffset(offset, byteLength, this.length);\n            var val = this[offset];\n            var mul = 1;\n            var i = 0;\n\n            while (++i < byteLength && (mul *= 0x100)) {\n              val += this[offset + i] * mul;\n            }\n\n            mul *= 0x80;\n            if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n            return val;\n          };\n\n          Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n            offset = offset >>> 0;\n            byteLength = byteLength >>> 0;\n            if (!noAssert) checkOffset(offset, byteLength, this.length);\n            var i = byteLength;\n            var mul = 1;\n            var val = this[offset + --i];\n\n            while (i > 0 && (mul *= 0x100)) {\n              val += this[offset + --i] * mul;\n            }\n\n            mul *= 0x80;\n            if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n            return val;\n          };\n\n          Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n            offset = offset >>> 0;\n            if (!noAssert) checkOffset(offset, 1, this.length);\n            if (!(this[offset] & 0x80)) return this[offset];\n            return (0xff - this[offset] + 1) * -1;\n          };\n\n          Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n            offset = offset >>> 0;\n            if (!noAssert) checkOffset(offset, 2, this.length);\n            var val = this[offset] | this[offset + 1] << 8;\n            return val & 0x8000 ? val | 0xFFFF0000 : val;\n          };\n\n          Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n            offset = offset >>> 0;\n            if (!noAssert) checkOffset(offset, 2, this.length);\n            var val = this[offset + 1] | this[offset] << 8;\n            return val & 0x8000 ? val | 0xFFFF0000 : val;\n          };\n\n          Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n            offset = offset >>> 0;\n            if (!noAssert) checkOffset(offset, 4, this.length);\n            return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n          };\n\n          Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n            offset = offset >>> 0;\n            if (!noAssert) checkOffset(offset, 4, this.length);\n            return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n          };\n\n          Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n            offset = offset >>> 0;\n            if (!noAssert) checkOffset(offset, 4, this.length);\n            return ieee754.read(this, offset, true, 23, 4);\n          };\n\n          Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n            offset = offset >>> 0;\n            if (!noAssert) checkOffset(offset, 4, this.length);\n            return ieee754.read(this, offset, false, 23, 4);\n          };\n\n          Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n            offset = offset >>> 0;\n            if (!noAssert) checkOffset(offset, 8, this.length);\n            return ieee754.read(this, offset, true, 52, 8);\n          };\n\n          Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n            offset = offset >>> 0;\n            if (!noAssert) checkOffset(offset, 8, this.length);\n            return ieee754.read(this, offset, false, 52, 8);\n          };\n\n          function checkInt(buf, value, offset, ext, max, min) {\n            if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n            if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n            if (offset + ext > buf.length) throw new RangeError('Index out of range');\n          }\n\n          Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n            value = +value;\n            offset = offset >>> 0;\n            byteLength = byteLength >>> 0;\n\n            if (!noAssert) {\n              var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n              checkInt(this, value, offset, byteLength, maxBytes, 0);\n            }\n\n            var mul = 1;\n            var i = 0;\n            this[offset] = value & 0xFF;\n\n            while (++i < byteLength && (mul *= 0x100)) {\n              this[offset + i] = value / mul & 0xFF;\n            }\n\n            return offset + byteLength;\n          };\n\n          Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n            value = +value;\n            offset = offset >>> 0;\n            byteLength = byteLength >>> 0;\n\n            if (!noAssert) {\n              var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n              checkInt(this, value, offset, byteLength, maxBytes, 0);\n            }\n\n            var i = byteLength - 1;\n            var mul = 1;\n            this[offset + i] = value & 0xFF;\n\n            while (--i >= 0 && (mul *= 0x100)) {\n              this[offset + i] = value / mul & 0xFF;\n            }\n\n            return offset + byteLength;\n          };\n\n          Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n            value = +value;\n            offset = offset >>> 0;\n            if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n            this[offset] = value & 0xff;\n            return offset + 1;\n          };\n\n          Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n            value = +value;\n            offset = offset >>> 0;\n            if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n            this[offset] = value & 0xff;\n            this[offset + 1] = value >>> 8;\n            return offset + 2;\n          };\n\n          Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n            value = +value;\n            offset = offset >>> 0;\n            if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n            this[offset] = value >>> 8;\n            this[offset + 1] = value & 0xff;\n            return offset + 2;\n          };\n\n          Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n            value = +value;\n            offset = offset >>> 0;\n            if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n            this[offset + 3] = value >>> 24;\n            this[offset + 2] = value >>> 16;\n            this[offset + 1] = value >>> 8;\n            this[offset] = value & 0xff;\n            return offset + 4;\n          };\n\n          Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n            value = +value;\n            offset = offset >>> 0;\n            if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n            this[offset] = value >>> 24;\n            this[offset + 1] = value >>> 16;\n            this[offset + 2] = value >>> 8;\n            this[offset + 3] = value & 0xff;\n            return offset + 4;\n          };\n\n          Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n            value = +value;\n            offset = offset >>> 0;\n\n            if (!noAssert) {\n              var limit = Math.pow(2, 8 * byteLength - 1);\n              checkInt(this, value, offset, byteLength, limit - 1, -limit);\n            }\n\n            var i = 0;\n            var mul = 1;\n            var sub = 0;\n            this[offset] = value & 0xFF;\n\n            while (++i < byteLength && (mul *= 0x100)) {\n              if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n                sub = 1;\n              }\n\n              this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n            }\n\n            return offset + byteLength;\n          };\n\n          Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n            value = +value;\n            offset = offset >>> 0;\n\n            if (!noAssert) {\n              var limit = Math.pow(2, 8 * byteLength - 1);\n              checkInt(this, value, offset, byteLength, limit - 1, -limit);\n            }\n\n            var i = byteLength - 1;\n            var mul = 1;\n            var sub = 0;\n            this[offset + i] = value & 0xFF;\n\n            while (--i >= 0 && (mul *= 0x100)) {\n              if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n                sub = 1;\n              }\n\n              this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n            }\n\n            return offset + byteLength;\n          };\n\n          Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n            value = +value;\n            offset = offset >>> 0;\n            if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n            if (value < 0) value = 0xff + value + 1;\n            this[offset] = value & 0xff;\n            return offset + 1;\n          };\n\n          Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n            value = +value;\n            offset = offset >>> 0;\n            if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n            this[offset] = value & 0xff;\n            this[offset + 1] = value >>> 8;\n            return offset + 2;\n          };\n\n          Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n            value = +value;\n            offset = offset >>> 0;\n            if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n            this[offset] = value >>> 8;\n            this[offset + 1] = value & 0xff;\n            return offset + 2;\n          };\n\n          Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n            value = +value;\n            offset = offset >>> 0;\n            if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n            this[offset] = value & 0xff;\n            this[offset + 1] = value >>> 8;\n            this[offset + 2] = value >>> 16;\n            this[offset + 3] = value >>> 24;\n            return offset + 4;\n          };\n\n          Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n            value = +value;\n            offset = offset >>> 0;\n            if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n            if (value < 0) value = 0xffffffff + value + 1;\n            this[offset] = value >>> 24;\n            this[offset + 1] = value >>> 16;\n            this[offset + 2] = value >>> 8;\n            this[offset + 3] = value & 0xff;\n            return offset + 4;\n          };\n\n          function checkIEEE754(buf, value, offset, ext, max, min) {\n            if (offset + ext > buf.length) throw new RangeError('Index out of range');\n            if (offset < 0) throw new RangeError('Index out of range');\n          }\n\n          function writeFloat(buf, value, offset, littleEndian, noAssert) {\n            value = +value;\n            offset = offset >>> 0;\n\n            if (!noAssert) {\n              checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n            }\n\n            ieee754.write(buf, value, offset, littleEndian, 23, 4);\n            return offset + 4;\n          }\n\n          Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n            return writeFloat(this, value, offset, true, noAssert);\n          };\n\n          Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n            return writeFloat(this, value, offset, false, noAssert);\n          };\n\n          function writeDouble(buf, value, offset, littleEndian, noAssert) {\n            value = +value;\n            offset = offset >>> 0;\n\n            if (!noAssert) {\n              checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n            }\n\n            ieee754.write(buf, value, offset, littleEndian, 52, 8);\n            return offset + 8;\n          }\n\n          Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n            return writeDouble(this, value, offset, true, noAssert);\n          };\n\n          Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n            return writeDouble(this, value, offset, false, noAssert);\n          }; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\n          Buffer.prototype.copy = function copy(target, targetStart, start, end) {\n            if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');\n            if (!start) start = 0;\n            if (!end && end !== 0) end = this.length;\n            if (targetStart >= target.length) targetStart = target.length;\n            if (!targetStart) targetStart = 0;\n            if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n            if (end === start) return 0;\n            if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n            if (targetStart < 0) {\n              throw new RangeError('targetStart out of bounds');\n            }\n\n            if (start < 0 || start >= this.length) throw new RangeError('Index out of range');\n            if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n            if (end > this.length) end = this.length;\n\n            if (target.length - targetStart < end - start) {\n              end = target.length - targetStart + start;\n            }\n\n            var len = end - start;\n\n            if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n              // Use built-in when available, missing from IE11\n              this.copyWithin(targetStart, start, end);\n            } else if (this === target && start < targetStart && targetStart < end) {\n              // descending copy from end\n              for (var i = len - 1; i >= 0; --i) {\n                target[i + targetStart] = this[i + start];\n              }\n            } else {\n              Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n            }\n\n            return len;\n          }; // Usage:\n          //    buffer.fill(number[, offset[, end]])\n          //    buffer.fill(buffer[, offset[, end]])\n          //    buffer.fill(string[, offset[, end]][, encoding])\n\n\n          Buffer.prototype.fill = function fill(val, start, end, encoding) {\n            // Handle string cases:\n            if (typeof val === 'string') {\n              if (typeof start === 'string') {\n                encoding = start;\n                start = 0;\n                end = this.length;\n              } else if (typeof end === 'string') {\n                encoding = end;\n                end = this.length;\n              }\n\n              if (encoding !== undefined && typeof encoding !== 'string') {\n                throw new TypeError('encoding must be a string');\n              }\n\n              if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n                throw new TypeError('Unknown encoding: ' + encoding);\n              }\n\n              if (val.length === 1) {\n                var code = val.charCodeAt(0);\n\n                if (encoding === 'utf8' && code < 128 || encoding === 'latin1') {\n                  // Fast path: If `val` fits into a single byte, use that numeric value.\n                  val = code;\n                }\n              }\n            } else if (typeof val === 'number') {\n              val = val & 255;\n            } // Invalid ranges are not set to a default, so can range check early.\n\n\n            if (start < 0 || this.length < start || this.length < end) {\n              throw new RangeError('Out of range index');\n            }\n\n            if (end <= start) {\n              return this;\n            }\n\n            start = start >>> 0;\n            end = end === undefined ? this.length : end >>> 0;\n            if (!val) val = 0;\n            var i;\n\n            if (typeof val === 'number') {\n              for (i = start; i < end; ++i) {\n                this[i] = val;\n              }\n            } else {\n              var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);\n              var len = bytes.length;\n\n              if (len === 0) {\n                throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n              }\n\n              for (i = 0; i < end - start; ++i) {\n                this[i + start] = bytes[i % len];\n              }\n            }\n\n            return this;\n          }; // HELPER FUNCTIONS\n          // ================\n\n\n          var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\n\n          function base64clean(str) {\n            // Node takes equal signs as end of the Base64 encoding\n            str = str.split('=')[0]; // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\n            str = str.trim().replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\n\n            if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n            while (str.length % 4 !== 0) {\n              str = str + '=';\n            }\n\n            return str;\n          }\n\n          function toHex(n) {\n            if (n < 16) return '0' + n.toString(16);\n            return n.toString(16);\n          }\n\n          function utf8ToBytes(string, units) {\n            units = units || Infinity;\n            var codePoint;\n            var length = string.length;\n            var leadSurrogate = null;\n            var bytes = [];\n\n            for (var i = 0; i < length; ++i) {\n              codePoint = string.charCodeAt(i); // is surrogate component\n\n              if (codePoint > 0xD7FF && codePoint < 0xE000) {\n                // last char was a lead\n                if (!leadSurrogate) {\n                  // no lead yet\n                  if (codePoint > 0xDBFF) {\n                    // unexpected trail\n                    if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                    continue;\n                  } else if (i + 1 === length) {\n                    // unpaired lead\n                    if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                    continue;\n                  } // valid lead\n\n\n                  leadSurrogate = codePoint;\n                  continue;\n                } // 2 leads in a row\n\n\n                if (codePoint < 0xDC00) {\n                  if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                  leadSurrogate = codePoint;\n                  continue;\n                } // valid surrogate pair\n\n\n                codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n              } else if (leadSurrogate) {\n                // valid bmp char, but last char was a lead\n                if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n              }\n\n              leadSurrogate = null; // encode utf8\n\n              if (codePoint < 0x80) {\n                if ((units -= 1) < 0) break;\n                bytes.push(codePoint);\n              } else if (codePoint < 0x800) {\n                if ((units -= 2) < 0) break;\n                bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n              } else if (codePoint < 0x10000) {\n                if ((units -= 3) < 0) break;\n                bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n              } else if (codePoint < 0x110000) {\n                if ((units -= 4) < 0) break;\n                bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n              } else {\n                throw new Error('Invalid code point');\n              }\n            }\n\n            return bytes;\n          }\n\n          function asciiToBytes(str) {\n            var byteArray = [];\n\n            for (var i = 0; i < str.length; ++i) {\n              // Node's code seems to be doing this and not & 0x7F..\n              byteArray.push(str.charCodeAt(i) & 0xFF);\n            }\n\n            return byteArray;\n          }\n\n          function utf16leToBytes(str, units) {\n            var c, hi, lo;\n            var byteArray = [];\n\n            for (var i = 0; i < str.length; ++i) {\n              if ((units -= 2) < 0) break;\n              c = str.charCodeAt(i);\n              hi = c >> 8;\n              lo = c % 256;\n              byteArray.push(lo);\n              byteArray.push(hi);\n            }\n\n            return byteArray;\n          }\n\n          function base64ToBytes(str) {\n            return base64.toByteArray(base64clean(str));\n          }\n\n          function blitBuffer(src, dst, offset, length) {\n            for (var i = 0; i < length; ++i) {\n              if (i + offset >= dst.length || i >= src.length) break;\n              dst[i + offset] = src[i];\n            }\n\n            return i;\n          } // ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n          // the `instanceof` check but they should be treated as of that type.\n          // See: https://github.com/feross/buffer/issues/166\n\n\n          function isInstance(obj, type) {\n            return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n          }\n\n          function numberIsNaN(obj) {\n            // For IE11 support\n            return obj !== obj; // eslint-disable-line no-self-compare\n          }\n        }).call(this);\n      }).call(this, require(\"buffer\").Buffer);\n    }, {\n      \"base64-js\": 48,\n      \"buffer\": 50,\n      \"ieee754\": 52\n    }],\n    51: [function (require, module, exports) {\n      // Copyright Joyent, Inc. and other Node contributors.\n      //\n      // Permission is hereby granted, free of charge, to any person obtaining a\n      // copy of this software and associated documentation files (the\n      // \"Software\"), to deal in the Software without restriction, including\n      // without limitation the rights to use, copy, modify, merge, publish,\n      // distribute, sublicense, and/or sell copies of the Software, and to permit\n      // persons to whom the Software is furnished to do so, subject to the\n      // following conditions:\n      //\n      // The above copyright notice and this permission notice shall be included\n      // in all copies or substantial portions of the Software.\n      //\n      // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n      // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n      // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n      // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n      // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n      // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n      // USE OR OTHER DEALINGS IN THE SOFTWARE.\n      'use strict';\n\n      var R = typeof Reflect === 'object' ? Reflect : null;\n      var ReflectApply = R && typeof R.apply === 'function' ? R.apply : function ReflectApply(target, receiver, args) {\n        return Function.prototype.apply.call(target, receiver, args);\n      };\n      var ReflectOwnKeys;\n\n      if (R && typeof R.ownKeys === 'function') {\n        ReflectOwnKeys = R.ownKeys;\n      } else if (Object.getOwnPropertySymbols) {\n        ReflectOwnKeys = function ReflectOwnKeys(target) {\n          return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));\n        };\n      } else {\n        ReflectOwnKeys = function ReflectOwnKeys(target) {\n          return Object.getOwnPropertyNames(target);\n        };\n      }\n\n      function ProcessEmitWarning(warning) {\n        if (console && console.warn) console.warn(warning);\n      }\n\n      var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n        return value !== value;\n      };\n\n      function EventEmitter() {\n        EventEmitter.init.call(this);\n      }\n\n      module.exports = EventEmitter;\n      module.exports.once = once; // Backwards-compat with node 0.10.x\n\n      EventEmitter.EventEmitter = EventEmitter;\n      EventEmitter.prototype._events = undefined;\n      EventEmitter.prototype._eventsCount = 0;\n      EventEmitter.prototype._maxListeners = undefined; // By default EventEmitters will print a warning if more than 10 listeners are\n      // added to it. This is a useful default which helps finding memory leaks.\n\n      var defaultMaxListeners = 10;\n\n      function checkListener(listener) {\n        if (typeof listener !== 'function') {\n          throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n        }\n      }\n\n      Object.defineProperty(EventEmitter, 'defaultMaxListeners', {\n        enumerable: true,\n        get: function () {\n          return defaultMaxListeners;\n        },\n        set: function (arg) {\n          if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n            throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n          }\n\n          defaultMaxListeners = arg;\n        }\n      });\n\n      EventEmitter.init = function () {\n        if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        }\n\n        this._maxListeners = this._maxListeners || undefined;\n      }; // Obviously not all Emitters should be limited to 10. This function allows\n      // that to be increased. Set to zero for unlimited.\n\n\n      EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n        if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n          throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n        }\n\n        this._maxListeners = n;\n        return this;\n      };\n\n      function _getMaxListeners(that) {\n        if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;\n        return that._maxListeners;\n      }\n\n      EventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n        return _getMaxListeners(this);\n      };\n\n      EventEmitter.prototype.emit = function emit(type) {\n        var args = [];\n\n        for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n\n        var doError = type === 'error';\n        var events = this._events;\n        if (events !== undefined) doError = doError && events.error === undefined;else if (!doError) return false; // If there is no 'error' event listener then throw.\n\n        if (doError) {\n          var er;\n          if (args.length > 0) er = args[0];\n\n          if (er instanceof Error) {\n            // Note: The comments on the `throw` lines are intentional, they show\n            // up in Node's output if this results in an unhandled exception.\n            throw er; // Unhandled 'error' event\n          } // At least give some kind of context to the user\n\n\n          var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n          err.context = er;\n          throw err; // Unhandled 'error' event\n        }\n\n        var handler = events[type];\n        if (handler === undefined) return false;\n\n        if (typeof handler === 'function') {\n          ReflectApply(handler, this, args);\n        } else {\n          var len = handler.length;\n          var listeners = arrayClone(handler, len);\n\n          for (var i = 0; i < len; ++i) ReflectApply(listeners[i], this, args);\n        }\n\n        return true;\n      };\n\n      function _addListener(target, type, listener, prepend) {\n        var m;\n        var events;\n        var existing;\n        checkListener(listener);\n        events = target._events;\n\n        if (events === undefined) {\n          events = target._events = Object.create(null);\n          target._eventsCount = 0;\n        } else {\n          // To avoid recursion in the case that type === \"newListener\"! Before\n          // adding it to the listeners, first emit \"newListener\".\n          if (events.newListener !== undefined) {\n            target.emit('newListener', type, listener.listener ? listener.listener : listener); // Re-assign `events` because a newListener handler could have caused the\n            // this._events to be assigned to a new object\n\n            events = target._events;\n          }\n\n          existing = events[type];\n        }\n\n        if (existing === undefined) {\n          // Optimize the case of one listener. Don't need the extra array object.\n          existing = events[type] = listener;\n          ++target._eventsCount;\n        } else {\n          if (typeof existing === 'function') {\n            // Adding the second element, need to change to array.\n            existing = events[type] = prepend ? [listener, existing] : [existing, listener]; // If we've already got an array, just append.\n          } else if (prepend) {\n            existing.unshift(listener);\n          } else {\n            existing.push(listener);\n          } // Check for listener leak\n\n\n          m = _getMaxListeners(target);\n\n          if (m > 0 && existing.length > m && !existing.warned) {\n            existing.warned = true; // No error code for this since it is a Warning\n            // eslint-disable-next-line no-restricted-syntax\n\n            var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + String(type) + ' listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit');\n            w.name = 'MaxListenersExceededWarning';\n            w.emitter = target;\n            w.type = type;\n            w.count = existing.length;\n            ProcessEmitWarning(w);\n          }\n        }\n\n        return target;\n      }\n\n      EventEmitter.prototype.addListener = function addListener(type, listener) {\n        return _addListener(this, type, listener, false);\n      };\n\n      EventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\n      EventEmitter.prototype.prependListener = function prependListener(type, listener) {\n        return _addListener(this, type, listener, true);\n      };\n\n      function onceWrapper() {\n        if (!this.fired) {\n          this.target.removeListener(this.type, this.wrapFn);\n          this.fired = true;\n          if (arguments.length === 0) return this.listener.call(this.target);\n          return this.listener.apply(this.target, arguments);\n        }\n      }\n\n      function _onceWrap(target, type, listener) {\n        var state = {\n          fired: false,\n          wrapFn: undefined,\n          target: target,\n          type: type,\n          listener: listener\n        };\n        var wrapped = onceWrapper.bind(state);\n        wrapped.listener = listener;\n        state.wrapFn = wrapped;\n        return wrapped;\n      }\n\n      EventEmitter.prototype.once = function once(type, listener) {\n        checkListener(listener);\n        this.on(type, _onceWrap(this, type, listener));\n        return this;\n      };\n\n      EventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {\n        checkListener(listener);\n        this.prependListener(type, _onceWrap(this, type, listener));\n        return this;\n      }; // Emits a 'removeListener' event if and only if the listener was removed.\n\n\n      EventEmitter.prototype.removeListener = function removeListener(type, listener) {\n        var list, events, position, i, originalListener;\n        checkListener(listener);\n        events = this._events;\n        if (events === undefined) return this;\n        list = events[type];\n        if (list === undefined) return this;\n\n        if (list === listener || list.listener === listener) {\n          if (--this._eventsCount === 0) this._events = Object.create(null);else {\n            delete events[type];\n            if (events.removeListener) this.emit('removeListener', type, list.listener || listener);\n          }\n        } else if (typeof list !== 'function') {\n          position = -1;\n\n          for (i = list.length - 1; i >= 0; i--) {\n            if (list[i] === listener || list[i].listener === listener) {\n              originalListener = list[i].listener;\n              position = i;\n              break;\n            }\n          }\n\n          if (position < 0) return this;\n          if (position === 0) list.shift();else {\n            spliceOne(list, position);\n          }\n          if (list.length === 1) events[type] = list[0];\n          if (events.removeListener !== undefined) this.emit('removeListener', type, originalListener || listener);\n        }\n\n        return this;\n      };\n\n      EventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\n      EventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {\n        var listeners, events, i;\n        events = this._events;\n        if (events === undefined) return this; // not listening for removeListener, no need to emit\n\n        if (events.removeListener === undefined) {\n          if (arguments.length === 0) {\n            this._events = Object.create(null);\n            this._eventsCount = 0;\n          } else if (events[type] !== undefined) {\n            if (--this._eventsCount === 0) this._events = Object.create(null);else delete events[type];\n          }\n\n          return this;\n        } // emit removeListener for all listeners on all events\n\n\n        if (arguments.length === 0) {\n          var keys = Object.keys(events);\n          var key;\n\n          for (i = 0; i < keys.length; ++i) {\n            key = keys[i];\n            if (key === 'removeListener') continue;\n            this.removeAllListeners(key);\n          }\n\n          this.removeAllListeners('removeListener');\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n          return this;\n        }\n\n        listeners = events[type];\n\n        if (typeof listeners === 'function') {\n          this.removeListener(type, listeners);\n        } else if (listeners !== undefined) {\n          // LIFO order\n          for (i = listeners.length - 1; i >= 0; i--) {\n            this.removeListener(type, listeners[i]);\n          }\n        }\n\n        return this;\n      };\n\n      function _listeners(target, type, unwrap) {\n        var events = target._events;\n        if (events === undefined) return [];\n        var evlistener = events[type];\n        if (evlistener === undefined) return [];\n        if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n        return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n      }\n\n      EventEmitter.prototype.listeners = function listeners(type) {\n        return _listeners(this, type, true);\n      };\n\n      EventEmitter.prototype.rawListeners = function rawListeners(type) {\n        return _listeners(this, type, false);\n      };\n\n      EventEmitter.listenerCount = function (emitter, type) {\n        if (typeof emitter.listenerCount === 'function') {\n          return emitter.listenerCount(type);\n        } else {\n          return listenerCount.call(emitter, type);\n        }\n      };\n\n      EventEmitter.prototype.listenerCount = listenerCount;\n\n      function listenerCount(type) {\n        var events = this._events;\n\n        if (events !== undefined) {\n          var evlistener = events[type];\n\n          if (typeof evlistener === 'function') {\n            return 1;\n          } else if (evlistener !== undefined) {\n            return evlistener.length;\n          }\n        }\n\n        return 0;\n      }\n\n      EventEmitter.prototype.eventNames = function eventNames() {\n        return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n      };\n\n      function arrayClone(arr, n) {\n        var copy = new Array(n);\n\n        for (var i = 0; i < n; ++i) copy[i] = arr[i];\n\n        return copy;\n      }\n\n      function spliceOne(list, index) {\n        for (; index + 1 < list.length; index++) list[index] = list[index + 1];\n\n        list.pop();\n      }\n\n      function unwrapListeners(arr) {\n        var ret = new Array(arr.length);\n\n        for (var i = 0; i < ret.length; ++i) {\n          ret[i] = arr[i].listener || arr[i];\n        }\n\n        return ret;\n      }\n\n      function once(emitter, name) {\n        return new Promise(function (resolve, reject) {\n          function eventListener() {\n            if (errorListener !== undefined) {\n              emitter.removeListener('error', errorListener);\n            }\n\n            resolve([].slice.call(arguments));\n          }\n\n          ;\n          var errorListener; // Adding an error listener is not optional because\n          // if an error is thrown on an event emitter we cannot\n          // guarantee that the actual event we are waiting will\n          // be fired. The result could be a silent way to create\n          // memory or file descriptor leaks, which is something\n          // we should avoid.\n\n          if (name !== 'error') {\n            errorListener = function errorListener(err) {\n              emitter.removeListener(name, eventListener);\n              reject(err);\n            };\n\n            emitter.once('error', errorListener);\n          }\n\n          emitter.once(name, eventListener);\n        });\n      }\n    }, {}],\n    52: [function (require, module, exports) {\n      /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\n      exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n        var e, m;\n        var eLen = nBytes * 8 - mLen - 1;\n        var eMax = (1 << eLen) - 1;\n        var eBias = eMax >> 1;\n        var nBits = -7;\n        var i = isLE ? nBytes - 1 : 0;\n        var d = isLE ? -1 : 1;\n        var s = buffer[offset + i];\n        i += d;\n        e = s & (1 << -nBits) - 1;\n        s >>= -nBits;\n        nBits += eLen;\n\n        for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n        m = e & (1 << -nBits) - 1;\n        e >>= -nBits;\n        nBits += mLen;\n\n        for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n        if (e === 0) {\n          e = 1 - eBias;\n        } else if (e === eMax) {\n          return m ? NaN : (s ? -1 : 1) * Infinity;\n        } else {\n          m = m + Math.pow(2, mLen);\n          e = e - eBias;\n        }\n\n        return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n      };\n\n      exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n        var e, m, c;\n        var eLen = nBytes * 8 - mLen - 1;\n        var eMax = (1 << eLen) - 1;\n        var eBias = eMax >> 1;\n        var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n        var i = isLE ? 0 : nBytes - 1;\n        var d = isLE ? 1 : -1;\n        var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n        value = Math.abs(value);\n\n        if (isNaN(value) || value === Infinity) {\n          m = isNaN(value) ? 1 : 0;\n          e = eMax;\n        } else {\n          e = Math.floor(Math.log(value) / Math.LN2);\n\n          if (value * (c = Math.pow(2, -e)) < 1) {\n            e--;\n            c *= 2;\n          }\n\n          if (e + eBias >= 1) {\n            value += rt / c;\n          } else {\n            value += rt * Math.pow(2, 1 - eBias);\n          }\n\n          if (value * c >= 2) {\n            e++;\n            c /= 2;\n          }\n\n          if (e + eBias >= eMax) {\n            m = 0;\n            e = eMax;\n          } else if (e + eBias >= 1) {\n            m = (value * c - 1) * Math.pow(2, mLen);\n            e = e + eBias;\n          } else {\n            m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n            e = 0;\n          }\n        }\n\n        for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n        e = e << mLen | m;\n        eLen += mLen;\n\n        for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n        buffer[offset + i - d] |= s * 128;\n      };\n    }, {}],\n    53: [function (require, module, exports) {\n      if (typeof Object.create === 'function') {\n        // implementation from standard node.js 'util' module\n        module.exports = function inherits(ctor, superCtor) {\n          if (superCtor) {\n            ctor.super_ = superCtor;\n            ctor.prototype = Object.create(superCtor.prototype, {\n              constructor: {\n                value: ctor,\n                enumerable: false,\n                writable: true,\n                configurable: true\n              }\n            });\n          }\n        };\n      } else {\n        // old school shim for old browsers\n        module.exports = function inherits(ctor, superCtor) {\n          if (superCtor) {\n            ctor.super_ = superCtor;\n\n            var TempCtor = function () {};\n\n            TempCtor.prototype = superCtor.prototype;\n            ctor.prototype = new TempCtor();\n            ctor.prototype.constructor = ctor;\n          }\n        };\n      }\n    }, {}],\n    54: [function (require, module, exports) {\n      // shim for using process in browser\n      var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n      // don't break things.  But we need to wrap it in a try catch in case it is\n      // wrapped in strict mode code which doesn't define any globals.  It's inside a\n      // function because try/catches deoptimize in certain engines.\n\n      var cachedSetTimeout;\n      var cachedClearTimeout;\n\n      function defaultSetTimout() {\n        throw new Error('setTimeout has not been defined');\n      }\n\n      function defaultClearTimeout() {\n        throw new Error('clearTimeout has not been defined');\n      }\n\n      (function () {\n        try {\n          if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n          } else {\n            cachedSetTimeout = defaultSetTimout;\n          }\n        } catch (e) {\n          cachedSetTimeout = defaultSetTimout;\n        }\n\n        try {\n          if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n          } else {\n            cachedClearTimeout = defaultClearTimeout;\n          }\n        } catch (e) {\n          cachedClearTimeout = defaultClearTimeout;\n        }\n      })();\n\n      function runTimeout(fun) {\n        if (cachedSetTimeout === setTimeout) {\n          //normal enviroments in sane situations\n          return setTimeout(fun, 0);\n        } // if setTimeout wasn't available but was latter defined\n\n\n        if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n          cachedSetTimeout = setTimeout;\n          return setTimeout(fun, 0);\n        }\n\n        try {\n          // when when somebody has screwed with setTimeout but no I.E. maddness\n          return cachedSetTimeout(fun, 0);\n        } catch (e) {\n          try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n          } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n          }\n        }\n      }\n\n      function runClearTimeout(marker) {\n        if (cachedClearTimeout === clearTimeout) {\n          //normal enviroments in sane situations\n          return clearTimeout(marker);\n        } // if clearTimeout wasn't available but was latter defined\n\n\n        if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n          cachedClearTimeout = clearTimeout;\n          return clearTimeout(marker);\n        }\n\n        try {\n          // when when somebody has screwed with setTimeout but no I.E. maddness\n          return cachedClearTimeout(marker);\n        } catch (e) {\n          try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n          } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n          }\n        }\n      }\n\n      var queue = [];\n      var draining = false;\n      var currentQueue;\n      var queueIndex = -1;\n\n      function cleanUpNextTick() {\n        if (!draining || !currentQueue) {\n          return;\n        }\n\n        draining = false;\n\n        if (currentQueue.length) {\n          queue = currentQueue.concat(queue);\n        } else {\n          queueIndex = -1;\n        }\n\n        if (queue.length) {\n          drainQueue();\n        }\n      }\n\n      function drainQueue() {\n        if (draining) {\n          return;\n        }\n\n        var timeout = runTimeout(cleanUpNextTick);\n        draining = true;\n        var len = queue.length;\n\n        while (len) {\n          currentQueue = queue;\n          queue = [];\n\n          while (++queueIndex < len) {\n            if (currentQueue) {\n              currentQueue[queueIndex].run();\n            }\n          }\n\n          queueIndex = -1;\n          len = queue.length;\n        }\n\n        currentQueue = null;\n        draining = false;\n        runClearTimeout(timeout);\n      }\n\n      process.nextTick = function (fun) {\n        var args = new Array(arguments.length - 1);\n\n        if (arguments.length > 1) {\n          for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n          }\n        }\n\n        queue.push(new Item(fun, args));\n\n        if (queue.length === 1 && !draining) {\n          runTimeout(drainQueue);\n        }\n      }; // v8 likes predictible objects\n\n\n      function Item(fun, array) {\n        this.fun = fun;\n        this.array = array;\n      }\n\n      Item.prototype.run = function () {\n        this.fun.apply(null, this.array);\n      };\n\n      process.title = 'browser';\n      process.browser = true;\n      process.env = {};\n      process.argv = [];\n      process.version = ''; // empty string to avoid regexp issues\n\n      process.versions = {};\n\n      function noop() {}\n\n      process.on = noop;\n      process.addListener = noop;\n      process.once = noop;\n      process.off = noop;\n      process.removeListener = noop;\n      process.removeAllListeners = noop;\n      process.emit = noop;\n      process.prependListener = noop;\n      process.prependOnceListener = noop;\n\n      process.listeners = function (name) {\n        return [];\n      };\n\n      process.binding = function (name) {\n        throw new Error('process.binding is not supported');\n      };\n\n      process.cwd = function () {\n        return '/';\n      };\n\n      process.chdir = function (dir) {\n        throw new Error('process.chdir is not supported');\n      };\n\n      process.umask = function () {\n        return 0;\n      };\n    }, {}],\n    55: [function (require, module, exports) {\n      /*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n\n      /* eslint-disable node/no-deprecated-api */\n      var buffer = require('buffer');\n\n      var Buffer = buffer.Buffer; // alternative to using Object.keys for old browsers\n\n      function copyProps(src, dst) {\n        for (var key in src) {\n          dst[key] = src[key];\n        }\n      }\n\n      if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n        module.exports = buffer;\n      } else {\n        // Copy properties from require('buffer')\n        copyProps(buffer, exports);\n        exports.Buffer = SafeBuffer;\n      }\n\n      function SafeBuffer(arg, encodingOrOffset, length) {\n        return Buffer(arg, encodingOrOffset, length);\n      }\n\n      SafeBuffer.prototype = Object.create(Buffer.prototype); // Copy static methods from Buffer\n\n      copyProps(Buffer, SafeBuffer);\n\n      SafeBuffer.from = function (arg, encodingOrOffset, length) {\n        if (typeof arg === 'number') {\n          throw new TypeError('Argument must not be a number');\n        }\n\n        return Buffer(arg, encodingOrOffset, length);\n      };\n\n      SafeBuffer.alloc = function (size, fill, encoding) {\n        if (typeof size !== 'number') {\n          throw new TypeError('Argument must be a number');\n        }\n\n        var buf = Buffer(size);\n\n        if (fill !== undefined) {\n          if (typeof encoding === 'string') {\n            buf.fill(fill, encoding);\n          } else {\n            buf.fill(fill);\n          }\n        } else {\n          buf.fill(0);\n        }\n\n        return buf;\n      };\n\n      SafeBuffer.allocUnsafe = function (size) {\n        if (typeof size !== 'number') {\n          throw new TypeError('Argument must be a number');\n        }\n\n        return Buffer(size);\n      };\n\n      SafeBuffer.allocUnsafeSlow = function (size) {\n        if (typeof size !== 'number') {\n          throw new TypeError('Argument must be a number');\n        }\n\n        return buffer.SlowBuffer(size);\n      };\n    }, {\n      \"buffer\": 50\n    }],\n    56: [function (require, module, exports) {\n      // Copyright Joyent, Inc. and other Node contributors.\n      //\n      // Permission is hereby granted, free of charge, to any person obtaining a\n      // copy of this software and associated documentation files (the\n      // \"Software\"), to deal in the Software without restriction, including\n      // without limitation the rights to use, copy, modify, merge, publish,\n      // distribute, sublicense, and/or sell copies of the Software, and to permit\n      // persons to whom the Software is furnished to do so, subject to the\n      // following conditions:\n      //\n      // The above copyright notice and this permission notice shall be included\n      // in all copies or substantial portions of the Software.\n      //\n      // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n      // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n      // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n      // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n      // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n      // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n      // USE OR OTHER DEALINGS IN THE SOFTWARE.\n      module.exports = Stream;\n\n      var EE = require('events').EventEmitter;\n\n      var inherits = require('inherits');\n\n      inherits(Stream, EE);\n      Stream.Readable = require('readable-stream/lib/_stream_readable.js');\n      Stream.Writable = require('readable-stream/lib/_stream_writable.js');\n      Stream.Duplex = require('readable-stream/lib/_stream_duplex.js');\n      Stream.Transform = require('readable-stream/lib/_stream_transform.js');\n      Stream.PassThrough = require('readable-stream/lib/_stream_passthrough.js');\n      Stream.finished = require('readable-stream/lib/internal/streams/end-of-stream.js');\n      Stream.pipeline = require('readable-stream/lib/internal/streams/pipeline.js'); // Backwards-compat with node 0.4.x\n\n      Stream.Stream = Stream; // old-style streams.  Note that the pipe method (the only relevant\n      // part of this class) is overridden in the Readable class.\n\n      function Stream() {\n        EE.call(this);\n      }\n\n      Stream.prototype.pipe = function (dest, options) {\n        var source = this;\n\n        function ondata(chunk) {\n          if (dest.writable) {\n            if (false === dest.write(chunk) && source.pause) {\n              source.pause();\n            }\n          }\n        }\n\n        source.on('data', ondata);\n\n        function ondrain() {\n          if (source.readable && source.resume) {\n            source.resume();\n          }\n        }\n\n        dest.on('drain', ondrain); // If the 'end' option is not supplied, dest.end() will be called when\n        // source gets the 'end' or 'close' events.  Only dest.end() once.\n\n        if (!dest._isStdio && (!options || options.end !== false)) {\n          source.on('end', onend);\n          source.on('close', onclose);\n        }\n\n        var didOnEnd = false;\n\n        function onend() {\n          if (didOnEnd) return;\n          didOnEnd = true;\n          dest.end();\n        }\n\n        function onclose() {\n          if (didOnEnd) return;\n          didOnEnd = true;\n          if (typeof dest.destroy === 'function') dest.destroy();\n        } // don't leave dangling pipes when there are errors.\n\n\n        function onerror(er) {\n          cleanup();\n\n          if (EE.listenerCount(this, 'error') === 0) {\n            throw er; // Unhandled stream error in pipe.\n          }\n        }\n\n        source.on('error', onerror);\n        dest.on('error', onerror); // remove all the event listeners that were added.\n\n        function cleanup() {\n          source.removeListener('data', ondata);\n          dest.removeListener('drain', ondrain);\n          source.removeListener('end', onend);\n          source.removeListener('close', onclose);\n          source.removeListener('error', onerror);\n          dest.removeListener('error', onerror);\n          source.removeListener('end', cleanup);\n          source.removeListener('close', cleanup);\n          dest.removeListener('close', cleanup);\n        }\n\n        source.on('end', cleanup);\n        source.on('close', cleanup);\n        dest.on('close', cleanup);\n        dest.emit('pipe', source); // Allow for unix-like usage: A.pipe(B).pipe(C)\n\n        return dest;\n      };\n    }, {\n      \"events\": 51,\n      \"inherits\": 53,\n      \"readable-stream/lib/_stream_duplex.js\": 58,\n      \"readable-stream/lib/_stream_passthrough.js\": 59,\n      \"readable-stream/lib/_stream_readable.js\": 60,\n      \"readable-stream/lib/_stream_transform.js\": 61,\n      \"readable-stream/lib/_stream_writable.js\": 62,\n      \"readable-stream/lib/internal/streams/end-of-stream.js\": 66,\n      \"readable-stream/lib/internal/streams/pipeline.js\": 68\n    }],\n    57: [function (require, module, exports) {\n      'use strict';\n\n      function _inheritsLoose(subClass, superClass) {\n        subClass.prototype = Object.create(superClass.prototype);\n        subClass.prototype.constructor = subClass;\n        subClass.__proto__ = superClass;\n      }\n\n      var codes = {};\n\n      function createErrorType(code, message, Base) {\n        if (!Base) {\n          Base = Error;\n        }\n\n        function getMessage(arg1, arg2, arg3) {\n          if (typeof message === 'string') {\n            return message;\n          } else {\n            return message(arg1, arg2, arg3);\n          }\n        }\n\n        var NodeError = /*#__PURE__*/function (_Base) {\n          _inheritsLoose(NodeError, _Base);\n\n          function NodeError(arg1, arg2, arg3) {\n            return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n          }\n\n          return NodeError;\n        }(Base);\n\n        NodeError.prototype.name = Base.name;\n        NodeError.prototype.code = code;\n        codes[code] = NodeError;\n      } // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\n      function oneOf(expected, thing) {\n        if (Array.isArray(expected)) {\n          var len = expected.length;\n          expected = expected.map(function (i) {\n            return String(i);\n          });\n\n          if (len > 2) {\n            return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n          } else if (len === 2) {\n            return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n          } else {\n            return \"of \".concat(thing, \" \").concat(expected[0]);\n          }\n        } else {\n          return \"of \".concat(thing, \" \").concat(String(expected));\n        }\n      } // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\n      function startsWith(str, search, pos) {\n        return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n      } // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\n      function endsWith(str, search, this_len) {\n        if (this_len === undefined || this_len > str.length) {\n          this_len = str.length;\n        }\n\n        return str.substring(this_len - search.length, this_len) === search;\n      } // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\n      function includes(str, search, start) {\n        if (typeof start !== 'number') {\n          start = 0;\n        }\n\n        if (start + search.length > str.length) {\n          return false;\n        } else {\n          return str.indexOf(search, start) !== -1;\n        }\n      }\n\n      createErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n        return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n      }, TypeError);\n      createErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n        // determiner: 'must be' or 'must not be'\n        var determiner;\n\n        if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n          determiner = 'must not be';\n          expected = expected.replace(/^not /, '');\n        } else {\n          determiner = 'must be';\n        }\n\n        var msg;\n\n        if (endsWith(name, ' argument')) {\n          // For cases like 'first argument'\n          msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n        } else {\n          var type = includes(name, '.') ? 'property' : 'argument';\n          msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n        }\n\n        msg += \". Received type \".concat(typeof actual);\n        return msg;\n      }, TypeError);\n      createErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\n      createErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n        return 'The ' + name + ' method is not implemented';\n      });\n      createErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\n      createErrorType('ERR_STREAM_DESTROYED', function (name) {\n        return 'Cannot call ' + name + ' after a stream was destroyed';\n      });\n      createErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\n      createErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\n      createErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\n      createErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\n      createErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n        return 'Unknown encoding: ' + arg;\n      }, TypeError);\n      createErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\n      module.exports.codes = codes;\n    }, {}],\n    58: [function (require, module, exports) {\n      (function (process) {\n        (function () {\n          // Copyright Joyent, Inc. and other Node contributors.\n          //\n          // Permission is hereby granted, free of charge, to any person obtaining a\n          // copy of this software and associated documentation files (the\n          // \"Software\"), to deal in the Software without restriction, including\n          // without limitation the rights to use, copy, modify, merge, publish,\n          // distribute, sublicense, and/or sell copies of the Software, and to permit\n          // persons to whom the Software is furnished to do so, subject to the\n          // following conditions:\n          //\n          // The above copyright notice and this permission notice shall be included\n          // in all copies or substantial portions of the Software.\n          //\n          // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n          // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n          // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n          // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n          // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n          // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n          // USE OR OTHER DEALINGS IN THE SOFTWARE.\n          // a duplex stream is just a stream that is both readable and writable.\n          // Since JS doesn't have multiple prototypal inheritance, this class\n          // prototypally inherits from Readable, and then parasitically from\n          // Writable.\n          'use strict';\n          /*<replacement>*/\n\n          var objectKeys = Object.keys || function (obj) {\n            var keys = [];\n\n            for (var key in obj) {\n              keys.push(key);\n            }\n\n            return keys;\n          };\n          /*</replacement>*/\n\n\n          module.exports = Duplex;\n\n          var Readable = require('./_stream_readable');\n\n          var Writable = require('./_stream_writable');\n\n          require('inherits')(Duplex, Readable);\n\n          {\n            // Allow the keys array to be GC'ed.\n            var keys = objectKeys(Writable.prototype);\n\n            for (var v = 0; v < keys.length; v++) {\n              var method = keys[v];\n              if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n            }\n          }\n\n          function Duplex(options) {\n            if (!(this instanceof Duplex)) return new Duplex(options);\n            Readable.call(this, options);\n            Writable.call(this, options);\n            this.allowHalfOpen = true;\n\n            if (options) {\n              if (options.readable === false) this.readable = false;\n              if (options.writable === false) this.writable = false;\n\n              if (options.allowHalfOpen === false) {\n                this.allowHalfOpen = false;\n                this.once('end', onend);\n              }\n            }\n          }\n\n          Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n            // making it explicit this property is not enumerable\n            // because otherwise some prototype manipulation in\n            // userland will fail\n            enumerable: false,\n            get: function get() {\n              return this._writableState.highWaterMark;\n            }\n          });\n          Object.defineProperty(Duplex.prototype, 'writableBuffer', {\n            // making it explicit this property is not enumerable\n            // because otherwise some prototype manipulation in\n            // userland will fail\n            enumerable: false,\n            get: function get() {\n              return this._writableState && this._writableState.getBuffer();\n            }\n          });\n          Object.defineProperty(Duplex.prototype, 'writableLength', {\n            // making it explicit this property is not enumerable\n            // because otherwise some prototype manipulation in\n            // userland will fail\n            enumerable: false,\n            get: function get() {\n              return this._writableState.length;\n            }\n          }); // the no-half-open enforcer\n\n          function onend() {\n            // If the writable side ended, then we're ok.\n            if (this._writableState.ended) return; // no more data can be written.\n            // But allow more writes to happen in this tick.\n\n            process.nextTick(onEndNT, this);\n          }\n\n          function onEndNT(self) {\n            self.end();\n          }\n\n          Object.defineProperty(Duplex.prototype, 'destroyed', {\n            // making it explicit this property is not enumerable\n            // because otherwise some prototype manipulation in\n            // userland will fail\n            enumerable: false,\n            get: function get() {\n              if (this._readableState === undefined || this._writableState === undefined) {\n                return false;\n              }\n\n              return this._readableState.destroyed && this._writableState.destroyed;\n            },\n            set: function set(value) {\n              // we ignore the value if the stream\n              // has not been initialized yet\n              if (this._readableState === undefined || this._writableState === undefined) {\n                return;\n              } // backward compatibility, the user is explicitly\n              // managing destroyed\n\n\n              this._readableState.destroyed = value;\n              this._writableState.destroyed = value;\n            }\n          });\n        }).call(this);\n      }).call(this, require('_process'));\n    }, {\n      \"./_stream_readable\": 60,\n      \"./_stream_writable\": 62,\n      \"_process\": 54,\n      \"inherits\": 53\n    }],\n    59: [function (require, module, exports) {\n      // Copyright Joyent, Inc. and other Node contributors.\n      //\n      // Permission is hereby granted, free of charge, to any person obtaining a\n      // copy of this software and associated documentation files (the\n      // \"Software\"), to deal in the Software without restriction, including\n      // without limitation the rights to use, copy, modify, merge, publish,\n      // distribute, sublicense, and/or sell copies of the Software, and to permit\n      // persons to whom the Software is furnished to do so, subject to the\n      // following conditions:\n      //\n      // The above copyright notice and this permission notice shall be included\n      // in all copies or substantial portions of the Software.\n      //\n      // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n      // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n      // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n      // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n      // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n      // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n      // USE OR OTHER DEALINGS IN THE SOFTWARE.\n      // a passthrough stream.\n      // basically just the most minimal sort of Transform stream.\n      // Every written chunk gets output as-is.\n      'use strict';\n\n      module.exports = PassThrough;\n\n      var Transform = require('./_stream_transform');\n\n      require('inherits')(PassThrough, Transform);\n\n      function PassThrough(options) {\n        if (!(this instanceof PassThrough)) return new PassThrough(options);\n        Transform.call(this, options);\n      }\n\n      PassThrough.prototype._transform = function (chunk, encoding, cb) {\n        cb(null, chunk);\n      };\n    }, {\n      \"./_stream_transform\": 61,\n      \"inherits\": 53\n    }],\n    60: [function (require, module, exports) {\n      (function (process, global) {\n        (function () {\n          // Copyright Joyent, Inc. and other Node contributors.\n          //\n          // Permission is hereby granted, free of charge, to any person obtaining a\n          // copy of this software and associated documentation files (the\n          // \"Software\"), to deal in the Software without restriction, including\n          // without limitation the rights to use, copy, modify, merge, publish,\n          // distribute, sublicense, and/or sell copies of the Software, and to permit\n          // persons to whom the Software is furnished to do so, subject to the\n          // following conditions:\n          //\n          // The above copyright notice and this permission notice shall be included\n          // in all copies or substantial portions of the Software.\n          //\n          // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n          // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n          // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n          // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n          // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n          // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n          // USE OR OTHER DEALINGS IN THE SOFTWARE.\n          'use strict';\n\n          module.exports = Readable;\n          /*<replacement>*/\n\n          var Duplex;\n          /*</replacement>*/\n\n          Readable.ReadableState = ReadableState;\n          /*<replacement>*/\n\n          var EE = require('events').EventEmitter;\n\n          var EElistenerCount = function EElistenerCount(emitter, type) {\n            return emitter.listeners(type).length;\n          };\n          /*</replacement>*/\n\n          /*<replacement>*/\n\n\n          var Stream = require('./internal/streams/stream');\n          /*</replacement>*/\n\n\n          var Buffer = require('buffer').Buffer;\n\n          var OurUint8Array = global.Uint8Array || function () {};\n\n          function _uint8ArrayToBuffer(chunk) {\n            return Buffer.from(chunk);\n          }\n\n          function _isUint8Array(obj) {\n            return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n          }\n          /*<replacement>*/\n\n\n          var debugUtil = require('util');\n\n          var debug;\n\n          if (debugUtil && debugUtil.debuglog) {\n            debug = debugUtil.debuglog('stream');\n          } else {\n            debug = function debug() {};\n          }\n          /*</replacement>*/\n\n\n          var BufferList = require('./internal/streams/buffer_list');\n\n          var destroyImpl = require('./internal/streams/destroy');\n\n          var _require = require('./internal/streams/state'),\n              getHighWaterMark = _require.getHighWaterMark;\n\n          var _require$codes = require('../errors').codes,\n              ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n              ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n              ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n              ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\n          var StringDecoder;\n          var createReadableStreamAsyncIterator;\n          var from;\n\n          require('inherits')(Readable, Stream);\n\n          var errorOrDestroy = destroyImpl.errorOrDestroy;\n          var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\n          function prependListener(emitter, event, fn) {\n            // Sadly this is not cacheable as some libraries bundle their own\n            // event emitter implementation with them.\n            if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n            // userland ones.  NEVER DO THIS. This is here only because this code needs\n            // to continue to work with older versions of Node.js that do not include\n            // the prependListener() method. The goal is to eventually remove this hack.\n\n            if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n          }\n\n          function ReadableState(options, stream, isDuplex) {\n            Duplex = Duplex || require('./_stream_duplex');\n            options = options || {}; // Duplex streams are both readable and writable, but share\n            // the same options object.\n            // However, some cases require setting options to different\n            // values for the readable and the writable sides of the duplex stream.\n            // These options can be provided separately as readableXXX and writableXXX.\n\n            if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n            // make all the buffer merging and length checks go away\n\n            this.objectMode = !!options.objectMode;\n            if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n            // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n            this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n            // linked list can remove elements from the beginning faster than\n            // array.shift()\n\n            this.buffer = new BufferList();\n            this.length = 0;\n            this.pipes = null;\n            this.pipesCount = 0;\n            this.flowing = null;\n            this.ended = false;\n            this.endEmitted = false;\n            this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n            // immediately, or on a later tick.  We set this to true at first, because\n            // any actions that shouldn't happen until \"later\" should generally also\n            // not happen before the first read call.\n\n            this.sync = true; // whenever we return null, then we set a flag to say\n            // that we're awaiting a 'readable' event emission.\n\n            this.needReadable = false;\n            this.emittedReadable = false;\n            this.readableListening = false;\n            this.resumeScheduled = false;\n            this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n            this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n            this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n            this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n            // encoding is 'binary' so we have to make this configurable.\n            // Everything else in the universe uses 'utf8', though.\n\n            this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n            this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n            this.readingMore = false;\n            this.decoder = null;\n            this.encoding = null;\n\n            if (options.encoding) {\n              if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n              this.decoder = new StringDecoder(options.encoding);\n              this.encoding = options.encoding;\n            }\n          }\n\n          function Readable(options) {\n            Duplex = Duplex || require('./_stream_duplex');\n            if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n            // the ReadableState constructor, at least with V8 6.5\n\n            var isDuplex = this instanceof Duplex;\n            this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n            this.readable = true;\n\n            if (options) {\n              if (typeof options.read === 'function') this._read = options.read;\n              if (typeof options.destroy === 'function') this._destroy = options.destroy;\n            }\n\n            Stream.call(this);\n          }\n\n          Object.defineProperty(Readable.prototype, 'destroyed', {\n            // making it explicit this property is not enumerable\n            // because otherwise some prototype manipulation in\n            // userland will fail\n            enumerable: false,\n            get: function get() {\n              if (this._readableState === undefined) {\n                return false;\n              }\n\n              return this._readableState.destroyed;\n            },\n            set: function set(value) {\n              // we ignore the value if the stream\n              // has not been initialized yet\n              if (!this._readableState) {\n                return;\n              } // backward compatibility, the user is explicitly\n              // managing destroyed\n\n\n              this._readableState.destroyed = value;\n            }\n          });\n          Readable.prototype.destroy = destroyImpl.destroy;\n          Readable.prototype._undestroy = destroyImpl.undestroy;\n\n          Readable.prototype._destroy = function (err, cb) {\n            cb(err);\n          }; // Manually shove something into the read() buffer.\n          // This returns true if the highWaterMark has not been hit yet,\n          // similar to how Writable.write() returns true if you should\n          // write() some more.\n\n\n          Readable.prototype.push = function (chunk, encoding) {\n            var state = this._readableState;\n            var skipChunkCheck;\n\n            if (!state.objectMode) {\n              if (typeof chunk === 'string') {\n                encoding = encoding || state.defaultEncoding;\n\n                if (encoding !== state.encoding) {\n                  chunk = Buffer.from(chunk, encoding);\n                  encoding = '';\n                }\n\n                skipChunkCheck = true;\n              }\n            } else {\n              skipChunkCheck = true;\n            }\n\n            return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n          }; // Unshift should *always* be something directly out of read()\n\n\n          Readable.prototype.unshift = function (chunk) {\n            return readableAddChunk(this, chunk, null, true, false);\n          };\n\n          function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n            debug('readableAddChunk', chunk);\n            var state = stream._readableState;\n\n            if (chunk === null) {\n              state.reading = false;\n              onEofChunk(stream, state);\n            } else {\n              var er;\n              if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n              if (er) {\n                errorOrDestroy(stream, er);\n              } else if (state.objectMode || chunk && chunk.length > 0) {\n                if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n                  chunk = _uint8ArrayToBuffer(chunk);\n                }\n\n                if (addToFront) {\n                  if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n                } else if (state.ended) {\n                  errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n                } else if (state.destroyed) {\n                  return false;\n                } else {\n                  state.reading = false;\n\n                  if (state.decoder && !encoding) {\n                    chunk = state.decoder.write(chunk);\n                    if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n                  } else {\n                    addChunk(stream, state, chunk, false);\n                  }\n                }\n              } else if (!addToFront) {\n                state.reading = false;\n                maybeReadMore(stream, state);\n              }\n            } // We can push more data if we are below the highWaterMark.\n            // Also, if we have no data yet, we can stand some more bytes.\n            // This is to work around cases where hwm=0, such as the repl.\n\n\n            return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n          }\n\n          function addChunk(stream, state, chunk, addToFront) {\n            if (state.flowing && state.length === 0 && !state.sync) {\n              state.awaitDrain = 0;\n              stream.emit('data', chunk);\n            } else {\n              // update the buffer info.\n              state.length += state.objectMode ? 1 : chunk.length;\n              if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n              if (state.needReadable) emitReadable(stream);\n            }\n\n            maybeReadMore(stream, state);\n          }\n\n          function chunkInvalid(state, chunk) {\n            var er;\n\n            if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n              er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n            }\n\n            return er;\n          }\n\n          Readable.prototype.isPaused = function () {\n            return this._readableState.flowing === false;\n          }; // backwards compatibility.\n\n\n          Readable.prototype.setEncoding = function (enc) {\n            if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n            var decoder = new StringDecoder(enc);\n            this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n            this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n            var p = this._readableState.buffer.head;\n            var content = '';\n\n            while (p !== null) {\n              content += decoder.write(p.data);\n              p = p.next;\n            }\n\n            this._readableState.buffer.clear();\n\n            if (content !== '') this._readableState.buffer.push(content);\n            this._readableState.length = content.length;\n            return this;\n          }; // Don't raise the hwm > 1GB\n\n\n          var MAX_HWM = 0x40000000;\n\n          function computeNewHighWaterMark(n) {\n            if (n >= MAX_HWM) {\n              // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n              n = MAX_HWM;\n            } else {\n              // Get the next highest power of 2 to prevent increasing hwm excessively in\n              // tiny amounts\n              n--;\n              n |= n >>> 1;\n              n |= n >>> 2;\n              n |= n >>> 4;\n              n |= n >>> 8;\n              n |= n >>> 16;\n              n++;\n            }\n\n            return n;\n          } // This function is designed to be inlinable, so please take care when making\n          // changes to the function body.\n\n\n          function howMuchToRead(n, state) {\n            if (n <= 0 || state.length === 0 && state.ended) return 0;\n            if (state.objectMode) return 1;\n\n            if (n !== n) {\n              // Only flow one buffer at a time\n              if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n            } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n            if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n            if (n <= state.length) return n; // Don't have enough\n\n            if (!state.ended) {\n              state.needReadable = true;\n              return 0;\n            }\n\n            return state.length;\n          } // you can override either this method, or the async _read(n) below.\n\n\n          Readable.prototype.read = function (n) {\n            debug('read', n);\n            n = parseInt(n, 10);\n            var state = this._readableState;\n            var nOrig = n;\n            if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n            // already have a bunch of data in the buffer, then just trigger\n            // the 'readable' event and move on.\n\n            if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n              debug('read: emitReadable', state.length, state.ended);\n              if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n              return null;\n            }\n\n            n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n            if (n === 0 && state.ended) {\n              if (state.length === 0) endReadable(this);\n              return null;\n            } // All the actual chunk generation logic needs to be\n            // *below* the call to _read.  The reason is that in certain\n            // synthetic stream cases, such as passthrough streams, _read\n            // may be a completely synchronous operation which may change\n            // the state of the read buffer, providing enough data when\n            // before there was *not* enough.\n            //\n            // So, the steps are:\n            // 1. Figure out what the state of things will be after we do\n            // a read from the buffer.\n            //\n            // 2. If that resulting state will trigger a _read, then call _read.\n            // Note that this may be asynchronous, or synchronous.  Yes, it is\n            // deeply ugly to write APIs this way, but that still doesn't mean\n            // that the Readable class should behave improperly, as streams are\n            // designed to be sync/async agnostic.\n            // Take note if the _read call is sync or async (ie, if the read call\n            // has returned yet), so that we know whether or not it's safe to emit\n            // 'readable' etc.\n            //\n            // 3. Actually pull the requested chunks out of the buffer and return.\n            // if we need a readable event, then we need to do some reading.\n\n\n            var doRead = state.needReadable;\n            debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n            if (state.length === 0 || state.length - n < state.highWaterMark) {\n              doRead = true;\n              debug('length less than watermark', doRead);\n            } // however, if we've ended, then there's no point, and if we're already\n            // reading, then it's unnecessary.\n\n\n            if (state.ended || state.reading) {\n              doRead = false;\n              debug('reading or ended', doRead);\n            } else if (doRead) {\n              debug('do read');\n              state.reading = true;\n              state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n              if (state.length === 0) state.needReadable = true; // call internal read method\n\n              this._read(state.highWaterMark);\n\n              state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n              // and we need to re-evaluate how much data we can return to the user.\n\n              if (!state.reading) n = howMuchToRead(nOrig, state);\n            }\n\n            var ret;\n            if (n > 0) ret = fromList(n, state);else ret = null;\n\n            if (ret === null) {\n              state.needReadable = state.length <= state.highWaterMark;\n              n = 0;\n            } else {\n              state.length -= n;\n              state.awaitDrain = 0;\n            }\n\n            if (state.length === 0) {\n              // If we have nothing in the buffer, then we want to know\n              // as soon as we *do* get something into the buffer.\n              if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n              if (nOrig !== n && state.ended) endReadable(this);\n            }\n\n            if (ret !== null) this.emit('data', ret);\n            return ret;\n          };\n\n          function onEofChunk(stream, state) {\n            debug('onEofChunk');\n            if (state.ended) return;\n\n            if (state.decoder) {\n              var chunk = state.decoder.end();\n\n              if (chunk && chunk.length) {\n                state.buffer.push(chunk);\n                state.length += state.objectMode ? 1 : chunk.length;\n              }\n            }\n\n            state.ended = true;\n\n            if (state.sync) {\n              // if we are sync, wait until next tick to emit the data.\n              // Otherwise we risk emitting data in the flow()\n              // the readable code triggers during a read() call\n              emitReadable(stream);\n            } else {\n              // emit 'readable' now to make sure it gets picked up.\n              state.needReadable = false;\n\n              if (!state.emittedReadable) {\n                state.emittedReadable = true;\n                emitReadable_(stream);\n              }\n            }\n          } // Don't emit readable right away in sync mode, because this can trigger\n          // another read() call => stack overflow.  This way, it might trigger\n          // a nextTick recursion warning, but that's not so bad.\n\n\n          function emitReadable(stream) {\n            var state = stream._readableState;\n            debug('emitReadable', state.needReadable, state.emittedReadable);\n            state.needReadable = false;\n\n            if (!state.emittedReadable) {\n              debug('emitReadable', state.flowing);\n              state.emittedReadable = true;\n              process.nextTick(emitReadable_, stream);\n            }\n          }\n\n          function emitReadable_(stream) {\n            var state = stream._readableState;\n            debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n            if (!state.destroyed && (state.length || state.ended)) {\n              stream.emit('readable');\n              state.emittedReadable = false;\n            } // The stream needs another readable event if\n            // 1. It is not flowing, as the flow mechanism will take\n            //    care of it.\n            // 2. It is not ended.\n            // 3. It is below the highWaterMark, so we can schedule\n            //    another readable later.\n\n\n            state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n            flow(stream);\n          } // at this point, the user has presumably seen the 'readable' event,\n          // and called read() to consume some data.  that may have triggered\n          // in turn another _read(n) call, in which case reading = true if\n          // it's in progress.\n          // However, if we're not ended, or reading, and the length < hwm,\n          // then go ahead and try to read some more preemptively.\n\n\n          function maybeReadMore(stream, state) {\n            if (!state.readingMore) {\n              state.readingMore = true;\n              process.nextTick(maybeReadMore_, stream, state);\n            }\n          }\n\n          function maybeReadMore_(stream, state) {\n            // Attempt to read more data if we should.\n            //\n            // The conditions for reading more data are (one of):\n            // - Not enough data buffered (state.length < state.highWaterMark). The loop\n            //   is responsible for filling the buffer with enough data if such data\n            //   is available. If highWaterMark is 0 and we are not in the flowing mode\n            //   we should _not_ attempt to buffer any extra data. We'll get more data\n            //   when the stream consumer calls read() instead.\n            // - No data in the buffer, and the stream is in flowing mode. In this mode\n            //   the loop below is responsible for ensuring read() is called. Failing to\n            //   call read here would abort the flow and there's no other mechanism for\n            //   continuing the flow if the stream consumer has just subscribed to the\n            //   'data' event.\n            //\n            // In addition to the above conditions to keep reading data, the following\n            // conditions prevent the data from being read:\n            // - The stream has ended (state.ended).\n            // - There is already a pending 'read' operation (state.reading). This is a\n            //   case where the the stream has called the implementation defined _read()\n            //   method, but they are processing the call asynchronously and have _not_\n            //   called push() with new data. In this case we skip performing more\n            //   read()s. The execution ends in this method again after the _read() ends\n            //   up calling push() with more data.\n            while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n              var len = state.length;\n              debug('maybeReadMore read 0');\n              stream.read(0);\n              if (len === state.length) // didn't get any data, stop spinning.\n                break;\n            }\n\n            state.readingMore = false;\n          } // abstract method.  to be overridden in specific implementation classes.\n          // call cb(er, data) where data is <= n in length.\n          // for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n          // arbitrary, and perhaps not very meaningful.\n\n\n          Readable.prototype._read = function (n) {\n            errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n          };\n\n          Readable.prototype.pipe = function (dest, pipeOpts) {\n            var src = this;\n            var state = this._readableState;\n\n            switch (state.pipesCount) {\n              case 0:\n                state.pipes = dest;\n                break;\n\n              case 1:\n                state.pipes = [state.pipes, dest];\n                break;\n\n              default:\n                state.pipes.push(dest);\n                break;\n            }\n\n            state.pipesCount += 1;\n            debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n            var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n            var endFn = doEnd ? onend : unpipe;\n            if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n            dest.on('unpipe', onunpipe);\n\n            function onunpipe(readable, unpipeInfo) {\n              debug('onunpipe');\n\n              if (readable === src) {\n                if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n                  unpipeInfo.hasUnpiped = true;\n                  cleanup();\n                }\n              }\n            }\n\n            function onend() {\n              debug('onend');\n              dest.end();\n            } // when the dest drains, it reduces the awaitDrain counter\n            // on the source.  This would be more elegant with a .once()\n            // handler in flow(), but adding and removing repeatedly is\n            // too slow.\n\n\n            var ondrain = pipeOnDrain(src);\n            dest.on('drain', ondrain);\n            var cleanedUp = false;\n\n            function cleanup() {\n              debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n              dest.removeListener('close', onclose);\n              dest.removeListener('finish', onfinish);\n              dest.removeListener('drain', ondrain);\n              dest.removeListener('error', onerror);\n              dest.removeListener('unpipe', onunpipe);\n              src.removeListener('end', onend);\n              src.removeListener('end', unpipe);\n              src.removeListener('data', ondata);\n              cleanedUp = true; // if the reader is waiting for a drain event from this\n              // specific writer, then it would cause it to never start\n              // flowing again.\n              // So, if this is awaiting a drain, then we just call it now.\n              // If we don't know, then assume that we are waiting for one.\n\n              if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n            }\n\n            src.on('data', ondata);\n\n            function ondata(chunk) {\n              debug('ondata');\n              var ret = dest.write(chunk);\n              debug('dest.write', ret);\n\n              if (ret === false) {\n                // If the user unpiped during `dest.write()`, it is possible\n                // to get stuck in a permanently paused state if that write\n                // also returned false.\n                // => Check whether `dest` is still a piping destination.\n                if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n                  debug('false write response, pause', state.awaitDrain);\n                  state.awaitDrain++;\n                }\n\n                src.pause();\n              }\n            } // if the dest has an error, then stop piping into it.\n            // however, don't suppress the throwing behavior for this.\n\n\n            function onerror(er) {\n              debug('onerror', er);\n              unpipe();\n              dest.removeListener('error', onerror);\n              if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n            } // Make sure our error handler is attached before userland ones.\n\n\n            prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n            function onclose() {\n              dest.removeListener('finish', onfinish);\n              unpipe();\n            }\n\n            dest.once('close', onclose);\n\n            function onfinish() {\n              debug('onfinish');\n              dest.removeListener('close', onclose);\n              unpipe();\n            }\n\n            dest.once('finish', onfinish);\n\n            function unpipe() {\n              debug('unpipe');\n              src.unpipe(dest);\n            } // tell the dest that it's being piped to\n\n\n            dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n            if (!state.flowing) {\n              debug('pipe resume');\n              src.resume();\n            }\n\n            return dest;\n          };\n\n          function pipeOnDrain(src) {\n            return function pipeOnDrainFunctionResult() {\n              var state = src._readableState;\n              debug('pipeOnDrain', state.awaitDrain);\n              if (state.awaitDrain) state.awaitDrain--;\n\n              if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n                state.flowing = true;\n                flow(src);\n              }\n            };\n          }\n\n          Readable.prototype.unpipe = function (dest) {\n            var state = this._readableState;\n            var unpipeInfo = {\n              hasUnpiped: false\n            }; // if we're not piping anywhere, then do nothing.\n\n            if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n            if (state.pipesCount === 1) {\n              // passed in one, but it's not the right one.\n              if (dest && dest !== state.pipes) return this;\n              if (!dest) dest = state.pipes; // got a match.\n\n              state.pipes = null;\n              state.pipesCount = 0;\n              state.flowing = false;\n              if (dest) dest.emit('unpipe', this, unpipeInfo);\n              return this;\n            } // slow case. multiple pipe destinations.\n\n\n            if (!dest) {\n              // remove all.\n              var dests = state.pipes;\n              var len = state.pipesCount;\n              state.pipes = null;\n              state.pipesCount = 0;\n              state.flowing = false;\n\n              for (var i = 0; i < len; i++) {\n                dests[i].emit('unpipe', this, {\n                  hasUnpiped: false\n                });\n              }\n\n              return this;\n            } // try to find the right one.\n\n\n            var index = indexOf(state.pipes, dest);\n            if (index === -1) return this;\n            state.pipes.splice(index, 1);\n            state.pipesCount -= 1;\n            if (state.pipesCount === 1) state.pipes = state.pipes[0];\n            dest.emit('unpipe', this, unpipeInfo);\n            return this;\n          }; // set up data events if they are asked for\n          // Ensure readable listeners eventually get something\n\n\n          Readable.prototype.on = function (ev, fn) {\n            var res = Stream.prototype.on.call(this, ev, fn);\n            var state = this._readableState;\n\n            if (ev === 'data') {\n              // update readableListening so that resume() may be a no-op\n              // a few lines down. This is needed to support once('readable').\n              state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n              if (state.flowing !== false) this.resume();\n            } else if (ev === 'readable') {\n              if (!state.endEmitted && !state.readableListening) {\n                state.readableListening = state.needReadable = true;\n                state.flowing = false;\n                state.emittedReadable = false;\n                debug('on readable', state.length, state.reading);\n\n                if (state.length) {\n                  emitReadable(this);\n                } else if (!state.reading) {\n                  process.nextTick(nReadingNextTick, this);\n                }\n              }\n            }\n\n            return res;\n          };\n\n          Readable.prototype.addListener = Readable.prototype.on;\n\n          Readable.prototype.removeListener = function (ev, fn) {\n            var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n            if (ev === 'readable') {\n              // We need to check if there is someone still listening to\n              // readable and reset the state. However this needs to happen\n              // after readable has been emitted but before I/O (nextTick) to\n              // support once('readable', fn) cycles. This means that calling\n              // resume within the same tick will have no\n              // effect.\n              process.nextTick(updateReadableListening, this);\n            }\n\n            return res;\n          };\n\n          Readable.prototype.removeAllListeners = function (ev) {\n            var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n            if (ev === 'readable' || ev === undefined) {\n              // We need to check if there is someone still listening to\n              // readable and reset the state. However this needs to happen\n              // after readable has been emitted but before I/O (nextTick) to\n              // support once('readable', fn) cycles. This means that calling\n              // resume within the same tick will have no\n              // effect.\n              process.nextTick(updateReadableListening, this);\n            }\n\n            return res;\n          };\n\n          function updateReadableListening(self) {\n            var state = self._readableState;\n            state.readableListening = self.listenerCount('readable') > 0;\n\n            if (state.resumeScheduled && !state.paused) {\n              // flowing needs to be set to true now, otherwise\n              // the upcoming resume will not flow.\n              state.flowing = true; // crude way to check if we should resume\n            } else if (self.listenerCount('data') > 0) {\n              self.resume();\n            }\n          }\n\n          function nReadingNextTick(self) {\n            debug('readable nexttick read 0');\n            self.read(0);\n          } // pause() and resume() are remnants of the legacy readable stream API\n          // If the user uses them, then switch into old mode.\n\n\n          Readable.prototype.resume = function () {\n            var state = this._readableState;\n\n            if (!state.flowing) {\n              debug('resume'); // we flow only if there is no one listening\n              // for readable, but we still have to call\n              // resume()\n\n              state.flowing = !state.readableListening;\n              resume(this, state);\n            }\n\n            state.paused = false;\n            return this;\n          };\n\n          function resume(stream, state) {\n            if (!state.resumeScheduled) {\n              state.resumeScheduled = true;\n              process.nextTick(resume_, stream, state);\n            }\n          }\n\n          function resume_(stream, state) {\n            debug('resume', state.reading);\n\n            if (!state.reading) {\n              stream.read(0);\n            }\n\n            state.resumeScheduled = false;\n            stream.emit('resume');\n            flow(stream);\n            if (state.flowing && !state.reading) stream.read(0);\n          }\n\n          Readable.prototype.pause = function () {\n            debug('call pause flowing=%j', this._readableState.flowing);\n\n            if (this._readableState.flowing !== false) {\n              debug('pause');\n              this._readableState.flowing = false;\n              this.emit('pause');\n            }\n\n            this._readableState.paused = true;\n            return this;\n          };\n\n          function flow(stream) {\n            var state = stream._readableState;\n            debug('flow', state.flowing);\n\n            while (state.flowing && stream.read() !== null) {\n              ;\n            }\n          } // wrap an old-style stream as the async data source.\n          // This is *not* part of the readable stream interface.\n          // It is an ugly unfortunate mess of history.\n\n\n          Readable.prototype.wrap = function (stream) {\n            var _this = this;\n\n            var state = this._readableState;\n            var paused = false;\n            stream.on('end', function () {\n              debug('wrapped end');\n\n              if (state.decoder && !state.ended) {\n                var chunk = state.decoder.end();\n                if (chunk && chunk.length) _this.push(chunk);\n              }\n\n              _this.push(null);\n            });\n            stream.on('data', function (chunk) {\n              debug('wrapped data');\n              if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n              if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n              var ret = _this.push(chunk);\n\n              if (!ret) {\n                paused = true;\n                stream.pause();\n              }\n            }); // proxy all the other methods.\n            // important when wrapping filters and duplexes.\n\n            for (var i in stream) {\n              if (this[i] === undefined && typeof stream[i] === 'function') {\n                this[i] = function methodWrap(method) {\n                  return function methodWrapReturnFunction() {\n                    return stream[method].apply(stream, arguments);\n                  };\n                }(i);\n              }\n            } // proxy certain important events.\n\n\n            for (var n = 0; n < kProxyEvents.length; n++) {\n              stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n            } // when we try to consume some more bytes, simply unpause the\n            // underlying stream.\n\n\n            this._read = function (n) {\n              debug('wrapped _read', n);\n\n              if (paused) {\n                paused = false;\n                stream.resume();\n              }\n            };\n\n            return this;\n          };\n\n          if (typeof Symbol === 'function') {\n            Readable.prototype[Symbol.asyncIterator] = function () {\n              if (createReadableStreamAsyncIterator === undefined) {\n                createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n              }\n\n              return createReadableStreamAsyncIterator(this);\n            };\n          }\n\n          Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n            // making it explicit this property is not enumerable\n            // because otherwise some prototype manipulation in\n            // userland will fail\n            enumerable: false,\n            get: function get() {\n              return this._readableState.highWaterMark;\n            }\n          });\n          Object.defineProperty(Readable.prototype, 'readableBuffer', {\n            // making it explicit this property is not enumerable\n            // because otherwise some prototype manipulation in\n            // userland will fail\n            enumerable: false,\n            get: function get() {\n              return this._readableState && this._readableState.buffer;\n            }\n          });\n          Object.defineProperty(Readable.prototype, 'readableFlowing', {\n            // making it explicit this property is not enumerable\n            // because otherwise some prototype manipulation in\n            // userland will fail\n            enumerable: false,\n            get: function get() {\n              return this._readableState.flowing;\n            },\n            set: function set(state) {\n              if (this._readableState) {\n                this._readableState.flowing = state;\n              }\n            }\n          }); // exposed for testing purposes only.\n\n          Readable._fromList = fromList;\n          Object.defineProperty(Readable.prototype, 'readableLength', {\n            // making it explicit this property is not enumerable\n            // because otherwise some prototype manipulation in\n            // userland will fail\n            enumerable: false,\n            get: function get() {\n              return this._readableState.length;\n            }\n          }); // Pluck off n bytes from an array of buffers.\n          // Length is the combined lengths of all the buffers in the list.\n          // This function is designed to be inlinable, so please take care when making\n          // changes to the function body.\n\n          function fromList(n, state) {\n            // nothing buffered\n            if (state.length === 0) return null;\n            var ret;\n            if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n              // read it all, truncate the list\n              if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n              state.buffer.clear();\n            } else {\n              // read part of list\n              ret = state.buffer.consume(n, state.decoder);\n            }\n            return ret;\n          }\n\n          function endReadable(stream) {\n            var state = stream._readableState;\n            debug('endReadable', state.endEmitted);\n\n            if (!state.endEmitted) {\n              state.ended = true;\n              process.nextTick(endReadableNT, state, stream);\n            }\n          }\n\n          function endReadableNT(state, stream) {\n            debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n            if (!state.endEmitted && state.length === 0) {\n              state.endEmitted = true;\n              stream.readable = false;\n              stream.emit('end');\n\n              if (state.autoDestroy) {\n                // In case of duplex streams we need a way to detect\n                // if the writable side is ready for autoDestroy as well\n                var wState = stream._writableState;\n\n                if (!wState || wState.autoDestroy && wState.finished) {\n                  stream.destroy();\n                }\n              }\n            }\n          }\n\n          if (typeof Symbol === 'function') {\n            Readable.from = function (iterable, opts) {\n              if (from === undefined) {\n                from = require('./internal/streams/from');\n              }\n\n              return from(Readable, iterable, opts);\n            };\n          }\n\n          function indexOf(xs, x) {\n            for (var i = 0, l = xs.length; i < l; i++) {\n              if (xs[i] === x) return i;\n            }\n\n            return -1;\n          }\n        }).call(this);\n      }).call(this, require('_process'), typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n    }, {\n      \"../errors\": 57,\n      \"./_stream_duplex\": 58,\n      \"./internal/streams/async_iterator\": 63,\n      \"./internal/streams/buffer_list\": 64,\n      \"./internal/streams/destroy\": 65,\n      \"./internal/streams/from\": 67,\n      \"./internal/streams/state\": 69,\n      \"./internal/streams/stream\": 70,\n      \"_process\": 54,\n      \"buffer\": 50,\n      \"events\": 51,\n      \"inherits\": 53,\n      \"string_decoder/\": 71,\n      \"util\": 49\n    }],\n    61: [function (require, module, exports) {\n      // Copyright Joyent, Inc. and other Node contributors.\n      //\n      // Permission is hereby granted, free of charge, to any person obtaining a\n      // copy of this software and associated documentation files (the\n      // \"Software\"), to deal in the Software without restriction, including\n      // without limitation the rights to use, copy, modify, merge, publish,\n      // distribute, sublicense, and/or sell copies of the Software, and to permit\n      // persons to whom the Software is furnished to do so, subject to the\n      // following conditions:\n      //\n      // The above copyright notice and this permission notice shall be included\n      // in all copies or substantial portions of the Software.\n      //\n      // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n      // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n      // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n      // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n      // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n      // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n      // USE OR OTHER DEALINGS IN THE SOFTWARE.\n      // a transform stream is a readable/writable stream where you do\n      // something with the data.  Sometimes it's called a \"filter\",\n      // but that's not a great name for it, since that implies a thing where\n      // some bits pass through, and others are simply ignored.  (That would\n      // be a valid example of a transform, of course.)\n      //\n      // While the output is causally related to the input, it's not a\n      // necessarily symmetric or synchronous transformation.  For example,\n      // a zlib stream might take multiple plain-text writes(), and then\n      // emit a single compressed chunk some time in the future.\n      //\n      // Here's how this works:\n      //\n      // The Transform stream has all the aspects of the readable and writable\n      // stream classes.  When you write(chunk), that calls _write(chunk,cb)\n      // internally, and returns false if there's a lot of pending writes\n      // buffered up.  When you call read(), that calls _read(n) until\n      // there's enough pending readable data buffered up.\n      //\n      // In a transform stream, the written data is placed in a buffer.  When\n      // _read(n) is called, it transforms the queued up data, calling the\n      // buffered _write cb's as it consumes chunks.  If consuming a single\n      // written chunk would result in multiple output chunks, then the first\n      // outputted bit calls the readcb, and subsequent chunks just go into\n      // the read buffer, and will cause it to emit 'readable' if necessary.\n      //\n      // This way, back-pressure is actually determined by the reading side,\n      // since _read has to be called to start processing a new chunk.  However,\n      // a pathological inflate type of transform can cause excessive buffering\n      // here.  For example, imagine a stream where every byte of input is\n      // interpreted as an integer from 0-255, and then results in that many\n      // bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n      // 1kb of data being output.  In this case, you could write a very small\n      // amount of input, and end up with a very large amount of output.  In\n      // such a pathological inflating mechanism, there'd be no way to tell\n      // the system to stop doing the transform.  A single 4MB write could\n      // cause the system to run out of memory.\n      //\n      // However, even in such a pathological case, only a single written chunk\n      // would be consumed, and then the rest would wait (un-transformed) until\n      // the results of the previous transformed chunk were consumed.\n      'use strict';\n\n      module.exports = Transform;\n\n      var _require$codes = require('../errors').codes,\n          ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n          ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n          ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n          ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\n\n      var Duplex = require('./_stream_duplex');\n\n      require('inherits')(Transform, Duplex);\n\n      function afterTransform(er, data) {\n        var ts = this._transformState;\n        ts.transforming = false;\n        var cb = ts.writecb;\n\n        if (cb === null) {\n          return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n        }\n\n        ts.writechunk = null;\n        ts.writecb = null;\n        if (data != null) // single equals check for both `null` and `undefined`\n          this.push(data);\n        cb(er);\n        var rs = this._readableState;\n        rs.reading = false;\n\n        if (rs.needReadable || rs.length < rs.highWaterMark) {\n          this._read(rs.highWaterMark);\n        }\n      }\n\n      function Transform(options) {\n        if (!(this instanceof Transform)) return new Transform(options);\n        Duplex.call(this, options);\n        this._transformState = {\n          afterTransform: afterTransform.bind(this),\n          needTransform: false,\n          transforming: false,\n          writecb: null,\n          writechunk: null,\n          writeencoding: null\n        }; // start out asking for a readable event once data is transformed.\n\n        this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n        // that Readable wants before the first _read call, so unset the\n        // sync guard flag.\n\n        this._readableState.sync = false;\n\n        if (options) {\n          if (typeof options.transform === 'function') this._transform = options.transform;\n          if (typeof options.flush === 'function') this._flush = options.flush;\n        } // When the writable side finishes, then flush out anything remaining.\n\n\n        this.on('prefinish', prefinish);\n      }\n\n      function prefinish() {\n        var _this = this;\n\n        if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n          this._flush(function (er, data) {\n            done(_this, er, data);\n          });\n        } else {\n          done(this, null, null);\n        }\n      }\n\n      Transform.prototype.push = function (chunk, encoding) {\n        this._transformState.needTransform = false;\n        return Duplex.prototype.push.call(this, chunk, encoding);\n      }; // This is the part where you do stuff!\n      // override this function in implementation classes.\n      // 'chunk' is an input chunk.\n      //\n      // Call `push(newChunk)` to pass along transformed output\n      // to the readable side.  You may call 'push' zero or more times.\n      //\n      // Call `cb(err)` when you are done with this chunk.  If you pass\n      // an error, then that'll put the hurt on the whole operation.  If you\n      // never call cb(), then you'll never get another chunk.\n\n\n      Transform.prototype._transform = function (chunk, encoding, cb) {\n        cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n      };\n\n      Transform.prototype._write = function (chunk, encoding, cb) {\n        var ts = this._transformState;\n        ts.writecb = cb;\n        ts.writechunk = chunk;\n        ts.writeencoding = encoding;\n\n        if (!ts.transforming) {\n          var rs = this._readableState;\n          if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n        }\n      }; // Doesn't matter what the args are here.\n      // _transform does all the work.\n      // That we got here means that the readable side wants more data.\n\n\n      Transform.prototype._read = function (n) {\n        var ts = this._transformState;\n\n        if (ts.writechunk !== null && !ts.transforming) {\n          ts.transforming = true;\n\n          this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n        } else {\n          // mark that we need a transform, so that any data that comes in\n          // will get processed, now that we've asked for it.\n          ts.needTransform = true;\n        }\n      };\n\n      Transform.prototype._destroy = function (err, cb) {\n        Duplex.prototype._destroy.call(this, err, function (err2) {\n          cb(err2);\n        });\n      };\n\n      function done(stream, er, data) {\n        if (er) return stream.emit('error', er);\n        if (data != null) // single equals check for both `null` and `undefined`\n          stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\n        // if there's nothing in the write buffer, then that means\n        // that nothing more will ever be provided\n\n        if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n        if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n        return stream.push(null);\n      }\n    }, {\n      \"../errors\": 57,\n      \"./_stream_duplex\": 58,\n      \"inherits\": 53\n    }],\n    62: [function (require, module, exports) {\n      (function (process, global) {\n        (function () {\n          // Copyright Joyent, Inc. and other Node contributors.\n          //\n          // Permission is hereby granted, free of charge, to any person obtaining a\n          // copy of this software and associated documentation files (the\n          // \"Software\"), to deal in the Software without restriction, including\n          // without limitation the rights to use, copy, modify, merge, publish,\n          // distribute, sublicense, and/or sell copies of the Software, and to permit\n          // persons to whom the Software is furnished to do so, subject to the\n          // following conditions:\n          //\n          // The above copyright notice and this permission notice shall be included\n          // in all copies or substantial portions of the Software.\n          //\n          // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n          // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n          // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n          // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n          // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n          // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n          // USE OR OTHER DEALINGS IN THE SOFTWARE.\n          // A bit simpler than readable streams.\n          // Implement an async ._write(chunk, encoding, cb), and it'll handle all\n          // the drain event emission and buffering.\n          'use strict';\n\n          module.exports = Writable;\n          /* <replacement> */\n\n          function WriteReq(chunk, encoding, cb) {\n            this.chunk = chunk;\n            this.encoding = encoding;\n            this.callback = cb;\n            this.next = null;\n          } // It seems a linked list but it is not\n          // there will be only 2 of these for each stream\n\n\n          function CorkedRequest(state) {\n            var _this = this;\n\n            this.next = null;\n            this.entry = null;\n\n            this.finish = function () {\n              onCorkedFinish(_this, state);\n            };\n          }\n          /* </replacement> */\n\n          /*<replacement>*/\n\n\n          var Duplex;\n          /*</replacement>*/\n\n          Writable.WritableState = WritableState;\n          /*<replacement>*/\n\n          var internalUtil = {\n            deprecate: require('util-deprecate')\n          };\n          /*</replacement>*/\n\n          /*<replacement>*/\n\n          var Stream = require('./internal/streams/stream');\n          /*</replacement>*/\n\n\n          var Buffer = require('buffer').Buffer;\n\n          var OurUint8Array = global.Uint8Array || function () {};\n\n          function _uint8ArrayToBuffer(chunk) {\n            return Buffer.from(chunk);\n          }\n\n          function _isUint8Array(obj) {\n            return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n          }\n\n          var destroyImpl = require('./internal/streams/destroy');\n\n          var _require = require('./internal/streams/state'),\n              getHighWaterMark = _require.getHighWaterMark;\n\n          var _require$codes = require('../errors').codes,\n              ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n              ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n              ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n              ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n              ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n              ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n              ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n              ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\n\n          var errorOrDestroy = destroyImpl.errorOrDestroy;\n\n          require('inherits')(Writable, Stream);\n\n          function nop() {}\n\n          function WritableState(options, stream, isDuplex) {\n            Duplex = Duplex || require('./_stream_duplex');\n            options = options || {}; // Duplex streams are both readable and writable, but share\n            // the same options object.\n            // However, some cases require setting options to different\n            // values for the readable and the writable sides of the duplex stream,\n            // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n\n            if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n            // contains buffers or objects.\n\n            this.objectMode = !!options.objectMode;\n            if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n            // Note: 0 is a valid value, means that we always return false if\n            // the entire buffer is not flushed immediately on write()\n\n            this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\n\n            this.finalCalled = false; // drain event flag.\n\n            this.needDrain = false; // at the start of calling end()\n\n            this.ending = false; // when end() has been called, and returned\n\n            this.ended = false; // when 'finish' is emitted\n\n            this.finished = false; // has it been destroyed\n\n            this.destroyed = false; // should we decode strings into buffers before passing to _write?\n            // this is here so that some node-core streams can optimize string\n            // handling at a lower level.\n\n            var noDecode = options.decodeStrings === false;\n            this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n            // encoding is 'binary' so we have to make this configurable.\n            // Everything else in the universe uses 'utf8', though.\n\n            this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n            // of how much we're waiting to get pushed to some underlying\n            // socket or file.\n\n            this.length = 0; // a flag to see when we're in the middle of a write.\n\n            this.writing = false; // when true all writes will be buffered until .uncork() call\n\n            this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n            // or on a later tick.  We set this to true at first, because any\n            // actions that shouldn't happen until \"later\" should generally also\n            // not happen before the first write call.\n\n            this.sync = true; // a flag to know if we're processing previously buffered items, which\n            // may call the _write() callback in the same tick, so that we don't\n            // end up in an overlapped onwrite situation.\n\n            this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n            this.onwrite = function (er) {\n              onwrite(stream, er);\n            }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n            this.writecb = null; // the amount that is being written when _write is called.\n\n            this.writelen = 0;\n            this.bufferedRequest = null;\n            this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n            // this must be 0 before 'finish' can be emitted\n\n            this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n            // This is relevant for synchronous Transform streams\n\n            this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n            this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\n\n            this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')\n\n            this.autoDestroy = !!options.autoDestroy; // count buffered requests\n\n            this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n            // one allocated and free to use, and we maintain at most two\n\n            this.corkedRequestsFree = new CorkedRequest(this);\n          }\n\n          WritableState.prototype.getBuffer = function getBuffer() {\n            var current = this.bufferedRequest;\n            var out = [];\n\n            while (current) {\n              out.push(current);\n              current = current.next;\n            }\n\n            return out;\n          };\n\n          (function () {\n            try {\n              Object.defineProperty(WritableState.prototype, 'buffer', {\n                get: internalUtil.deprecate(function writableStateBufferGetter() {\n                  return this.getBuffer();\n                }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n              });\n            } catch (_) {}\n          })(); // Test _writableState for inheritance to account for Duplex streams,\n          // whose prototype chain only points to Readable.\n\n\n          var realHasInstance;\n\n          if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n            realHasInstance = Function.prototype[Symbol.hasInstance];\n            Object.defineProperty(Writable, Symbol.hasInstance, {\n              value: function value(object) {\n                if (realHasInstance.call(this, object)) return true;\n                if (this !== Writable) return false;\n                return object && object._writableState instanceof WritableState;\n              }\n            });\n          } else {\n            realHasInstance = function realHasInstance(object) {\n              return object instanceof this;\n            };\n          }\n\n          function Writable(options) {\n            Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.\n            // `realHasInstance` is necessary because using plain `instanceof`\n            // would return false, as no `_writableState` property is attached.\n            // Trying to use the custom `instanceof` for Writable here will also break the\n            // Node.js LazyTransform implementation, which has a non-trivial getter for\n            // `_writableState` that would lead to infinite recursion.\n            // Checking for a Stream.Duplex instance is faster here instead of inside\n            // the WritableState constructor, at least with V8 6.5\n\n            var isDuplex = this instanceof Duplex;\n            if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n            this._writableState = new WritableState(options, this, isDuplex); // legacy.\n\n            this.writable = true;\n\n            if (options) {\n              if (typeof options.write === 'function') this._write = options.write;\n              if (typeof options.writev === 'function') this._writev = options.writev;\n              if (typeof options.destroy === 'function') this._destroy = options.destroy;\n              if (typeof options.final === 'function') this._final = options.final;\n            }\n\n            Stream.call(this);\n          } // Otherwise people can pipe Writable streams, which is just wrong.\n\n\n          Writable.prototype.pipe = function () {\n            errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n          };\n\n          function writeAfterEnd(stream, cb) {\n            var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\n\n            errorOrDestroy(stream, er);\n            process.nextTick(cb, er);\n          } // Checks that a user-supplied chunk is valid, especially for the particular\n          // mode the stream is in. Currently this means that `null` is never accepted\n          // and undefined/non-string values are only allowed in object mode.\n\n\n          function validChunk(stream, state, chunk, cb) {\n            var er;\n\n            if (chunk === null) {\n              er = new ERR_STREAM_NULL_VALUES();\n            } else if (typeof chunk !== 'string' && !state.objectMode) {\n              er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n            }\n\n            if (er) {\n              errorOrDestroy(stream, er);\n              process.nextTick(cb, er);\n              return false;\n            }\n\n            return true;\n          }\n\n          Writable.prototype.write = function (chunk, encoding, cb) {\n            var state = this._writableState;\n            var ret = false;\n\n            var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n            if (isBuf && !Buffer.isBuffer(chunk)) {\n              chunk = _uint8ArrayToBuffer(chunk);\n            }\n\n            if (typeof encoding === 'function') {\n              cb = encoding;\n              encoding = null;\n            }\n\n            if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n            if (typeof cb !== 'function') cb = nop;\n            if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n              state.pendingcb++;\n              ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n            }\n            return ret;\n          };\n\n          Writable.prototype.cork = function () {\n            this._writableState.corked++;\n          };\n\n          Writable.prototype.uncork = function () {\n            var state = this._writableState;\n\n            if (state.corked) {\n              state.corked--;\n              if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n            }\n          };\n\n          Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n            // node::ParseEncoding() requires lower case.\n            if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n            if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n            this._writableState.defaultEncoding = encoding;\n            return this;\n          };\n\n          Object.defineProperty(Writable.prototype, 'writableBuffer', {\n            // making it explicit this property is not enumerable\n            // because otherwise some prototype manipulation in\n            // userland will fail\n            enumerable: false,\n            get: function get() {\n              return this._writableState && this._writableState.getBuffer();\n            }\n          });\n\n          function decodeChunk(state, chunk, encoding) {\n            if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n              chunk = Buffer.from(chunk, encoding);\n            }\n\n            return chunk;\n          }\n\n          Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n            // making it explicit this property is not enumerable\n            // because otherwise some prototype manipulation in\n            // userland will fail\n            enumerable: false,\n            get: function get() {\n              return this._writableState.highWaterMark;\n            }\n          }); // if we're already writing something, then just put this\n          // in the queue, and wait our turn.  Otherwise, call _write\n          // If we return false, then we need a drain event, so set that flag.\n\n          function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n            if (!isBuf) {\n              var newChunk = decodeChunk(state, chunk, encoding);\n\n              if (chunk !== newChunk) {\n                isBuf = true;\n                encoding = 'buffer';\n                chunk = newChunk;\n              }\n            }\n\n            var len = state.objectMode ? 1 : chunk.length;\n            state.length += len;\n            var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n            if (!ret) state.needDrain = true;\n\n            if (state.writing || state.corked) {\n              var last = state.lastBufferedRequest;\n              state.lastBufferedRequest = {\n                chunk: chunk,\n                encoding: encoding,\n                isBuf: isBuf,\n                callback: cb,\n                next: null\n              };\n\n              if (last) {\n                last.next = state.lastBufferedRequest;\n              } else {\n                state.bufferedRequest = state.lastBufferedRequest;\n              }\n\n              state.bufferedRequestCount += 1;\n            } else {\n              doWrite(stream, state, false, len, chunk, encoding, cb);\n            }\n\n            return ret;\n          }\n\n          function doWrite(stream, state, writev, len, chunk, encoding, cb) {\n            state.writelen = len;\n            state.writecb = cb;\n            state.writing = true;\n            state.sync = true;\n            if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n            state.sync = false;\n          }\n\n          function onwriteError(stream, state, sync, er, cb) {\n            --state.pendingcb;\n\n            if (sync) {\n              // defer the callback if we are being called synchronously\n              // to avoid piling up things on the stack\n              process.nextTick(cb, er); // this can emit finish, and it will always happen\n              // after error\n\n              process.nextTick(finishMaybe, stream, state);\n              stream._writableState.errorEmitted = true;\n              errorOrDestroy(stream, er);\n            } else {\n              // the caller expect this to happen before if\n              // it is async\n              cb(er);\n              stream._writableState.errorEmitted = true;\n              errorOrDestroy(stream, er); // this can emit finish, but finish must\n              // always follow error\n\n              finishMaybe(stream, state);\n            }\n          }\n\n          function onwriteStateUpdate(state) {\n            state.writing = false;\n            state.writecb = null;\n            state.length -= state.writelen;\n            state.writelen = 0;\n          }\n\n          function onwrite(stream, er) {\n            var state = stream._writableState;\n            var sync = state.sync;\n            var cb = state.writecb;\n            if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n            onwriteStateUpdate(state);\n            if (er) onwriteError(stream, state, sync, er, cb);else {\n              // Check if we're actually ready to finish, but don't emit yet\n              var finished = needFinish(state) || stream.destroyed;\n\n              if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n                clearBuffer(stream, state);\n              }\n\n              if (sync) {\n                process.nextTick(afterWrite, stream, state, finished, cb);\n              } else {\n                afterWrite(stream, state, finished, cb);\n              }\n            }\n          }\n\n          function afterWrite(stream, state, finished, cb) {\n            if (!finished) onwriteDrain(stream, state);\n            state.pendingcb--;\n            cb();\n            finishMaybe(stream, state);\n          } // Must force callback to be called on nextTick, so that we don't\n          // emit 'drain' before the write() consumer gets the 'false' return\n          // value, and has a chance to attach a 'drain' listener.\n\n\n          function onwriteDrain(stream, state) {\n            if (state.length === 0 && state.needDrain) {\n              state.needDrain = false;\n              stream.emit('drain');\n            }\n          } // if there's something in the buffer waiting, then process it\n\n\n          function clearBuffer(stream, state) {\n            state.bufferProcessing = true;\n            var entry = state.bufferedRequest;\n\n            if (stream._writev && entry && entry.next) {\n              // Fast case, write everything using _writev()\n              var l = state.bufferedRequestCount;\n              var buffer = new Array(l);\n              var holder = state.corkedRequestsFree;\n              holder.entry = entry;\n              var count = 0;\n              var allBuffers = true;\n\n              while (entry) {\n                buffer[count] = entry;\n                if (!entry.isBuf) allBuffers = false;\n                entry = entry.next;\n                count += 1;\n              }\n\n              buffer.allBuffers = allBuffers;\n              doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n              // as the hot path ends with doWrite\n\n              state.pendingcb++;\n              state.lastBufferedRequest = null;\n\n              if (holder.next) {\n                state.corkedRequestsFree = holder.next;\n                holder.next = null;\n              } else {\n                state.corkedRequestsFree = new CorkedRequest(state);\n              }\n\n              state.bufferedRequestCount = 0;\n            } else {\n              // Slow case, write chunks one-by-one\n              while (entry) {\n                var chunk = entry.chunk;\n                var encoding = entry.encoding;\n                var cb = entry.callback;\n                var len = state.objectMode ? 1 : chunk.length;\n                doWrite(stream, state, false, len, chunk, encoding, cb);\n                entry = entry.next;\n                state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n                // it means that we need to wait until it does.\n                // also, that means that the chunk and cb are currently\n                // being processed, so move the buffer counter past them.\n\n                if (state.writing) {\n                  break;\n                }\n              }\n\n              if (entry === null) state.lastBufferedRequest = null;\n            }\n\n            state.bufferedRequest = entry;\n            state.bufferProcessing = false;\n          }\n\n          Writable.prototype._write = function (chunk, encoding, cb) {\n            cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n          };\n\n          Writable.prototype._writev = null;\n\n          Writable.prototype.end = function (chunk, encoding, cb) {\n            var state = this._writableState;\n\n            if (typeof chunk === 'function') {\n              cb = chunk;\n              chunk = null;\n              encoding = null;\n            } else if (typeof encoding === 'function') {\n              cb = encoding;\n              encoding = null;\n            }\n\n            if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n            if (state.corked) {\n              state.corked = 1;\n              this.uncork();\n            } // ignore unnecessary end() calls.\n\n\n            if (!state.ending) endWritable(this, state, cb);\n            return this;\n          };\n\n          Object.defineProperty(Writable.prototype, 'writableLength', {\n            // making it explicit this property is not enumerable\n            // because otherwise some prototype manipulation in\n            // userland will fail\n            enumerable: false,\n            get: function get() {\n              return this._writableState.length;\n            }\n          });\n\n          function needFinish(state) {\n            return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n          }\n\n          function callFinal(stream, state) {\n            stream._final(function (err) {\n              state.pendingcb--;\n\n              if (err) {\n                errorOrDestroy(stream, err);\n              }\n\n              state.prefinished = true;\n              stream.emit('prefinish');\n              finishMaybe(stream, state);\n            });\n          }\n\n          function prefinish(stream, state) {\n            if (!state.prefinished && !state.finalCalled) {\n              if (typeof stream._final === 'function' && !state.destroyed) {\n                state.pendingcb++;\n                state.finalCalled = true;\n                process.nextTick(callFinal, stream, state);\n              } else {\n                state.prefinished = true;\n                stream.emit('prefinish');\n              }\n            }\n          }\n\n          function finishMaybe(stream, state) {\n            var need = needFinish(state);\n\n            if (need) {\n              prefinish(stream, state);\n\n              if (state.pendingcb === 0) {\n                state.finished = true;\n                stream.emit('finish');\n\n                if (state.autoDestroy) {\n                  // In case of duplex streams we need a way to detect\n                  // if the readable side is ready for autoDestroy as well\n                  var rState = stream._readableState;\n\n                  if (!rState || rState.autoDestroy && rState.endEmitted) {\n                    stream.destroy();\n                  }\n                }\n              }\n            }\n\n            return need;\n          }\n\n          function endWritable(stream, state, cb) {\n            state.ending = true;\n            finishMaybe(stream, state);\n\n            if (cb) {\n              if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n            }\n\n            state.ended = true;\n            stream.writable = false;\n          }\n\n          function onCorkedFinish(corkReq, state, err) {\n            var entry = corkReq.entry;\n            corkReq.entry = null;\n\n            while (entry) {\n              var cb = entry.callback;\n              state.pendingcb--;\n              cb(err);\n              entry = entry.next;\n            } // reuse the free corkReq.\n\n\n            state.corkedRequestsFree.next = corkReq;\n          }\n\n          Object.defineProperty(Writable.prototype, 'destroyed', {\n            // making it explicit this property is not enumerable\n            // because otherwise some prototype manipulation in\n            // userland will fail\n            enumerable: false,\n            get: function get() {\n              if (this._writableState === undefined) {\n                return false;\n              }\n\n              return this._writableState.destroyed;\n            },\n            set: function set(value) {\n              // we ignore the value if the stream\n              // has not been initialized yet\n              if (!this._writableState) {\n                return;\n              } // backward compatibility, the user is explicitly\n              // managing destroyed\n\n\n              this._writableState.destroyed = value;\n            }\n          });\n          Writable.prototype.destroy = destroyImpl.destroy;\n          Writable.prototype._undestroy = destroyImpl.undestroy;\n\n          Writable.prototype._destroy = function (err, cb) {\n            cb(err);\n          };\n        }).call(this);\n      }).call(this, require('_process'), typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n    }, {\n      \"../errors\": 57,\n      \"./_stream_duplex\": 58,\n      \"./internal/streams/destroy\": 65,\n      \"./internal/streams/state\": 69,\n      \"./internal/streams/stream\": 70,\n      \"_process\": 54,\n      \"buffer\": 50,\n      \"inherits\": 53,\n      \"util-deprecate\": 72\n    }],\n    63: [function (require, module, exports) {\n      (function (process) {\n        (function () {\n          'use strict';\n\n          var _Object$setPrototypeO;\n\n          function _defineProperty(obj, key, value) {\n            if (key in obj) {\n              Object.defineProperty(obj, key, {\n                value: value,\n                enumerable: true,\n                configurable: true,\n                writable: true\n              });\n            } else {\n              obj[key] = value;\n            }\n\n            return obj;\n          }\n\n          var finished = require('./end-of-stream');\n\n          var kLastResolve = Symbol('lastResolve');\n          var kLastReject = Symbol('lastReject');\n          var kError = Symbol('error');\n          var kEnded = Symbol('ended');\n          var kLastPromise = Symbol('lastPromise');\n          var kHandlePromise = Symbol('handlePromise');\n          var kStream = Symbol('stream');\n\n          function createIterResult(value, done) {\n            return {\n              value: value,\n              done: done\n            };\n          }\n\n          function readAndResolve(iter) {\n            var resolve = iter[kLastResolve];\n\n            if (resolve !== null) {\n              var data = iter[kStream].read(); // we defer if data is null\n              // we can be expecting either 'end' or\n              // 'error'\n\n              if (data !== null) {\n                iter[kLastPromise] = null;\n                iter[kLastResolve] = null;\n                iter[kLastReject] = null;\n                resolve(createIterResult(data, false));\n              }\n            }\n          }\n\n          function onReadable(iter) {\n            // we wait for the next tick, because it might\n            // emit an error with process.nextTick\n            process.nextTick(readAndResolve, iter);\n          }\n\n          function wrapForNext(lastPromise, iter) {\n            return function (resolve, reject) {\n              lastPromise.then(function () {\n                if (iter[kEnded]) {\n                  resolve(createIterResult(undefined, true));\n                  return;\n                }\n\n                iter[kHandlePromise](resolve, reject);\n              }, reject);\n            };\n          }\n\n          var AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\n          var ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n            get stream() {\n              return this[kStream];\n            },\n\n            next: function next() {\n              var _this = this; // if we have detected an error in the meanwhile\n              // reject straight away\n\n\n              var error = this[kError];\n\n              if (error !== null) {\n                return Promise.reject(error);\n              }\n\n              if (this[kEnded]) {\n                return Promise.resolve(createIterResult(undefined, true));\n              }\n\n              if (this[kStream].destroyed) {\n                // We need to defer via nextTick because if .destroy(err) is\n                // called, the error will be emitted via nextTick, and\n                // we cannot guarantee that there is no error lingering around\n                // waiting to be emitted.\n                return new Promise(function (resolve, reject) {\n                  process.nextTick(function () {\n                    if (_this[kError]) {\n                      reject(_this[kError]);\n                    } else {\n                      resolve(createIterResult(undefined, true));\n                    }\n                  });\n                });\n              } // if we have multiple next() calls\n              // we will wait for the previous Promise to finish\n              // this logic is optimized to support for await loops,\n              // where next() is only called once at a time\n\n\n              var lastPromise = this[kLastPromise];\n              var promise;\n\n              if (lastPromise) {\n                promise = new Promise(wrapForNext(lastPromise, this));\n              } else {\n                // fast path needed to support multiple this.push()\n                // without triggering the next() queue\n                var data = this[kStream].read();\n\n                if (data !== null) {\n                  return Promise.resolve(createIterResult(data, false));\n                }\n\n                promise = new Promise(this[kHandlePromise]);\n              }\n\n              this[kLastPromise] = promise;\n              return promise;\n            }\n          }, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n            return this;\n          }), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n            var _this2 = this; // destroy(err, cb) is a private API\n            // we can guarantee we have that here, because we control the\n            // Readable class this is attached to\n\n\n            return new Promise(function (resolve, reject) {\n              _this2[kStream].destroy(null, function (err) {\n                if (err) {\n                  reject(err);\n                  return;\n                }\n\n                resolve(createIterResult(undefined, true));\n              });\n            });\n          }), _Object$setPrototypeO), AsyncIteratorPrototype);\n\n          var createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n            var _Object$create;\n\n            var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n              value: stream,\n              writable: true\n            }), _defineProperty(_Object$create, kLastResolve, {\n              value: null,\n              writable: true\n            }), _defineProperty(_Object$create, kLastReject, {\n              value: null,\n              writable: true\n            }), _defineProperty(_Object$create, kError, {\n              value: null,\n              writable: true\n            }), _defineProperty(_Object$create, kEnded, {\n              value: stream._readableState.endEmitted,\n              writable: true\n            }), _defineProperty(_Object$create, kHandlePromise, {\n              value: function value(resolve, reject) {\n                var data = iterator[kStream].read();\n\n                if (data) {\n                  iterator[kLastPromise] = null;\n                  iterator[kLastResolve] = null;\n                  iterator[kLastReject] = null;\n                  resolve(createIterResult(data, false));\n                } else {\n                  iterator[kLastResolve] = resolve;\n                  iterator[kLastReject] = reject;\n                }\n              },\n              writable: true\n            }), _Object$create));\n            iterator[kLastPromise] = null;\n            finished(stream, function (err) {\n              if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n                var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n                // returned by next() and store the error\n\n                if (reject !== null) {\n                  iterator[kLastPromise] = null;\n                  iterator[kLastResolve] = null;\n                  iterator[kLastReject] = null;\n                  reject(err);\n                }\n\n                iterator[kError] = err;\n                return;\n              }\n\n              var resolve = iterator[kLastResolve];\n\n              if (resolve !== null) {\n                iterator[kLastPromise] = null;\n                iterator[kLastResolve] = null;\n                iterator[kLastReject] = null;\n                resolve(createIterResult(undefined, true));\n              }\n\n              iterator[kEnded] = true;\n            });\n            stream.on('readable', onReadable.bind(null, iterator));\n            return iterator;\n          };\n\n          module.exports = createReadableStreamAsyncIterator;\n        }).call(this);\n      }).call(this, require('_process'));\n    }, {\n      \"./end-of-stream\": 66,\n      \"_process\": 54\n    }],\n    64: [function (require, module, exports) {\n      'use strict';\n\n      function ownKeys(object, enumerableOnly) {\n        var keys = Object.keys(object);\n\n        if (Object.getOwnPropertySymbols) {\n          var symbols = Object.getOwnPropertySymbols(object);\n          if (enumerableOnly) symbols = symbols.filter(function (sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n          });\n          keys.push.apply(keys, symbols);\n        }\n\n        return keys;\n      }\n\n      function _objectSpread(target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i] != null ? arguments[i] : {};\n\n          if (i % 2) {\n            ownKeys(Object(source), true).forEach(function (key) {\n              _defineProperty(target, key, source[key]);\n            });\n          } else if (Object.getOwnPropertyDescriptors) {\n            Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n          } else {\n            ownKeys(Object(source)).forEach(function (key) {\n              Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n            });\n          }\n        }\n\n        return target;\n      }\n\n      function _defineProperty(obj, key, value) {\n        if (key in obj) {\n          Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n          });\n        } else {\n          obj[key] = value;\n        }\n\n        return obj;\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      function _defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      function _createClass(Constructor, protoProps, staticProps) {\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) _defineProperties(Constructor, staticProps);\n        return Constructor;\n      }\n\n      var _require = require('buffer'),\n          Buffer = _require.Buffer;\n\n      var _require2 = require('util'),\n          inspect = _require2.inspect;\n\n      var custom = inspect && inspect.custom || 'inspect';\n\n      function copyBuffer(src, target, offset) {\n        Buffer.prototype.copy.call(src, target, offset);\n      }\n\n      module.exports = /*#__PURE__*/function () {\n        function BufferList() {\n          _classCallCheck(this, BufferList);\n\n          this.head = null;\n          this.tail = null;\n          this.length = 0;\n        }\n\n        _createClass(BufferList, [{\n          key: \"push\",\n          value: function push(v) {\n            var entry = {\n              data: v,\n              next: null\n            };\n            if (this.length > 0) this.tail.next = entry;else this.head = entry;\n            this.tail = entry;\n            ++this.length;\n          }\n        }, {\n          key: \"unshift\",\n          value: function unshift(v) {\n            var entry = {\n              data: v,\n              next: this.head\n            };\n            if (this.length === 0) this.tail = entry;\n            this.head = entry;\n            ++this.length;\n          }\n        }, {\n          key: \"shift\",\n          value: function shift() {\n            if (this.length === 0) return;\n            var ret = this.head.data;\n            if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n            --this.length;\n            return ret;\n          }\n        }, {\n          key: \"clear\",\n          value: function clear() {\n            this.head = this.tail = null;\n            this.length = 0;\n          }\n        }, {\n          key: \"join\",\n          value: function join(s) {\n            if (this.length === 0) return '';\n            var p = this.head;\n            var ret = '' + p.data;\n\n            while (p = p.next) {\n              ret += s + p.data;\n            }\n\n            return ret;\n          }\n        }, {\n          key: \"concat\",\n          value: function concat(n) {\n            if (this.length === 0) return Buffer.alloc(0);\n            var ret = Buffer.allocUnsafe(n >>> 0);\n            var p = this.head;\n            var i = 0;\n\n            while (p) {\n              copyBuffer(p.data, ret, i);\n              i += p.data.length;\n              p = p.next;\n            }\n\n            return ret;\n          } // Consumes a specified amount of bytes or characters from the buffered data.\n\n        }, {\n          key: \"consume\",\n          value: function consume(n, hasStrings) {\n            var ret;\n\n            if (n < this.head.data.length) {\n              // `slice` is the same for buffers and strings.\n              ret = this.head.data.slice(0, n);\n              this.head.data = this.head.data.slice(n);\n            } else if (n === this.head.data.length) {\n              // First chunk is a perfect match.\n              ret = this.shift();\n            } else {\n              // Result spans more than one buffer.\n              ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n            }\n\n            return ret;\n          }\n        }, {\n          key: \"first\",\n          value: function first() {\n            return this.head.data;\n          } // Consumes a specified amount of characters from the buffered data.\n\n        }, {\n          key: \"_getString\",\n          value: function _getString(n) {\n            var p = this.head;\n            var c = 1;\n            var ret = p.data;\n            n -= ret.length;\n\n            while (p = p.next) {\n              var str = p.data;\n              var nb = n > str.length ? str.length : n;\n              if (nb === str.length) ret += str;else ret += str.slice(0, n);\n              n -= nb;\n\n              if (n === 0) {\n                if (nb === str.length) {\n                  ++c;\n                  if (p.next) this.head = p.next;else this.head = this.tail = null;\n                } else {\n                  this.head = p;\n                  p.data = str.slice(nb);\n                }\n\n                break;\n              }\n\n              ++c;\n            }\n\n            this.length -= c;\n            return ret;\n          } // Consumes a specified amount of bytes from the buffered data.\n\n        }, {\n          key: \"_getBuffer\",\n          value: function _getBuffer(n) {\n            var ret = Buffer.allocUnsafe(n);\n            var p = this.head;\n            var c = 1;\n            p.data.copy(ret);\n            n -= p.data.length;\n\n            while (p = p.next) {\n              var buf = p.data;\n              var nb = n > buf.length ? buf.length : n;\n              buf.copy(ret, ret.length - n, 0, nb);\n              n -= nb;\n\n              if (n === 0) {\n                if (nb === buf.length) {\n                  ++c;\n                  if (p.next) this.head = p.next;else this.head = this.tail = null;\n                } else {\n                  this.head = p;\n                  p.data = buf.slice(nb);\n                }\n\n                break;\n              }\n\n              ++c;\n            }\n\n            this.length -= c;\n            return ret;\n          } // Make sure the linked list only shows the minimal necessary information.\n\n        }, {\n          key: custom,\n          value: function value(_, options) {\n            return inspect(this, _objectSpread({}, options, {\n              // Only inspect one level.\n              depth: 0,\n              // It should not recurse.\n              customInspect: false\n            }));\n          }\n        }]);\n\n        return BufferList;\n      }();\n    }, {\n      \"buffer\": 50,\n      \"util\": 49\n    }],\n    65: [function (require, module, exports) {\n      (function (process) {\n        (function () {\n          'use strict'; // undocumented cb() API, needed for core, not for public API\n\n          function destroy(err, cb) {\n            var _this = this;\n\n            var readableDestroyed = this._readableState && this._readableState.destroyed;\n            var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n            if (readableDestroyed || writableDestroyed) {\n              if (cb) {\n                cb(err);\n              } else if (err) {\n                if (!this._writableState) {\n                  process.nextTick(emitErrorNT, this, err);\n                } else if (!this._writableState.errorEmitted) {\n                  this._writableState.errorEmitted = true;\n                  process.nextTick(emitErrorNT, this, err);\n                }\n              }\n\n              return this;\n            } // we set destroyed to true before firing error callbacks in order\n            // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n            if (this._readableState) {\n              this._readableState.destroyed = true;\n            } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n            if (this._writableState) {\n              this._writableState.destroyed = true;\n            }\n\n            this._destroy(err || null, function (err) {\n              if (!cb && err) {\n                if (!_this._writableState) {\n                  process.nextTick(emitErrorAndCloseNT, _this, err);\n                } else if (!_this._writableState.errorEmitted) {\n                  _this._writableState.errorEmitted = true;\n                  process.nextTick(emitErrorAndCloseNT, _this, err);\n                } else {\n                  process.nextTick(emitCloseNT, _this);\n                }\n              } else if (cb) {\n                process.nextTick(emitCloseNT, _this);\n                cb(err);\n              } else {\n                process.nextTick(emitCloseNT, _this);\n              }\n            });\n\n            return this;\n          }\n\n          function emitErrorAndCloseNT(self, err) {\n            emitErrorNT(self, err);\n            emitCloseNT(self);\n          }\n\n          function emitCloseNT(self) {\n            if (self._writableState && !self._writableState.emitClose) return;\n            if (self._readableState && !self._readableState.emitClose) return;\n            self.emit('close');\n          }\n\n          function undestroy() {\n            if (this._readableState) {\n              this._readableState.destroyed = false;\n              this._readableState.reading = false;\n              this._readableState.ended = false;\n              this._readableState.endEmitted = false;\n            }\n\n            if (this._writableState) {\n              this._writableState.destroyed = false;\n              this._writableState.ended = false;\n              this._writableState.ending = false;\n              this._writableState.finalCalled = false;\n              this._writableState.prefinished = false;\n              this._writableState.finished = false;\n              this._writableState.errorEmitted = false;\n            }\n          }\n\n          function emitErrorNT(self, err) {\n            self.emit('error', err);\n          }\n\n          function errorOrDestroy(stream, err) {\n            // We have tests that rely on errors being emitted\n            // in the same tick, so changing this is semver major.\n            // For now when you opt-in to autoDestroy we allow\n            // the error to be emitted nextTick. In a future\n            // semver major update we should change the default to this.\n            var rState = stream._readableState;\n            var wState = stream._writableState;\n            if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n          }\n\n          module.exports = {\n            destroy: destroy,\n            undestroy: undestroy,\n            errorOrDestroy: errorOrDestroy\n          };\n        }).call(this);\n      }).call(this, require('_process'));\n    }, {\n      \"_process\": 54\n    }],\n    66: [function (require, module, exports) {\n      // Ported from https://github.com/mafintosh/end-of-stream with\n      // permission from the author, Mathias Buus (@mafintosh).\n      'use strict';\n\n      var ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\n\n      function once(callback) {\n        var called = false;\n        return function () {\n          if (called) return;\n          called = true;\n\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          callback.apply(this, args);\n        };\n      }\n\n      function noop() {}\n\n      function isRequest(stream) {\n        return stream.setHeader && typeof stream.abort === 'function';\n      }\n\n      function eos(stream, opts, callback) {\n        if (typeof opts === 'function') return eos(stream, null, opts);\n        if (!opts) opts = {};\n        callback = once(callback || noop);\n        var readable = opts.readable || opts.readable !== false && stream.readable;\n        var writable = opts.writable || opts.writable !== false && stream.writable;\n\n        var onlegacyfinish = function onlegacyfinish() {\n          if (!stream.writable) onfinish();\n        };\n\n        var writableEnded = stream._writableState && stream._writableState.finished;\n\n        var onfinish = function onfinish() {\n          writable = false;\n          writableEnded = true;\n          if (!readable) callback.call(stream);\n        };\n\n        var readableEnded = stream._readableState && stream._readableState.endEmitted;\n\n        var onend = function onend() {\n          readable = false;\n          readableEnded = true;\n          if (!writable) callback.call(stream);\n        };\n\n        var onerror = function onerror(err) {\n          callback.call(stream, err);\n        };\n\n        var onclose = function onclose() {\n          var err;\n\n          if (readable && !readableEnded) {\n            if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n            return callback.call(stream, err);\n          }\n\n          if (writable && !writableEnded) {\n            if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n            return callback.call(stream, err);\n          }\n        };\n\n        var onrequest = function onrequest() {\n          stream.req.on('finish', onfinish);\n        };\n\n        if (isRequest(stream)) {\n          stream.on('complete', onfinish);\n          stream.on('abort', onclose);\n          if (stream.req) onrequest();else stream.on('request', onrequest);\n        } else if (writable && !stream._writableState) {\n          // legacy streams\n          stream.on('end', onlegacyfinish);\n          stream.on('close', onlegacyfinish);\n        }\n\n        stream.on('end', onend);\n        stream.on('finish', onfinish);\n        if (opts.error !== false) stream.on('error', onerror);\n        stream.on('close', onclose);\n        return function () {\n          stream.removeListener('complete', onfinish);\n          stream.removeListener('abort', onclose);\n          stream.removeListener('request', onrequest);\n          if (stream.req) stream.req.removeListener('finish', onfinish);\n          stream.removeListener('end', onlegacyfinish);\n          stream.removeListener('close', onlegacyfinish);\n          stream.removeListener('finish', onfinish);\n          stream.removeListener('end', onend);\n          stream.removeListener('error', onerror);\n          stream.removeListener('close', onclose);\n        };\n      }\n\n      module.exports = eos;\n    }, {\n      \"../../../errors\": 57\n    }],\n    67: [function (require, module, exports) {\n      module.exports = function () {\n        throw new Error('Readable.from is not available in the browser');\n      };\n    }, {}],\n    68: [function (require, module, exports) {\n      // Ported from https://github.com/mafintosh/pump with\n      // permission from the author, Mathias Buus (@mafintosh).\n      'use strict';\n\n      var eos;\n\n      function once(callback) {\n        var called = false;\n        return function () {\n          if (called) return;\n          called = true;\n          callback.apply(void 0, arguments);\n        };\n      }\n\n      var _require$codes = require('../../../errors').codes,\n          ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n          ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n\n      function noop(err) {\n        // Rethrow the error if it exists to avoid swallowing it\n        if (err) throw err;\n      }\n\n      function isRequest(stream) {\n        return stream.setHeader && typeof stream.abort === 'function';\n      }\n\n      function destroyer(stream, reading, writing, callback) {\n        callback = once(callback);\n        var closed = false;\n        stream.on('close', function () {\n          closed = true;\n        });\n        if (eos === undefined) eos = require('./end-of-stream');\n        eos(stream, {\n          readable: reading,\n          writable: writing\n        }, function (err) {\n          if (err) return callback(err);\n          closed = true;\n          callback();\n        });\n        var destroyed = false;\n        return function (err) {\n          if (closed) return;\n          if (destroyed) return;\n          destroyed = true; // request.destroy just do .end - .abort is what we want\n\n          if (isRequest(stream)) return stream.abort();\n          if (typeof stream.destroy === 'function') return stream.destroy();\n          callback(err || new ERR_STREAM_DESTROYED('pipe'));\n        };\n      }\n\n      function call(fn) {\n        fn();\n      }\n\n      function pipe(from, to) {\n        return from.pipe(to);\n      }\n\n      function popCallback(streams) {\n        if (!streams.length) return noop;\n        if (typeof streams[streams.length - 1] !== 'function') return noop;\n        return streams.pop();\n      }\n\n      function pipeline() {\n        for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n          streams[_key] = arguments[_key];\n        }\n\n        var callback = popCallback(streams);\n        if (Array.isArray(streams[0])) streams = streams[0];\n\n        if (streams.length < 2) {\n          throw new ERR_MISSING_ARGS('streams');\n        }\n\n        var error;\n        var destroys = streams.map(function (stream, i) {\n          var reading = i < streams.length - 1;\n          var writing = i > 0;\n          return destroyer(stream, reading, writing, function (err) {\n            if (!error) error = err;\n            if (err) destroys.forEach(call);\n            if (reading) return;\n            destroys.forEach(call);\n            callback(error);\n          });\n        });\n        return streams.reduce(pipe);\n      }\n\n      module.exports = pipeline;\n    }, {\n      \"../../../errors\": 57,\n      \"./end-of-stream\": 66\n    }],\n    69: [function (require, module, exports) {\n      'use strict';\n\n      var ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\n\n      function highWaterMarkFrom(options, isDuplex, duplexKey) {\n        return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n      }\n\n      function getHighWaterMark(state, options, duplexKey, isDuplex) {\n        var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n        if (hwm != null) {\n          if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n            var name = isDuplex ? duplexKey : 'highWaterMark';\n            throw new ERR_INVALID_OPT_VALUE(name, hwm);\n          }\n\n          return Math.floor(hwm);\n        } // Default value\n\n\n        return state.objectMode ? 16 : 16 * 1024;\n      }\n\n      module.exports = {\n        getHighWaterMark: getHighWaterMark\n      };\n    }, {\n      \"../../../errors\": 57\n    }],\n    70: [function (require, module, exports) {\n      module.exports = require('events').EventEmitter;\n    }, {\n      \"events\": 51\n    }],\n    71: [function (require, module, exports) {\n      // Copyright Joyent, Inc. and other Node contributors.\n      //\n      // Permission is hereby granted, free of charge, to any person obtaining a\n      // copy of this software and associated documentation files (the\n      // \"Software\"), to deal in the Software without restriction, including\n      // without limitation the rights to use, copy, modify, merge, publish,\n      // distribute, sublicense, and/or sell copies of the Software, and to permit\n      // persons to whom the Software is furnished to do so, subject to the\n      // following conditions:\n      //\n      // The above copyright notice and this permission notice shall be included\n      // in all copies or substantial portions of the Software.\n      //\n      // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n      // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n      // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n      // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n      // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n      // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n      // USE OR OTHER DEALINGS IN THE SOFTWARE.\n      'use strict';\n      /*<replacement>*/\n\n      var Buffer = require('safe-buffer').Buffer;\n      /*</replacement>*/\n\n\n      var isEncoding = Buffer.isEncoding || function (encoding) {\n        encoding = '' + encoding;\n\n        switch (encoding && encoding.toLowerCase()) {\n          case 'hex':\n          case 'utf8':\n          case 'utf-8':\n          case 'ascii':\n          case 'binary':\n          case 'base64':\n          case 'ucs2':\n          case 'ucs-2':\n          case 'utf16le':\n          case 'utf-16le':\n          case 'raw':\n            return true;\n\n          default:\n            return false;\n        }\n      };\n\n      function _normalizeEncoding(enc) {\n        if (!enc) return 'utf8';\n        var retried;\n\n        while (true) {\n          switch (enc) {\n            case 'utf8':\n            case 'utf-8':\n              return 'utf8';\n\n            case 'ucs2':\n            case 'ucs-2':\n            case 'utf16le':\n            case 'utf-16le':\n              return 'utf16le';\n\n            case 'latin1':\n            case 'binary':\n              return 'latin1';\n\n            case 'base64':\n            case 'ascii':\n            case 'hex':\n              return enc;\n\n            default:\n              if (retried) return; // undefined\n\n              enc = ('' + enc).toLowerCase();\n              retried = true;\n          }\n        }\n      }\n\n      ; // Do not cache `Buffer.isEncoding` when checking encoding names as some\n      // modules monkey-patch it to support additional encodings\n\n      function normalizeEncoding(enc) {\n        var nenc = _normalizeEncoding(enc);\n\n        if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n        return nenc || enc;\n      } // StringDecoder provides an interface for efficiently splitting a series of\n      // buffers into a series of JS strings without breaking apart multi-byte\n      // characters.\n\n\n      exports.StringDecoder = StringDecoder;\n\n      function StringDecoder(encoding) {\n        this.encoding = normalizeEncoding(encoding);\n        var nb;\n\n        switch (this.encoding) {\n          case 'utf16le':\n            this.text = utf16Text;\n            this.end = utf16End;\n            nb = 4;\n            break;\n\n          case 'utf8':\n            this.fillLast = utf8FillLast;\n            nb = 4;\n            break;\n\n          case 'base64':\n            this.text = base64Text;\n            this.end = base64End;\n            nb = 3;\n            break;\n\n          default:\n            this.write = simpleWrite;\n            this.end = simpleEnd;\n            return;\n        }\n\n        this.lastNeed = 0;\n        this.lastTotal = 0;\n        this.lastChar = Buffer.allocUnsafe(nb);\n      }\n\n      StringDecoder.prototype.write = function (buf) {\n        if (buf.length === 0) return '';\n        var r;\n        var i;\n\n        if (this.lastNeed) {\n          r = this.fillLast(buf);\n          if (r === undefined) return '';\n          i = this.lastNeed;\n          this.lastNeed = 0;\n        } else {\n          i = 0;\n        }\n\n        if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n        return r || '';\n      };\n\n      StringDecoder.prototype.end = utf8End; // Returns only complete characters in a Buffer\n\n      StringDecoder.prototype.text = utf8Text; // Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\n\n      StringDecoder.prototype.fillLast = function (buf) {\n        if (this.lastNeed <= buf.length) {\n          buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n          return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n        }\n\n        buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n        this.lastNeed -= buf.length;\n      }; // Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n      // continuation byte. If an invalid byte is detected, -2 is returned.\n\n\n      function utf8CheckByte(byte) {\n        if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n        return byte >> 6 === 0x02 ? -1 : -2;\n      } // Checks at most 3 bytes at the end of a Buffer in order to detect an\n      // incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n      // needed to complete the UTF-8 character (if applicable) are returned.\n\n\n      function utf8CheckIncomplete(self, buf, i) {\n        var j = buf.length - 1;\n        if (j < i) return 0;\n        var nb = utf8CheckByte(buf[j]);\n\n        if (nb >= 0) {\n          if (nb > 0) self.lastNeed = nb - 1;\n          return nb;\n        }\n\n        if (--j < i || nb === -2) return 0;\n        nb = utf8CheckByte(buf[j]);\n\n        if (nb >= 0) {\n          if (nb > 0) self.lastNeed = nb - 2;\n          return nb;\n        }\n\n        if (--j < i || nb === -2) return 0;\n        nb = utf8CheckByte(buf[j]);\n\n        if (nb >= 0) {\n          if (nb > 0) {\n            if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n          }\n\n          return nb;\n        }\n\n        return 0;\n      } // Validates as many continuation bytes for a multi-byte UTF-8 character as\n      // needed or are available. If we see a non-continuation byte where we expect\n      // one, we \"replace\" the validated continuation bytes we've seen so far with\n      // a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n      // behavior. The continuation byte check is included three times in the case\n      // where all of the continuation bytes for a character exist in the same buffer.\n      // It is also done this way as a slight performance increase instead of using a\n      // loop.\n\n\n      function utf8CheckExtraBytes(self, buf, p) {\n        if ((buf[0] & 0xC0) !== 0x80) {\n          self.lastNeed = 0;\n          return '\\ufffd';\n        }\n\n        if (self.lastNeed > 1 && buf.length > 1) {\n          if ((buf[1] & 0xC0) !== 0x80) {\n            self.lastNeed = 1;\n            return '\\ufffd';\n          }\n\n          if (self.lastNeed > 2 && buf.length > 2) {\n            if ((buf[2] & 0xC0) !== 0x80) {\n              self.lastNeed = 2;\n              return '\\ufffd';\n            }\n          }\n        }\n      } // Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\n\n\n      function utf8FillLast(buf) {\n        var p = this.lastTotal - this.lastNeed;\n        var r = utf8CheckExtraBytes(this, buf, p);\n        if (r !== undefined) return r;\n\n        if (this.lastNeed <= buf.length) {\n          buf.copy(this.lastChar, p, 0, this.lastNeed);\n          return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n        }\n\n        buf.copy(this.lastChar, p, 0, buf.length);\n        this.lastNeed -= buf.length;\n      } // Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n      // partial character, the character's bytes are buffered until the required\n      // number of bytes are available.\n\n\n      function utf8Text(buf, i) {\n        var total = utf8CheckIncomplete(this, buf, i);\n        if (!this.lastNeed) return buf.toString('utf8', i);\n        this.lastTotal = total;\n        var end = buf.length - (total - this.lastNeed);\n        buf.copy(this.lastChar, 0, end);\n        return buf.toString('utf8', i, end);\n      } // For UTF-8, a replacement character is added when ending on a partial\n      // character.\n\n\n      function utf8End(buf) {\n        var r = buf && buf.length ? this.write(buf) : '';\n        if (this.lastNeed) return r + '\\ufffd';\n        return r;\n      } // UTF-16LE typically needs two bytes per character, but even if we have an even\n      // number of bytes available, we need to check if we end on a leading/high\n      // surrogate. In that case, we need to wait for the next two bytes in order to\n      // decode the last character properly.\n\n\n      function utf16Text(buf, i) {\n        if ((buf.length - i) % 2 === 0) {\n          var r = buf.toString('utf16le', i);\n\n          if (r) {\n            var c = r.charCodeAt(r.length - 1);\n\n            if (c >= 0xD800 && c <= 0xDBFF) {\n              this.lastNeed = 2;\n              this.lastTotal = 4;\n              this.lastChar[0] = buf[buf.length - 2];\n              this.lastChar[1] = buf[buf.length - 1];\n              return r.slice(0, -1);\n            }\n          }\n\n          return r;\n        }\n\n        this.lastNeed = 1;\n        this.lastTotal = 2;\n        this.lastChar[0] = buf[buf.length - 1];\n        return buf.toString('utf16le', i, buf.length - 1);\n      } // For UTF-16LE we do not explicitly append special replacement characters if we\n      // end on a partial character, we simply let v8 handle that.\n\n\n      function utf16End(buf) {\n        var r = buf && buf.length ? this.write(buf) : '';\n\n        if (this.lastNeed) {\n          var end = this.lastTotal - this.lastNeed;\n          return r + this.lastChar.toString('utf16le', 0, end);\n        }\n\n        return r;\n      }\n\n      function base64Text(buf, i) {\n        var n = (buf.length - i) % 3;\n        if (n === 0) return buf.toString('base64', i);\n        this.lastNeed = 3 - n;\n        this.lastTotal = 3;\n\n        if (n === 1) {\n          this.lastChar[0] = buf[buf.length - 1];\n        } else {\n          this.lastChar[0] = buf[buf.length - 2];\n          this.lastChar[1] = buf[buf.length - 1];\n        }\n\n        return buf.toString('base64', i, buf.length - n);\n      }\n\n      function base64End(buf) {\n        var r = buf && buf.length ? this.write(buf) : '';\n        if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n        return r;\n      } // Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\n\n\n      function simpleWrite(buf) {\n        return buf.toString(this.encoding);\n      }\n\n      function simpleEnd(buf) {\n        return buf && buf.length ? this.write(buf) : '';\n      }\n    }, {\n      \"safe-buffer\": 55\n    }],\n    72: [function (require, module, exports) {\n      (function (global) {\n        (function () {\n          /**\n           * Module exports.\n           */\n          module.exports = deprecate;\n          /**\n           * Mark that a method should not be used.\n           * Returns a modified function which warns once by default.\n           *\n           * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n           *\n           * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n           * will throw an Error when invoked.\n           *\n           * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n           * will invoke `console.trace()` instead of `console.error()`.\n           *\n           * @param {Function} fn - the function to deprecate\n           * @param {String} msg - the string to print to the console when `fn` is invoked\n           * @returns {Function} a new \"deprecated\" version of `fn`\n           * @api public\n           */\n\n          function deprecate(fn, msg) {\n            if (config('noDeprecation')) {\n              return fn;\n            }\n\n            var warned = false;\n\n            function deprecated() {\n              if (!warned) {\n                if (config('throwDeprecation')) {\n                  throw new Error(msg);\n                } else if (config('traceDeprecation')) {\n                  console.trace(msg);\n                } else {\n                  console.warn(msg);\n                }\n\n                warned = true;\n              }\n\n              return fn.apply(this, arguments);\n            }\n\n            return deprecated;\n          }\n          /**\n           * Checks `localStorage` for boolean values for the given `name`.\n           *\n           * @param {String} name\n           * @returns {Boolean}\n           * @api private\n           */\n\n\n          function config(name) {\n            // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n            try {\n              if (!global.localStorage) return false;\n            } catch (_) {\n              return false;\n            }\n\n            var val = global.localStorage[name];\n            if (null == val) return false;\n            return String(val).toLowerCase() === 'true';\n          }\n        }).call(this);\n      }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n    }, {}]\n  }, {}, [9])(9);\n});","map":{"version":3,"mappings":"AAAA;AAAA;AAAAA;AAAA;AAAAC;AAAA;AAAA;;AAAA;AAAAC;AAAA;AAAAA;AAAA;AAAAA;AAAA;AAAAA;AAAA;;AAAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAAC;AAAA;AAAAC;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;ACAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AAAA;AAAAC;AAAA;AAAA;;AACA;AACA;AAAA;AAAAC;AAAA;AAAAC;AAAA;AAAA;;AACA;AAAA;AAAAD;AAAA;AAAAC;AAAA;AAAA;;AACA;AAAAC;AAAA;;AACAF;AACA,SALA;AAMA,OARA;;AASA;AACA;AAAAG;AAAAC;AAAA;AAAA;AAAA;AAAAC;AAAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAAC;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AAAA;AAAAC;AAAA;;AACA;AAAAC;AAAA;AAAAC;AAAAC;AAAA;;AACA;AAAAF;AAAAG;AAAAC;AAAA;;AACA;AAAAA;;AAAAJ;;AAAA;;AACA;AACA;AAAAA;AAAA;AAAA;;AACA;AAAAA;AAAA;AAAA;;AACA;AAAAA;AAAAD;AAAA;AAAA;;AACA;AAAAC;;AAAAA;;AAAA;AAAA;;AACA;;AACAA;;AAAA;AAXA;;AAaAI;AACA,WAjBA,CAiBA;AAAAA;AAAAD;AAAA,WAjBA,SAiBA;AAAAE;AAAA;;AACA;AAAA;AAAAJ;AAAAC;AAAA;AACA;AACA,OA1BA;;AA2BAI;AAAAL;AAAA;AACAb;;AACA;;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA,WALA,MAMA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAmB;AACA;AACA;AACA;;AACA;AACA,SALA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAA;AACA;;AACA;AACA;AACA,WAFA,MAGA;AACAC;AACA;AACA,SARA;AASA;AACA;AACA;;;AACAD;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;;AAGAA;AACA;AACA,SAFA;;AAGAA;AACA;AACA,SAFA;;AAGAA;AACA;AACA;AACA;AACA;AACA;AACAE;;AACA;AACA;AAAA;AAAA;AACA;;AACAC;AACA;AAAA;AAAA;AACA;AAAA;AAAA;;AACA;AACAC;;AACA;AAAA;AAAA;;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;;AACA;AACAA;;AACAA;;AACA;AAAA;AAAA;AAAA;AAlBA;AAoBA,aArBA;AAsBA,WAxBA;AAyBA,SA1BA;;AA2BAJ;AACA;AACA;AACA;AACA;AACA;AACAK;AACAC;AAAAC;AAAAC;AAAA;AACA;AAAA;AAAA;;AACA;AACAJ;;AACA;AAAA;AAAA;AAPA;AASA,aAVA;AAWA,WAbA;AAcA,SAfA;;AAgBAJ;AACA;AACA;AACA;AACA;AACA;AACAS;AACAC;AAAAH;AAAAI;AAAAC;AAAA;AACA;AAAA;AAAA;;AACA;AACAR;;AACA;AAAA;AAAA;AAPA;AASA,aAVA;AAWA,WAbA;AAcA,SAfA,CAnHA,CAmIA;;;AACAJ;AACA;AACA;;AACA;AACA;AACA;AACA;AACAK;AACA;;AACAQ;AACAA;AACAP;AACA,qBALA;AAMA;;AACA;AAAA;AAAA;;AACA;AACAF;;AACA;AAAA;AAAA;AAbA;AAeA,aAhBA;AAiBA,WAnBA;AAoBA,SArBA;;AAsBA;AACA,OA3JA;;AA4JAvB;KDlNA;;;;KAAA;;AEAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AAAA;AAAAE;AAAA;AAAA;;AACA;AACA;AAAA;AAAAC;AAAA;AAAAC;AAAA;AAAA;;AACA;AAAA;AAAAD;AAAA;AAAAC;AAAA;AAAA;;AACA;AAAAC;AAAA;;AACAF;AACA,SALA;AAMA,OARA;;AASA;AACA;AAAAG;AAAAC;AAAA;AAAA;AAAA;AAAAC;AAAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAAC;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AAAA;AAAAC;AAAA;;AACA;AAAAC;AAAA;AAAAC;AAAAC;AAAA;;AACA;AAAAF;AAAAG;AAAAC;AAAA;;AACA;AAAAA;;AAAAJ;;AAAA;;AACA;AACA;AAAAA;AAAA;AAAA;;AACA;AAAAA;AAAA;AAAA;;AACA;AAAAA;AAAAD;AAAA;AAAA;;AACA;AAAAC;;AAAAA;;AAAA;AAAA;;AACA;;AACAA;;AAAA;AAXA;;AAaAI;AACA,WAjBA,CAiBA;AAAAA;AAAAD;AAAA,WAjBA,SAiBA;AAAAE;AAAA;;AACA;AAAA;AAAAJ;AAAAC;AAAA;AACA;AACA,OA1BA;;AA2BAI;AAAAL;AAAA;AACAb;AACA;AACA;AACA;;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACAkB;AACA;AACA;AACA;AACA;AACA;AACAe;AACA;AACA,WARA;AASAC,2BATA;AAUAC;AAVA;AAYAjB;AACA;AACA;AACA;AACA;AACA;AACAe;AACA;AACA,WARA;AASAC,2BATA;AAUAC;AAVA;AAYA;AACA;AACA;AACA;AACA;;AACAC;AACA;AACA;AACA;;AACA;AACA,SALA;AAMA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;AACA;AACAC;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAMA,aAPA;AAQA,WAVA;AAWA,SAZA;AAaA;AACA;AACA;AACA;AACA;;;AACAD;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;AACA;AACAE;AACA;AAAA;AAAA;AAJA;AAMA,aAPA;AAQA,WAVA;AAWA,SAZA,CA9EA,CA2FA;;;AACAF;AACA;AACA;;AACA;;AACA;AACA;AACA;AACAG;AACAC;AACApB,4CAHA,CAIA;;AACA;AACAqB;AACAF;AACAC;AACA;;AACA;AAAA;AAAA;AACAE;AACA;AACA;AAAA;AACAH;AACAC;;AACA;AACAtC;AACA;AACA,uBANA;AAMA,qBANA;;AAOAkB;AACA,mBAVA;AAWA;AAAA;AAAA;;AACA;AACAG;;AACAA;;AACA;AAAA;AAAA;AAAA;AAAAc;AAAAM;AAAA;AA3BA;AA6BA,aA9BA;AA+BA,WAlCA;AAmCA,SApCA;;AAqCA;AACA,OAlIA;;AAmIA3C;UFpLA;;AGAA;;AACAkB;AAAAL;AAAA;AACAb;AACA;AACA;AACA;;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA4C;AACA;AACAC,yCADA;AAEAC,4BAFA;AAGAC,uBAHA;AAIAC;AAJA;AAMA;AACA,SARA;;AASA;AACA,OA1BA;;AA2BAhD;UHjCA;;AIAA;;AACA;AACA;AACAiD,mDACA;AAAAC;AAAA;AAAAC;AAAA,WADA,IAEA;AAAA;AAAA,WAFA;;AAGA;AACA,SALA;;AAMA;AACAF;;AACA;AAAA;AAAA;;AACAE;AACA,SAJA;AAKA,OAZA;;AAaA;AACA;AAAA;AAAAjD;AAAA;AAAA;;AACA;AACA;AAAA;AAAAC;AAAA;AAAAC;AAAA;AAAA;;AACA;AAAA;AAAAD;AAAA;AAAAC;AAAA;AAAA;;AACA;AAAAC;AAAA;;AACAF;AACA,SALA;AAMA,OARA;;AASA;AACA;AAAAG;AAAAC;AAAA;AAAA;AAAA;AAAAC;AAAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAAC;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AAAA;AAAAC;AAAA;;AACA;AAAAC;AAAA;AAAAC;AAAAC;AAAA;;AACA;AAAAF;AAAAG;AAAAC;AAAA;;AACA;AAAAA;;AAAAJ;;AAAA;;AACA;AACA;AAAAA;AAAA;AAAA;;AACA;AAAAA;AAAA;AAAA;;AACA;AAAAA;AAAAD;AAAA;AAAA;;AACA;AAAAC;;AAAAA;;AAAA;AAAA;;AACA;;AACAA;;AAAA;AAXA;;AAaAI;AACA,WAjBA,CAiBA;AAAAA;AAAAD;AAAA,WAjBA,SAiBA;AAAAE;AAAA;;AACA;AAAA;AAAAJ;AAAAC;AAAA;AACA;AACA,OA1BA;;AA2BAI;AAAAL;AAAA;AACAb;;AACA;;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AACAoD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AACAC;AACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC;AACA;AACA;AACA;AACAlC;AACA;AAAA;AAAA;AAAAA;AAAAmC;AAAA;AACA,aAHA;AAIA,WANA;AAOA,SARA;;AASA;AACA,OA7BA,CA6BAC,yCA7BA;;AA8BAxD;;;;MJvFA;;AKAA;;AACA;AACA;AAAA;AAAAE;AAAA;AAAA;;AACA;AACA;AAAA;AAAAC;AAAA;AAAAC;AAAA;AAAA;;AACA;AAAA;AAAAD;AAAA;AAAAC;AAAA;AAAA;;AACA;AAAAC;AAAA;;AACAF;AACA,SALA;AAMA,OARA;;AASA;AACA;AAAAG;AAAAC;AAAA;AAAA;AAAA;AAAAC;AAAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAAC;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AAAA;AAAAC;AAAA;;AACA;AAAAC;AAAA;AAAAC;AAAAC;AAAA;;AACA;AAAAF;AAAAG;AAAAC;AAAA;;AACA;AAAAA;;AAAAJ;;AAAA;;AACA;AACA;AAAAA;AAAA;AAAA;;AACA;AAAAA;AAAA;AAAA;;AACA;AAAAA;AAAAD;AAAA;AAAA;;AACA;AAAAC;;AAAAA;;AAAA;AAAA;;AACA;;AACAA;;AAAA;AAXA;;AAaAI;AACA,WAjBA,CAiBA;AAAAA;AAAAD;AAAA,WAjBA,SAiBA;AAAAE;AAAA;;AACA;AAAA;AAAAJ;AAAAC;AAAA;AACA;AACA,OA1BA;;AA2BAI;AAAAL;AAAA;AACAb;;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAyD;AACA;AACArC;AACAA;AACA;AAAAA;AAAAmC;AAAA;AACA,SALA;AAMA;AACA;AACA;AACA;AACA;;;AACAE;AACA;AACA;;AACA;AACA;AACA;AAAA;AAAA;AAAA;;AACA;AACAlC;AACA;AACA;AACA;AAAA;AAAA;AANA;AAQA,aATA;AAUA,WAZA;AAaA,SAdA;AAeA;AACA;AACA;;;AACAkC;AACA;AACA;AACA;AACAC;AACAb,6CADA;AAEAC,gDAFA;AAGAC,2BAHA;AAIAC;AAJA;AAMA;AACA;AAAA;AAAA;AACA,aATA;AAUA,WAZA;AAaA,SAdA;;AAeA;AACA,OA9DA;;AA+DAhD;;;ML1GA;;AMAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACAiD,mDACA;AAAAC;AAAA;AAAAC;AAAA,WADA,IAEA;AAAA;AAAA,WAFA;;AAGA;AACA,SALA;;AAMA;AACAF;;AACA;AAAA;AAAA;;AACAE;AACA,SAJA;AAKA,OAZA;;AAaA;AACA;AAAA;AAAAjD;AAAA;AAAA;;AACA;AACA;AAAA;AAAAC;AAAA;AAAAC;AAAA;AAAA;;AACA;AAAA;AAAAD;AAAA;AAAAC;AAAA;AAAA;;AACA;AAAAC;AAAA;;AACAF;AACA,SALA;AAMA,OARA;;AASA;AACA;AAAAG;AAAAC;AAAA;AAAA;AAAA;AAAAC;AAAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAAC;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AAAA;AAAAC;AAAA;;AACA;AAAAC;AAAA;AAAAC;AAAAC;AAAA;;AACA;AAAAF;AAAAG;AAAAC;AAAA;;AACA;AAAAA;;AAAAJ;;AAAA;;AACA;AACA;AAAAA;AAAA;AAAA;;AACA;AAAAA;AAAA;AAAA;;AACA;AAAAA;AAAAD;AAAA;AAAA;;AACA;AAAAC;;AAAAA;;AAAA;AAAA;;AACA;;AACAA;;AAAA;AAXA;;AAaAI;AACA,WAjBA,CAiBA;AAAAA;AAAAD;AAAA,WAjBA,SAiBA;AAAAE;AAAA;;AACA;AAAA;AAAAJ;AAAAC;AAAA;AACA;AACA,OA1BA;;AA2BAI;AAAAL;AAAA;AACAb;;AACA;;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AACAoD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AACAC;AACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAM;AACA;;AACA;AACA;AACA;AACAC;AAAA7B;AAAAD;AAAAJ;AAAA;AACA;AACAkC;AACA,eAFA;AAGA;AAAA;AAAA;AACA,aANA;AAOA,WATA;AAUA,SAZA;;AAaA;AACA,OAlCA,CAkCAJ,yCAlCA;;AAmCAxD;;;;MNnGA;;AOAA;;AACA;AACA;AACAiD,mDACA;AAAAC;AAAA;AAAAC;AAAA,WADA,IAEA;AAAA;AAAA,WAFA;;AAGA;AACA,SALA;;AAMA;AACAF;;AACA;AAAA;AAAA;;AACAE;AACA,SAJA;AAKA,OAZA;;AAaA;AACA;AAAA;AAAAjD;AAAA;AAAA;;AACA;AACA;AAAA;AAAAC;AAAA;AAAAC;AAAA;AAAA;;AACA;AAAA;AAAAD;AAAA;AAAAC;AAAA;AAAA;;AACA;AAAAC;AAAA;;AACAF;AACA,SALA;AAMA,OARA;;AASA;AACA;AAAAG;AAAAC;AAAA;AAAA;AAAA;AAAAC;AAAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAAC;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AAAA;AAAAC;AAAA;;AACA;AAAAC;AAAA;AAAAC;AAAAC;AAAA;;AACA;AAAAF;AAAAG;AAAAC;AAAA;;AACA;AAAAA;;AAAAJ;;AAAA;;AACA;AACA;AAAAA;AAAA;AAAA;;AACA;AAAAA;AAAA;AAAA;;AACA;AAAAA;AAAAD;AAAA;AAAA;;AACA;AAAAC;;AAAAA;;AAAA;AAAA;;AACA;;AACAA;;AAAA;AAXA;;AAaAI;AACA,WAjBA,CAiBA;AAAAA;AAAAD;AAAA,WAjBA,SAiBA;AAAAE;AAAA;;AACA;AAAA;AAAAJ;AAAAC;AAAA;AACA;AACA,OA1BA;;AA2BAI;AAAAL;AAAA;AACAb;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AACAoD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AACAC;AACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAQ;AACA;AACA;AACA;AACAD;AAAAjC;AAAAD;AAAA;;AACA;AACA;AACAkC;AACA,iBAFA;AAGA;;AACA;AAAA;AAAA;AACA,aARA;AASA,WAXA;AAYA,SAbA;;AAcA;AACA,OAnCA,CAmCAJ,yCAnCA;;AAoCAxD;;;;MPpGA;;AQAA;;AACAkB;AAAAL;AAAA;AACAb;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA+C,uBADA;AAEAe,2LAFA;AAGAC;AAHA;AAKA;;AACA;AACA,OAjBA;;AAkBA/D;AACA;AACA;AACA;;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAgE;AACA;AACA,SAFA;;AAGA;AACA,OApBA;;AAqBAhE;;;MRzDA;;ASAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACAkB;AAAAL;AAAA;AACAb;;AACA;;AACAkB;AAAAgB;AAAAD;AAAA;AAAA;AAAA;;AACA;;AACAf;AAAAgB;AAAAD;AAAA;AAAA;AAAA;;AACA;;AACAf;AAAAgB;AAAAD;AAAA;AAAA;AAAA;;AACA;;AACAf;AAAAgB;AAAAD;AAAA;AAAA;AAAA;;AACA;;AACAf;AAAAgB;AAAAD;AAAA;AAAA;AAAA;;AACA;;AACAf;AAAAgB;AAAAD;AAAA;AAAA;AAAA;;AACA;;AACAf;AAAAgB;AAAAD;AAAA;AAAA;AAAA;AACAf;AAAAgB;AAAAD;AAAA;AAAA;AAAA;;;;;;;;;MTxBA;;AUAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACAf;AAAAgB;AAAAD;AAAA;AAAA;AAAA;AACA,OAHA,GAGA;AACA;AACAgC;AACA,OANA;;AAOA;AACA;AACA,OAFA;;AAGA/C;AAAAL;AAAA;;AACAqD;;AACAA;;AACAA;;AACAA;;;;;;MVtBA;;AWAA;;AACA;AACA;AAAA;AAAAhE;AAAA;AAAA;;AACA;AACA;AAAA;AAAAC;AAAA;AAAAC;AAAA;AAAA;;AACA;AAAA;AAAAD;AAAA;AAAAC;AAAA;AAAA;;AACA;AAAAC;AAAA;;AACAF;AACA,SALA;AAMA,OARA;;AASA;AACA;AAAAG;AAAAC;AAAA;AAAA;AAAA;AAAAC;AAAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAAC;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AAAA;AAAAC;AAAA;;AACA;AAAAC;AAAA;AAAAC;AAAAC;AAAA;;AACA;AAAAF;AAAAG;AAAAC;AAAA;;AACA;AAAAA;;AAAAJ;;AAAA;;AACA;AACA;AAAAA;AAAA;AAAA;;AACA;AAAAA;AAAA;AAAA;;AACA;AAAAA;AAAAD;AAAA;AAAA;;AACA;AAAAC;;AAAAA;;AAAA;AAAA;;AACA;;AACAA;;AAAA;AAXA;;AAaAI;AACA,WAjBA,CAiBA;AAAAA;AAAAD;AAAA,WAjBA,SAiBA;AAAAE;AAAA;;AACA;AAAA;AAAAJ;AAAAC;AAAA;AACA;AACA,OA1BA;;AA2BAI;AAAAL;AAAA;AACAb;;AACA;;AACA;;AACA;;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AACA,oCACA;;AACAkB;AACA;AACA;AACA;AACA;AACA;AACAe;AACA;AACA,WARA;AASAC,2BATA;AAUAC;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;;AACAgC;AACA;AACA;AACA,SAHA;AAIA;AACA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA;AACA,SAHA;AAIA;AACA;AACA;AACA;AACA;;;AACAA;AACA;;AACA;AAAAC;AAAA;;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA,WAHA,CAIA;AACA;AACA,WANA,SAOA;AACA;AACA;AACA,SAhBA;;AAiBAD;AACA;AACA;;AACA;AACA;AACA;AACA;AAAA;AAAA;AACAE;;AACA;AACAA;;AACAC;AACAD;;AACA;AACA;AAAA;AAAA;AACA9C;AACA;AAAA;AAAA;;AACA;AACAA;;AACA;AACA+C;AACA;;AACA;AAAA;AAAA;;AACA;AACAZ;AACAa;AACA;AAAA;AAAA;AACAC;AACAC;AACAJ;;AACA;AACA,oEACAG,wEADA,GACA;AAAA;AAAA;AACAhC;AACAkC;AACA;AAAA;AAAA;;AACA;AACAA;AACAF;AACAC,kEAHA,CAIA;;AACA;AACA;AACA;;AACA;AAAA;AAAA;;AACA;AACA;AACA;AACA;;AACAJ;;AACA;AAAA;AAAA;AAAA;;AACA;AACAM;AACA;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAnDA;AAqDA,aAtDA;AAuDA,WAzDA;AA0DA,SA3DA;;AA4DA;AACA,OAtHA;;AAuHA3E;;;;;;MXrKA;;;;AYAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACAkB;AAAAL;AAAA;AACAb;;AACA;;AACA;;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AACA,sCACA;;AACAkB;AACA;AACA;AACA;AACA;AACA;AACAe;AACA;AACA,eARA;AASAC,+BATA;AAUAC;AAVA;AAYA;AACA;AACA;AACA;AACA;;AACAyC;AACA;AACA,aAFA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AAAAlB;AAAAE;AAAAiB;AAAA;AACA;AACA,aAHA;AAIA;AACA;AACA;AACA;AACA;;;AACAD;AACA;;AACA;AAAAR;AAAA;;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA,eAHA,CAIA;AACA;AACA,eANA,SAOA;AACA;AACA;AACA,aAhBA;;AAiBAQ;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACAlB;AACAA;AACA;AACAoB;;AACA;;AACA;;AACAC;AACA;;AACA;AACAC;AACA;AACA;AACA,eAnBA,CAoBA;AACA;AACA;AACA,aAxBA;;AAyBA;AACA,WAlFA;;AAmFAhF;;;;;;;;MZnGA;;AaAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACAkB;AAAAL;AAAA;AACAb;AACA;AACA;AACA;;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAiF;AACA;AACA,OAjBA;;AAkBAjF;Ub/BA;;AcAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACAkB;AAAAL;AAAA;UdRA;;AeAA;;AACAK;AAAAL;AAAA;AACAb;;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AACA,qCACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAkF;AACAC;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACA,SATA;AAUA;AACA;AACA;AACA;AACA;AACA;;;AACAD;AACA;AACA;;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAAlC;AAAAF;AAAAD;AAAAE;AAAA;;AACA,gGACAW,qEADA,GACA;AACA;AACA;;AACA;AACA;AACA;;AACA,4BACA,mFADA,IAEAA,kCAFA,EAEA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA,SA1BA;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAwB;AACA;AACA;AACA;AACA,SAJA;;AAKAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACA;AACA,OAjFA;;AAkFAlF;;;MfzFA;;AgBAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACAkB;AAAAgB;AAAAD;AAAA;AAAA;AAAA;AACA,OAHA,GAGA;AACA;AACAgC;AACA,OANA;;AAOA;AACA;AACA,OAFA;;AAGA/C;AAAAL;AAAA;;AACAqD;;AACAA;;AACAA;;AACAA;;AACAA;;AACAA;;AACAA;;;;;;;;MhBzBA;;AiBAA;;AACAhD;AAAAL;AAAA;AACAb;;AACA;;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAoF;AACA;AACA;AACA,WAFA,MAGA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA,SAXA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA;AACA,WAFA,MAGA;AACA;AACA;AACAC;AACA;;AACA;AACA;AACA;AACA;AACA,SAbA;;AAcAD;AACA;AACA;AACA1B,4BADA;AAEA4B;AAFA;AAIA,WALA,MAMA;AACA;AACA5B,4BADA;AAEA4B;AAFA;AAIA;AACA,SAbA;;AAcA;AACA,OApEA;;AAqEAtF;;;;MjB7EA;;AkBAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACAkB;AAAAL;AAAA;AACAb;AACA;AACA;AACA;;AACA;;AACA;AACAuF;AACAA;AACAA;AACAA;AACA,OALA,EAKAA,8EALA;UlBdA;;AmBAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACArE;AAAAL;AAAA;AACAb;AACA;AACA;AACA;;AACA;;AACA;AACAwF;AACAA;AACAA;AACAA;AACAA;AACA,OANA,EAMAA,kEANA;UnBdA;;AoBAA;;AACA;AACA;AAAA;AAAAtF;AAAA;AAAA;;AACA;AACA;AAAA;AAAAC;AAAA;AAAAC;AAAA;AAAA;;AACA;AAAA;AAAAD;AAAA;AAAAC;AAAA;AAAA;;AACA;AAAAC;AAAA;;AACAF;AACA,SALA;AAMA,OARA;;AASA;AACA;AAAAG;AAAAC;AAAA;AAAA;AAAA;AAAAC;AAAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAAC;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AAAA;AAAAC;AAAA;;AACA;AAAAC;AAAA;AAAAC;AAAAC;AAAA;;AACA;AAAAF;AAAAG;AAAAC;AAAA;;AACA;AAAAA;;AAAAJ;;AAAA;;AACA;AACA;AAAAA;AAAA;AAAA;;AACA;AAAAA;AAAA;AAAA;;AACA;AAAAA;AAAAD;AAAA;AAAA;;AACA;AAAAC;;AAAAA;;AAAA;AAAA;;AACA;;AACAA;;AAAA;AAXA;;AAaAI;AACA,WAjBA,CAiBA;AAAAA;AAAAD;AAAA,WAjBA,SAiBA;AAAAE;AAAA;;AACA;AAAA;AAAAJ;AAAAC;AAAA;AACA;AACA,OA1BA;;AA2BAI;AAAAL;AAAA;AACAb;AACA;AACA;AACA;;AACA;AAAA;AAAA;AACA,mCACA;;AACA;AACA,OAJA;AAKA;AACA;AACA;;;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAyF;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA;AACA;AACAC;;AACA;AACAA;AACA;AACA;AAAA;AAAA;AACA;;AACA;AAAA;AAAA;AACA,aARA;AASA,WAXA;AAYA,SAbA;AAcA;AACA;AACA;AACA;AACA;AACA;;;AACAD;AACA;;AACA;AACA;AACA;;AACAC;AACAA;AACA;AACAA;AACAA;AACA,WAHA;AAIA;AACA;AACA,SAbA;;AAcA;AACA,OAtDA;;AAuDA1F;UpBzGA;;AqBAA;;AACA;AACA;AAAA;AAAAE;AAAA;AAAA;;AACA;AACA;AAAA;AAAAC;AAAA;AAAAC;AAAA;AAAA;;AACA;AAAA;AAAAD;AAAA;AAAAC;AAAA;AAAA;;AACA;AAAAC;AAAA;;AACAF;AACA,SALA;AAMA,OARA;;AASA;AACA;AAAAG;AAAAC;AAAA;AAAA;AAAA;AAAAC;AAAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAAC;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AAAA;AAAAC;AAAA;;AACA;AAAAC;AAAA;AAAAC;AAAAC;AAAA;;AACA;AAAAF;AAAAG;AAAAC;AAAA;;AACA;AAAAA;;AAAAJ;;AAAA;;AACA;AACA;AAAAA;AAAA;AAAA;;AACA;AAAAA;AAAA;AAAA;;AACA;AAAAA;AAAAD;AAAA;AAAA;;AACA;AAAAC;;AAAAA;;AAAA;AAAA;;AACA;;AACAA;;AAAA;AAXA;;AAaAI;AACA,WAjBA,CAiBA;AAAAA;AAAAD;AAAA,WAjBA,SAiBA;AAAAE;AAAA;;AACA;AAAA;AAAAJ;AAAAC;AAAA;AACA;AACA,OA1BA;;AA2BAI;AAAAL;AAAA;AACAb;;AACA;;AACA;;AACA;;AACA;;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA2F;AACA;AACA;;AACA;;AACA;AACA;AACA;AACAC;AACA;AAAA;AAAA;;AACA;AACArE;;AACA;AACAsE;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;AACA;AACAtE;;AACA;AAAA;AAAA;AAJA;AAMA,yBAPA;AAQA,uBATA;AASA,qBATA;AAUA;;AACA;AAAA;AAAA;AAlBA;AAoBA,aArBA;AAsBA,WAzBA;AA0BA,SA3BA;AA4BA;AACA;AACA;AACA;AACA;AACA;;;AACAoE;AACA;AACA;;AACA;;AACA;AACA;AACA;AACAC;AACA;AAAA;AAAA;;AACA;AACArE;;AACA;AACAuE;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;AACA;AACAvE;;AACA;AAAA;AAAA;AAJA;AAMA,yBAPA;AAQA,uBATA;AASA,qBATA;AAUA;;AACA;AAAA;AAAA;AAlBA;AAoBA,aArBA;AAsBA,WAzBA;AA0BA,SA3BA;AA4BA;AACA;AACA;AACA;AACA;;;AACAoE;AACA;AACA;AACA;AACAC;AACAA;AACA;AAAA;AAAA;AACA,aAJA;AAKA,WAPA;AAQA,SATA;;AAUA;AACA,OA7FA;;AA8FA5F;;;;;;;MrB7IA;;AsBAA;;AACAkB;AAAAL;AAAA;AACAb;;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA+F;AACA;AACA;AACA;AAAAhD;AAAA;AACA;AACA;AACA,WALA,MAMA;AACA;AACA;AACA,SAVA;AAWA;AACA;AACA;AACA;AACA;AACA;;;AACAgD;AACA;AACA;AACA,SAHA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA;AACA;;AACA;AACA,SALA;AAMA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA;AACA,WAFA,MAGA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA,SAZA;;AAaA;AACA,OArEA;;AAsEA/F;;;MtB7EA;;AuBAA;;AACA;AACA;AAAA;AAAAE;AAAA;AAAA;;AACA;AACA;AAAA;AAAAC;AAAA;AAAAC;AAAA;AAAA;;AACA;AAAA;AAAAD;AAAA;AAAAC;AAAA;AAAA;;AACA;AAAAC;AAAA;;AACAF;AACA,SALA;AAMA,OARA;;AASA;AACA;AAAAG;AAAAC;AAAA;AAAA;AAAA;AAAAC;AAAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAAC;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AAAA;AAAAC;AAAA;;AACA;AAAAC;AAAA;AAAAC;AAAAC;AAAA;;AACA;AAAAF;AAAAG;AAAAC;AAAA;;AACA;AAAAA;;AAAAJ;;AAAA;;AACA;AACA;AAAAA;AAAA;AAAA;;AACA;AAAAA;AAAA;AAAA;;AACA;AAAAA;AAAAD;AAAA;AAAA;;AACA;AAAAC;;AAAAA;;AAAA;AAAA;;AACA;;AACAA;;AAAA;AAXA;;AAaAI;AACA,WAjBA,CAiBA;AAAAA;AAAAD;AAAA,WAjBA,SAiBA;AAAAE;AAAA;;AACA;AAAA;AAAAJ;AAAAC;AAAA;AACA;AACA,OA1BA;;AA2BAI;AAAAL;AAAA;AACAb;;AACA;;AACA;;AACA;;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA,WAFA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAgG;AACA;AACA;AACA;AACA;AACA;AACAC;AACA;AAAA;AAAA;;AACA;AACA1E;;AACA;AAAA;AAAA;AANA;AAQA,aATA;AAUA,WAZA;AAaA,SAdA;AAeA;AACA;AACA;AACA;AACA;AACA;;;AACAyE;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;;AACA;AACAF;AACA;AAAA;AAAA;AACA;AAAA;AAAA;;AACA;AACAvE;;AACAA;;AACA;AAAA;AAAA;AAAA;AAXA;AAaA,aAdA;AAeA,WAjBA;AAkBA,SAnBA;AAoBA;AACA;AACA;AACA;AACA;AACA;;;AACAyE;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;AACA;AACAzE;;AACA;AAAA;AAAA;AAJA;AAMA,aAPA;AAQA,WATA;AAUA,SAXA;AAYA;AACA;AACA;AACA;AACA;;;AACAyE;AACA;AACA,SAFA;;AAGA;AACA,OAhGA;;AAiGAhG;;;;;;MvB/IA;;AwBAA;;AACAkB;AAAAL;AAAA;AACAb;AACA;AACA;AACA;;AACA;AAAA;AAAA;AACA,mCACA;;AACA;AACA,OAJA;;AAKAA;UxBXA;;AyBAA;;AACAkB;AAAAL;AAAA;AACAb;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAkG;AACA;AACAL;AACAA;;AACA;AACAA;AACA;;AACA;AACA,SARA;AASA;AACA;AACA;AACA;AACA;;;AACAK;AACA;AACA;AACA;;AACA;AACA,SALA;AAMA;AACA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA;AACA9E;AACA;AACA0C,qDADA;AAEAqC;AAFA,eAGA/E,MAHA;AAIA,WAPA,MAQA;AACA;AACA;AACA,SAZA;;AAaA;AACA,OAvDA;;AAwDApB;;;;MzBvEA;;A0BAA;;AACAkB;AAAAL;AAAA;AACAb;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAoG;AACA;AACAN;;AACA;AACAA;AACA;;AACA;AACA,SAPA;AAQA;AACA;AACA;AACA;AACA;;;AACAM;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACAhF;AACA;AACA0C,mDADA;AAEAqC;AAFA,aAGA/E,MAHA;AAIA,SAPA;;AAQA;AACA,OA1CA;;AA2CApB;;;;M1B1DA;;;;A2BAA;;AACA;AACA;AACAiD,uDACA;AAAAC;AAAA;AAAAC;AAAA,eADA,IAEA;AAAA;AAAA,eAFA;;AAGA;AACA,aALA;;AAMA;AACAF;;AACA;AAAA;AAAA;;AACAE;AACA,aAJA;AAKA,WAZA;;AAaAjC;AAAAL;AAAA;AACAb;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AACAoD;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AACAC;AACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAgD;AACA;AACA;AACA;;AACA;AACA;AACA;;AACAC;AACA,aARA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAD;AACA;AACA;AACA;AACA,eAHA,MAIA;AACA;;AACA;AACA;AACA;AACA;AACAE;AACA;AACA;AACA,aAdA;AAeA;AACA;AACA;AACA;AACA;AACA;;;AACAF;AACA;AACA,aAFA;;AAGA;AACA,WA/DA,CA+DAG,eA/DA;;AAgEAxG;;;;;;M3B3FA;;A4BAA;;AACAkB;AAAAL;AAAA;AACAb;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;AACAA;;;M5BnBA;;A6BAA;;AACA;AACA;AAAA;AAAAE;AAAA;AAAA;;AACA;AACA;AAAA;AAAAC;AAAA;AAAAC;AAAA;AAAA;;AACA;AAAA;AAAAD;AAAA;AAAAC;AAAA;AAAA;;AACA;AAAAC;AAAA;;AACAF;AACA,SALA;AAMA,OARA;;AASA;AACA;AAAAG;AAAAC;AAAA;AAAA;AAAA;AAAAC;AAAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAAC;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AAAA;AAAAC;AAAA;;AACA;AAAAC;AAAA;AAAAC;AAAAC;AAAA;;AACA;AAAAF;AAAAG;AAAAC;AAAA;;AACA;AAAAA;;AAAAJ;;AAAA;;AACA;AACA;AAAAA;AAAA;AAAA;;AACA;AAAAA;AAAA;AAAA;;AACA;AAAAA;AAAAD;AAAA;AAAA;;AACA;AAAAC;;AAAAA;;AAAA;AAAA;;AACA;;AACAA;;AAAA;AAXA;;AAaAI;AACA,WAjBA,CAiBA;AAAAA;AAAAD;AAAA,WAjBA,SAiBA;AAAAE;AAAA;;AACA;AAAA;AAAAJ;AAAAC;AAAA;AACA;AACA,OA1BA;;AA2BAI;AAAAL;AAAA;AACAb;AACA;AACA;AACA;;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAyG;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACAC;AACA,eAFA;;AAGA;AACAC;AACA,eAFA;;AAGA;AAAA;AAAA;AACAA;AACAD;AACA,eAHA;AAIA,aAdA;AAeA,WAjBA;AAkBA,SAnBA;;AAoBAxF;AACA;AACA;AACA;AACA;AACA;AACAe;AACA;AACA,WARA;AASAC,2BATA;AAUAC;AAVA;AAYA;AACA;AACA;AACA;AACA;;AACAsE;AACA;AACA,SAFA;AAGA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA;;AACA;AACA;AACA;AAAAtB;AAAA;AACAyB;;AACAC;AACA;AACAC;;AACA;AACA;AACAC;AACAH;AACA;AACA;AACA,aATA;;AAUAC;AACA,WAfA;AAgBA,SAnBA;AAoBA;AACA;AACA;AACA;AACA;AACA;;;AACAJ;AACA;AACA;AACAM;AACA;AACA,WAJA;AAKA,SANA;AAOA;AACA;AACA;AACA;AACA;AACA;;;AACAN;AACA;AACA,SAFA;;AAGA;AACA,OAhHA;;AAiHAzG;U7B3JA;;A8BAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AAAA;AAAAE;AAAA;AAAA;;AACA;AACA;AAAA;AAAAC;AAAA;AAAAC;AAAA;AAAA;;AACA;AAAA;AAAAD;AAAA;AAAAC;AAAA;AAAA;;AACA;AAAAC;AAAA;;AACAF;AACA,SALA;AAMA,OARA;;AASA;AACA;AAAAG;AAAAC;AAAA;AAAA;AAAA;AAAAC;AAAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAAC;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AAAA;AAAAC;AAAA;;AACA;AAAAC;AAAA;AAAAC;AAAAC;AAAA;;AACA;AAAAF;AAAAG;AAAAC;AAAA;;AACA;AAAAA;;AAAAJ;;AAAA;;AACA;AACA;AAAAA;AAAA;AAAA;;AACA;AAAAA;AAAA;AAAA;;AACA;AAAAA;AAAAD;AAAA;AAAA;;AACA;AAAAC;;AAAAA;;AAAA;AAAA;;AACA;;AACAA;;AAAA;AAXA;;AAaAI;AACA,WAjBA,CAiBA;AAAAA;AAAAD;AAAA,WAjBA,SAiBA;AAAAE;AAAA;;AACA;AAAA;AAAAJ;AAAAC;AAAA;AACA;AACA,OA1BA;;AA2BAI;AAAAL;AAAA;AACAb;;AACA;;AACA;;AACA;;AACA;;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAgH;AACA;AACA;AACA;AACA;AACA;AACAC;AACA;AAAA;AAAA;;AACA;AACA1F;;AACA2F;;AACA;;AACA;;AACA;AAAA;AAAA;AATA;AAWA,aAZA;AAaA,WAfA;AAgBA,SAjBA;AAkBA;AACA;AACA;;;AACAF;AACA;;AACA;AACA,SAHA;AAIA;AACA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA;AACA;AAAA;AAAA;AACA,aAFA;AAGA,WAJA;AAKA,SANA,CAzDA,CAgEA;;;AACAA;AACA;AACA;;AACA;AACA;;AACA;AACA,SANA;;AAOA;AACA,OAzEA;;AA0EAhH;;;;;;;M9BhIA;;A+BAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACAkB;AAAAL;AAAA;AACAb;;AACA;;AACAkB;AAAAgB;AAAAD;AAAA;AAAA;AAAA;;AACA;;AACAf;AAAAgB;AAAAD;AAAA;AAAA;AAAA;AACA;;AACA;;AACAf;AAAAgB;AAAAD;AAAA;AAAA;AAAA;;;;;M/BhBA;;;;AgCAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AAAA;AAAA/B;AAAA;AAAA;;AACA;AACA;AAAA;AAAAC;AAAA;AAAAC;AAAA;AAAA;;AACA;AAAA;AAAAD;AAAA;AAAAC;AAAA;AAAA;;AACA;AAAAC;AAAA;;AACAF;AACA,aALA;AAMA,WARA;;AASA;AACA;AAAAG;AAAAC;AAAA;AAAA;AAAA;AAAAC;AAAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAAC;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AAAA;AAAAC;AAAA;;AACA;AAAAC;AAAA;AAAAC;AAAAC;AAAA;;AACA;AAAAF;AAAAG;AAAAC;AAAA;;AACA;AAAAA;;AAAAJ;;AAAA;;AACA;AACA;AAAAA;AAAA;AAAA;;AACA;AAAAA;AAAA;AAAA;;AACA;AAAAA;AAAAD;AAAA;AAAA;;AACA;AAAAC;;AAAAA;;AAAA;AAAA;;AACA;;AACAA;;AAAA;AAXA;;AAaAI;AACA,eAjBA,CAiBA;AAAAA;AAAAD;AAAA,eAjBA,SAiBA;AAAAE;AAAA;;AACA;AAAA;AAAAJ;AAAAC;AAAA;AACA;AACA,WA1BA;;AA2BAI;AAAAL;AAAA;AACAb;AACA;AACA;AACA;;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACAqD;AACA,eAFA;AAGA;AACAA;AACA,eAFA;AAGA;AACAA;AACA,eAFA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA8D;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA,aAPA;;AAQAjG;AACA;AACA;AACA;AACA;AACA;AACAe;AACA;;AACA;AACA,eATA;AAUAC,+BAVA;AAWAC;AAXA;AAaA;AACA;AACA;;AACAgF;AACA;;AACA;AACA;AACA;AACA,aALA;AAMA;AACA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA;;AACA;;AACA;AACA;AACA;AACA;;AACA;AACAC;AACA/D;AACAA;AACA,mBAHA;AAIA;AACA;AAAA;AAAA;AACA,iBAXA;AAYA,eAfA;AAgBA,aAjBA;AAkBA;AACA;AACA;AACA;AACA;;;AACA8D;AACA;AACA;;AACA;AACA;AACA,aALA;;AAMAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAVA;;AAWAA;AACA;AACA;AACA;;AACA;AACA,aALA;;AAMAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA,mBALA,MAMA;AACA;AACA;AACA;;AACA;;AACA,oDALA,CAMA;;AACA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA,aA/BA;;AAgCA;AACA,WA/IA;;AAgJAnH;;;;;MhCjMA;;AiCAA;;AAEAkB;AACAL;AADA;AAGAK;AACAgB,wBADA;AAEAD;AACA;AACA;AAJA;AAMAf;AACAgB,wBADA;AAEAD;AACA;AACA;AAJA;AAMAf;AACAgB,wBADA;AAEAD;AACA;AACA;AAJA;AAMAf;AACAgB,wBADA;AAEAD;AACA;AACA;AAJA;AAMAf;AACAgB,wBADA;AAEAD;AACA;AACA;AAJA;AAMAf;AACAgB,wBADA;AAEAD;AACA;AACA;AAJA;AAMAf;AACAgB,wBADA;AAEAD;AACA;AACA;AAJA;AAMAf;AACAgB,wBADA;AAEAD;AACA;AACA;AAJA;AAMAf;AACAgB,wBADA;AAEAD;AACA;AACA;AAJA;;AAOA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AAAA;AAAAoF;AAAA;AAAA;;;;;;;;;;;MjC9EA;;AkCAA;;AAEAnG;AACAL;AADA;AAGAb;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA,0DADA,CACA;;AAEAsH;;AAEA;AACAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACAC;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACAC;AACAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACAC;AACAtE;AACAuE;AACAC;AACAF;AACAtE;AACAuE;AACAC;AACAF;AACAtE;AACAuE;AACAC;AACAF;AACAtE;AACAuE;AACAC;AACAF;AACAtE;AACAuE;AACAC;AACAF;AACAtE;AACAuE;AACAC;AACAF;AACAtE;AACAuE;AACAC;AACAF;AACAtE;AACAuE;AACAC;AACAF;AACAtE;AACAuE;AACAC;AACAF;AACAtE;AACAuE;AACAC;AACAF;AACAtE;AACAuE;AACAC;AACAF;AACAtE;AACAuE;AACAC;AACAF;AACAtE;AACAuE;AACAC;AACAF;AACAtE;AACAuE;AACAC;AACAF;AACAtE;AACAuE;AACAC;AACAF;AACAtE;AACAuE;AACAC;AACAF;AACAE;AACAD;AACAvE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACAoE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACAvH;UlC9NA;;AmCAA;;AAEAkB;AACAL;AADA;AAGAb;AACA;AACAA;UnCPA;;AoCAA;;AAEAkB;AACAL;AADA;AAGAb;;AAEA;;AAEA;AAAA;AAAAqH;AAAA;AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uCANA,CAMA;;AAEAO;AACAA;AACAA;AACAA,0BAXA,CAWA;;AAEAA;AACAA,0BAdA,CAcA;;AAEAA;AACAA,0BAjBA,CAiBA;;AAEAA;AACAA,0BApBA,CAoBA;AACA;;AAEAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACA;AACA;;AAEA;AACA5H;;;MpC5CA;;AqCAA;;AAEAkB;AACAL;AADA;AAGAb;AACA;AACAA;UrCPA;;AsCAA;;AAEAkB;AACAL;AADA;AAGAb,6BACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA6H;;AAEA;AACA;AACA;AACA;;AAEA;AACA;UtCzBA;;AuCAA;;AAEA3G;AACAL;AADA;AAGAb,gCAEA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AAXA;AAaA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0DADA,CACA;;AAEAsH;;AAEA;AACAA;AACA;AACA,SARA,MAQA;AACA;AACAA;AACA;;AAEAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACAM;AACA;;AAEAE;AACA;;AAEAA;AACAA;AACAA;;AAEA;AACA;;AAEA;AACAC;AACA;;AAEA;AACAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA9H;AACAkD;AACAuE;AACAC;AACAF;AACA;;AAEAO;AACAA;AACAA;AACAA;AACAA;AACA;;AAEA;AACA;;AAEA;AACAhI;UvCvGA;;AwCAA;;AAEAkB;AACAL;AADA;AAGAb;;AAEA;;AAEA;AAAA;AAAAqH;AAAA;AAAA;AAEA;AACA;AACA;AACA;;;AACA;;AAEA;AACAY;AACA;;AAEA;AAAA;AACA;AACA;AACA,ihBAHA,CAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACAjI;;;MxCtCA;;AyCAA;;AAEAkB;AACAL;AADA;AAGAb;;AAEA;;AAEA;;AAEA;AAAA;AAAAqH;AAAA;AAAA,QAEA;AACA;AACA;AACA;;;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;AACAa;AACA;AACA,qFALA,CAKA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACAC;AACA;;AAEA;AACA;AACAC;AACA;AACA,SArBA,CAqBA;AACA;AACA;AACA;;;AAGA,6EA3BA,CA2BA;AACA;;AAEA,iFA9BA,CA8BA;;AAEA,qEAhCA,CAgCA;;AAEA;AACAA;AACA,SApCA,CAoCA;AACA;;;AAGA;AACAC;AACA,SA1CA,CA0CA;;;AAGA;AACA;AACA;;AAEAC;AACAC;AACAC,6BAnDA,CAmDA;;AAEAC,gCArDA,CAqDA;;AAEA;AACAd;AACAA;AACAA;AACAA,2BA3DA,CA2DA;;AAEA;AACAA;AACAA,4BA/DA,CA+DA;;AAEAA,yCAjEA,CAiEA;;AAEAA,mCAnEA,CAmEA;;AAEAA,uCArEA,CAqEA;;AAEAA,iCAvEA,CAuEA;;AAEA;AACAA;AACA;;AAEA;AACA;;AAEA;AACA3H;;;;MzC1GA;;A0CAA;;AAEAkB;AACAL;AADA;AAGAb;;AAEA;;AAEA;;AAEA;AAAA;AAAAqH;AAAA;AAAA;;AAEA;AACA;AACArH;;;;M1CfA;;A2CAA;;AAEAkB;AACAL;AADA;AAGAb;AACAA;;AAEA;;AAEA;;AAEA;AAAA;AAAAqH;AAAA;AAAA;;AAEA;AACAqB,gDADA,CACA;;AAEA;;AAEA;AACApB;AACA;;AAEA;AACA;;AAEA;AACAtH;AACA;AACAA;;AAEA;AACA;AACA;AACAa;AACA;;AAEA;AACA8H;AACA;;AAEA;AACA;AACA,WAXA,CAWA;AACA;AACA;;;AAGA;AACArB;AACAA;AACAA;AACAA;AACAA;;AAEA;AACAsB;;AAEA;AACAC;AACA;;AAEA;AACA;;AAEA;AACA,SAnCA,CAmCA;;;AAGA;AACAC,mCADA,CACA;AACA,SAFA,CAEA,cAxCA,CAwCA;;;AAGAA;AACAA;AACA;AACA;;;;M3C7EA;;A4CAA;;AAEA5H;AACAL;AADA;AAGAb;;AAEA;;AAEA;;AAEA;AAAA;AAAAqH;AAAA;AAAA;;AAEA;AACAa;;AAEA,uEAHA,CAGA;;;AAGAa;AACAA,wCAPA,CAOA;;AAEA;AACAH;;AAEA;AACAC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA7I;;;;M5CpCA;;A6CAA;;AAEAkB;AACAL;AADA;AAGAb;;AAEA;;AAEA;;AAEA;AAAA;AAAAqH;AAAA;AAAA;;AAEA;AACA;AACArH;;;;M7CfA;;A8CAA;;AAEAkB;AACAL;AADA;AAGAb;;AAEA;;AAEA;AAAA;AAAAqH;AAAA;AAAA;;AAEA;AACA;AACA;;AAEA;AACArH;;;M9ChBA;;A+CAA;;AAEAkB;AACAL;AADA;AAGAb;;AAEA;;AAEA;AAAA;AAAAqH;AAAA;AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACArH;;;M/CpBA;;AgDAA;;AAEAA;AACAA;AACAA;AAEA;AACA;AACA;AAEA;;AACA;AACAgJ;AACAC;AACA,QAEA;AACA;;;AACAA;AACAA;;AAEA;AACA;;AAEA;AACA;AACA,SALA,CAOA;AACA;;;AACA;AACA;AAEA,iDACA,CADA,GAEA,gBAFA;AAIA;AACA,QAEA;;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA,wBARA,CAUA;;AACA,wCACAC,YADA,GAEAA,QAFA;AAIA;;AACA;AACAC,gBACAF,qCACAA,sCADA,GAEAA,qCAFA,GAGAA,gCAJA;AAKArB;AACAA;AACAA;AACA;;AAEA;AACAuB,gBACAF,oCACAA,qCAFA;AAGArB;AACA;;AAEA;AACAuB,gBACAF,qCACAA,qCADA,GAEAA,qCAHA;AAIArB;AACAA;AACA;;AAEA;AACA;;AAEA;AACA,0CACAoB,wBADA,GAEAA,uBAFA,GAGAA,kBAHA;AAIA;;AAEA;AACA;AACA;;AACA;AACAG,gBACA,+BACAC,0BADA,KAEAA,mBAFA,CADA;AAIA7B;AACA;;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAHA,CAGA;;AACA;AACA,mCALA,CAKA;AAEA;;AACA;AACA8B,iCACAD,KADA,EACAE,CADA,EACAA,qDADA;AAGA,SAZA,CAcA;;;AACA;AACAH;AACAE,qBACAL,mBACAA,uBADA,GAEA,IAHA;AAKA,SAPA,MAOA;AACAG;AACAE,qBACAL,oBACAA,uBADA,GAEAA,uBAFA,GAGA,GAJA;AAMA;;AAEA;AACA;UhDvJA;oDAAA;;;;AiDAA;AACA;AACA;AACA;AACA;AACA;;AACA;AAEA;;AAEA;;AACA;;AAEAhJ;AACAA;AACAA;AAEA;AACAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAuJ;;AAEA,+EACA,mCADA,EACA;AACAC,0BACA,8EACA,sEAFA;AAIA;;AAEA;AACA;AACA;AACA;AACA5B;AAAA1E;AAAAuG;AAAA;AAAA;AAAA;AACA;AACA,aAJA,CAIA;AACA;AACA;AACA;;AAEAvI;AACAgB,4BADA;AAEAD;AACA;AACA;AACA;AALA;AAQAf;AACAgB,4BADA;AAEAD;AACA;AACA;AACA;AALA;;AAQA;AACA;AACA;AACA,aAHA,CAIA;;;AACA;AACA4G;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA,oCACA,oEADA;AAGA;;AACA;AACA;;AACA;AACA,YAEA;;;AACA,yEACAU,iCADA,EACA;AACArI;AACAL,yBADA;AAEAsB,gCAFA;AAGAD,+BAHA;AAIAwH;AAJA;AAMA;;AAEAH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8BACA,gFACA,sCADA,GACA,YAFA;AAIA;;AAEA,kDACA1I,8CADA,EACA;AACA;AACA;;AAEA;AACA,kCACA,uEADA;AAGA;;AAEA;;AACA;AACA;AACA;;AAEA;AACA;;AAEA,+EACA,+CADA,EACA;AACA,iCACAA,mCADA,EACA8I,gBADA,EACA5F,MADA;AAGA;;AAEA,gCACA,gFACA,sCADA,GACA,YAFA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAwF;AACA;AACA,WAFA,EAIA;AACA;;;AACAA;AACAA;;AAEA;AACA;AACA;AACA,aAFA,MAEA;AACA;AACA;AACA;;AAEA;AACAK;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA,oDACAC,uCADA,GAEAA,6BAFA;AAGA;;AACA;AACA;AAEA;AACA;AACA;AACA;;;AACAN;AACA;AACA,WAFA;;AAIA;AACAK;AACA;AACA;AAEA;AACA;AACA;;;AACAL;AACA;AACA,WAFA;AAGA;AACA;AACA;;;AACAA;AACA;AACA,WAFA;;AAIA;AACA;AACAO;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACAjB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AACA;AACAA;AACA;;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AACA;AACAA;AACA,aAFA,MAEA;AACAA;AACA,aAFA,MAEA;AACAA;AACA,aAhBA,CAkBA;;;AACAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEAkB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uFACA,UADA,GACAC,yBADA,GACA,QADA;AAEA;;AACA;AACA;;AAEA;AACA;AAAA;AACAjG;AACA;;AACA;AACA;;AAEAwF;AACA,wDACA5B,sBADA,CADA,CAEA;AACA,WAHA;;AAKA4B;AACA;AACA;;AACA;AACA,kCACA,uEADA;AAGA;;AAEA;AAEA;AACA;;AAEA;AACA;AACA/B;AACAzG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAzBA;;AA2BAwI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AAdA;AAgBA,WAjBA;;AAmBAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AACA;AACAxF;;AACA;AACAA;AACA;AACA;;AAEA;AACA;;AACA;AACA;;AACA;AACA8E;AACA;;AACA;AACA;AACA;;AACAA;AACAoB;AACA;;AACA;AACA,WA/BA;;AAiCA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA,kCACA,+EACA,gBADA,GACA,aAFA;AAIA;;AAEA;AACA;AACA,kDAhBA,CAkBA;;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA,uEADA,CACA;AACA;;AACAH;AACAI;AAtBA;AAwBA;AACA;;AACAX;;AAEA;AACA,oCADA,CAGA;AACA;AAEA;AACA;AACA;AACA;;AACA;AACAY;AACA,aAZA,CAaA;AACA;;;AACA;AACA;AACA;;AAEA;AACAnH;AACA;;AAEA;AACA;AACA,aAzBA,CA2BA;;;AACAA;AACAmH;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACAL;AACAI;AA3BA;AA6BA;AACA,YAEA;AACA;AACA;AACA;AACA;AACA;;;AACAX;;AAEA;AACA;AACA5B;AACAA;AACA;;AAEA4B;AACA;;AACA;AACA;AACA;;AACA;AACAa;AACA;;AACA;AACA,WATA;;AAWAb;AACA;;AACA;AACA;AACA;;AACA;AACAa;AACAA;AACA;;AACA;AACA,WAVA;;AAYAb;AACA;;AACA;AACA;AACA;;AACA;AACAa;AACAA;AACAA;AACAA;AACA;;AACA;AACA,WAZA;;AAcAb;AACA;AACA;AACA;AACA;AACA,WALA;;AAOAA;;AAEAA;AACA;AACA;AACA;AACA,WAJA;;AAMAA;AACA;AACA;AACAb;AACA;AACA;AACA,WANA;;AAQAa;AACA;AACAc;AACA;;AACA;AACA,kCACA,qEACA,gBADA,GACA,aAFA;AAIA;;AAEA;AACAF;AACA;;AACA;AACAnH;AACA;;AACA;AACAsH;AACA;;AACA;AACAC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEAJ;AACAnH;AACAsH;AACAC;AAEA;AAEA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA/C;AACAzG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WA/DA,EAiEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA,+CAFA,CAIA;;AACA;AACA+I;AACAU;AACA,aAHA,MAGA;AACAA;AACA,aAFA,MAEA;AACAA;AACA;;AACAA,qCAbA,CAaA;;AACA;AACA;AACAA;AACA,aAjBA,CAmBA;;;AACA;;AACA;AACA,sCACAA;AACA,aAHA,MAGA;AACA,2CACA;AACA,aA3BA,CA6BA;;;AACA;AACAC;AACA,aAhCA,CAkCA;;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA,aANA,MAMA;AACAA,+BADA,CACA;;AACA;AACA;AACA;AACA,iBAFA,MAEA;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACAX;;AACA,iEACAA,sBADA,IACAA,uBADA,EACA;AACA;AACA;AACA;;AACAY;AACAC;AACAC;AACAJ;AACA;AACA;;AAEA;AACA;AACA;AACA,eAFA,MAEA;AACA;AACA;AACA;;AAEA;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA,iBAHA,MAGA;AACA;AACAK;AACA;AACA;AACA,aAXA,MAWA;AACA;;AACA;AACA;;AACA;AACA;AACAC;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;;AAEAvB;AACA;AACA,WAFA;;AAIAA;AACA;AACA,WAFA;;AAIAA;AACA;AACA,WAFA;;AAIA;AACAX;AACA;;AACA;AACA7E;AACA,aAFA,MAEA;AACAA;;AACA;AACAA;AACA;AACA;;AAEA;;AAEA;AACAA;AACA;;AACA;AACA;AACA;AACA8E;AACA;;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEAU;AACA;AACA;AACAO;AACA/F;AACA6E,yBAHA,CAIA;AACA,aALA,MAKA;AACAkB;AACA/F;AACA6E,yBAHA,CAIA;AACA,aALA,MAKA;AACAA;;AACA;AACA7E;AACA;AACA,eAHA,MAGA;AACA+F;AACA/F;AACA;AACA,aATA,MASA;AACA,8BACA,yEADA;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AAEA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA+F;AACAI;AA5BA;AA8BA;AACA,WArEA;;AAuEAX;AACA;AACAzF,4BADA;AAEAiH;AAFA;AAIA,WALA;;AAOA;AACA;AACA;AACA,aAFA,MAEA;AACA;AACA;AACA;;AAEA;AACA/H;AACA;AAEA;;AACA;AACA;AACA;AACA,4DACAgI,uBACAA,uBACA,CAHA;;AAKA;AACA;;AAEA;AACA;AACA;AACAC;AACA;;AACA;;AACA;AACAC;;AACA;AACAC;;AACA;AACAF;AACA;AACA;;AACA;;AACA;AACAC;AACAE;;AACA;AACAD;;AACA;AACAF;AACA;AACA;;AACA;;AACA;AACAC;AACAE;AACAC;;AACA;AACAF;;AACA;AACAF;AACA;AACA;;AAlCA;AAoCA;;AAEA;AACA;AACA;AACAA;AACAK;AACA,eALA,MAKA;AACA;AACAL;AACAM;AACAN;AACA;;AAEAM;AACAjC;AACA;;AAEA;AACA,YAEA;AACA;AACA;;;AACA;;AAEA;AACA;;AACA;AACA,mEADA,CACA;AACA,aAJA,CAMA;;;AACA;AACA;;AACA;AACAiC,+CACAC,MADA,EAEAC,8CAFA;AAIA;;AACA;AACA;;AAEA;AACA;AACAzI;;AAEA;AACA0I;AACA;;AACA;AACA;;AAEA;AACA;AACA1I;;AAEA;AACA0I;AACA;;AACA;AACA;;AAEA;AACA;AAEA;AACA;AAEA;;AACA;AACAC;AACA;;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACAJ;AACA;;AACA;AACA;;AAEAhC;AACA;AACAY;AACAnH;;AAEA;AACAmH;AACA;AACA,aAHA,MAGA;AACAA;AACA;;AAEA;AACAnH;AACA;AACA,aAHA,MAGA;AACAA;AACA;;AAEA;AAEA,mDArBA,CAsBA;;AACA4I;AACA;AACA,WAzBA;AA2BA;AACA;AACA;;;AACA;AACA;AACA;AACA;;AAEArC;AACAX;AACAiD;AACA;AAEA;AACA;AACA;;AACA;AACApB;AACA;;AAEA;AACA,WAbA;;AAeAlB;AACAX;AACAiD;;AACA;AACAC;AACA;;AAEA;AACA;;AACA;AACArB;AACA;;AAEA;AACA,WAdA;;AAgBAlB;AACAX;AACA;AACA;AACA,WAJA;;AAMAW;AACAX;AACA;AACA;AACA,WAJA;;AAMAW;AACAX;AACA;AACA;AACA,WAJA;;AAMAW;AACAX;AACA;AAEA,mCACA,qBADA,GAEA,sBAFA,IAGA,4BAHA;AAIA,WARA;;AAUAW;AACAX;AACA;AAEA,+CACA,yBACA,qBADA,GAEA,gBAHA;AAIA,WARA;;AAUAW;AACAX;AACAiD;AACA;AAEA;AACA;AACA;;AACA;AACApB;AACA;;AACAsB;AAEA;AAEA;AACA,WAhBA;;AAkBAxC;AACAX;AACAiD;AACA;AAEA;AACA;AACA;;AACA;AACApB;AACA;;AACAsB;AAEA;AAEA;AACA,WAhBA;;AAkBAxC;AACAX;AACA;AACA;AACA;AACA,WALA;;AAOAW;AACAX;AACA;AACA;AACA;AACA,WALA;;AAOAW;AACAX;AACA;AACA;AACA;AACA,WALA;;AAOAW;AACAX;AACA;AAEA,kCACA,qBADA,GAEA,sBAFA,GAGA,sBAHA;AAIA,WARA;;AAUAW;AACAX;AACA;AAEA,wCACA,sBADA,GAEA,qBAFA,GAGA,gBAHA;AAIA,WARA;;AAUAW;AACAX;AACA;AACA;AACA,WAJA;;AAMAW;AACAX;AACA;AACA;AACA,WAJA;;AAMAW;AACAX;AACA;AACA;AACA,WAJA;;AAMAW;AACAX;AACA;AACA;AACA,WAJA;;AAMA;AACA;AACA;AACA;AACA;;AAEAW;AACA1I;AACA+H;AACAiD;;AACA;AACA;AACAG;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA,WAjBA;;AAmBAzC;AACA1I;AACA+H;AACAiD;;AACA;AACA;AACAG;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA,WAjBA;;AAmBAzC;AACA1I;AACA+H;AACA;AACA;AACA;AACA,WANA;;AAQAW;AACA1I;AACA+H;AACA;AACA;AACA;AACA;AACA,WAPA;;AASAW;AACA1I;AACA+H;AACA;AACA;AACA;AACA;AACA,WAPA;;AASAW;AACA1I;AACA+H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WATA;;AAWAW;AACA1I;AACA+H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WATA;;AAWAW;AACA1I;AACA+H;;AACA;AACA;AAEAoD;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACAC;AACA;;AACA;AACA;;AAEA;AACA,WArBA;;AAuBA1C;AACA1I;AACA+H;;AACA;AACA;AAEAoD;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACAC;AACA;;AACA;AACA;;AAEA;AACA,WArBA;;AAuBA1C;AACA1I;AACA+H;AACA;AACA;AACA;AACA;AACA,WAPA;;AASAW;AACA1I;AACA+H;AACA;AACA;AACA;AACA;AACA,WAPA;;AASAW;AACA1I;AACA+H;AACA;AACA;AACA;AACA;AACA,WAPA;;AASAW;AACA1I;AACA+H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WATA;;AAWAW;AACA1I;AACA+H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAVA;;AAYA;AACA;AACA;AACA;;AAEA;AACA/H;AACA+H;;AACA;AACAsD;AACA;;AACAC;AACA;AACA;;AAEA5C;AACA;AACA,WAFA;;AAIAA;AACA;AACA,WAFA;;AAIA;AACA1I;AACA+H;;AACA;AACAsD;AACA;;AACAC;AACA;AACA;;AAEA5C;AACA;AACA,WAFA;;AAIAA;AACA;AACA,WAFA,EAIA;;;AACAA;AACA;AACA;AACA;AACA;AACA;AACA,oDANA,CAQA;;AACA;AACA,mEAVA,CAYA;;AACA;AACA;AACA;;AACA;AACA,yEAjBA,CAmBA;;AACA;;AACA;AACAvG;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAHA,MAGA;AACA;AACA;AACAqH;AACA;AACA,aALA,MAKA;AACA+B,4CACA/B,MADA,EAEA,yBAFA,EAGAgC,WAHA;AAKA;;AAEA;AACA,WA5CA,EA8CA;AACA;AACA;AACA;;;AACA9C;AACA;AACA;AACA;AACAO;AACAK;AACAnH;AACA,eAJA,MAIA;AACA8G;AACA9G;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;;AACA,yDACA8G,qBADA,EACA;AACA;AACAW;AACA;AACA;AACA,aAvBA,MAuBA;AACAA;AACA,aA3BA,CA6BA;;;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEAN;AACAnH;AAEA;AAEA;;AACA;AACA;AACA;AACA;AACA,aAJA,MAIA;AACA,iDACAyH,GADA,GAEAlB,0BAFA;AAGA;;AACA;AACA,0DACA,mCADA;AAEA;;AACA;AACA;AACA;AACA;;AAEA;AACA,WA/DA,EAiEA;AACA;;;AAEA;;AAEA;AACA;AACAb,oCAFA,CAGA;;AACAA,4DAJA,CAKA;;AACA,0CANA,CAOA;;AACA;AACAA;AACA;;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA4D;AACA;AACA;AACA;AACA;;AAEA;AACArB,+CADA,CAGA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAJA,MAIA;AACA;AACA;AACA;AACA,mBAVA,CAYA;;;AACAsB;AAEA;AACA,iBAlBA,CAoBA;;;AACA;AACA;AACAA;AACA;AACA,iBAzBA,CA2BA;;;AACAtB;AACA,eA7BA,MA6BA;AACA;AACA;AACA;;AAEAsB,mCAtCA,CAwCA;;AACA;AACA;AACAjF;AACA,eAHA,MAGA;AACA;AACAA,2BACA2D,uBADA,EAEAA,uBAFA;AAIA,eANA,MAMA;AACA;AACA3D,2BACA2D,uBADA,EAEAA,8BAFA,EAGAA,uBAHA;AAKA,eAPA,MAOA;AACA;AACA3D,2BACA2D,wBADA,EAEAA,8BAFA,EAGAA,8BAHA,EAIAA,uBAJA;AAMA,eARA,MAQA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AACA;AACA;AACAuB;AACA;;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AAEA9E;AACA+E;AACAC;AACAF;AACAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACAG;AACA;;AACA;AACA,YAEA;AACA;AACA;;;AACA;AACA,0CACA5C,0EACAA,kCAFA;AAGA;;AACA;AACA;AACA,+BAFA,CAEA;AACA;;;;;;;MjDhvDA;;AkDAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA,8DACA6C,OADA,GAEA;AACA;AACA,OAJA;AAMA;;AACA;AACAC;AACA,OAFA,MAEA;AACAA;AACA,oDACAC,MADA,CACA5L,oCADA;AAEA,SAHA;AAIA,OALA,MAKA;AACA2L;AACA;AACA,SAFA;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAFA;;AAIA;AACAE;AACA;;AACAlN;AACAA,kCAEA;;AACAkN;AAEAA;AACAA;AACAA,wDAEA;AACA;;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA7L;AACAgB,wBADA;AAEAD;AACA;AACA,SAJA;AAKA+K;AACA;AACA;AACA;;AACAC;AACA;AAVA;;AAaAF;AAEA,0CACA,oDADA,EACA;AACA;AACA;AACA;;AAEA;AACA,OATA,EAWA;AACA;;;AACAA;AACA;AACA;AACA;;AACA;AACA;AACA,OANA;;AAQA;AACA,8CACA;AACA;AACA;;AAEAA;AACA;AACA,OAFA;;AAIAA;AACA;;AACA;;AACA;AAEA;AACA,kCACAG,gDADA,KAEA,cACA,aATA,CAWA;;AACA;AACA;AACA,+BACAC;;AACA;AACA;AACA;AACA,qBAHA,CAGA;AACA,WARA,CASA;;;AACA;AACAC;AACA,oBAZA,CAYA;AACA;;AAEA;AAEA,mCACA;;AAEA;AACAC;AACA,SAFA,MAEA;AACA;AACA;;AACA,wCACAA;AACA;;AAEA;AACA,OA1CA;;AA4CA;AACA;AACA;AACA;AAEAC;AAEAC;;AACA;AACAA;AACAlD;AACA,SAHA,MAGA;AACA;AACA;AACA;AACAA,6CACAmD,gDADA,EADA,CAIA;AACA;;AACAD;AACA;;AACAE;AACA;;AAEA;AACA;AACAA;AACA;AACA,SAJA,MAIA;AACA;AACA;AACAA,sCACAC,qDADA,CAFA,CAIA;AACA,WALA,MAKA;AACAD;AACA,WAFA,MAEA;AACAA;AACA,WAVA,CAYA;;;AACAE;;AACA;AACAF,mCADA,CAEA;AACA;;AACA,+EACAA,eADA,GACA,GADA,GACAjC,YADA,GACA,aADA,GAEA,0CAFA,GAGA,gBAHA;AAIAoC;AACAA;AACAA;AACAA;AACAC;AACA;AACA;;AAEA;AACA;;AAEAd;AACA;AACA,OAFA;;AAIAA;;AAEAA,+CACA;AACA;AACA,OAHA;;AAKA;AACA;AACA;AACA;AACA,sCACA;AACA;AACA;AACA;;AAEA;AACA;AAAAe;AAAAC;AAAA1D;AAAAvG;AAAA0J;AAAA;AACA;AACAQ;AACAC;AACA;AACA;;AAEAlB;AACAO;AACA;AACA;AACA,OAJA;;AAMAP,mDACA;AACAO;AACA;AACA;AACA,OALA,EAOA;;;AACAP,8CACA;AACA;AAEAO;AAEAC;AACA,kCACA;AAEAW;AACA,gCACA;;AAEA;AACA,yCACA,mCADA,KAEA;AACA;AACA,uCACA;AACA;AACA,SARA,MAQA;AACAC;;AAEA;AACA;AACAC;AACAD;AACA;AACA;AACA;;AAEA,4BACA;AAEA,8BACAD,aADA,KAEA;AACAG;AACA;AAEA,iCACAd;AAEA,mDACA;AACA;;AAEA;AACA,OAlDA;;AAoDAR;;AAEAA,kDACA;AACA;AAEAQ;AACA,kCACA,YALA,CAOA;;AACA;AACA;AACA;AACA;AACA,WAHA,MAGA;AACA,2CACA,mCADA,KAGA;AACA;;AACA;AACA,SAnBA,CAqBA;;;AACA;AACA;AACA;;AACA;AACAe;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEAC;;AAEA;AACA;AACA,SAFA,MAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAjDA;;AAmDA;AACA;AAEA,kCACA;AAEA;AACA,sCACA;AAEA,8CACA;AAEA,wBACAC,2BADA,GACAC,yCADA;AAEA;;AAEA1B;AACA;AACA,OAFA;;AAIAA;AACA;AACA,OAFA;;AAIAA;AACA;AACA;AACA,SAFA,MAEA;AACA;AACA;AACA,OANA;;AAQAA;;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAFA,MAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEAA;AACA;AACA,OAFA;;AAIA;AACA;;AACA,oCACA2B;;AACA;AACA;;AAEA;AACA,iDACAR;;AACAA;AACA;;AAEA;AACA;;AACA;AACAxC;AACA;;AACA;AACA;;AAEA;AACA;AACA;AACA;AACAiD;AACA;;AACAzO;AACA;;AAAA;AACA,4BAPA,CASA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA0O;AACAD;AACAvO;AACA,aAHA;;AAKAuO;AACA;;AAEAA;AACA,SAzBA;AA0BA;UlD3dA;;AmDAA;AACA3O;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAsJ;AAEArJ;AACA4O;AACAC;;AACA;;AAEAnB;AACA1N;AACA6O;;AACA;;AAEA;AACA7O;AACA,SAFA,MAEA;AACA;AACA,SAFA,MAEA;AACA0N;AACA1N;AACA;;AACA;AACA,OA/BA;;AAiCAD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAa;;AAEA;AACA8M;AACA1N;AACA,SAHA,MAGA;AACAA;;AACA;AACAA;AACAyH;AACA;;AACA;AACA7G;AACA,WAFA,MAEA;AACAA;AACA;;AACA;AACAZ;AACAyH;AACA;;AAEA;AACAiG;AACA1N;AACA,WAHA,MAGA;AACA0N;AACA1N;AACA,WAHA,MAGA;AACA0N;AACA1N;AACA;AACA;;AAEA;;AAEAA;AACA8O;;AACA;;AAEA5J;AACA,OAlDA;UnDlCA;;AoDAA;AACA;AACAtF;AACA;AACAmP;AACAA;AACAC;AACApO,2BADA;AAEAqB,iCAFA;AAGAwH,8BAHA;AAIAvH;AAJA;AADA;AAQA;AACA,SAZA;AAaA,OAfA,MAeA;AACA;AACAtC;AACA;AACAmP;;AACA;;AACAE;AACAF;AACAA;AACA;AACA,SARA;AASA;UpD1BA;;AqDAA;AACA,yCAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACAG;AACA,WAFA,MAEA;AACAA;AACA;AACA,SANA,CAMA;AACAA;AACA;;AACA;AACA;AACAC;AACA,WAFA,MAEA;AACAA;AACA;AACA,SANA,CAMA;AACAA;AACA;AACA,OAnBA;;AAoBA;AACA;AACA;AACA;AACA,SAJA,CAKA;;;AACA;AACAD;AACA;AACA;;AACA;AACA;AACA;AACA,SAHA,CAGA;AACA;AACA;AACA;AACA,WAHA,CAGA;AACA;AACA;AACA;AACA;AAGA;;AACA;AACA;AACA;AACA;AACA,SAJA,CAKA;;;AACA;AACAC;AACA;AACA;;AACA;AACA;AACA;AACA,SAHA,CAGA;AACA;AACA;AACA;AACA,WAHA,CAGA;AACA;AACA;AACA;AACA;AACA;AAIA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACAC;;AACA;AACAC;AACA,SAFA,MAEA;AACAC;AACA;;AACA;AACAC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACAH;AAEA;;AACA;AACAI;AACAH;;AACA;AACA;AACAG;AACA;AACA;;AACAF;AACAG;AACA;;AACAD;AACAJ;AACAM;AACA;;AAEAC;AACA;;AACA;AACA;AACAC;AACA;AACA;;AACAP;;AACA;AACAQ;AACA;AACA,OAXA,EAaA;;;AACA;AACA;AACA;AACA;;AACAC;AACA;AACA,OAFA;;AAGAH;AACAA;AACAA;AACAA;AACAA;;AACAA;;AAEA;;AAEAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;;AAEAA;AAAA;AAAA;;AAEAA;AACA;AACA,OAFA;;AAIAA;AAAA;AAAA;;AACAA;AACA;AACA,OAFA;;AAGAA;AAAA;AAAA;UrDvLA;;AsDAA;;AACA;AACA;;AACA,kCAEA;;AACA;AACA;AACAjD;AACA;AACA;;AACA;AACA9M;AACA,OAFA,MAEA;AACA;AACAmQ;AACAhQ;AACA;;AAEA;AACA;AACA;;AAEAiQ,8DAEA;;AACAD;;AAEAC;AACA;AACA;AACA;;AACA;AACA,OALA;;AAOAA;AACA;AACA;AACA;;AACA;;AACA;AACA;AACApH;AACA,WAFA,MAEA;AACAA;AACA;AACA,SANA,MAMA;AACAA;AACA;;AACA;AACA,OAfA;;AAiBAoH;AACA;AACA;AACA;;AACA;AACA,OALA;;AAOAA;AACA;AACA;AACA;;AACA;AACA,OALA;;;MtD3DA;;AuDAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEApQ;;AAEA;;AACA;;AAEAqQ;AACAC;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA,qFAEA;;AACAA,8BAIA;AACA;;AAEA;AACAC;AACA;;AAEAD;AACA;;AAEA;AACA;AACA;AACAE;AACA;AACA;AACA;;AAEAA;;AAEA;AACA;AACAA;AACA;AACA;;AAEAC,kCAnBA,CAqBA;AACA;;AACA;AACAD;AACAA;AACA;;AAEA;;AACA;AACA;AACAE;AAEAD;AACA;;AAGA;AACA;AACAC;AAEA;AACA,SA1CA,CA4CA;;;AACA;AACAC;;AACA;AACA,qBADA,CACA;AACA;AACA;;AAEAH;AACAC,kCArDA,CAuDA;;AACA;AACAD;AACAC;AAEAD;AACAA;AAEAA;AACAC;AAEAD;AACAA;AAEAC;AACA;;AAEAD;AACAA;AAEAC;AAEAA,kCA7EA,CA+EA;;AACA;AACA,OAjFA;;;;;;;;;;;MvD/CA;;AwDAA;;AAEA;AAAAG;AAAAA;AAAAA;AAAA;;AAEA;;AAEA;AACA;AACAC;AACA;;AAEA;AACA;AACA;AACA,WAFA,MAEA;AACA;AACA;AACA;;AAEA,wBACA,aACA;AACAC;;AAEA;AACA;AACA;;AAEA;AACA,SARA,CAQAD,IARA,CAFA;;AAYAE;AACAA;AACAC;AACA;;;AAGA;AACA;AACA;AACAC;AACA;AACA,WAFA;;AAIA;AACA;AACA,WAFA,MAEA;AACA;AACA,WAFA,MAEA;AACA;AACA;AACA,SAbA,MAaA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACAC;AACA;;AAEA;AACA;;;AAGA;AACA;AACA5G;AACA;;AAEA;AACA;AACA,SAFA,MAEA;AACA;AACA;AACA;;AAEA6G;AACA;AACA,OAFA,EAEAC,SAFA;AAGAD;AACA;AACA;;AAEA;AACAE;AACAJ;AACA,SAHA,MAGA;AACAI;AACA;;AAEA;;AAEA;AACA;AACAC;AACA,SAHA,MAGA;AACA;AACAA;AACA;;AAEAA;AACA;AACA,OAvBA,EAuBAF,SAvBA;AAwBAD;AACAA;AACA;AACA,OAFA;AAGAA;AACAA;AACA;AACA,OAFA;AAGAA;AACAA;AACAA;AACAA;AACAA;AACA;AACA,OAFA,EAEAC,SAFA;AAGAD;AACAnR;UxD9HA;;;;AyDAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACAuR;AACA;;AAEA;AACA,WARA;AASA;;;AAGAvR;;AAEA;;AAEA;;AAEAwR;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACAC;AACAC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEArQ;AACA;AACA;AACA;AACAgB,6BAJA;AAKAD;AACA;AACA;AAPA;AASAf;AACA;AACA;AACA;AACAgB,6BAJA;AAKAD;AACA;AACA;AAPA;AASAf;AACA;AACA;AACA;AACAgB,6BAJA;AAKAD;AACA;AACA;AAPA,cAQA;;AAEA;AACA;AACA,kDAFA,CAEA;AACA;;AAEA2N;AACA;;AAEA;AACA4B;AACA;;AAEAtQ;AACA;AACA;AACA;AACAgB,6BAJA;AAKAD;AACA;AACA;AACA;;AAEA;AACA,aAXA;AAYA+K;AACA;AACA;AACA;AACA;AACA,eALA,CAKA;AACA;;;AAGA;AACA;AACA;AAvBA;;;;;;;;MzDlHA;;A0DAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAnN;;AAEA;;AAEAwR;;AAEA;AACA;AACAI;AACA;;AAEAC;AACAC;AACA,OAFA;;;;M1DpCA;;;;A2DAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA9R;AACA;;AAEA;AACA;;AAEAyR;AACA;;AAEA;;AAEA;AACA;AACA,WAFA;AAGA;;AAEA;;;AAGA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACAM;AACA,WAFA,MAEA;AACAA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AAAA,cACAC,4CADA;;AAGA;AAAA,cACAC,0DADA;AAAA,cAEAC,oEAFA;AAAA,cAGAC,sEAHA;AAAA,cAIAC,sFAJA,EAIA;;;AAGA;AACA;AACA;;AAEAZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yGAHA,CAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACAa;AACAhK,oCAFA,CAEA;AACA;AACA;AACA;AACA;;AAEA,mFARA,CAQA;AACA;;AAEA;AACA,4FAZA,CAYA;AACA;;AAEA,oGAfA,CAeA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCA1BA,CA0BA;AACA;AACA;AACA;;AAEA,6BA/BA,CA+BA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAtCA,CAsCA;;AAEA,yDAxCA,CAwCA;;AAEA,qDA1CA,CA0CA;;AAEA,mCA5CA,CA4CA;AACA;AACA;;AAEA,qEAhDA,CAgDA;;AAEA,gCAlDA,CAkDA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACAgK;AACA,0EAFA,CAEA;AACA;;AAEA;AACA,6EANA,CAMA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA/B;AACA;;AAEAjP;AACA;AACA;AACA;AACAgB,6BAJA;AAKAD;AACA;AACA;AACA;;AAEA;AACA,aAXA;AAYA+K;AACA;AACA;AACA;AACA;AACA,eALA,CAKA;AACA;;;AAGA;AACA;AAtBA;AAwBAsE;AACAA;;AAEAA;AACAK;AACA,WAFA,EAEA;AACA;AACA;AACA;;;AAGAL;AACA;AACA;;AAEA;AACA;AACAxH;;AAEA;AACArH;AACAqH;AACA;;AAEAqI;AACA;AACA,aAXA,MAWA;AACAA;AACA;;AAEA;AACA,WApBA,EAoBA;;;AAGAb;AACA;AACA,WAFA;;AAIA;AACAM;AACA;;AAEA;AACA3D;AACAmE;AACA,aAHA,MAGA;AACA;AACA;;AAEA;AACAC;AACA,eAFA,MAEA;AACA;AACA5P;AACA;;AAEA;AACA;AACA,iBAFA,MAEA;AACA4P;AACA,iBAFA,MAEA;AACA;AACA,iBAFA,MAEA;AACApE;;AAEA;AACAxL;AACA;AACA,mBAHA,MAGA;AACA6P;AACA;AACA;AACA,eArBA,MAqBA;AACArE;AACAsE;AACA;AACA,aAtCA,CAsCA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACAtE;AACA7M;AACA,aAHA,MAGA;AACA;AACA6M;AACA;AACA;AACA;;AAEAsE;AACA;;AAEA;AACA;;AAEA;AACApF;AACA;;AAEA;AACA;;AAEAmE;AACA;AACA,WAFA,EAEA;;;AAGAA;AACA;AACA;AACA,kDAHA,CAGA;;AAEA,gFALA,CAKA;;AAEA;AACA;;AAEA;AACAkB;AACAC;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WApBA,EAoBA;;;AAGA;;AAEA;AACA;AACA;AACAC;AACA,aAHA,MAGA;AACA;AACA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAPA,CAOA;;;AAGA;AACA,4CAXA,CAWA;;AAEA;AACAzE;AACA;AACA;;AAEA;AACA;;;AAGAqD;AACAM;AACAc;AACA;AACA;AACA,uDALA,CAKA;AACA;AACA;;AAEA;AACAd;AACA;AACA;AACA;;AAEAc,wCAfA,CAeA;;AAEA;AACA;AACA;AACA,aApBA,CAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACAd,2CA7CA,CA6CA;;AAEA;AACAe;AACAf;AACA,aAlDA,CAkDA;AACA;;;AAGA;AACAe;AACAf;AACA,aAHA,MAGA;AACAA;AACA3D;AACAA,gCAHA,CAGA;;AAEA,gEALA,CAKA;;AAEA;;AAEAA,iCATA,CASA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACAA;AACAyE;AACA,aAHA,MAGA;AACAzE;AACAA;AACA;;AAEA;AACA;AACA;AACA,0DAHA,CAGA;;AAEA;AACA;;AAEA;AACA;AACA,WA7FA;;AA+FA;AACA2D;AACA;;AAEA;AACA;;AAEA;AACA3D;AACAA;AACA;AACA;;AAEAA;;AAEA;AACA;AACA;AACA;AACA2E;AACA,aALA,MAKA;AACA;AACA3E;;AAEA;AACAA;AACA4E;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACAjB;AACA3D;;AAEA;AACA2D;AACA3D;AACA2B;AACA;AACA;;AAEA;AACA;AACAgC;;AAEA;AACAxQ;AACA6M;AACA,aAPA,CAOA;AACA;AACA;AACA;AACA;AACA;;;AAGAA;AACA6E;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA7E;AACA2B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAgC;AACAxQ;AACA;AACA;AACA;;AAEA6M;AACA;AACA;AACA;AACA;;;AAGAqD;AACAe;AACA,WAFA;;AAIAf;AACA;AACA;;AAEA;AACA;AACArD;AACA;;AAEA;AACAA;AACA;;AAEA;AACAA;AACA;AAXA;;AAcAA;AACA2D;AACA;AACA;AACA;AACAtB;;AAEA;AACAsB;;AAEA;AACA;AACAmB;AACAvC;AACA;AACA;AACA;;AAEA;AACAoB;AACAtB;AACA,aAvCA,CAuCA;AACA;AACA;AACA;;;AAGA;AACAA;AACA;;AAEA;AACAsB,+BADA,CACA;;AAEAtB;AACAA;AACAA;AACAA;AACAA;AACA0C;AACAA;AACAA;AACAC,+BAXA,CAWA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEAD;;AAEA;AACApB;AACA;AACAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACAA;AACA3D;AACA;;AAEA+E;AACA;AACA,aAxFA,CAwFA;AACA;;;AAGA;AACApB;AACAsB;AACA5C;AACA;AACA,aAjGA,CAiGA;;;AAGA6C,oDApGA,CAoGA;;AAEA;AACA7C;AACA4C;AACA;;AAEA5C;;AAEA;AACAsB;AACAtB;AACA4C;AACA;;AAEA5C;;AAEA;AACAsB;AACAoB;AACA,aAxHA,CAwHA;;;AAGA1C,mCA3HA,CA2HA;;AAEA;AACAsB;AACAoB;AACA;;AAEA;AACA,WAnIA;;AAqIA;AACA;AACA;AACApB;AACA;;AAEA;AACA3D;AACA6E;AACA;AACA,aATA;AAUA;;AAEAxB;AACA;AACA;AACA8B;AADA,cAFA,CAIA;;AAEA,oDANA,CAMA;;AAEA;AACA;AACA;AACA,4CAHA,CAGA;;AAEAnF;AACAA;AACAA;AACA;AACA;AACA,aAlBA,CAkBA;;;AAGA;AACA;AACA;AACA;AACAA;AACAA;AACAA;;AAEA;AACAoF;AACAD;AADA;AAGA;;AAEA;AACA,aApCA,CAoCA;;;AAGA;AACA;AACAnF;AACAA;AACA;AACAqC;AACA;AACA,WA9CA,EA8CA;AACA;;;AAGAgB;AACA;AACA;;AAEA;AACA;AACA;AACArD,2EAHA,CAGA;;AAEA;AACA,aANA,MAMA;AACA;AACAA;AACAA;AACAA;AACA2D;;AAEA;AACAgB;AACA,iBAFA,MAEA;AACAhD;AACA;AACA;AACA;;AAEA;AACA,WA1BA;;AA4BA0B;;AAEAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA1B;AACA;;AAEA;AACA,WAdA;;AAgBA0B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA1B;AACA;;AAEA;AACA,WAdA;;AAgBA;AACA;AACA3B;;AAEA;AACA;AACA;AACAA,mCAHA,CAGA;AACA,aAJA,MAIA;AACAuD;AACA;AACA;;AAEA;AACAI;AACAJ;AACA;AACA;;;AAGAF;AACA;;AAEA;AACAM,8BADA,CACA;AACA;AACA;;AAEA3D;AACAqF;AACA;;AAEArF;AACA;AACA,WAdA;;AAgBA;AACA;AACAA;AACA2B;AACA;AACA;;AAEA;AACAgC;;AAEA;AACAxQ;AACA;;AAEA6M;AACA7M;AACA0R;AACA;AACA;;AAEAxB;AACAM;;AAEA;AACAA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAXA;;AAaA;AACA;AACAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGAN;AACA;;AAEA;AACA;AACAlQ;AACAwQ;;AAEA;AACA;AACA;AACA;;AAEAvO;AACA,aATA;AAUAjC;AACAwQ;AACA,oEAFA,CAEA;;AAEA;;AAEA;;AAEA;AACA2B;AACAnS;AACA;AACA,aAZA,EAfA,CA2BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAFA;AAGA,iBAJA,CAIAkI,CAJA;AAKA;AACA,aAtCA,CAsCA;;;AAGA;AACAlI;AACA,aA3CA,CA2CA;AACA;;;AAGA;AACAwQ;;AAEA;AACA2B;AACAnS;AACA;AACA,aAPA;;AASA;AACA,WAzDA;;AA2DA;AACAkQ;AACA;AACAkC;AACA;;AAEA;AACA,aANA;AAOA;;AAEAtS;AACA;AACA;AACA;AACAgB,6BAJA;AAKAD;AACA;AACA;AAPA;AASAf;AACA;AACA;AACA;AACAgB,6BAJA;AAKAD;AACA;AACA;AAPA;AASAf;AACA;AACA;AACA;AACAgB,6BAJA;AAKAD;AACA;AACA,aAPA;AAQA+K;AACA;AACA;AACA;AACA;AAZA,cAaA;;AAEAsE;AACApQ;AACA;AACA;AACA;AACAgB,6BAJA;AAKAD;AACA;AACA;AAPA,cAQA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACAgM;AACA,aAJA,MAIA;AACA;AACAvC;AACA;AACA;AACA;;AAEA;AACA;AACAkG;;AAEA;AACA3D;AACA2B;AACA;AACA;;AAEA;AACAgC,mEADA,CACA;;AAEA;AACA3D;AACA7M;AACAA;;AAEA;AACA;AACA;AACA;;AAEA;AACAA;AACA;AACA;AACA;AACA;;AAEA;AACAkQ;AACA;AACAmC;AACA;;AAEA;AACA,aANA;AAOA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;M3DnmCA;;A4DAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA5T;;AAEA;AAAA,UACAmS,sEADA;AAAA,UAEA0B,4DAFA;AAAA,UAGAC,sFAHA;AAAA,UAIAC,wEAJA;;AAMA;;AAEAvC;;AAEA;AACA;AACAwC;AACA;;AAEA;AACA;AACA;;AAEAA;AACAA;AACA;AACA;AACAlC;AACA;AACAmC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA5B;AACA;AACA6B,mDADA;AAEAC,8BAFA;AAGAC,6BAHA;AAIAC,uBAJA;AAKAC,0BALA;AAMAC;AANA,UAHA,CAUA;;AAEA,gDAZA,CAYA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SArBA,CAqBA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACAtT;AACA,WAFA;AAGA,SAJA,MAIA;AACAA;AACA;AACA;;AAEA2Q;AACA;AACA;AACA,OAHA,EAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAA;AACAE;AACA,OAFA;;AAIAF;AACA;AACAoC;AACAA;AACAA;;AAEA;AACA;AACA;AACA;AACA,OAVA,EAUA;AACA;AACA;;;AAGApC;AACA;;AAEA;AACAoC;;AAEA;AACA,SAJA,MAIA;AACA;AACA;AACAA;AACA;AACA,OAZA;;AAcApC;AACAS;AACAP;AACA,SAFA;AAGA,OAJA;;AAMA;AACA;AACA;AACAvQ,4BAHA,CAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;M5DxMA;;;;A6DAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACAwU;AACA,aAFA;AAGA;AACA;;AAEA;;;AAGA;AACA;;AAEA9C;AACA;;AAEA;AACA+C;AADA;AAGA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AAAA,cACAzC,4CADA;;AAGA;AAAA,cACAC,0DADA;AAAA,cAEAE,sEAFA;AAAA,cAGA0B,4DAHA;AAAA,cAIAa,8DAJA;AAAA,cAKAC,0DALA;AAAA,cAMAC,8DANA;AAAA,cAOAC,sEAPA;AAAA,cAQAC,0DARA;;AAUA;;AAEAtD;;AAEA;;AAEA;AACAa;AACAhK,oCAFA,CAEA;AACA;AACA;AACA;AACA;;AAEA,mFARA,CAQA;AACA;;AAEA;AACA,4FAZA,CAYA;AACA;AACA;;AAEA,oGAhBA,CAgBA;;AAEA,qCAlBA,CAkBA;;AAEA,mCApBA,CAoBA;;AAEA,gCAtBA,CAsBA;;AAEA,+BAxBA,CAwBA;;AAEA,kCA1BA,CA0BA;;AAEA,mCA5BA,CA4BA;AACA;AACA;;AAEA;AACA,2CAjCA,CAiCA;AACA;AACA;;AAEA,qEArCA,CAqCA;AACA;AACA;;AAEA,4BAzCA,CAyCA;;AAEA,iCA3CA,CA2CA;;AAEA,4BA7CA,CA6CA;AACA;AACA;AACA;;AAEA,6BAlDA,CAkDA;AACA;AACA;;AAEA,0CAtDA,CAsDA;;AAEA;AACA0M;AACA,aAFA,CAxDA,CA0DA;;;AAGA,gCA7DA,CA6DA;;AAEA;AACA;AACA,4CAjEA,CAiEA;AACA;;AAEA,+BApEA,CAoEA;AACA;;AAEA,qCAvEA,CAuEA;;AAEA,sCAzEA,CAyEA;;AAEA,yDA3EA,CA2EA;;AAEA,qDA7EA,CA6EA;;AAEA,0CA/EA,CA+EA;AACA;;AAEA;AACA;;AAEAC;AACA;AACA;;AAEA;AACAlJ;AACAmJ;AACA;;AAEA;AACA,WAVA;;AAYA;AACA;AACA5T;AACAe;AACA;AACA,iBAFA,EAEA,iFAFA,EAEA,SAFA;AADA;AAKA,aANA,CAMA;AACA,WARA,KAQA;AACA;;;AAGA;;AAEA;AACA8S;AACA7T;AACAL;AACA;AACA;AACA;AACA;AALA;AAOA,WATA,MASA;AACAkU;AACA;AACA,aAFA;AAGA;;AAEA;AACA7C,2DADA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6EAZA,CAYA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA/B;AACA;;;AAGAoB;AACAc;AACA,WAFA;;AAIA;AACA,sDADA,CACA;;AAEAA;AACAzC;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACAzC;AACA,aAFA,MAEA;AACAA;AACA;;AAEA;AACAkF;AACAzC;AACA;AACA;;AAEA;AACA;;AAEA2B;AACA;AACA;;AAEA;;AAEA;AACA9O;AACA;;AAEA;AACAkP;AACA7H;AACA;;AAEA;AACA;AACA;AACAmE;AACAvC;AACA;AACA;AACA,WAtBA;;AAwBA6F;AACA;AACA,WAFA;;AAIAA;AACA;;AAEA;AACAtD;AACA;AACA;AACA,WAPA;;AASAsD;AACA;AACA;AACA;AACA;AACA;AACA,WANA;;AAQArQ;AACA;AACA;AACA;AACAgB,6BAJA;AAKAD;AACA;AACA;AAPA;;AAUA;AACA;AACAQ;AACA;;AAEA;AACA;;AAEAvB;AACA;AACA;AACA;AACAgB,6BAJA;AAKAD;AACA;AACA;AAPA,cAQA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA+S;AACAlL;AACArH;AACA;AACA;;AAEA;AACAwL;AACA,yDAbA,CAaA;;AAEA;;AAEA;AACA;AACAA;AACAxL,4BADA;AAEAqH,kCAFA;AAGAkL,4BAHA;AAIA1O,4BAJA;AAKA5F;AALA;;AAQA;AACAuU;AACA,eAFA,MAEA;AACAhH;AACA;;AAEAA;AACA,aAjBA,MAiBA;AACAiH;AACA;;AAEA;AACA;;AAEA;AACAjH;AACAA;AACAA;AACAA;AACA;AACAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA2B,uCAHA,CAGA;AACA;;AAEAA;AACAxO;AACAiR;AACA,aATA,MASA;AACA;AACA;AACAV;AACAvQ;AACAiR,yCALA,CAKA;AACA;;AAEA8C;AACA;AACA;;AAEA;AACAlH;AACAA;AACAA;AACAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACAmH;AACA;AACA;AACA;;AAEA;AACAC;AACA;;AAEA;AACAzF;AACA,eAFA,MAEA;AACA0F;AACA;AACA;AACA;;AAEA;AACA;AACArH;AACA0D;AACAwD;AACA;AACA;AACA;;;AAGA;AACA;AACAlH;AACA7M;AACA;AACA;;;AAGA;AACA6M;AACA;;AAEA;AACA;AACA;AACA;AACA;AACAsH;AACA;AACA;;AAEA;AACApQ;AACA;AACAqQ;AACAhT;AACA;;AAEA2C;AACA+P,oFAjBA,CAiBA;AACA;;AAEAjH;AACAA;;AAEA;AACAA;AACAsH;AACA,eAHA,MAGA;AACAtH;AACA;;AAEAA;AACA,aA/BA,MA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACAiH;AACAM;AACAvH,6CAPA,CAOA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEAA;AACAA;AACA;;AAEAsD;AACAI;AACA,WAFA;;AAIAJ;;AAEAA;AACA;;AAEA;AACAI;AACAlP;AACAqH;AACA,aAJA,MAIA;AACA6H;AACA7H;AACA;;AAEA,mFAZA,CAYA;;AAEA;AACAmE;AACA;AACA,aAjBA,CAiBA;;;AAGA;AACA;AACA,WAtBA;;AAwBA/M;AACA;AACA;AACA;AACAgB,6BAJA;AAKAD;AACA;AACA;AAPA;;AAUA;AACA;AACA;;AAEA;AACAb;AACA6M;;AAEA;AACAoE;AACA;;AAEApE;AACA7M;AACA+T;AACA,aAVA;AAWA;;AAEA;AACA;AACA;AACAlH;AACAA;AACA2B;AACA,eAJA,MAIA;AACA3B;AACA7M;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACAqU;;AAEA;AACAxH;AACA7M;;AAEA;AACA;AACA;AACA;;AAEA;AACAA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA6M;AACAkH;;AAEA;AACA;AACA;;AAEAlH;AACA7M;AACA;;AAEA;AACA;AACAsU;;AAEA;AACA;AACAzH;AACA0D;AACA6D;AACA,aATA,CASA;;;AAGAvH;AACA;;AAEA/M;AACA;AACA;AACA;AACAgB,6BAJA;AAKAD;AACA;AACA;AACA;;AAEA;AACA,aAXA;AAYA+K;AACA;AACA;AACA;AACA;AACA,eALA,CAKA;AACA;;;AAGA;AACA;AAtBA;AAwBAuE;AACAA;;AAEAA;AACAI;AACA,WAFA;;;;;;;;;;;;;M7DtrBA;;;;A8DAA;;AAEA;;AAEA;AAAA;AAAAzQ;AAAAL;AAAAqB;AAAAC;AAAAuH;AAAA;AAAA;AAAAK;AAAA;;AAAA;AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACAlJ,0BADA;AAEAC;AAFA;AAIA;;AAEA;AACA;;AAEA;AACA,8CADA,CACA;AACA;AACA;;AAEA;AACA6U;AACAA;AACAA;AACAzV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA0P;AACA;;AAEA;AACA;AACAgG;AACA;AACA1V;AACA;AACA;;AAEAyV;AACA,eAPA,EAOAvV,MAPA;AAQA,aATA;AAUA;;AAEA;AACA;AACA;AACA;AACA,aAHA;;AAKAM;AACA,+BADA,CAGA;AACA;;;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACAkP;AACA;AACAxP;AACA,qBAFA,MAEA;AACAF;AACA;AACA,mBANA;AAOA,iBARA;AASA,eA7BA,CA6BA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACAkH;AACA,eAFA,MAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEAA;AACA;;AAEA;AACA;AACA;AA3DA,aA4DAyO;AACA;AACA,WAFA,CA5DA,EA8DAA;AACA,8BADA,CAGA;AACA;AACA;;;AACA;AACAC;AACA;AACA1V;AACA;AACA;;AAEAF;AACA,eAPA;AAQA,aATA;AAUA,WAhBA,CA9DA,EA8EA6V,qBA9EA,GA8EAC,sBA9EA;;AAgFA;AACA;;AAEA;AACAnV,2BADA;AAEA6I;AAFA,gBAGAmM;AACAhV,yBADA;AAEA6I;AAFA,cAHA,EAMAmM;AACAhV,yBADA;AAEA6I;AAFA,cANA,EASAmM;AACAhV,yBADA;AAEA6I;AAFA,cATA,EAYAmM;AACAhV,qDADA;AAEA6I;AAFA,cAZA,EAeAmM;AACAhV;AACA;;AAEA;AACAoV;AACAA;AACAA;AACA/V;AACA,iBALA,MAKA;AACA+V;AACAA;AACA;AACA,eAbA;AAcAvM;AAdA,cAfA,EA8BAwM,cA9BA;AA+BAD;AACAE;AACA;AACA,mDADA,CACA;AACA;;AAEA;AACAF;AACAA;AACAA;AACA7V;AACA;;AAEA6V;AACA;AACA;;AAEA;;AAEA;AACAA;AACAA;AACAA;AACA/V;AACA;;AAEA+V;AACA,aA1BA;AA2BA7U;AACA;AACA,WAhEA;;AAkEAvB;;;;;;M9D9MA;;A+DAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAAuR;AAAA;;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAAA;AAAAgF;AAAAP;AAAA;AAAA;AAAA3U;AAAA;AAAAkV;AAAAlV;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;AAAAA;AAAAL;AAAAqB;AAAAC;AAAAuH;AAAA;AAAA;AAAAK;AAAA;;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAAsM;AAAAA;AAAA;AAAAnV;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA,UACAqI,wBADA;;AAGA;AAAA,UACA+M,2BADA;;AAGA;;AAEA;AACA/M;AACA;;AAEA1J,uBACA,aACA;AACA;AACA0W;;AAEA;AACA;AACA;AACA;;AAEAC;AACAlI,qBADA;AAEAzN;AACA;AACAkK,qBADA;AAEArK;AAFA;AAIA;AACA;AACA;AACA;AAVA,WAWA;AACA4N,wBADA;AAEAzN;AACA;AACAkK,qBADA;AAEArK;AAFA;AAIA;AACA;AACA;AACA;AAVA,SAXA,EAsBA;AACA4N,sBADA;AAEAzN;AACA;AACA;AACA;AACA;AACA;AACA;AARA,SAtBA,EA+BA;AACAyN,sBADA;AAEAzN;AACA;AACA;AACA;AALA,SA/BA,EAqCA;AACAyN,qBADA;AAEAzN;AACA;AACA;AACA;;AAEA;AACA6K;AACA;;AAEA;AACA;AAZA,SArCA,EAkDA;AACA4C,uBADA;AAEAzN;AACA;AACA;AACA;AACA;;AAEA;AACA4V;AACAnN;AACAmJ;AACA;;AAEA;AACA,WAfA,CAeA;;AAfA,SAlDA,EAmEA;AACAnE,wBADA;AAEAzN;AACA;;AAEA;AACA;AACA6K;AACA;AACA,aAJA,MAIA;AACA;AACAA;AACA,aAHA,MAGA;AACA;AACAA;AACA;;AAEA;AACA;AAlBA,SAnEA,EAsFA;AACA4C,sBADA;AAEAzN;AACA;AACA,WAJA,CAIA;;AAJA,SAtFA,EA4FA;AACAyN,2BADA;AAEAzN;AACA;AACA;AACA;AACA6R;;AAEA;AACA;AACA;AACA;AACAA;;AAEA;AACA;AACA;AACA;AACA,iBAHA,MAGA;AACA;AACAD;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WA/BA,CA+BA;;AA/BA,SA5FA,EA6HA;AACAnE,2BADA;AAEAzN;AACA;AACA;AACA;AACA4R;AACAC;;AAEA;AACA;AACA;AACA7J;AACA6J;;AAEA;AACA;AACA;AACA;AACA,iBAHA,MAGA;AACA;AACAD;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAhCA,CAgCA;;AAhCA,SA7HA,EA+JA;AACAnE,qBADA;AAEAzN;AACA;AACA;AACA6V,sBAFA;AAGA;AACAC;AAJA;AAMA;AATA,SA/JA;;AA2KA;AACA,OArLA,EAFA;;;;M/D1BA;;;;AgEAA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACAhF;AACA,eAFA,MAEA;AACA;AACA/B;AACA,iBAFA,MAEA;AACA;AACAA;AACA;AACA;;AAEA;AACA,aAnBA,CAmBA;AACA;;;AAGA;AACA;AACA,aAzBA,CAyBA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACAA;AACA,iBAFA,MAEA;AACAvM;AACAuM;AACA,iBAHA,MAGA;AACAA;AACA;AACA,eATA,MASA;AACAA;AACA+B;AACA,eAHA,MAGA;AACA/B;AACA;AACA,aAhBA;;AAkBA;AACA;;AAEA;AACAgH;AACAC;AACA;;AAEA;AACA;AACA;AACArF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA3R;AACAiX,4BADA;AAEAC,gCAFA;AAGA1E;AAHA;;;;;MhEpGA;;AiEAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA2E;;AAEA;AACAnH;AACA;;AAEAvJ;AACA,SATA;AAUA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACAA;AACA;AACA;;AAEA;AACA;AACA,SAFA;;AAIA;;AAEA;AACAoD;AACAuN;AACA;AACA,SAJA;;AAMA;;AAEA;AACAC;AACAC;AACA;AACA,SAJA;;AAMA;AACA7Q;AACA,SAFA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAZA;;AAcA;AACAlF;AACA,SAFA;;AAIA;AACAA;AACAA;AACA;AACA,SAJA,MAIA;AACA;AACAA;AACAA;AACA;;AAEAA;AACAA;AACA;AACAA;AACA;AACAA;AACAA;AACAA;AACA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACA,SAXA;AAYA;;AAEAvB;;;MjEvGA;;AkEAAA;AACA;AACA,OAFA;UlEAA;;AmEAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACAmX;AACA1Q;AACA,SAJA;AAKA;;AAEA;AAAA,UACA8Q,kDADA;AAAA,UAEA5C,0DAFA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACAlO;AACA;AACAlF;AACAiW;AACA,SAFA;AAGA;AACAC;AACAJ,2BADA;AAEAxN;AAFA,WAGA;AACA;AACA2N;AACA/Q;AACA,SAPA;AAQA;AACA;AACA;AACA;AACAiR,2BAHA,CAGA;;AAEA;AACA;AACAjR;AACA,SARA;AASA;;AAEA;AACAkR;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA9V;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA+V;AACAnR;AACA,WANA;AAOA,SAVA;AAWA;AACA;;AAEAzG;;;;MnEhGA;;AoEAA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAVA,CAUA;;;AAGA;AACA;;AAEAA;AACAgS;AADA;;;MpExBA;;AqEAAhS;;;MrEAA;;AsEAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAEA;AACA;;;AAEA;AACAiK;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AACA;AACA;AAJA;AAMA,OARA;;AAUA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA,kCADA,CACA;;AACA4N;AACAC;AAnBA;AAqBA;AACA;;AAAA,QAEA;AACA;;AACA;AACA;;AACA;AACA;AACA,QAEA;AACA;AACA;;;AACA3X;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA4X;AACA;;AACA;AACA;AACAA;AACA;;AACA;AACA;AACA;AACAA;AACA;;AACA;AACA;AACA;AACA;AAlBA;;AAoBA;AACA;AACA;AACA;;AAEAC;AACA;AACA;AACA;;AACA;AACAC;AACA;AACAxO;AACA;AACA,SALA,MAKA;AACAA;AACA;;AACA;AACA;AACA,OAdA;;AAgBAuO,6CAEA;;AACAA,+CAEA;;AACAA;AACA;AACAhP;AACA;AACA;;AACAA;AACA;AACA,OAPA,EASA;AACA;;;AACA;AACA;AACA;AACA,QAEA;AACA;AACA;;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA+O;;AACA;AACA;AACA;AACA;;AACA;AACAA;;AACA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA,QAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACApG;AACA;AACA;;AACA;AACA;AACAA;AACA;AACA;;AACA;AACA;AACAA;AACA;AACA;AACA;AACA;AACA,QAEA;;;AACA;AACA;AACA;AACA;;AACA;AACA3I;AACA;AACA;;AACAA;AACA;AACA,QAEA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACAA;AACA;AACA,QAEA;AACA;;;AACA;AACA;AACA;AACA;AACA,QAEA;AACA;AACA;AACA;;;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA,QAEA;AACA;;;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA,SAFA,MAEA;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAEA;;;AACA;AACA;AACA;;AAEA;AACA;AACA;;;MtEvSA;;;;AuECA;AACA;AACA;AAEAhJ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AACA;AACA;AACA;AACA;AACA,iBAFA,MAEA;AACA2J;AACA,iBAFA,MAEA;AACAA;AACA;;AACAuO;AACA;;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA,aAFA,CAEA;AACA;AACA;;AACA;AACA;AACA;AACA;;;;AvElEA;CAAA","names":["module","define","g","exports","e","resolve","step","reject","result","label","sent","trys","ops","next","t","_","value","done","y","op","f","Object","PayloadAssembler","stream","streamData","streamDataAsString","_a","responsePayload","receiveResponse","streams","statusCode","requestPayload","receiveRequest","path","verb","contentAssembler","get","enumerable","configurable","ContentStream","bufferArray","stringToParse","allData","count","chunk","readToEnd","size","CancelDisassembler","payloadType","payloadLength","id","end","extendStatics","__proto__","d","__extends","_this","HttpContentStreamDisassembler","streamLength","payloadDisassembler_1","PayloadDisassembler","header","RequestDisassembler","payload","ResponseDisassembler","type","length","HttpContent","o","__exportStar","PayloadReceiver","event","_c","readSoFar","isStream","bytesActuallyRead","contentStream","_b","err_1","PayloadSender","sentCallback","headerSerializer_1","leftOver","packet","TransportDisconnectedEvent","HeaderSerializer","buffer","PayloadAssemblerManager","assembler","onCompleted","PayloadConstants","PayloadTypes","RequestManager","pendingRequest","SendOperations","disassembler","request","response","StreamManager","ProtocolAdapter","requestId","StreamingRequest","contentLength","StreamingResponse","SubscribableStream","callback","total","stream_1","BrowserWebSocket","rejector","resolver","packets","fileReader","queueEntry","handler","WebSocketClient","ws","transport","WebSocketTransport","promise","default","bytes","output","x","a","c","b","arr","getRandomValues","M","W","H","byteToHex","options","node","clockseq","nsecs","_lastMSecs","_lastNSecs","_clockseq","msecs","str","namespace","offset","buf","generateUUID","rnds","lookup","revLookup","validLen","tmp","uint8","parts","i","Buffer","console","foo","writable","encodingOrOffset","assertSize","createBuffer","encoding","obj","K_MAX_LENGTH","pos","loweredCase","start","swap","target","thisStart","thisEnd","byteOffset","val","indexSize","arrLength","valLength","foundIndex","found","data","firstByte","codePoint","secondByte","tempCodePoint","thirdByte","fourthByte","bytesPerSequence","res","String","codePoints","ret","out","newBuf","byteLength","checkOffset","mul","checkInt","sub","checkIEEE754","ieee754","Uint8Array","targetStart","units","leadSurrogate","byteArray","hi","lo","dst","R","ReflectOwnKeys","concat","EventEmitter","set","defaultMaxListeners","doError","er","err","ReflectApply","checkListener","events","listener","existing","prepend","m","w","ProcessEmitWarning","fired","wrapFn","wrapped","state","list","position","originalListener","spliceOne","key","listeners","unwrapListeners","arrayClone","copy","emitter","errorListener","s","nBits","eLen","ctor","constructor","TempCtor","cachedSetTimeout","cachedClearTimeout","draining","queue","queueIndex","drainQueue","currentQueue","len","runClearTimeout","process","args","runTimeout","Item","copyProps","SafeBuffer","inherits","Stream","EE","source","dest","didOnEnd","cleanup","subClass","Base","_inheritsLoose","NodeError","codes","expected","this_len","createErrorType","TypeError","determiner","msg","keys","require","Readable","Writable","self","Transform","PassThrough","cb","debug","getHighWaterMark","ERR_INVALID_ARG_TYPE","ERR_STREAM_PUSH_AFTER_EOF","ERR_METHOD_NOT_IMPLEMENTED","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","Duplex","skipChunkCheck","onEofChunk","errorOrDestroy","addChunk","maybeReadMore","content","p","n","doRead","emitReadable","emitReadable_","flow","unpipeInfo","src","cleanedUp","unpipe","prependListener","hasUnpiped","dests","resume","paused","createReadableStreamAsyncIterator","from","ERR_MULTIPLE_CALLBACK","ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_WITH_LENGTH_0","ts","rs","afterTransform","needTransform","transforming","writecb","writechunk","writeencoding","onCorkedFinish","deprecate","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","onwrite","WritableState","current","realHasInstance","isBuf","last","doWrite","finishMaybe","onwriteStateUpdate","clearBuffer","afterWrite","holder","entry","prefinish","corkReq","iter","lastPromise","_defineProperty","_this2","_Object$setPrototypeO","AsyncIteratorPrototype","iterator","_Object$create","finished","ownKeys","descriptor","inspect","_classCallCheck","_createClass","copyBuffer","depth","customInspect","emitErrorNT","emitCloseNT","destroy","undestroy","called","writableEnded","readable","readableEnded","ERR_MISSING_ARGS","closed","eos","destroyed","fn","destroys","enc","retried","nb","StringDecoder","r","warned"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/node_modules/browser-pack/_prelude.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/es5/assemblers/payloadAssembler.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/es5/contentStream.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/es5/disassemblers/cancelDisassembler.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/es5/disassemblers/httpContentStreamDisassembler.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/es5/disassemblers/payloadDisassembler.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/es5/disassemblers/requestDisassembler.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/es5/disassemblers/responseDisassembler.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/es5/httpContentStream.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/es5/index-browser.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/es5/payloadTransport/index.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/es5/payloadTransport/payloadReceiver.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/es5/payloadTransport/payloadSender.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/es5/payloadTransport/transportDisconnectedEvent.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/es5/payloadTransport/transportDisconnectedEventHandler.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/es5/payloads/headerSerializer.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/es5/payloads/index.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/es5/payloads/payloadAssemblerManager.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/es5/payloads/payloadConstants.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/es5/payloads/payloadTypes.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/es5/payloads/requestManager.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/es5/payloads/sendOperations.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/es5/payloads/streamManager.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/es5/protocolAdapter.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/es5/requestHandler.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/es5/streamingRequest.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/es5/streamingResponse.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/es5/subscribableStream.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/es5/utilities/protocol-base.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/es5/webSocket/browserWebSocket.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/es5/webSocket/browserWebSocketClient.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/es5/webSocket/index-browser.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/es5/webSocket/webSocketTransport.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/node_modules/uuid/dist/index.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/node_modules/uuid/dist/md5-browser.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/node_modules/uuid/dist/nil.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/node_modules/uuid/dist/parse.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/node_modules/uuid/dist/regex.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/node_modules/uuid/dist/rng-browser.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/node_modules/uuid/dist/sha1-browser.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/node_modules/uuid/dist/stringify.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/node_modules/uuid/dist/v1.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/node_modules/uuid/dist/v3.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/node_modules/uuid/dist/v35.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/node_modules/uuid/dist/v4.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/node_modules/uuid/dist/v5.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/node_modules/uuid/dist/validate.js","/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-streaming/lib/node_modules/uuid/dist/version.js","/Users/dylanmurray/Sweng-2022/front/node_modules/node_modules/base64-js/index.js","/Users/dylanmurray/Sweng-2022/front/node_modules/node_modules/buffer/index.js","/Users/dylanmurray/Sweng-2022/front/node_modules/node_modules/events/events.js","/Users/dylanmurray/Sweng-2022/front/node_modules/node_modules/ieee754/index.js","/Users/dylanmurray/Sweng-2022/front/node_modules/node_modules/inherits/inherits_browser.js","/Users/dylanmurray/Sweng-2022/front/node_modules/node_modules/process/browser.js","/Users/dylanmurray/Sweng-2022/front/node_modules/node_modules/safe-buffer/index.js","/Users/dylanmurray/Sweng-2022/front/node_modules/node_modules/stream-browserify/index.js","/Users/dylanmurray/Sweng-2022/front/node_modules/node_modules/stream-browserify/node_modules/readable-stream/errors-browser.js","/Users/dylanmurray/Sweng-2022/front/node_modules/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_duplex.js","/Users/dylanmurray/Sweng-2022/front/node_modules/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_passthrough.js","/Users/dylanmurray/Sweng-2022/front/node_modules/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_readable.js","/Users/dylanmurray/Sweng-2022/front/node_modules/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_transform.js","/Users/dylanmurray/Sweng-2022/front/node_modules/node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_writable.js","/Users/dylanmurray/Sweng-2022/front/node_modules/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/async_iterator.js","/Users/dylanmurray/Sweng-2022/front/node_modules/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/buffer_list.js","/Users/dylanmurray/Sweng-2022/front/node_modules/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/destroy.js","/Users/dylanmurray/Sweng-2022/front/node_modules/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","/Users/dylanmurray/Sweng-2022/front/node_modules/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/from-browser.js","/Users/dylanmurray/Sweng-2022/front/node_modules/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/pipeline.js","/Users/dylanmurray/Sweng-2022/front/node_modules/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/state.js","/Users/dylanmurray/Sweng-2022/front/node_modules/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/stream-browser.js","/Users/dylanmurray/Sweng-2022/front/node_modules/node_modules/stream-browserify/node_modules/string_decoder/lib/string_decoder.js","/Users/dylanmurray/Sweng-2022/front/node_modules/node_modules/util-deprecate/browser.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\"use strict\";\n/**\n * @module botframework-streaming\n */\n/**\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PayloadAssembler = void 0;\nvar subscribableStream_1 = require(\"../subscribableStream\");\nvar payloads_1 = require(\"../payloads\");\nvar contentStream_1 = require(\"../contentStream\");\n/**\n * Assembles payloads for streaming library.\n *\n * @internal\n */\nvar PayloadAssembler = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the [PayloadAssembler](xref:botframework-streaming.PayloadAssembler) class.\n     *\n     * @param streamManager The [StreamManager](xref:botframework-streaming.StreamManager) managing the stream being assembled.\n     * @param params Parameters for a streaming assembler.\n     */\n    function PayloadAssembler(streamManager, params) {\n        this.streamManager = streamManager;\n        this._byteOrderMark = 0xfeff;\n        this._utf = 'utf8';\n        if (params.header) {\n            this.id = params.header.id;\n            this.payloadType = params.header.payloadType;\n            this.contentLength = params.header.payloadLength;\n            this.end = params.header.end;\n        }\n        else {\n            this.id = params.id;\n        }\n        if (!this.id) {\n            throw Error('An ID must be supplied when creating an assembler.');\n        }\n        this._onCompleted = params.onCompleted;\n    }\n    /**\n     * Retrieves the assembler's payload as a stream.\n     *\n     * @returns A [SubscribableStream](xref:botframework-streaming.SubscribableStream) of the assembler's payload.\n     */\n    PayloadAssembler.prototype.getPayloadStream = function () {\n        if (!this.stream) {\n            this.stream = this.createPayloadStream();\n        }\n        return this.stream;\n    };\n    /**\n     * The action the assembler executes when new bytes are received on the incoming stream.\n     *\n     * @param header The stream's Header.\n     * @param stream The incoming stream being assembled.\n     * @param _contentLength The length of the stream, if finite.\n     */\n    PayloadAssembler.prototype.onReceive = function (header, stream, _contentLength) {\n        this.end = header.end;\n        if (header.payloadType === payloads_1.PayloadTypes.response || header.payloadType === payloads_1.PayloadTypes.request) {\n            this.process(stream).then().catch();\n        }\n        else if (header.end) {\n            stream.end();\n        }\n    };\n    /**\n     * Closes the assembler.\n     */\n    PayloadAssembler.prototype.close = function () {\n        this.streamManager.closeStream(this.id);\n    };\n    /**\n     * Creates a new [SubscribableStream](xref:botframework-streaming.SubscribableStream) instance.\n     *\n     * @returns The new stream ready for consumption.\n     */\n    PayloadAssembler.prototype.createPayloadStream = function () {\n        return new subscribableStream_1.SubscribableStream();\n    };\n    PayloadAssembler.prototype.payloadFromJson = function (json) {\n        return JSON.parse(json.charCodeAt(0) === this._byteOrderMark ? json.slice(1) : json);\n    };\n    PayloadAssembler.prototype.stripBOM = function (input) {\n        return input.charCodeAt(0) === this._byteOrderMark ? input.slice(1) : input;\n    };\n    PayloadAssembler.prototype.process = function (stream) {\n        return __awaiter(this, void 0, void 0, function () {\n            var streamData, streamDataAsString;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        streamData = stream.read(stream.length);\n                        if (!streamData) {\n                            return [2 /*return*/];\n                        }\n                        streamDataAsString = streamData.toString(this._utf);\n                        if (!(this.payloadType === payloads_1.PayloadTypes.request)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.processRequest(streamDataAsString)];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 2:\n                        if (!(this.payloadType === payloads_1.PayloadTypes.response)) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.processResponse(streamDataAsString)];\n                    case 3:\n                        _a.sent();\n                        _a.label = 4;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    PayloadAssembler.prototype.processResponse = function (streamDataAsString) {\n        return __awaiter(this, void 0, void 0, function () {\n            var responsePayload, receiveResponse;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        responsePayload = this.payloadFromJson(this.stripBOM(streamDataAsString));\n                        receiveResponse = { streams: [], statusCode: responsePayload.statusCode };\n                        return [4 /*yield*/, this.processStreams(responsePayload, receiveResponse)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    PayloadAssembler.prototype.processRequest = function (streamDataAsString) {\n        return __awaiter(this, void 0, void 0, function () {\n            var requestPayload, receiveRequest;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        requestPayload = this.payloadFromJson(streamDataAsString);\n                        receiveRequest = { streams: [], path: requestPayload.path, verb: requestPayload.verb };\n                        return [4 /*yield*/, this.processStreams(requestPayload, receiveRequest)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    PayloadAssembler.prototype.processStreams = function (responsePayload, receiveResponse) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (responsePayload.streams) {\n                            responsePayload.streams.forEach(function (responseStream) {\n                                var contentAssembler = _this.streamManager.getPayloadAssembler(responseStream.id);\n                                contentAssembler.payloadType = responseStream.contentType;\n                                contentAssembler.contentLength = responseStream.length;\n                                receiveResponse.streams.push(new contentStream_1.ContentStream(responseStream.id, contentAssembler));\n                            });\n                        }\n                        return [4 /*yield*/, this._onCompleted(this.id, receiveResponse)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return PayloadAssembler;\n}());\nexports.PayloadAssembler = PayloadAssembler;\n//# sourceMappingURL=payloadAssembler.js.map","\"use strict\";\n/**\n * @module botframework-streaming\n */\n/**\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContentStream = void 0;\n/**\n * A stream of fixed or infinite length containing content to be decoded.\n */\nvar ContentStream = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the [ContentStream](xref:botframework-streaming.ContentStream) class.\n     *\n     * @param id The ID assigned to this instance.\n     * @param assembler The [PayloadAssembler](xref:botframework-streaming.PayloadAssembler) assigned to this instance.\n     */\n    function ContentStream(id, assembler) {\n        if (!assembler) {\n            throw Error('Null Argument Exception');\n        }\n        this.id = id;\n        this.assembler = assembler;\n    }\n    Object.defineProperty(ContentStream.prototype, \"contentType\", {\n        /**\n         * Gets the name of the type of the object contained within this [ContentStream](xref:botframework-streaming.ContentStream).\n         *\n         * @returns The [PayloadType](xref:botframework-streaming.PayloadType) of this [ContentStream](xref:botframework-streaming.ContentStream).\n         */\n        get: function () {\n            return this.assembler.payloadType;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ContentStream.prototype, \"length\", {\n        /**\n         * Gets the length of this [ContentStream](xref:botframework-streaming.ContentStream).\n         *\n         * @returns A number representing the length of this [ContentStream](xref:botframework-streaming.ContentStream).\n         */\n        get: function () {\n            return this.assembler.contentLength;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Gets the data contained within this [ContentStream](xref:botframework-streaming.ContentStream).\n     *\n     * @returns This [ContentStream's](xref:botframework-streaming.ContentStream) [SubscribableStream](xref:botframework-streaming.SubscribableStream).\n     */\n    ContentStream.prototype.getStream = function () {\n        if (!this.stream) {\n            this.stream = this.assembler.getPayloadStream();\n        }\n        return this.stream;\n    };\n    /**\n     * Closes the assembler.\n     */\n    ContentStream.prototype.cancel = function () {\n        this.assembler.close();\n    };\n    /**\n     * Gets the [SubscribableStream](xref:botframework-streaming.SubscribableStream) content as a string.\n     *\n     * @returns A string Promise with [SubscribableStream](xref:botframework-streaming.SubscribableStream) content.\n     */\n    ContentStream.prototype.readAsString = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var bufferArray;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.readAll()];\n                    case 1:\n                        bufferArray = (_a.sent()).bufferArray;\n                        return [2 /*return*/, (bufferArray || []).map(function (result) { return result.toString('utf8'); }).join('')];\n                }\n            });\n        });\n    };\n    /**\n     * Gets the [SubscribableStream](xref:botframework-streaming.SubscribableStream) content as a typed JSON object.\n     *\n     * @returns A typed object Promise with `SubscribableStream` content.\n     */\n    ContentStream.prototype.readAsJson = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var stringToParse;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.readAsString()];\n                    case 1:\n                        stringToParse = _a.sent();\n                        return [2 /*return*/, JSON.parse(stringToParse)];\n                }\n            });\n        });\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ContentStream.prototype.readAll = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var allData, count, stream, chunk, readToEnd;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        allData = [];\n                        count = 0;\n                        stream = this.getStream();\n                        // populate the array with any existing buffers\n                        while (count < stream.length) {\n                            chunk = stream.read(stream.length);\n                            allData.push(chunk);\n                            count += chunk.length;\n                        }\n                        if (!(count < this.length)) return [3 /*break*/, 2];\n                        readToEnd = new Promise(function (resolve) {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            var callback = function (cs) { return function (chunk) {\n                                allData.push(chunk);\n                                count += chunk.length;\n                                if (count === cs.length) {\n                                    resolve(true);\n                                }\n                            }; };\n                            stream.subscribe(callback(_this));\n                        });\n                        return [4 /*yield*/, readToEnd];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/, { bufferArray: allData, size: count }];\n                }\n            });\n        });\n    };\n    return ContentStream;\n}());\nexports.ContentStream = ContentStream;\n//# sourceMappingURL=contentStream.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancelDisassembler = void 0;\n/**\n * Streaming cancel disassembler.\n */\nvar CancelDisassembler = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the [CancelDisassembler](xref:botframework-streaming.CancelDisassembler) class.\n     *\n     * @param sender The [PayloadSender](xref:botframework-streaming.PayloadSender) that this Cancel request will be sent by.\n     * @param id The ID of the Stream to cancel.\n     * @param payloadType The type of the Stream that is being cancelled.\n     */\n    function CancelDisassembler(sender, id, payloadType) {\n        this.sender = sender;\n        this.id = id;\n        this.payloadType = payloadType;\n    }\n    /**\n     * Initiates the process of disassembling the request and signals the [PayloadSender](xref:botframework-streaming.PayloadSender) to begin sending.\n     */\n    CancelDisassembler.prototype.disassemble = function () {\n        var header = {\n            payloadType: this.payloadType,\n            payloadLength: 0,\n            id: this.id,\n            end: true,\n        };\n        this.sender.sendPayload(header);\n    };\n    return CancelDisassembler;\n}());\nexports.CancelDisassembler = CancelDisassembler;\n//# sourceMappingURL=cancelDisassembler.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpContentStreamDisassembler = void 0;\nvar payloadDisassembler_1 = require(\"./payloadDisassembler\");\nvar payloads_1 = require(\"../payloads\");\n/**\n * Disassembler for Http content stream\n */\nvar HttpContentStreamDisassembler = /** @class */ (function (_super) {\n    __extends(HttpContentStreamDisassembler, _super);\n    /**\n     * Initializes a new instance of the [HttpContentStreamDisassembler](xref:botframework-streaming.HttpContentStreamDisassembler) class.\n     *\n     * @param sender The [PayloadSender](xref:botframework-streaming.PayloadSender) to send the disassembled data to.\n     * @param contentStream The [HttpContentStream](xref:botframework-streaming.HttpContentStream) to be disassembled.\n     */\n    function HttpContentStreamDisassembler(sender, contentStream) {\n        var _this = _super.call(this, sender, contentStream.id) || this;\n        _this.payloadType = payloads_1.PayloadTypes.stream;\n        _this.contentStream = contentStream;\n        return _this;\n    }\n    /**\n     * Gets the stream this disassembler is operating on.\n     *\n     * @returns An [IStreamWrapper](xref:botframework-streaming.IStreamWrapper) with a Subscribable Strea.\n     */\n    HttpContentStreamDisassembler.prototype.getStream = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var stream;\n            return __generator(this, function (_a) {\n                stream = this.contentStream.content.getStream();\n                return [2 /*return*/, { stream: stream, streamLength: stream.length }];\n            });\n        });\n    };\n    return HttpContentStreamDisassembler;\n}(payloadDisassembler_1.PayloadDisassembler));\nexports.HttpContentStreamDisassembler = HttpContentStreamDisassembler;\n//# sourceMappingURL=httpContentStreamDisassembler.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PayloadDisassembler = void 0;\nvar subscribableStream_1 = require(\"../subscribableStream\");\n/**\n * Base class streaming payload disassembling.\n */\nvar PayloadDisassembler = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the [PayloadDisassembler](xref:botframework-streaming.PayloadDisassembler) class.\n     *\n     * @param sender The [PayloadSender](xref:botframework-streaming.PayloadSender) used to send the disassembled payload chunks.\n     * @param id The ID of this disassembler.\n     */\n    function PayloadDisassembler(sender, id) {\n        this.sender = sender;\n        this.id = id;\n    }\n    /**\n     * Serializes the item into the [IStreamWrapper](xref:botframework-streaming.IStreamWrapper) that exposes the stream and length of the result.\n     *\n     * @param item The item to be serialized.\n     * @returns The stream containing the serialized item and the length of the stream.\n     */\n    PayloadDisassembler.serialize = function (item) {\n        var stream = new subscribableStream_1.SubscribableStream();\n        stream.write(JSON.stringify(item));\n        stream.end();\n        return { stream: stream, streamLength: stream.length };\n    };\n    /**\n     * Begins the process of disassembling a payload and sending the resulting chunks to the [PayloadSender](xref:botframework-streaming.PayloadSender) to dispatch over the transport.\n     *\n     * @returns A completed Promise after the disassembled payload has been sent.\n     */\n    PayloadDisassembler.prototype.disassemble = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, stream, streamLength;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.getStream()];\n                    case 1:\n                        _a = _b.sent(), stream = _a.stream, streamLength = _a.streamLength;\n                        this.stream = stream;\n                        this.streamLength = streamLength;\n                        return [2 /*return*/, this.send()];\n                }\n            });\n        });\n    };\n    /**\n     * Begins the process of disassembling a payload and signals the [PayloadSender](xref:botframework-streaming.PayloadSender).\n     */\n    PayloadDisassembler.prototype.send = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var header;\n            return __generator(this, function (_a) {\n                header = {\n                    payloadType: this.payloadType,\n                    payloadLength: this.streamLength,\n                    id: this.id,\n                    end: true,\n                };\n                this.sender.sendPayload(header, this.stream);\n                return [2 /*return*/];\n            });\n        });\n    };\n    return PayloadDisassembler;\n}());\nexports.PayloadDisassembler = PayloadDisassembler;\n//# sourceMappingURL=payloadDisassembler.js.map","\"use strict\";\n/**\n * @module botframework-streaming\n */\n/**\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RequestDisassembler = void 0;\nvar payloadTypes_1 = require(\"../payloads/payloadTypes\");\nvar payloadDisassembler_1 = require(\"./payloadDisassembler\");\n/**\n * Streaming request disassembler.\n */\nvar RequestDisassembler = /** @class */ (function (_super) {\n    __extends(RequestDisassembler, _super);\n    /**\n     * Initializes a new instance of the [RequestDisassembler](xref:botframework-streaming.RequestDisassembler) class.\n     *\n     * @param sender The [PayloadSender](xref:botframework-streaming.PayloadSender) to send the disassembled data to.\n     * @param id The ID of this disassembler.\n     * @param request The request to be disassembled.\n     */\n    function RequestDisassembler(sender, id, request) {\n        var _this = _super.call(this, sender, id) || this;\n        _this.request = request;\n        _this.payloadType = payloadTypes_1.PayloadTypes.request;\n        return _this;\n    }\n    /**\n     * Gets the stream this disassembler is operating on.\n     *\n     * @returns An [IStreamWrapper](xref:botframework-streaming.IStreamWrapper) with a Subscribable Stream.\n     */\n    RequestDisassembler.prototype.getStream = function () {\n        var _a, _b, _c, _d;\n        return __awaiter(this, void 0, void 0, function () {\n            var payload;\n            return __generator(this, function (_e) {\n                payload = { verb: (_a = this.request) === null || _a === void 0 ? void 0 : _a.verb, path: (_b = this.request) === null || _b === void 0 ? void 0 : _b.path, streams: [] };\n                (_d = (_c = this.request) === null || _c === void 0 ? void 0 : _c.streams) === null || _d === void 0 ? void 0 : _d.forEach(function (stream) {\n                    payload.streams.push(stream.description);\n                });\n                return [2 /*return*/, payloadDisassembler_1.PayloadDisassembler.serialize(payload)];\n            });\n        });\n    };\n    return RequestDisassembler;\n}(payloadDisassembler_1.PayloadDisassembler));\nexports.RequestDisassembler = RequestDisassembler;\n//# sourceMappingURL=requestDisassembler.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ResponseDisassembler = void 0;\n/**\n * @module botframework-streaming\n */\n/**\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nvar payloadTypes_1 = require(\"../payloads/payloadTypes\");\nvar payloadDisassembler_1 = require(\"./payloadDisassembler\");\n/**\n * Streaming response disassembler.\n */\nvar ResponseDisassembler = /** @class */ (function (_super) {\n    __extends(ResponseDisassembler, _super);\n    /**\n     * Initializes a new instance of the [ResponseDisassembler](xref:botframework-streaming.ResponseDisassembler) class.\n     *\n     * @param sender The [PayloadSender](xref:botframework-streaming.PayloadSender) to send the disassembled data to.\n     * @param id The ID of this disassembler.\n     * @param response The response to be disassembled.\n     */\n    function ResponseDisassembler(sender, id, response) {\n        var _this = _super.call(this, sender, id) || this;\n        _this.payloadType = payloadTypes_1.PayloadTypes.response;\n        _this.response = response;\n        return _this;\n    }\n    /**\n     * Gets the stream this disassembler is operating on.\n     *\n     * @returns An [IStreamWrapper](xref:botframework-streaming.IStreamWrapper) with a Subscribable Stream.\n     */\n    ResponseDisassembler.prototype.getStream = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var payload;\n            return __generator(this, function (_a) {\n                payload = { statusCode: this.response.statusCode, streams: [] };\n                if (this.response.streams) {\n                    this.response.streams.forEach(function (stream) {\n                        payload.streams.push(stream.description);\n                    });\n                }\n                return [2 /*return*/, payloadDisassembler_1.PayloadDisassembler.serialize(payload)];\n            });\n        });\n    };\n    return ResponseDisassembler;\n}(payloadDisassembler_1.PayloadDisassembler));\nexports.ResponseDisassembler = ResponseDisassembler;\n//# sourceMappingURL=responseDisassembler.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpContent = exports.HttpContentStream = void 0;\n/**\n * @module botframework-streaming\n */\n/**\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nvar protocol_base_1 = require(\"./utilities/protocol-base\");\n/**\n * An attachment contained within a StreamingRequest's stream collection, which itself contains any form of media item.\n */\nvar HttpContentStream = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the [HttpContentStream](xref:botframework-streaming.HttpContentStream) class.\n     *\n     * @param content The [HttpContent](xref:botframework-streaming.HttpContent) to assign to the [HttpContentStream](xref:botframework-streaming.HttpContentStream).\n     */\n    function HttpContentStream(content) {\n        var _a, _b, _c, _d, _e, _f;\n        this.content = content;\n        this.id = protocol_base_1.generateGuid();\n        this.description = {\n            id: this.id,\n            type: (_c = (_b = (_a = this.content) === null || _a === void 0 ? void 0 : _a.headers) === null || _b === void 0 ? void 0 : _b.type) !== null && _c !== void 0 ? _c : 'unknown',\n            length: (_f = (_e = (_d = this.content) === null || _d === void 0 ? void 0 : _d.headers) === null || _e === void 0 ? void 0 : _e.contentLength) !== null && _f !== void 0 ? _f : 0,\n        };\n    }\n    return HttpContentStream;\n}());\nexports.HttpContentStream = HttpContentStream;\n/**\n * The HttpContent class that contains a [SubscribableStream](xref:botframework-streaming.SubscribableStream).\n */\nvar HttpContent = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the [HttpContent](xref:botframework-streaming.HttpContent) class.\n     *\n     * @param headers The Streaming Http content header definition.\n     * @param stream The stream of buffered data.\n     */\n    function HttpContent(headers, stream) {\n        this.headers = headers;\n        this.stream = stream;\n    }\n    /**\n     * Gets the data contained within this [HttpContent](xref:botframework-streaming.HttpContent).\n     *\n     * @returns This [HttpContent's](xref:botframework-streaming.HttpContent) [SubscribableStream](xref:botframework-streaming.SubscribableStream) member.\n     */\n    HttpContent.prototype.getStream = function () {\n        return this.stream;\n    };\n    return HttpContent;\n}());\nexports.HttpContent = HttpContent;\n//# sourceMappingURL=httpContentStream.js.map","\"use strict\";\n/**\n * @module botframework-streaming\n */\n/**\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebSocketClient = exports.BrowserWebSocket = exports.SubscribableStream = exports.StreamingResponse = exports.StreamingRequest = exports.RequestHandler = exports.HttpContent = exports.ContentStream = void 0;\nvar contentStream_1 = require(\"./contentStream\");\nObject.defineProperty(exports, \"ContentStream\", { enumerable: true, get: function () { return contentStream_1.ContentStream; } });\nvar httpContentStream_1 = require(\"./httpContentStream\");\nObject.defineProperty(exports, \"HttpContent\", { enumerable: true, get: function () { return httpContentStream_1.HttpContent; } });\nvar requestHandler_1 = require(\"./requestHandler\");\nObject.defineProperty(exports, \"RequestHandler\", { enumerable: true, get: function () { return requestHandler_1.RequestHandler; } });\nvar streamingRequest_1 = require(\"./streamingRequest\");\nObject.defineProperty(exports, \"StreamingRequest\", { enumerable: true, get: function () { return streamingRequest_1.StreamingRequest; } });\nvar streamingResponse_1 = require(\"./streamingResponse\");\nObject.defineProperty(exports, \"StreamingResponse\", { enumerable: true, get: function () { return streamingResponse_1.StreamingResponse; } });\nvar subscribableStream_1 = require(\"./subscribableStream\");\nObject.defineProperty(exports, \"SubscribableStream\", { enumerable: true, get: function () { return subscribableStream_1.SubscribableStream; } });\nvar index_browser_1 = require(\"./webSocket/index-browser\");\nObject.defineProperty(exports, \"BrowserWebSocket\", { enumerable: true, get: function () { return index_browser_1.BrowserWebSocket; } });\nObject.defineProperty(exports, \"WebSocketClient\", { enumerable: true, get: function () { return index_browser_1.WebSocketClient; } });\n//# sourceMappingURL=index-browser.js.map","\"use strict\";\n/**\n * @module botframework-streaming\n */\n/**\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./payloadReceiver\"), exports);\n__exportStar(require(\"./payloadSender\"), exports);\n__exportStar(require(\"./transportDisconnectedEvent\"), exports);\n__exportStar(require(\"./transportDisconnectedEventHandler\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PayloadReceiver = void 0;\nvar payloadTypes_1 = require(\"../payloads/payloadTypes\");\nvar headerSerializer_1 = require(\"../payloads/headerSerializer\");\nvar payloadConstants_1 = require(\"../payloads/payloadConstants\");\nvar transportDisconnectedEvent_1 = require(\"./transportDisconnectedEvent\");\n/**\n * Payload receiver for streaming.\n */\nvar PayloadReceiver = /** @class */ (function () {\n    function PayloadReceiver() {\n    }\n    Object.defineProperty(PayloadReceiver.prototype, \"isConnected\", {\n        /**\n         * Get current connected state\n         *\n         * @returns true if connected to a transport sender.\n         */\n        get: function () {\n            return this._receiver != null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Connects to a transport receiver\n     *\n     * @param receiver The [ITransportReceiver](xref:botframework-streaming.ITransportReceiver) object to pull incoming data from.\n     * @returns a promise that resolves when the receiver is complete\n     */\n    PayloadReceiver.prototype.connect = function (receiver) {\n        this._receiver = receiver;\n        return this.receivePackets();\n    };\n    /**\n     * Allows subscribing to this receiver in order to be notified when new data comes in.\n     *\n     * @param getStream Callback when a new stream has been received.\n     * @param receiveAction Callback when a new message has been received.\n     */\n    PayloadReceiver.prototype.subscribe = function (getStream, receiveAction) {\n        this._getStream = getStream;\n        this._receiveAction = receiveAction;\n    };\n    /**\n     * Force this receiver to disconnect.\n     *\n     * @param event Event arguments to include when broadcasting disconnection event.\n     */\n    PayloadReceiver.prototype.disconnect = function (event) {\n        var _a, _b;\n        if (event === void 0) { event = transportDisconnectedEvent_1.TransportDisconnectedEvent.Empty; }\n        if (!this.isConnected) {\n            return;\n        }\n        try {\n            this._receiver.close();\n            (_a = this.disconnected) === null || _a === void 0 ? void 0 : _a.call(this, this, event);\n        }\n        catch (err) {\n            (_b = this.disconnected) === null || _b === void 0 ? void 0 : _b.call(this, this, new transportDisconnectedEvent_1.TransportDisconnectedEvent(err.message));\n        }\n        finally {\n            this._receiver = null;\n        }\n    };\n    PayloadReceiver.prototype.receivePackets = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var readSoFar, _a, header, isStream, bytesActuallyRead, contentStream, count, _b, err_1;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        if (!this.isConnected) return [3 /*break*/, 11];\n                        _c.label = 1;\n                    case 1:\n                        _c.trys.push([1, 9, , 10]);\n                        readSoFar = 0;\n                        _c.label = 2;\n                    case 2:\n                        if (!(readSoFar < payloadConstants_1.PayloadConstants.MaxHeaderLength)) return [3 /*break*/, 4];\n                        _a = this;\n                        return [4 /*yield*/, this._receiver.receive(payloadConstants_1.PayloadConstants.MaxHeaderLength - readSoFar)];\n                    case 3:\n                        _a._receiveHeaderBuffer = _c.sent();\n                        if (this._receiveHeaderBuffer) {\n                            readSoFar += this._receiveHeaderBuffer.length;\n                        }\n                        return [3 /*break*/, 2];\n                    case 4:\n                        header = headerSerializer_1.HeaderSerializer.deserialize(this._receiveHeaderBuffer);\n                        isStream = header.payloadType === payloadTypes_1.PayloadTypes.stream;\n                        if (!(header.payloadLength > 0)) return [3 /*break*/, 8];\n                        bytesActuallyRead = 0;\n                        contentStream = this._getStream(header);\n                        _c.label = 5;\n                    case 5:\n                        if (!(bytesActuallyRead < header.payloadLength &&\n                            bytesActuallyRead < payloadConstants_1.PayloadConstants.MaxPayloadLength)) return [3 /*break*/, 7];\n                        count = Math.min(header.payloadLength - bytesActuallyRead, payloadConstants_1.PayloadConstants.MaxPayloadLength);\n                        _b = this;\n                        return [4 /*yield*/, this._receiver.receive(count)];\n                    case 6:\n                        _b._receivePayloadBuffer = _c.sent();\n                        bytesActuallyRead += this._receivePayloadBuffer.byteLength;\n                        contentStream.write(this._receivePayloadBuffer);\n                        // If this is a stream we want to keep handing it up as it comes in\n                        if (isStream) {\n                            this._receiveAction(header, contentStream, bytesActuallyRead);\n                        }\n                        return [3 /*break*/, 5];\n                    case 7:\n                        if (!isStream) {\n                            this._receiveAction(header, contentStream, bytesActuallyRead);\n                        }\n                        _c.label = 8;\n                    case 8: return [3 /*break*/, 10];\n                    case 9:\n                        err_1 = _c.sent();\n                        this.disconnect(new transportDisconnectedEvent_1.TransportDisconnectedEvent(err_1.message));\n                        return [3 /*break*/, 10];\n                    case 10: return [3 /*break*/, 0];\n                    case 11: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return PayloadReceiver;\n}());\nexports.PayloadReceiver = PayloadReceiver;\n//# sourceMappingURL=payloadReceiver.js.map","\"use strict\";\n/**\n * @module botframework-streaming\n */\n/**\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PayloadSender = void 0;\nvar headerSerializer_1 = require(\"../payloads/headerSerializer\");\nvar payloadConstants_1 = require(\"../payloads/payloadConstants\");\nvar transportDisconnectedEvent_1 = require(\"./transportDisconnectedEvent\");\n/**\n * Streaming payload sender.\n */\nvar PayloadSender = /** @class */ (function () {\n    function PayloadSender() {\n    }\n    Object.defineProperty(PayloadSender.prototype, \"isConnected\", {\n        /**\n         * Get current connected state\n         *\n         * @returns true if connected to a transport sender.\n         */\n        get: function () {\n            return this._sender != null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Connects to the given transport sender.\n     *\n     * @param sender The transport sender to connect this payload sender to.\n     */\n    PayloadSender.prototype.connect = function (sender) {\n        this._sender = sender;\n    };\n    /**\n     * Sends a payload out over the connected transport sender.\n     *\n     * @param header The header to attach to the outgoing payload.\n     * @param payload The stream of buffered data to send.\n     * @param sentCallback The function to execute when the send has completed.\n     */\n    PayloadSender.prototype.sendPayload = function (header, payload, sentCallback) {\n        var packet = { header: header, payload: payload, sentCallback: sentCallback };\n        this.writePacket(packet);\n    };\n    /**\n     * Disconnects this payload sender.\n     *\n     * @param event The disconnected event arguments to include in the disconnected event broadcast.\n     */\n    PayloadSender.prototype.disconnect = function (event) {\n        var _a, _b;\n        if (event === void 0) { event = transportDisconnectedEvent_1.TransportDisconnectedEvent.Empty; }\n        if (!this.isConnected) {\n            return;\n        }\n        try {\n            this._sender.close();\n            (_a = this.disconnected) === null || _a === void 0 ? void 0 : _a.call(this, this, event);\n        }\n        catch (err) {\n            (_b = this.disconnected) === null || _b === void 0 ? void 0 : _b.call(this, this, new transportDisconnectedEvent_1.TransportDisconnectedEvent(err.message));\n        }\n        finally {\n            this._sender = null;\n        }\n    };\n    PayloadSender.prototype.writePacket = function (packet) {\n        try {\n            if (packet.header.payloadLength > 0 && packet.payload) {\n                var leftOver = packet.header.payloadLength;\n                while (leftOver > 0) {\n                    var count = leftOver <= payloadConstants_1.PayloadConstants.MaxPayloadLength ? leftOver : payloadConstants_1.PayloadConstants.MaxPayloadLength;\n                    var chunk = packet.payload.read(count);\n                    var header = packet.header;\n                    header.payloadLength = count;\n                    header.end = leftOver <= payloadConstants_1.PayloadConstants.MaxPayloadLength;\n                    var sendHeaderBuffer = Buffer.alloc(payloadConstants_1.PayloadConstants.MaxHeaderLength);\n                    headerSerializer_1.HeaderSerializer.serialize(header, sendHeaderBuffer);\n                    this._sender.send(sendHeaderBuffer);\n                    this._sender.send(chunk);\n                    leftOver -= chunk.length;\n                }\n                if (packet.sentCallback) {\n                    packet.sentCallback();\n                }\n            }\n        }\n        catch (err) {\n            this.disconnect(new transportDisconnectedEvent_1.TransportDisconnectedEvent(err.message));\n        }\n    };\n    return PayloadSender;\n}());\nexports.PayloadSender = PayloadSender;\n//# sourceMappingURL=payloadSender.js.map","\"use strict\";\n/**\n * @module botframework-streaming\n */\n/**\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TransportDisconnectedEvent = void 0;\n/**\n * Event to be included when disconnection events are fired.\n */\nvar TransportDisconnectedEvent = /** @class */ (function () {\n    /**\n     * Indicates a transport disconnected with the reason provided via the constructor.\n     *\n     * @remarks\n     * This class is used for communicating disconnection events between the\n     * PayloadReceiver and PayloadSender.\n     * @param reason The reason the disconnection event fired, in plain text.\n     */\n    function TransportDisconnectedEvent(reason) {\n        this.reason = reason;\n    }\n    /**\n     * A new and empty TransportDisconnectedEvent.\n     */\n    TransportDisconnectedEvent.Empty = new TransportDisconnectedEvent();\n    return TransportDisconnectedEvent;\n}());\nexports.TransportDisconnectedEvent = TransportDisconnectedEvent;\n//# sourceMappingURL=transportDisconnectedEvent.js.map","\"use strict\";\n/**\n * @module botframework-streaming\n */\n/**\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=transportDisconnectedEventHandler.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HeaderSerializer = void 0;\nvar payloadConstants_1 = require(\"./payloadConstants\");\n/**\n * Streaming header serializer\n */\nvar HeaderSerializer = /** @class */ (function () {\n    function HeaderSerializer() {\n    }\n    /**\n     * Serializes the header into a buffer\n     *\n     * @param header The header to serialize.\n     * @param buffer The buffer into which to serialize the header.\n     */\n    HeaderSerializer.serialize = function (header, buffer) {\n        buffer.write(header.payloadType, this.TypeOffset, 1, this.Encoding);\n        buffer.write(this.Delimiter, this.TypeDelimiterOffset, 1, this.Encoding);\n        buffer.write(this.headerLengthPadder(header.payloadLength, this.LengthLength, '0'), this.LengthOffset, this.LengthLength, this.Encoding);\n        buffer.write(this.Delimiter, this.LengthDelimeterOffset, 1, this.Encoding);\n        buffer.write(header.id, this.IdOffset);\n        buffer.write(this.Delimiter, this.IdDelimeterOffset, 1, this.Encoding);\n        buffer.write(header.end ? this.End : this.NotEnd, this.EndOffset);\n        buffer.write(this.Terminator, this.TerminatorOffset);\n    };\n    /**\n     * Deserializes a buffer containing header information.\n     *\n     * @param buffer The buffer from which to obtain the data to deserialize.\n     * @returns The deserialized header from the buffer.\n     */\n    HeaderSerializer.deserialize = function (buffer) {\n        var jsonBuffer = buffer.toString(this.Encoding);\n        var headerArray = jsonBuffer.split(this.Delimiter);\n        if (headerArray.length !== 4) {\n            throw Error(\"Cannot parse header, header is malformed. Header: \" + jsonBuffer);\n        }\n        var payloadType = headerArray[0], length = headerArray[1], id = headerArray[2], headerEnd = headerArray[3];\n        var end = headerEnd === '1\\n';\n        var payloadLength = Number(length);\n        var header = { end: end, payloadLength: payloadLength, payloadType: payloadType, id: id };\n        if (!(header.payloadLength <= payloadConstants_1.PayloadConstants.MaxPayloadLength &&\n            header.payloadLength >= payloadConstants_1.PayloadConstants.MinLength)) {\n            throw Error(\"Header length of \" + header.payloadLength + \" is missing or malformed\");\n        }\n        if (header.payloadType.length !== this.TypeDelimiterOffset) {\n            throw Error(\"Header type '\" + header.payloadType.length + \"' is missing or malformed.\");\n        }\n        if (!header.id ||\n            !header.id.match(/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i) ||\n            header.id.length !== this.IdLength) {\n            throw Error(\"Header ID '\" + header.id + \"' is missing or malformed.\");\n        }\n        if (!(headerEnd === '0\\n' || headerEnd === '1\\n')) {\n            throw Error(\"Header End is missing or not a valid value. Header end: '\" + headerEnd + \"'\");\n        }\n        return header;\n    };\n    /**\n     * Creates a padded string based on a length and character to be padded to.\n     *\n     * @param lengthValue The value to be assingned on the result.\n     * @param totalLength The length of the padded string result.\n     * @param padChar The character value to use as filling.\n     * @returns The padded string.\n     */\n    HeaderSerializer.headerLengthPadder = function (lengthValue, totalLength, padChar) {\n        var result = Array(totalLength + 1).join(padChar);\n        var lengthString = lengthValue.toString();\n        return (result + lengthString).slice(lengthString.length);\n    };\n    HeaderSerializer.Delimiter = '.';\n    HeaderSerializer.Terminator = '\\n';\n    HeaderSerializer.End = '1';\n    HeaderSerializer.NotEnd = '0';\n    HeaderSerializer.TypeOffset = 0;\n    HeaderSerializer.TypeDelimiterOffset = 1;\n    HeaderSerializer.LengthOffset = 2;\n    HeaderSerializer.LengthLength = 6;\n    HeaderSerializer.LengthDelimeterOffset = 8;\n    HeaderSerializer.IdOffset = 9;\n    HeaderSerializer.IdLength = 36;\n    HeaderSerializer.IdDelimeterOffset = 45;\n    HeaderSerializer.EndOffset = 46;\n    HeaderSerializer.TerminatorOffset = 47;\n    HeaderSerializer.Encoding = 'utf8';\n    return HeaderSerializer;\n}());\nexports.HeaderSerializer = HeaderSerializer;\n//# sourceMappingURL=headerSerializer.js.map","\"use strict\";\n/**\n * @module botframework-streaming\n */\n/**\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./headerSerializer\"), exports);\n__exportStar(require(\"./streamManager\"), exports);\n__exportStar(require(\"./payloadAssemblerManager\"), exports);\n__exportStar(require(\"./payloadTypes\"), exports);\n__exportStar(require(\"./requestManager\"), exports);\n__exportStar(require(\"./sendOperations\"), exports);\n__exportStar(require(\"./streamManager\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PayloadAssemblerManager = void 0;\nvar payloadAssembler_1 = require(\"../assemblers/payloadAssembler\");\nvar payloadTypes_1 = require(\"./payloadTypes\");\n/**\n * Orchestrates assembly of payloads.\n */\nvar PayloadAssemblerManager = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the [PayloadAssemblerManager](xref:botframework-streaming.PayloadAssemblerManager) class.\n     *\n     * @param streamManager The [StreamManager](xref:botframework-streaming.StreamManager) managing the stream being assembled.\n     * @param onReceiveResponse Function that executes when new bytes are received on a `response` stream.\n     * @param onReceiveRequest Function that executes when new bytes are received on a `request` stream.\n     */\n    function PayloadAssemblerManager(streamManager, onReceiveResponse, onReceiveRequest) {\n        this.streamManager = streamManager;\n        this.onReceiveResponse = onReceiveResponse;\n        this.onReceiveRequest = onReceiveRequest;\n        this.activeAssemblers = {};\n    }\n    /**\n     * Retrieves the assembler's payload as a stream.\n     *\n     * @param header The Header of the Stream to retrieve.\n     * @returns A [SubscribableStream](xref:botframework-streaming.SubscribableStream) of the assembler's payload.\n     */\n    PayloadAssemblerManager.prototype.getPayloadStream = function (header) {\n        if (header.payloadType === payloadTypes_1.PayloadTypes.stream) {\n            return this.streamManager.getPayloadStream(header);\n        }\n        else if (!this.activeAssemblers[header.id]) {\n            var assembler = this.createPayloadAssembler(header);\n            if (assembler) {\n                this.activeAssemblers[header.id] = assembler;\n                return assembler.getPayloadStream();\n            }\n        }\n    };\n    /**\n     * The action the assembler executes when new bytes are received on the incoming stream.\n     *\n     * @param header The stream's Header.\n     * @param contentStream The incoming stream being assembled.\n     * @param contentLength The length of the stream, if finite.\n     */\n    PayloadAssemblerManager.prototype.onReceive = function (header, contentStream, contentLength) {\n        if (header.payloadType === payloadTypes_1.PayloadTypes.stream) {\n            this.streamManager.onReceive(header, contentStream, contentLength);\n        }\n        else {\n            if (this.activeAssemblers && this.activeAssemblers[header.id]) {\n                var assembler = this.activeAssemblers[header.id];\n                assembler.onReceive(header, contentStream, contentLength);\n            }\n            if (header.end) {\n                delete this.activeAssemblers[header.id];\n            }\n        }\n    };\n    PayloadAssemblerManager.prototype.createPayloadAssembler = function (header) {\n        if (header.payloadType === payloadTypes_1.PayloadTypes.request) {\n            return new payloadAssembler_1.PayloadAssembler(this.streamManager, {\n                header: header,\n                onCompleted: this.onReceiveRequest,\n            });\n        }\n        else if (header.payloadType === payloadTypes_1.PayloadTypes.response) {\n            return new payloadAssembler_1.PayloadAssembler(this.streamManager, {\n                header: header,\n                onCompleted: this.onReceiveResponse,\n            });\n        }\n    };\n    return PayloadAssemblerManager;\n}());\nexports.PayloadAssemblerManager = PayloadAssemblerManager;\n//# sourceMappingURL=payloadAssemblerManager.js.map","\"use strict\";\n/**\n * @module botframework-streaming\n */\n/**\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PayloadConstants = void 0;\n/**\n * Constants for streaming payloads.\n */\nvar PayloadConstants;\n(function (PayloadConstants) {\n    PayloadConstants[PayloadConstants[\"MaxPayloadLength\"] = 4096] = \"MaxPayloadLength\";\n    PayloadConstants[PayloadConstants[\"MaxHeaderLength\"] = 48] = \"MaxHeaderLength\";\n    PayloadConstants[PayloadConstants[\"MaxLength\"] = 999999] = \"MaxLength\";\n    PayloadConstants[PayloadConstants[\"MinLength\"] = 0] = \"MinLength\";\n})(PayloadConstants = exports.PayloadConstants || (exports.PayloadConstants = {}));\n//# sourceMappingURL=payloadConstants.js.map","\"use strict\";\n/**\n * @module botframework-streaming\n */\n/**\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PayloadTypes = void 0;\n/**\n * Typess of payloads supported in the streaming library.\n */\nvar PayloadTypes;\n(function (PayloadTypes) {\n    PayloadTypes[\"request\"] = \"A\";\n    PayloadTypes[\"response\"] = \"B\";\n    PayloadTypes[\"stream\"] = \"S\";\n    PayloadTypes[\"cancelAll\"] = \"X\";\n    PayloadTypes[\"cancelStream\"] = \"C\";\n})(PayloadTypes = exports.PayloadTypes || (exports.PayloadTypes = {}));\n//# sourceMappingURL=payloadTypes.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RequestManager = void 0;\n/**\n * A streaming pending request.\n */\nvar PendingRequest = /** @class */ (function () {\n    function PendingRequest() {\n    }\n    return PendingRequest;\n}());\n/**\n * Orchestrates and manages pending streaming requests.\n */\nvar RequestManager = /** @class */ (function () {\n    function RequestManager() {\n        this._pendingRequests = {};\n    }\n    /**\n     * Gets the count of the pending requests.\n     *\n     * @returns Number with the pending requests count.\n     */\n    RequestManager.prototype.pendingRequestCount = function () {\n        return Object.keys(this._pendingRequests).length;\n    };\n    /**\n     * Signal fired when all response tasks have completed.\n     *\n     * @param requestId The ID of the StreamingRequest.\n     * @param response The [IReceiveResponse](xref:botframework-streaming.IReceiveResponse) in response to the request.\n     * @returns A Promise that when completed returns `true` if the `requestId`'s pending response task was completed, otherwise `false`.\n     */\n    RequestManager.prototype.signalResponse = function (requestId, response) {\n        return __awaiter(this, void 0, void 0, function () {\n            var pendingRequest;\n            return __generator(this, function (_a) {\n                pendingRequest = this._pendingRequests[requestId];\n                if (pendingRequest) {\n                    pendingRequest.resolve(response);\n                    delete this._pendingRequests[requestId];\n                    return [2 /*return*/, true];\n                }\n                return [2 /*return*/, false];\n            });\n        });\n    };\n    /**\n     * Constructs and returns a response for this request.\n     *\n     * @param requestId The ID of the StreamingRequest being responded to.\n     * @returns The response to the specified request.\n     */\n    RequestManager.prototype.getResponse = function (requestId) {\n        var pendingRequest = this._pendingRequests[requestId];\n        if (pendingRequest) {\n            return Promise.reject(\"requestId '\" + requestId + \"' already exists in RequestManager\");\n        }\n        pendingRequest = new PendingRequest();\n        pendingRequest.requestId = requestId;\n        var promise = new Promise(function (resolve, reject) {\n            pendingRequest.resolve = resolve;\n            pendingRequest.reject = reject;\n        });\n        this._pendingRequests[requestId] = pendingRequest;\n        return promise;\n    };\n    return RequestManager;\n}());\nexports.RequestManager = RequestManager;\n//# sourceMappingURL=requestManager.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SendOperations = void 0;\nvar cancelDisassembler_1 = require(\"../disassemblers/cancelDisassembler\");\nvar httpContentStreamDisassembler_1 = require(\"../disassemblers/httpContentStreamDisassembler\");\nvar requestDisassembler_1 = require(\"../disassemblers/requestDisassembler\");\nvar responseDisassembler_1 = require(\"../disassemblers/responseDisassembler\");\nvar payloadTypes_1 = require(\"./payloadTypes\");\n/**\n * Send operations for streaming payloads.\n */\nvar SendOperations = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the [SendOperations](xref:botframework-streaming.SendOperations) class.\n     *\n     * @param payloadSender The [PayloadSender](xref:botframework-streaming.PayloadSender) that will send the disassembled data from all of this instance's send operations.\n     */\n    function SendOperations(payloadSender) {\n        this.payloadSender = payloadSender;\n    }\n    /**\n     * The send operation used to send a [StreamingRequest](xref:botframework-streaming.StreamingRequest).\n     *\n     * @param id The ID to assign to the [RequestDisassembler](xref:botframework-streaming.RequestDisassembler) used by this operation.\n     * @param request The request to send.\n     */\n    SendOperations.prototype.sendRequest = function (id, request) {\n        return __awaiter(this, void 0, void 0, function () {\n            var disassembler;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        disassembler = new requestDisassembler_1.RequestDisassembler(this.payloadSender, id, request);\n                        return [4 /*yield*/, disassembler.disassemble()];\n                    case 1:\n                        _a.sent();\n                        if (request.streams) {\n                            request.streams.forEach(function (contentStream) { return __awaiter(_this, void 0, void 0, function () {\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0: return [4 /*yield*/, new httpContentStreamDisassembler_1.HttpContentStreamDisassembler(this.payloadSender, contentStream).disassemble()];\n                                        case 1:\n                                            _a.sent();\n                                            return [2 /*return*/];\n                                    }\n                                });\n                            }); });\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * The send operation used to send a [PayloadTypes.response](xref:botframework-streaming.PayloadTypes.response).\n     *\n     * @param id The ID to assign to the [ResponseDisassembler](xref:botframework-streaming.ResponseDisassembler) used by this operation.\n     * @param response The response to send.\n     */\n    SendOperations.prototype.sendResponse = function (id, response) {\n        return __awaiter(this, void 0, void 0, function () {\n            var disassembler;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        disassembler = new responseDisassembler_1.ResponseDisassembler(this.payloadSender, id, response);\n                        return [4 /*yield*/, disassembler.disassemble()];\n                    case 1:\n                        _a.sent();\n                        if (response.streams) {\n                            response.streams.forEach(function (contentStream) { return __awaiter(_this, void 0, void 0, function () {\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0: return [4 /*yield*/, new httpContentStreamDisassembler_1.HttpContentStreamDisassembler(this.payloadSender, contentStream).disassemble()];\n                                        case 1:\n                                            _a.sent();\n                                            return [2 /*return*/];\n                                    }\n                                });\n                            }); });\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * The send operation used to send a [PayloadTypes.cancelStream](xref:botframework-streaming.PayloadTypes.cancelStream).\n     *\n     * @param id The ID to assign to the [CancelDisassembler](xref:botframework-streaming.CancelDisassembler) used by this operation.\n     */\n    SendOperations.prototype.sendCancelStream = function (id) {\n        return __awaiter(this, void 0, void 0, function () {\n            var disassembler;\n            return __generator(this, function (_a) {\n                disassembler = new cancelDisassembler_1.CancelDisassembler(this.payloadSender, id, payloadTypes_1.PayloadTypes.cancelStream);\n                disassembler.disassemble();\n                return [2 /*return*/];\n            });\n        });\n    };\n    return SendOperations;\n}());\nexports.SendOperations = SendOperations;\n//# sourceMappingURL=sendOperations.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StreamManager = void 0;\nvar payloadAssembler_1 = require(\"../assemblers/payloadAssembler\");\n/**\n * Orchestrates and manages streams.\n */\nvar StreamManager = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the [StreamManager](xref:botframework-streaming.StreamManager) class.\n     *\n     * @param onCancelStream Function to trigger if the managed stream is cancelled.\n     */\n    function StreamManager(onCancelStream) {\n        this.onCancelStream = onCancelStream;\n        this.activeAssemblers = [];\n    }\n    /**\n     * Retrieves a [PayloadAssembler](xref:botframework-streaming.PayloadAssembler) with the given ID if one exists, otherwise a new instance is created and assigned the given ID.\n     *\n     * @param id The ID of the [PayloadAssembler](xref:botframework-streaming.PayloadAssembler) to retrieve or create.\n     * @returns The [PayloadAssembler](xref:botframework-streaming.PayloadAssembler) with the given ID.\n     */\n    StreamManager.prototype.getPayloadAssembler = function (id) {\n        if (!this.activeAssemblers[id]) {\n            // A new id has come in, kick off the process of tracking it.\n            var assembler = new payloadAssembler_1.PayloadAssembler(this, { id: id });\n            this.activeAssemblers[id] = assembler;\n            return assembler;\n        }\n        else {\n            return this.activeAssemblers[id];\n        }\n    };\n    /**\n     * Retrieves the [SubscribableStream](xref:botframework-streaming.SubscribableStream) from the [PayloadAssembler](xref:botframework-streaming.PayloadAssembler) this manager manages.\n     *\n     * @param header The Header of the [SubscribableStream](xref:botframework-streaming.SubscribableStream) to retrieve.\n     * @returns The [SubscribableStream](xref:botframework-streaming.SubscribableStream) with the given header.\n     */\n    StreamManager.prototype.getPayloadStream = function (header) {\n        var assembler = this.getPayloadAssembler(header.id);\n        return assembler.getPayloadStream();\n    };\n    /**\n     * Used to set the behavior of the managed [PayloadAssembler](xref:botframework-streaming.PayloadAssembler) when data is received.\n     *\n     * @param header The Header of the stream.\n     * @param contentStream The [SubscribableStream](xref:botframework-streaming.SubscribableStream) to write incoming data to.\n     * @param contentLength The amount of data to write to the contentStream.\n     */\n    StreamManager.prototype.onReceive = function (header, contentStream, contentLength) {\n        if (!this.activeAssemblers[header.id]) {\n            return;\n        }\n        this.activeAssemblers[header.id].onReceive(header, contentStream, contentLength);\n    };\n    /**\n     * Closes the [PayloadAssembler](xref:botframework-streaming.PayloadAssembler) assigned to the [SubscribableStream](xref:botframework-streaming.SubscribableStream) with the given ID.\n     *\n     * @param id The ID of the [SubscribableStream](xref:botframework-streaming.SubscribableStream) to close.\n     */\n    StreamManager.prototype.closeStream = function (id) {\n        if (!this.activeAssemblers[id]) {\n            return;\n        }\n        else {\n            var assembler = this.activeAssemblers[id];\n            this.activeAssemblers.splice(this.activeAssemblers.indexOf(id), 1);\n            var targetStream = assembler.getPayloadStream();\n            if ((assembler.contentLength && targetStream.length < assembler.contentLength) || !assembler.end) {\n                this.onCancelStream(assembler);\n            }\n        }\n    };\n    return StreamManager;\n}());\nexports.StreamManager = StreamManager;\n//# sourceMappingURL=streamManager.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProtocolAdapter = void 0;\nvar payloadAssemblerManager_1 = require(\"./payloads/payloadAssemblerManager\");\nvar sendOperations_1 = require(\"./payloads/sendOperations\");\nvar streamManager_1 = require(\"./payloads/streamManager\");\nvar protocol_base_1 = require(\"./utilities/protocol-base\");\n/**\n * Creates a protocol adapter for Streaming.\n */\nvar ProtocolAdapter = /** @class */ (function () {\n    /**\n     * Creates a new instance of the protocol adapter class.\n     *\n     * @param requestHandler The [RequestHandler](xref:botframework-streaming.RequestHandler) that will process incoming requests.\n     * @param requestManager The [RequestManager](xref:botframework-streaming.RequestManager) that will process outgoing requests.\n     * @param sender The [PayloadSender](xref:botframework-streaming.PayloadSender) for use with outgoing requests.\n     * @param receiver The [PayloadReceiver](xref:botframework-streaming.PayloadReceiver) for use with incoming requests.\n     */\n    function ProtocolAdapter(requestHandler, requestManager, sender, receiver) {\n        var _this = this;\n        this.requestHandler = requestHandler;\n        this.requestManager = requestManager;\n        this.payloadSender = sender;\n        this.payloadReceiver = receiver;\n        this.sendOperations = new sendOperations_1.SendOperations(this.payloadSender);\n        this.streamManager = new streamManager_1.StreamManager(this.onCancelStream);\n        this.assemblerManager = new payloadAssemblerManager_1.PayloadAssemblerManager(this.streamManager, function (id, response) { return _this.onReceiveResponse(id, response); }, function (id, request) { return _this.onReceiveRequest(id, request); });\n        this.payloadReceiver.subscribe(function (header) { return _this.assemblerManager.getPayloadStream(header); }, function (header, contentStream, contentLength) {\n            return _this.assemblerManager.onReceive(header, contentStream, contentLength);\n        });\n    }\n    /**\n     * Sends a request over the attached request manager.\n     *\n     * @param request The outgoing request to send.\n     * @returns The response to the specified request.\n     */\n    ProtocolAdapter.prototype.sendRequest = function (request) {\n        return __awaiter(this, void 0, void 0, function () {\n            var requestId;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        requestId = protocol_base_1.generateGuid();\n                        return [4 /*yield*/, this.sendOperations.sendRequest(requestId, request)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, this.requestManager.getResponse(requestId)];\n                }\n            });\n        });\n    };\n    /**\n     * Executes the receive pipeline when a request comes in.\n     *\n     * @param id The id the resources created for the response will be assigned.\n     * @param request The incoming request to process.\n     */\n    ProtocolAdapter.prototype.onReceiveRequest = function (id, request) {\n        return __awaiter(this, void 0, void 0, function () {\n            var response;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.requestHandler) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.requestHandler.processRequest(request)];\n                    case 1:\n                        response = _a.sent();\n                        if (!response) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.sendOperations.sendResponse(id, response)];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Executes the receive pipeline when a response comes in.\n     *\n     * @param id The id the resources created for the response will be assigned.\n     * @param response The incoming response to process.\n     */\n    ProtocolAdapter.prototype.onReceiveResponse = function (id, response) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.requestManager.signalResponse(id, response)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Executes the receive pipeline when a cancellation comes in.\n     *\n     * @param contentStreamAssembler The payload assembler processing the incoming data that this cancellation request targets.\n     */\n    ProtocolAdapter.prototype.onCancelStream = function (contentStreamAssembler) {\n        this.sendOperations.sendCancelStream(contentStreamAssembler.id).catch();\n    };\n    return ProtocolAdapter;\n}());\nexports.ProtocolAdapter = ProtocolAdapter;\n//# sourceMappingURL=protocolAdapter.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RequestHandler = void 0;\n/**\n * Implemented by classes used to process incoming streaming requests sent over an [IStreamingTransport](xref:botframework-streaming.IStreamingTransport).\n */\nvar RequestHandler = /** @class */ (function () {\n    function RequestHandler() {\n    }\n    return RequestHandler;\n}());\nexports.RequestHandler = RequestHandler;\n//# sourceMappingURL=requestHandler.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StreamingRequest = void 0;\n/**\n * @module botframework-streaming\n */\n/**\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nvar httpContentStream_1 = require(\"./httpContentStream\");\nvar subscribableStream_1 = require(\"./subscribableStream\");\n/**\n * The basic request type sent over Bot Framework Protocol 3 with Streaming Extensions transports, equivalent to HTTP request messages.\n */\nvar StreamingRequest = /** @class */ (function () {\n    function StreamingRequest() {\n        /**\n         * List of associated streams.\n         */\n        this.streams = [];\n    }\n    /**\n     * Creates a streaming request with the passed in method, path, and body.\n     *\n     * @param method The HTTP verb to use for this request.\n     * @param path Optional path where the resource can be found on the remote server.\n     * @param body Optional body to send to the remote server.\n     * @returns On success returns a streaming request with appropriate status code and body.\n     */\n    StreamingRequest.create = function (method, path, body) {\n        var request = new StreamingRequest();\n        request.verb = method;\n        request.path = path;\n        if (body) {\n            request.setBody(body);\n        }\n        return request;\n    };\n    /**\n     * Adds a new stream attachment to this streaming request.\n     *\n     * @param content The Http content to include in the new stream attachment.\n     */\n    StreamingRequest.prototype.addStream = function (content) {\n        if (!content) {\n            throw new Error('Argument Undefined Exception: content undefined.');\n        }\n        this.streams.push(new httpContentStream_1.HttpContentStream(content));\n    };\n    /**\n     * Sets the contents of the body of this streamingRequest.\n     *\n     * @param body The JSON text to write to the body of the streamingRequest.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\n    StreamingRequest.prototype.setBody = function (body) {\n        if (typeof body === 'string') {\n            var stream = new subscribableStream_1.SubscribableStream();\n            stream.write(body, 'utf8');\n            this.addStream(new httpContentStream_1.HttpContent({\n                type: 'application/json; charset=utf-8',\n                contentLength: stream.length,\n            }, stream));\n        }\n        else if (typeof body === 'object') {\n            this.addStream(body);\n        }\n    };\n    return StreamingRequest;\n}());\nexports.StreamingRequest = StreamingRequest;\n//# sourceMappingURL=streamingRequest.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StreamingResponse = void 0;\n/**\n * @module botframework-streaming\n */\n/**\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nvar httpContentStream_1 = require(\"./httpContentStream\");\nvar subscribableStream_1 = require(\"./subscribableStream\");\n/**\n * The basic response type sent over Bot Framework Protocol 3 with Streaming Extensions transports, equivalent to HTTP response messages.\n */\nvar StreamingResponse = /** @class */ (function () {\n    function StreamingResponse() {\n        this.streams = [];\n    }\n    /**\n     * Creates a streaming response with the passed in method, path, and body.\n     *\n     * @param statusCode The HTTP verb to use for this request.\n     * @param body Optional body containing additional information.\n     * @returns A streaming response with the appropriate statuscode and passed in body.\n     */\n    StreamingResponse.create = function (statusCode, body) {\n        var response = new StreamingResponse();\n        response.statusCode = statusCode;\n        if (body) {\n            response.addStream(body);\n        }\n        return response;\n    };\n    /**\n     * Adds a new stream attachment to this streaming request.\n     *\n     * @param content The Http content to include in the new stream attachment.\n     */\n    StreamingResponse.prototype.addStream = function (content) {\n        this.streams.push(new httpContentStream_1.HttpContentStream(content));\n    };\n    /**\n     * Sets the contents of the body of this streaming response.\n     *\n     * @param body The JSON text to write to the body of the streaming response.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\n    StreamingResponse.prototype.setBody = function (body) {\n        var stream = new subscribableStream_1.SubscribableStream();\n        stream.write(JSON.stringify(body), 'utf8');\n        this.addStream(new httpContentStream_1.HttpContent({\n            type: 'application/json; charset=utf-8',\n            contentLength: stream.length,\n        }, stream));\n    };\n    return StreamingResponse;\n}());\nexports.StreamingResponse = StreamingResponse;\n//# sourceMappingURL=streamingResponse.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SubscribableStream = void 0;\n/**\n * @module botframework-streaming\n */\n/**\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nvar stream_1 = require(\"stream\");\n/**\n * An extension of `Duplex` that operates in conjunction with a `PayloadAssembler` to convert raw bytes into a consumable form.\n */\nvar SubscribableStream = /** @class */ (function (_super) {\n    __extends(SubscribableStream, _super);\n    /**\n     * Initializes a new instance of the [SubscribableStream](xref:botframework-streaming.SubscribableStream) class.\n     *\n     * @param options The `DuplexOptions` to use when constructing this stream.\n     */\n    function SubscribableStream(options) {\n        var _this = _super.call(this, options) || this;\n        _this.length = 0;\n        _this.bufferList = [];\n        return _this;\n    }\n    /**\n     * Writes data to the buffered list.\n     * All calls to writable.write() that occur between the time writable._write() is called and the callback is called will cause the written data to be buffered.\n     *\n     * @param chunk The Buffer to be written.\n     * @param _encoding The encoding. Unused in the implementation of Duplex.\n     * @param callback Callback for when this chunk of data is flushed.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\n    SubscribableStream.prototype._write = function (chunk, _encoding, callback) {\n        var buffer = Buffer.from(chunk);\n        this.bufferList.push(buffer);\n        this.length += chunk.length;\n        if (this._onData) {\n            this._onData(buffer);\n        }\n        callback();\n    };\n    /**\n     * Reads the buffered list.\n     * Once the readable._read() method has been called, it will not be called again until more data is pushed through the readable.push() method.\n     * Empty data such as empty buffers and strings will not cause readable._read() to be called.\n     *\n     * @param size Number of bytes to read.\n     */\n    SubscribableStream.prototype._read = function (size) {\n        if (this.bufferList.length === 0) {\n            // null signals end of stream\n            this.push(null);\n        }\n        else {\n            var total = 0;\n            while (total < size && this.bufferList.length > 0) {\n                var buffer = this.bufferList[0];\n                this.push(buffer);\n                this.bufferList.splice(0, 1);\n                total += buffer.length;\n            }\n        }\n    };\n    /**\n     * Subscribes to the stream when receives data.\n     *\n     * @param onData Callback to be called when onData is executed.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\n    SubscribableStream.prototype.subscribe = function (onData) {\n        this._onData = onData;\n    };\n    return SubscribableStream;\n}(stream_1.Duplex));\nexports.SubscribableStream = SubscribableStream;\n//# sourceMappingURL=subscribableStream.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateGuid = void 0;\n/**\n * @module botframework-streaming\n */\n/**\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nvar uuid_1 = require(\"uuid\");\n/**\n * Generates an uuid v4 string.\n *\n * @returns An uuidv4 string.\n */\nfunction generateGuid() {\n    return uuid_1.v4();\n}\nexports.generateGuid = generateGuid;\n//# sourceMappingURL=protocol-base.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowserWebSocket = void 0;\n/**\n * Represents a WebSocket that implements [ISocket](xref:botframework-streaming.ISocket).\n */\nvar BrowserWebSocket = /** @class */ (function () {\n    /**\n     * Creates a new instance of the [BrowserWebSocket](xref:botframework-streaming.BrowserWebSocket) class.\n     *\n     * @param socket The socket object to build this connection on.\n     */\n    function BrowserWebSocket(socket) {\n        if (socket) {\n            this.webSocket = socket;\n        }\n    }\n    /**\n     * Connects to the supporting socket using WebSocket protocol.\n     *\n     * @param serverAddress The address the server is listening on.\n     * @returns A Promise that resolves the websocket is open and rejects if an error is encountered.\n     */\n    BrowserWebSocket.prototype.connect = function (serverAddress) {\n        return __awaiter(this, void 0, void 0, function () {\n            var resolver, rejector;\n            return __generator(this, function (_a) {\n                if (!this.webSocket) {\n                    this.webSocket = new WebSocket(serverAddress);\n                }\n                this.webSocket.onerror = function (e) {\n                    rejector(e);\n                };\n                this.webSocket.onopen = function (e) {\n                    resolver(e);\n                };\n                return [2 /*return*/, new Promise(function (resolve, reject) {\n                        resolver = resolve;\n                        rejector = reject;\n                    })];\n            });\n        });\n    };\n    Object.defineProperty(BrowserWebSocket.prototype, \"isConnected\", {\n        /**\n         * Indicates if the [BrowserWebSocket's](xref:botframework-streaming.BrowserWebSocket) underlying websocket is currently connected.\n         *\n         * @returns `true` if the underlying websocket is ready and availble to send messages, otherwise `false`.\n         */\n        get: function () {\n            return this.webSocket.readyState === 1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Writes a buffer to the socket and sends it.\n     *\n     * @param buffer The buffer of data to send across the connection.\n     */\n    BrowserWebSocket.prototype.write = function (buffer) {\n        this.webSocket.send(buffer);\n    };\n    /**\n     * Close the socket.\n     */\n    BrowserWebSocket.prototype.close = function () {\n        this.webSocket.close();\n    };\n    /**\n     * Set the handler for text and binary messages received on the socket.\n     *\n     * @param handler The callback to handle the \"message\" event.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    BrowserWebSocket.prototype.setOnMessageHandler = function (handler) {\n        var bufferKey = 'buffer';\n        var packets = [];\n        this.webSocket.onmessage = function (evt) {\n            var fileReader = new FileReader();\n            var queueEntry = { buffer: null };\n            packets.push(queueEntry);\n            fileReader.onload = function (e) {\n                var t = e.target;\n                queueEntry[bufferKey] = t.result;\n                if (packets[0] === queueEntry) {\n                    while (0 < packets.length && packets[0][bufferKey]) {\n                        handler(packets[0][bufferKey]);\n                        packets.splice(0, 1);\n                    }\n                }\n            };\n            fileReader.readAsArrayBuffer(evt.data);\n        };\n    };\n    /**\n     * Set the callback to call when encountering errors.\n     *\n     * @param handler The callback to handle the \"error\" event.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    BrowserWebSocket.prototype.setOnErrorHandler = function (handler) {\n        this.webSocket.onerror = function (error) {\n            if (error) {\n                handler(error);\n            }\n        };\n    };\n    /**\n     * Set the callback to call when encountering socket closures.\n     *\n     * @param handler The callback to handle the \"close\" event.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    BrowserWebSocket.prototype.setOnCloseHandler = function (handler) {\n        this.webSocket.onclose = handler;\n    };\n    return BrowserWebSocket;\n}());\nexports.BrowserWebSocket = BrowserWebSocket;\n//# sourceMappingURL=browserWebSocket.js.map","\"use strict\";\n/**\n * @module botframework-streaming\n */\n/**\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebSocketClient = void 0;\nvar browserWebSocket_1 = require(\"./browserWebSocket\");\nvar payloadTransport_1 = require(\"../payloadTransport\");\nvar protocolAdapter_1 = require(\"../protocolAdapter\");\nvar payloads_1 = require(\"../payloads\");\nvar webSocketTransport_1 = require(\"./webSocketTransport\");\n/**\n * Web socket based client to be used as streaming transport.\n */\nvar WebSocketClient = /** @class */ (function () {\n    /**\n     * Creates a new instance of the [WebSocketClient](xref:botframework-streaming.WebSocketClient) class.\n     *\n     * @param config For configuring a [WebSocketClient](xref:botframework-streaming.WebSocketClient) instance to communicate with a WebSocket server.\n     * @param config.url The URL of the remote server to connect to.\n     * @param config.requestHandler The [RequestHandler](xref:botframework-streaming.RequestHandler) used to process incoming messages received by this client.\n     * @param config.disconnectionHandler Optional function to handle the disconnection message.\n     */\n    function WebSocketClient(_a) {\n        var url = _a.url, requestHandler = _a.requestHandler, _b = _a.disconnectionHandler, disconnectionHandler = _b === void 0 ? null : _b;\n        this._url = url;\n        this._requestHandler = requestHandler;\n        this._disconnectionHandler = disconnectionHandler;\n        this._requestManager = new payloads_1.RequestManager();\n        this._sender = new payloadTransport_1.PayloadSender();\n        this._sender.disconnected = this.onConnectionDisconnected.bind(this);\n        this._receiver = new payloadTransport_1.PayloadReceiver();\n        this._receiver.disconnected = this.onConnectionDisconnected.bind(this);\n        this._protocolAdapter = new protocolAdapter_1.ProtocolAdapter(this._requestHandler, this._requestManager, this._sender, this._receiver);\n    }\n    /**\n     * Establish a connection with no custom headers.\n     *\n     * @returns A promise that will not resolve until the client stops listening for incoming messages.\n     */\n    WebSocketClient.prototype.connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var ws, transport;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        ws = new browserWebSocket_1.BrowserWebSocket();\n                        return [4 /*yield*/, ws.connect(this._url)];\n                    case 1:\n                        _a.sent();\n                        transport = new webSocketTransport_1.WebSocketTransport(ws);\n                        this._sender.connect(transport);\n                        this._receiver.connect(transport);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Stop this client from listening.\n     */\n    WebSocketClient.prototype.disconnect = function () {\n        this._sender.disconnect(new payloadTransport_1.TransportDisconnectedEvent('Disconnect was called.'));\n        this._receiver.disconnect(new payloadTransport_1.TransportDisconnectedEvent('Disconnect was called.'));\n    };\n    /**\n     * Task used to send data over this client connection.\n     *\n     * @param request The streaming request to send.\n     * @returns A promise that will produce an instance of receive response on completion of the send operation.\n     */\n    WebSocketClient.prototype.send = function (request) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this._protocolAdapter.sendRequest(request)];\n            });\n        });\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    WebSocketClient.prototype.onConnectionDisconnected = function (sender, args) {\n        if (this._disconnectionHandler != null) {\n            this._disconnectionHandler('Disconnected');\n            return;\n        }\n        throw new Error(\"Unable to re-connect client to transport for url \" + this._url + \". Sender: '\" + JSON.stringify(sender) + \"'. Args:' \" + JSON.stringify(args));\n    };\n    return WebSocketClient;\n}());\nexports.WebSocketClient = WebSocketClient;\n//# sourceMappingURL=browserWebSocketClient.js.map","\"use strict\";\n/**\n * @module botframework-streaming\n */\n/**\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebSocketTransport = exports.WebSocketClient = exports.BrowserWebSocket = void 0;\nvar browserWebSocket_1 = require(\"./browserWebSocket\");\nObject.defineProperty(exports, \"BrowserWebSocket\", { enumerable: true, get: function () { return browserWebSocket_1.BrowserWebSocket; } });\nvar browserWebSocketClient_1 = require(\"./browserWebSocketClient\");\nObject.defineProperty(exports, \"WebSocketClient\", { enumerable: true, get: function () { return browserWebSocketClient_1.WebSocketClient; } });\n/** @internal */\nvar webSocketTransport_1 = require(\"./webSocketTransport\");\nObject.defineProperty(exports, \"WebSocketTransport\", { enumerable: true, get: function () { return webSocketTransport_1.WebSocketTransport; } });\n//# sourceMappingURL=index-browser.js.map","\"use strict\";\n/**\n * @module botframework-streaming\n */\n/**\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebSocketTransport = void 0;\n/**\n * Web socket based transport.\n */\nvar WebSocketTransport = /** @class */ (function () {\n    /**\n     * Creates a new instance of the [WebSocketTransport](xref:botframework-streaming.WebSocketTransport) class.\n     *\n     * @param ws The ISocket to build this transport on top of.\n     */\n    function WebSocketTransport(ws) {\n        var _this = this;\n        this.ws = ws;\n        this._queue = [];\n        this._activeOffset = 0;\n        this._activeReceiveCount = 0;\n        this.ws.setOnMessageHandler(function (data) {\n            _this.onReceive(data);\n        });\n        this.ws.setOnErrorHandler(function (err) {\n            _this.onError(err);\n        });\n        this.ws.setOnCloseHandler(function () {\n            _this.onClose();\n        });\n    }\n    /**\n     * Sends the given buffer out over the socket's connection.\n     *\n     * @param buffer The buffered data to send out over the connection.\n     * @returns A number indicating the length of the sent data if the data was successfully sent, otherwise 0.\n     */\n    WebSocketTransport.prototype.send = function (buffer) {\n        var _a;\n        if ((_a = this.ws) === null || _a === void 0 ? void 0 : _a.isConnected) {\n            this.ws.write(buffer);\n            return buffer.length;\n        }\n        return 0;\n    };\n    Object.defineProperty(WebSocketTransport.prototype, \"isConnected\", {\n        /**\n         * Returns true if the transport is connected to a socket.\n         *\n         * @returns `true` if the the transport is connected and ready to send data, `false` otherwise.\n         */\n        get: function () {\n            var _a;\n            return (_a = this.ws) === null || _a === void 0 ? void 0 : _a.isConnected;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Close the socket this transport is connected to.\n     */\n    WebSocketTransport.prototype.close = function () {\n        var _a;\n        if ((_a = this.ws) === null || _a === void 0 ? void 0 : _a.isConnected) {\n            this.ws.close();\n        }\n    };\n    /**\n     * Attempt to receive incoming data from the connected socket.\n     *\n     * @param count The number of bytes to attempt to receive.\n     * @returns A buffer populated with the received data.\n     */\n    WebSocketTransport.prototype.receive = function (count) {\n        return __awaiter(this, void 0, void 0, function () {\n            var promise;\n            var _this = this;\n            return __generator(this, function (_a) {\n                if (this._activeReceiveResolve) {\n                    throw new Error('Cannot call receive more than once before it has returned.');\n                }\n                this._activeReceiveCount = count;\n                promise = new Promise(function (resolve, reject) {\n                    _this._activeReceiveResolve = resolve;\n                    _this._activeReceiveReject = reject;\n                });\n                this.trySignalData();\n                return [2 /*return*/, promise];\n            });\n        });\n    };\n    /**\n     * Sets the transport to attempt to receive incoming data that has not yet arrived.\n     *\n     * @param data A buffer to store incoming data in.\n     */\n    WebSocketTransport.prototype.onReceive = function (data) {\n        if (this._queue && data && data.byteLength > 0) {\n            this._queue.push(Buffer.from(data));\n            this.trySignalData();\n        }\n    };\n    WebSocketTransport.prototype.onClose = function () {\n        if (this._activeReceiveReject) {\n            this._activeReceiveReject(new Error('Socket was closed.'));\n        }\n        this._active = null;\n        this._activeOffset = 0;\n        this._activeReceiveResolve = null;\n        this._activeReceiveReject = null;\n        this._activeReceiveCount = 0;\n        this.ws = null;\n    };\n    WebSocketTransport.prototype.onError = function (err) {\n        if (this._activeReceiveReject) {\n            this._activeReceiveReject(err);\n        }\n        this.onClose();\n    };\n    WebSocketTransport.prototype.trySignalData = function () {\n        if (this._activeReceiveResolve) {\n            if (!this._active && this._queue.length > 0) {\n                this._active = this._queue.shift();\n                this._activeOffset = 0;\n            }\n            if (this._active) {\n                if (this._activeOffset === 0 && this._active.length === this._activeReceiveCount) {\n                    // can send the entire _active buffer\n                    var buffer = this._active;\n                    this._active = null;\n                    this._activeReceiveResolve(buffer);\n                }\n                else {\n                    // create a Buffer.from and copy some of the contents into it\n                    var available = Math.min(this._activeReceiveCount, this._active.length - this._activeOffset);\n                    var buffer = Buffer.alloc(available);\n                    this._active.copy(buffer, 0, this._activeOffset, this._activeOffset + available);\n                    this._activeOffset += available;\n                    // if we used all of active, set it to undefined\n                    if (this._activeOffset >= this._active.length) {\n                        this._active = null;\n                        this._activeOffset = 0;\n                    }\n                    this._activeReceiveResolve(buffer);\n                }\n                this._activeReceiveCount = 0;\n                this._activeReceiveReject = null;\n                this._activeReceiveResolve = null;\n            }\n        }\n    };\n    return WebSocketTransport;\n}());\nexports.WebSocketTransport = WebSocketTransport;\n//# sourceMappingURL=webSocketTransport.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"v1\", {\n  enumerable: true,\n  get: function () {\n    return _v.default;\n  }\n});\nObject.defineProperty(exports, \"v3\", {\n  enumerable: true,\n  get: function () {\n    return _v2.default;\n  }\n});\nObject.defineProperty(exports, \"v4\", {\n  enumerable: true,\n  get: function () {\n    return _v3.default;\n  }\n});\nObject.defineProperty(exports, \"v5\", {\n  enumerable: true,\n  get: function () {\n    return _v4.default;\n  }\n});\nObject.defineProperty(exports, \"NIL\", {\n  enumerable: true,\n  get: function () {\n    return _nil.default;\n  }\n});\nObject.defineProperty(exports, \"version\", {\n  enumerable: true,\n  get: function () {\n    return _version.default;\n  }\n});\nObject.defineProperty(exports, \"validate\", {\n  enumerable: true,\n  get: function () {\n    return _validate.default;\n  }\n});\nObject.defineProperty(exports, \"stringify\", {\n  enumerable: true,\n  get: function () {\n    return _stringify.default;\n  }\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function () {\n    return _parse.default;\n  }\n});\n\nvar _v = _interopRequireDefault(require(\"./v1.js\"));\n\nvar _v2 = _interopRequireDefault(require(\"./v3.js\"));\n\nvar _v3 = _interopRequireDefault(require(\"./v4.js\"));\n\nvar _v4 = _interopRequireDefault(require(\"./v5.js\"));\n\nvar _nil = _interopRequireDefault(require(\"./nil.js\"));\n\nvar _version = _interopRequireDefault(require(\"./version.js\"));\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  const output = [];\n  const length32 = input.length * 32;\n  const hexTab = '0123456789abcdef';\n\n  for (let i = 0; i < length32; i += 8) {\n    const x = input[i >> 5] >>> i % 32 & 0xff;\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  const length8 = input.length * 8;\n  const output = new Uint32Array(getOutputLength(length8));\n\n  for (let i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  const lsw = (x & 0xffff) + (y & 0xffff);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nvar _default = md5;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = '00000000-0000-0000-0000-000000000000';\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parse(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nvar _default = parse;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rng;\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\n\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nvar _default = sha1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nvar _default = stringify;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || _rng.default)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || (0, _stringify.default)(b);\n}\n\nvar _default = v1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _md = _interopRequireDefault(require(\"./md5.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v3 = (0, _v.default)('v3', 0x30, _md.default);\nvar _default = v3;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nexports.URL = exports.DNS = void 0;\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nconst DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexports.DNS = DNS;\nconst URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexports.URL = URL;\n\nfunction _default(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = (0, _parse.default)(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return (0, _stringify.default)(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n\n  const rnds = options.random || (options.rng || _rng.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0, _stringify.default)(rnds);\n}\n\nvar _default = v4;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _sha = _interopRequireDefault(require(\"./sha1.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v5 = (0, _v.default)('v5', 0x50, _sha.default);\nvar _default = v5;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regex = _interopRequireDefault(require(\"./regex.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex.default.test(uuid);\n}\n\nvar _default = validate;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction version(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nvar _default = version;\nexports.default = _default;","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function eventListener() {\n      if (errorListener !== undefined) {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n    var errorListener;\n\n    // Adding an error listener is not optional because\n    // if an error is thrown on an event emitter we cannot\n    // guarantee that the actual event we are waiting will\n    // be fired. The result could be a silent way to create\n    // memory or file descriptor leaks, which is something\n    // we should avoid.\n    if (name !== 'error') {\n      errorListener = function errorListener(err) {\n        emitter.removeListener(name, eventListener);\n        reject(err);\n      };\n\n      emitter.once('error', errorListener);\n    }\n\n    emitter.once(name, eventListener);\n  });\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/lib/_stream_readable.js');\nStream.Writable = require('readable-stream/lib/_stream_writable.js');\nStream.Duplex = require('readable-stream/lib/_stream_duplex.js');\nStream.Transform = require('readable-stream/lib/_stream_transform.js');\nStream.PassThrough = require('readable-stream/lib/_stream_passthrough.js');\nStream.finished = require('readable-stream/lib/internal/streams/end-of-stream.js')\nStream.pipeline = require('readable-stream/lib/internal/streams/pipeline.js')\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n'use strict';\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\nvar Readable = require('./_stream_readable');\n\nvar Writable = require('./_stream_writable');\n\nrequire('inherits')(Duplex, Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\nrequire('inherits')(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*<replacement>*/\n\n\nvar debugUtil = require('util');\n\nvar debug;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = require('./internal/streams/buffer_list');\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n\nrequire('inherits')(Readable, Stream);\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n  this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n\n  return er;\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n  var p = this._readableState.buffer.head;\n  var content = '';\n\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n\n  this._readableState.buffer.clear();\n\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n}; // Don't raise the hwm > 1GB\n\n\nvar MAX_HWM = 0x40000000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true;\n\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  } // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      });\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true; // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume'); // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n\n  state.paused = false;\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  this._readableState.paused = true;\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {\n    ;\n  }\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n\n    return createReadableStreamAsyncIterator(this);\n  };\n}\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n}); // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n\n    return from(Readable, iterable, opts);\n  };\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n'use strict';\n\nmodule.exports = Transform;\n\nvar _require$codes = require('../errors').codes,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\n\nvar Duplex = require('./_stream_duplex');\n\nrequire('inherits')(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }; // start out asking for a readable event once data is transformed.\n\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  } // When the writable side finishes, then flush out anything remaining.\n\n\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n}; // This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\n\n\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n}; // Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\n\n\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n'use strict';\n\nmodule.exports = Writable;\n/* <replacement> */\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n} // It seems a linked list but it is not\n// there will be only 2 of these for each stream\n\n\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\n\n\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n/*<replacement>*/\n\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n\nrequire('inherits')(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\n\n  this.finalCalled = false; // drain event flag.\n\n  this.needDrain = false; // at the start of calling end()\n\n  this.ending = false; // when end() has been called, and returned\n\n  this.ended = false; // when 'finish' is emitted\n\n  this.finished = false; // has it been destroyed\n\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0; // a flag to see when we're in the middle of a write.\n\n  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n  this.writecb = null; // the amount that is being written when _write is called.\n\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')\n\n  this.autoDestroy = !!options.autoDestroy; // count buffered requests\n\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})(); // Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\n\n\nvar realHasInstance;\n\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex); // legacy.\n\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\n\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n} // Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\n\n\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n\n  return true;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er); // this can emit finish, and it will always happen\n    // after error\n\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er); // this can emit finish, but finish must\n    // always follow error\n\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n} // Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\n\n\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n} // if there's something in the buffer waiting, then process it\n\n\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  } // ignore unnecessary end() calls.\n\n\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n\n  if (need) {\n    prefinish(stream, state);\n\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  } // reuse the free corkReq.\n\n\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\n\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","'use strict';\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar finished = require('./end-of-stream');\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this;\n\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar _require2 = require('util'),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || 'inspect';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();","'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    callback.apply(this, args);\n  };\n}\n\nfunction noop() {}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n\n  var writableEnded = stream._writableState && stream._writableState.finished;\n\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n\n  var onclose = function onclose() {\n    var err;\n\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\n\nmodule.exports = eos;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar eos;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\n\nvar _require$codes = require('../../../errors').codes,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true; // request.destroy just do .end - .abort is what we want\n\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\n\nfunction call(fn) {\n  fn();\n}\n\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\n\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\n\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\n\nmodule.exports = pipeline;","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","module.exports = require('events').EventEmitter;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n"]},"metadata":{},"sourceType":"script"}