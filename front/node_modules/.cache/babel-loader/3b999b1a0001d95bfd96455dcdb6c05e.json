{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = notifications;\n\nvar _simpleUpdateIn = _interopRequireDefault(require(\"simple-update-in\"));\n\nvar _dismissNotification = require(\"../actions/dismissNotification\");\n\nvar _sagaError = require(\"../actions/sagaError\");\n\nvar _setNotification = require(\"../actions/setNotification\");\n\nvar _isForbiddenPropertyName = _interopRequireDefault(require(\"../utils/isForbiddenPropertyName\"));\n\nvar DEFAULT_STATE = {};\n\nfunction notifications() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_STATE;\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      payload = _ref.payload,\n      type = _ref.type;\n\n  var now = Date.now();\n\n  if (type === _dismissNotification.DISMISS_NOTIFICATION) {\n    state = (0, _simpleUpdateIn[\"default\"])(state, [payload.id]);\n  } else if (type === _sagaError.SAGA_ERROR) {\n    state = (0, _simpleUpdateIn[\"default\"])(state, ['connectivitystatus', 'message'], function () {\n      return 'javascripterror';\n    });\n  } else if (type === _setNotification.SET_NOTIFICATION) {\n    var alt = payload.alt,\n        data = payload.data,\n        id = payload.id,\n        level = payload.level,\n        message = payload.message;\n\n    if (!(0, _isForbiddenPropertyName[\"default\"])(id)) {\n      // Mitigated through denylisting.\n      // eslint-disable-next-line security/detect-object-injection\n      var notification = state[id];\n\n      if (!notification || alt !== notification.alt || !Object.is(data, notification.data) || level !== notification.level || message !== notification.message) {\n        state = (0, _simpleUpdateIn[\"default\"])(state, [id], function () {\n          return {\n            alt: alt,\n            data: data,\n            id: id,\n            level: level,\n            message: message,\n            timestamp: now\n          };\n        });\n      }\n    }\n  }\n\n  return state;\n}","map":{"version":3,"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AAEA,IAAMA,aAAa,GAAG,EAAtB;;AAEe,SAASC,aAAT,GAAiE;AAAA,MAA1CC,KAA0C,uEAAlCF,aAAkC;;AAAA;AAAA,MAAjBG,OAAiB,QAAjBA,OAAiB;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AAC9E,MAAMC,GAAG,GAAGC,IAAI,CAACD,GAALC,EAAZ;;AAEA,MAAIF,IAAI,KAAKG,yCAAb,EAAmC;AACjCL,SAAK,GAAG,gCAASA,KAAT,EAAgB,CAACC,OAAO,CAACK,EAAT,CAAhB,CAARN;AADF,SAEO,IAAIE,IAAI,KAAKK,qBAAb,EAAyB;AAC9BP,SAAK,GAAG,gCAASA,KAAT,EAAgB,CAAC,oBAAD,EAAuB,SAAvB,CAAhB,EAAmD;AAAA,aAAM,iBAAN;AAAnD,MAARA;AADK,SAEA,IAAIE,IAAI,KAAKM,iCAAb,EAA+B;AACpC,QAAQC,GAAR,GAA0CR,OAA1C,CAAQQ,GAAR;AAAA,QAAaC,IAAb,GAA0CT,OAA1C,CAAaS,IAAb;AAAA,QAAmBJ,EAAnB,GAA0CL,OAA1C,CAAmBK,EAAnB;AAAA,QAAuBK,KAAvB,GAA0CV,OAA1C,CAAuBU,KAAvB;AAAA,QAA8BC,OAA9B,GAA0CX,OAA1C,CAA8BW,OAA9B;;AAEA,QAAI,CAAC,yCAAwBN,EAAxB,CAAL,EAAkC;AAChC;AACA;AACA,UAAMO,YAAY,GAAGb,KAAK,CAACM,EAAD,CAA1B;;AAEA,UACE,CAACO,YAAD,IACAJ,GAAG,KAAKI,YAAY,CAACJ,GADrB,IAEA,CAACK,MAAM,CAACC,EAAPD,CAAUJ,IAAVI,EAAgBD,YAAY,CAACH,IAA7BI,CAFD,IAGAH,KAAK,KAAKE,YAAY,CAACF,KAHvB,IAIAC,OAAO,KAAKC,YAAY,CAACD,OAL3B,EAME;AACAZ,aAAK,GAAG,gCAASA,KAAT,EAAgB,CAACM,EAAD,CAAhB,EAAsB;AAAA,iBAAO;AACnCG,eAAG,EAAHA,GADmC;AAEnCC,gBAAI,EAAJA,IAFmC;AAGnCJ,cAAE,EAAFA,EAHmC;AAInCK,iBAAK,EAALA,KAJmC;AAKnCC,mBAAO,EAAPA,OALmC;AAMnCI,qBAAS,EAAEb;AANwB,WAAP;AAAtB,UAARH;AAQD;AACF;AACF;;AAED,SAAOA,KAAP;AACD","names":["DEFAULT_STATE","notifications","state","payload","type","now","Date","DISMISS_NOTIFICATION","id","SAGA_ERROR","SET_NOTIFICATION","alt","data","level","message","notification","Object","is","timestamp"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-core/lib/src/reducers/notifications.js"],"sourcesContent":["import updateIn from 'simple-update-in';\n\nimport { DISMISS_NOTIFICATION } from '../actions/dismissNotification';\nimport { SAGA_ERROR } from '../actions/sagaError';\nimport { SET_NOTIFICATION } from '../actions/setNotification';\nimport isForbiddenPropertyName from '../utils/isForbiddenPropertyName';\n\nconst DEFAULT_STATE = {};\n\nexport default function notifications(state = DEFAULT_STATE, { payload, type }) {\n  const now = Date.now();\n\n  if (type === DISMISS_NOTIFICATION) {\n    state = updateIn(state, [payload.id]);\n  } else if (type === SAGA_ERROR) {\n    state = updateIn(state, ['connectivitystatus', 'message'], () => 'javascripterror');\n  } else if (type === SET_NOTIFICATION) {\n    const { alt, data, id, level, message } = payload;\n\n    if (!isForbiddenPropertyName(id)) {\n      // Mitigated through denylisting.\n      // eslint-disable-next-line security/detect-object-injection\n      const notification = state[id];\n\n      if (\n        !notification ||\n        alt !== notification.alt ||\n        !Object.is(data, notification.data) ||\n        level !== notification.level ||\n        message !== notification.message\n      ) {\n        state = updateIn(state, [id], () => ({\n          alt,\n          data,\n          id,\n          level,\n          message,\n          timestamp: now\n        }));\n      }\n    }\n  }\n\n  return state;\n}\n"]},"metadata":{},"sourceType":"script"}