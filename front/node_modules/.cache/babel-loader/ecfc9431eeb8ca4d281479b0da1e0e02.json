{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useDateFormatter;\n\nvar _react = require(\"react\");\n\nvar _useLocalizedGlobalize = _interopRequireDefault(require(\"./internal/useLocalizedGlobalize\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction useDateFormatter() {\n  var _useLocalizedGlobaliz = (0, _useLocalizedGlobalize.default)(),\n      _useLocalizedGlobaliz2 = _slicedToArray(_useLocalizedGlobaliz, 1),\n      globalize = _useLocalizedGlobaliz2[0];\n\n  var formatDate = (0, _react.useMemo)(function () {\n    return function (date) {\n      return globalize.dateFormatter({\n        skeleton: 'MMMMdhm'\n      })(new Date(date));\n    };\n  }, [globalize]);\n  return formatDate;\n}","map":{"version":3,"mappings":";;;;;;;AAAA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEe,SAASA,gBAAT,GAA6D;AAC1E,8BAAoB,qCAApB;AAAA;AAAA,MAAOC,SAAP;;AAEA,MAAMC,UAAU,GAAG,oBACjB;AAAA,WAAM,gBAAI;AAAA,aAAID,SAAS,CAACE,aAAVF,CAAwB;AAAEG,gBAAQ,EAAE;AAAZ,OAAxBH,EAAiD,IAAII,IAAJ,CAASC,IAAT,CAAjDL,CAAJ;AAAV;AADiB,KAEjB,CAACA,SAAD,CAFiB,CAAnB;AAKA,SAAOC,UAAP;AACD","names":["useDateFormatter","globalize","formatDate","dateFormatter","skeleton","Date","date"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-api/lib/src/hooks/useDateFormatter.ts"],"sourcesContent":["import { useMemo } from 'react';\n\nimport useLocalizedGlobalize from './internal/useLocalizedGlobalize';\n\nexport default function useDateFormatter(): (date: number | Date) => string {\n  const [globalize] = useLocalizedGlobalize();\n\n  const formatDate = useMemo(\n    () => date => globalize.dateFormatter({ skeleton: 'MMMMdhm' })(new Date(date)),\n    [globalize]\n  );\n\n  return formatDate;\n}\n"]},"metadata":{},"sourceType":"script"}