{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CardObject = exports.ValidationResults = void 0; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nvar Enums = require(\"./enums\");\n\nvar strings_1 = require(\"./strings\");\n\nvar shared_1 = require(\"./shared\");\n\nvar host_capabilities_1 = require(\"./host-capabilities\");\n\nvar serialization_1 = require(\"./serialization\");\n\nvar ValidationResults =\n/** @class */\nfunction () {\n  function ValidationResults() {\n    this.allIds = {};\n    this.validationEvents = [];\n  }\n\n  ValidationResults.prototype.addFailure = function (cardObject, event, message) {\n    this.validationEvents.push({\n      phase: Enums.ValidationPhase.Validation,\n      source: cardObject,\n      event: event,\n      message: message\n    });\n  };\n\n  return ValidationResults;\n}();\n\nexports.ValidationResults = ValidationResults;\n\nvar CardObject =\n/** @class */\nfunction (_super) {\n  __extends(CardObject, _super);\n\n  function CardObject() {\n    //#region Schema\n    var _this = _super !== null && _super.apply(this, arguments) || this; //#endregion\n\n\n    _this._shouldFallback = false;\n    return _this;\n  }\n\n  CardObject.prototype.getSchemaKey = function () {\n    return this.getJsonTypeName();\n  };\n\n  Object.defineProperty(CardObject.prototype, \"requires\", {\n    get: function () {\n      return this.getValue(CardObject.requiresProperty);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Checks if this CardObject contains the given DOM Node.\n   * @param node The DOM Node to look for.\n   * @returns `true` if the DOM Node was found, `false` otherwise.\n   */\n\n  CardObject.prototype.contains = function (node) {\n    if (this._renderedElement) {\n      return this._renderedElement.contains(node);\n    }\n\n    return false;\n  };\n\n  CardObject.prototype.preProcessPropertyValue = function (property, propertyValue) {\n    var value = propertyValue === undefined ? this.getValue(property) : propertyValue;\n\n    if (shared_1.GlobalSettings.allowPreProcessingPropertyValues) {\n      var currentObject = this;\n\n      while (currentObject && !currentObject.onPreProcessPropertyValue) {\n        currentObject = currentObject.parent;\n      }\n\n      if (currentObject && currentObject.onPreProcessPropertyValue) {\n        return currentObject.onPreProcessPropertyValue(this, property, value);\n      }\n    }\n\n    return value;\n  };\n\n  CardObject.prototype.setParent = function (value) {\n    this._parent = value;\n  };\n\n  CardObject.prototype.setShouldFallback = function (value) {\n    this._shouldFallback = value;\n  };\n\n  CardObject.prototype.shouldFallback = function () {\n    return this._shouldFallback || !this.requires.areAllMet(this.hostConfig.hostCapabilities);\n  };\n\n  CardObject.prototype.getRootObject = function () {\n    var rootObject = this;\n\n    while (rootObject.parent) {\n      rootObject = rootObject.parent;\n    }\n\n    return rootObject;\n  };\n\n  CardObject.prototype.internalValidateProperties = function (context) {\n    if (this.id) {\n      if (context.allIds.hasOwnProperty(this.id)) {\n        if (context.allIds[this.id] == 1) {\n          context.addFailure(this, Enums.ValidationEvent.DuplicateId, strings_1.Strings.errors.duplicateId(this.id));\n        }\n\n        context.allIds[this.id] += 1;\n      } else {\n        context.allIds[this.id] = 1;\n      }\n    }\n  };\n\n  CardObject.prototype.validateProperties = function () {\n    var result = new ValidationResults();\n    this.internalValidateProperties(result);\n    return result;\n  };\n  /**\n   * Recursively searches this CardObject and any children to find the\n   * innermost CardObject that owns the given DOM Node.\n   *\n   * @param node The DOM Node to look for.\n   *\n   * @returns The owner of the given DOM Node, or `undefined` if no owner was found.\n   */\n\n\n  CardObject.prototype.findDOMNodeOwner = function (node) {\n    // default implementation for CardObjects with no associated children\n    return this.contains(node) ? this : undefined;\n  };\n\n  Object.defineProperty(CardObject.prototype, \"parent\", {\n    get: function () {\n      return this._parent;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CardObject.prototype, \"renderedElement\", {\n    get: function () {\n      return this._renderedElement;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  CardObject.typeNameProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"type\", undefined, undefined, undefined, function (sender) {\n    return sender.getJsonTypeName();\n  });\n  CardObject.idProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"id\");\n  CardObject.requiresProperty = new serialization_1.SerializableObjectProperty(serialization_1.Versions.v1_2, \"requires\", host_capabilities_1.HostCapabilities, false, new host_capabilities_1.HostCapabilities());\n\n  __decorate([serialization_1.property(CardObject.idProperty)], CardObject.prototype, \"id\", void 0);\n\n  __decorate([serialization_1.property(CardObject.requiresProperty)], CardObject.prototype, \"requires\", null);\n\n  return CardObject;\n}(serialization_1.SerializableObject);\n\nexports.CardObject = CardObject;","map":{"version":3,"mappings":"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","names":["ValidationResults","cardObject","event","message","validationEvents","push","phase","Enums","ValidationPhase","Validation","source","exports","__extends","_this","CardObject","getJsonTypeName","Object","getValue","requiresProperty","node","_renderedElement","contains","property","propertyValue","value","undefined","shared_1","allowPreProcessingPropertyValues","currentObject","onPreProcessPropertyValue","parent","_parent","_shouldFallback","requires","areAllMet","hostConfig","hostCapabilities","rootObject","context","id","allIds","hasOwnProperty","addFailure","ValidationEvent","DuplicateId","strings_1","errors","duplicateId","result","internalValidateProperties","serialization_1","v1_0","sender","v1_2","host_capabilities_1","__decorate","idProperty"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/adaptivecards/src/card-object.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport * as Enums from \"./enums\";\nimport * as Utils from \"./utils\";\nimport { Strings} from \"./strings\";\nimport { Dictionary, GlobalSettings } from \"./shared\";\nimport { HostConfig } from \"./host-config\";\nimport { HostCapabilities } from \"./host-capabilities\";\nimport { Versions, property, SerializableObject, StringProperty, SerializableObjectProperty, IValidationEvent, PropertyDefinition } from \"./serialization\";\n\nexport class ValidationResults {\n    readonly allIds: Dictionary<number> = {};\n    readonly validationEvents: IValidationEvent[] = [];\n\n    addFailure(cardObject: CardObject, event: Enums.ValidationEvent, message: string) {\n        this.validationEvents.push(\n            {\n                phase: Enums.ValidationPhase.Validation,\n                source: cardObject,\n                event: event,\n                message: message\n            }\n        );\n    }\n}\n\nexport type CardObjectType = { new(): CardObject };\n\nexport abstract class CardObject extends SerializableObject {\n    //#region Schema\n\n    static readonly typeNameProperty = new StringProperty(\n        Versions.v1_0,\n        \"type\",\n        undefined,\n        undefined,\n        undefined,\n        (sender: object) => {\n            return (<CardObject>sender).getJsonTypeName()\n        });\n    static readonly idProperty = new StringProperty(Versions.v1_0, \"id\");\n    static readonly requiresProperty = new SerializableObjectProperty(\n        Versions.v1_2,\n        \"requires\",\n        HostCapabilities,\n        false,\n        new HostCapabilities());\n\n    protected getSchemaKey(): string {\n        return this.getJsonTypeName();\n    }\n\n    @property(CardObject.idProperty)\n    id?: string;\n\n    @property(CardObject.requiresProperty)\n    get requires(): HostCapabilities {\n        return this.getValue(CardObject.requiresProperty);\n    }\n\n    //#endregion\n\n    private _shouldFallback: boolean = false;\n\n    protected _parent?: CardObject;\n    protected _renderedElement?: HTMLElement;\n\n    /**\n     * Checks if this CardObject contains the given DOM Node.\n     * @param node The DOM Node to look for.\n     * @returns `true` if the DOM Node was found, `false` otherwise.\n     */\n    protected contains(node: Node): boolean {\n        if (this._renderedElement) {\n            return this._renderedElement.contains(node);\n        }\n\n        return false;\n    }\n\n    onPreProcessPropertyValue?: (sender: CardObject, property: PropertyDefinition, value: any) => any;\n\n    abstract getJsonTypeName(): string;\n\n    abstract get hostConfig(): HostConfig;\n\n    preProcessPropertyValue(property: PropertyDefinition, propertyValue?: any): any {\n        let value = propertyValue === undefined ? this.getValue(property) : propertyValue;\n\n        if (GlobalSettings.allowPreProcessingPropertyValues) {\n            let currentObject: CardObject | undefined = this;\n\n            while (currentObject && !currentObject.onPreProcessPropertyValue) {\n                currentObject = currentObject.parent;\n            }\n\n            if (currentObject && currentObject.onPreProcessPropertyValue) {\n                return currentObject.onPreProcessPropertyValue(this, property, value);\n            }\n        }\n\n        return value;\n    }\n\n    setParent(value: CardObject | undefined) {\n        this._parent = value;\n    }\n\n    setShouldFallback(value: boolean) {\n        this._shouldFallback = value;\n    }\n\n    shouldFallback(): boolean {\n        return this._shouldFallback || !this.requires.areAllMet(this.hostConfig.hostCapabilities);\n    }\n\n    getRootObject(): CardObject {\n        let rootObject: CardObject = this;\n\n        while (rootObject.parent) {\n            rootObject = rootObject.parent;\n        }\n\n        return rootObject;\n    }\n\n    internalValidateProperties(context: ValidationResults) {\n        if (this.id) {\n            if (context.allIds.hasOwnProperty(this.id)) {\n                if (context.allIds[this.id] == 1) {\n                    context.addFailure(\n                        this,\n                        Enums.ValidationEvent.DuplicateId,\n                        Strings.errors.duplicateId(this.id));\n                }\n\n                context.allIds[this.id] += 1;\n            }\n            else {\n                context.allIds[this.id] = 1;\n            }\n        }\n    }\n\n    validateProperties(): ValidationResults {\n        let result = new ValidationResults();\n\n        this.internalValidateProperties(result);\n\n        return result;\n    }\n\n    /**\n     * Recursively searches this CardObject and any children to find the\n     * innermost CardObject that owns the given DOM Node.\n     *\n     * @param node The DOM Node to look for.\n     *\n     * @returns The owner of the given DOM Node, or `undefined` if no owner was found.\n     */\n    findDOMNodeOwner(node: Node): CardObject | undefined {\n        // default implementation for CardObjects with no associated children\n        return this.contains(node) ? this : undefined;\n    }\n\n    get parent(): CardObject | undefined {\n        return this._parent;\n    }\n\n    get renderedElement(): HTMLElement | undefined {\n        return this._renderedElement;\n    }\n}\n"]},"metadata":{},"sourceType":"script"}