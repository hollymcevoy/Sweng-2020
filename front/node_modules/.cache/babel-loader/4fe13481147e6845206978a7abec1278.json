{"ast":null,"code":"\"use strict\"; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SpeakerIdentificationModel = void 0;\n\nvar Contracts_1 = require(\"./Contracts\");\n\nvar Exports_1 = require(\"./Exports\");\n/**\n * Defines SpeakerIdentificationModel class for Speaker Recognition\n * Model contains a set of profiles against which to identify speaker(s)\n * @class SpeakerIdentificationModel\n */\n\n\nvar SpeakerIdentificationModel =\n/** @class */\nfunction () {\n  function SpeakerIdentificationModel(profiles) {\n    var _this = this;\n\n    this.privVoiceProfiles = [];\n    Contracts_1.Contracts.throwIfNullOrUndefined(profiles, \"VoiceProfiles\");\n\n    if (profiles.length === 0) {\n      throw new Error(\"Empty Voice Profiles array\");\n    }\n\n    profiles.forEach(function (profile) {\n      if (profile.profileType !== Exports_1.VoiceProfileType.TextIndependentIdentification) {\n        throw new Error(\"Identification model can only be created from Identification profile: \" + profile.profileId);\n      }\n\n      _this.privVoiceProfiles.push(profile);\n    });\n  }\n\n  SpeakerIdentificationModel.fromProfiles = function (profiles) {\n    return new SpeakerIdentificationModel(profiles);\n  };\n\n  Object.defineProperty(SpeakerIdentificationModel.prototype, \"voiceProfileIds\", {\n    get: function () {\n      return this.privVoiceProfiles.map(function (profile) {\n        return profile.profileId;\n      }).join(\",\");\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return SpeakerIdentificationModel;\n}();\n\nexports.SpeakerIdentificationModel = SpeakerIdentificationModel;","map":{"version":3,"mappings":"cAAA;AACA;;;;;;;AAEA;;AACA;AAKA;;;;;;;AAKA;AAAA;AAAA;AAGI,sCAAoBA,QAApB,EAA4C;AAA5C;;AAFQ,6BAAoC,EAApC;AAGJC,0BAAUC,sBAAV,CAAiCF,QAAjC,EAA2C,eAA3C;;AACA,QAAIA,QAAQ,CAACG,MAAT,KAAoB,CAAxB,EAA2B;AACvB,YAAM,IAAIC,KAAJ,CAAU,4BAAV,CAAN;AACH;;AACDJ,YAAQ,CAACK,OAAT,CAAiB,UAACC,OAAD,EAAsB;AACnC,UAAIA,OAAO,CAACC,WAAR,KAAwBC,2BAAiBC,6BAA7C,EAA4E;AACxE,cAAM,IAAIL,KAAJ,CAAU,2EAA2EE,OAAO,CAACI,SAA7F,CAAN;AACH;;AACDC,WAAI,CAACC,iBAAL,CAAuBC,IAAvB,CAA4BP,OAA5B;AACH,KALD;AAMH;;AACaQ,4CAAd,UAA2Bd,QAA3B,EAAmD;AAC/C,WAAO,IAAIc,0BAAJ,CAA+Bd,QAA/B,CAAP;AACH,GAFa;;AAIde,wBAAWD,oCAAX,EAAW,iBAAX,EAA0B;SAA1B;AACI,aAAO,KAAKF,iBAAL,CAAuBI,GAAvB,CAA2B,UAACV,OAAD,EAAsB;AAAK,sBAAO,CAACI,SAAR;AAAiB,OAAvE,EAAyEO,IAAzE,CAA8E,GAA9E,CAAP;AACH,KAFyB;qBAAA;;AAAA,GAA1B;AAIJ;AAvBA;;AAAaC","names":["profiles","Contracts_1","throwIfNullOrUndefined","length","Error","forEach","profile","profileType","Exports_1","TextIndependentIdentification","profileId","_this","privVoiceProfiles","push","SpeakerIdentificationModel","Object","map","join","exports"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/SpeakerIdentificationModel.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    VoiceProfile,\r\n    VoiceProfileType,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Defines SpeakerIdentificationModel class for Speaker Recognition\r\n * Model contains a set of profiles against which to identify speaker(s)\r\n * @class SpeakerIdentificationModel\r\n */\r\nexport class SpeakerIdentificationModel {\r\n    private privVoiceProfiles: VoiceProfile[] = [];\r\n\r\n    private constructor(profiles: VoiceProfile[]) {\r\n        Contracts.throwIfNullOrUndefined(profiles, \"VoiceProfiles\");\r\n        if (profiles.length === 0) {\r\n            throw new Error(\"Empty Voice Profiles array\");\r\n        }\r\n        profiles.forEach((profile: VoiceProfile) => {\r\n            if (profile.profileType !== VoiceProfileType.TextIndependentIdentification) {\r\n                throw new Error(\"Identification model can only be created from Identification profile: \" + profile.profileId);\r\n            }\r\n            this.privVoiceProfiles.push(profile);\r\n        });\r\n    }\r\n    public static fromProfiles(profiles: VoiceProfile[]): SpeakerIdentificationModel {\r\n        return new SpeakerIdentificationModel(profiles);\r\n    }\r\n\r\n    public get voiceProfileIds(): string {\r\n        return this.privVoiceProfiles.map((profile: VoiceProfile) => profile.profileId).join(\",\");\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"script"}