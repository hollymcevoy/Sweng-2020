{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mergeLocalizedStrings;\n\nvar _botframeworkWebchatCore = require(\"botframework-webchat-core\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction mergeLocalizedStrings() {\n  var merged = {};\n\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var languages = args.reduce(function (keys, arg) {\n    return [].concat(_toConsumableArray(keys), _toConsumableArray(Object.keys(arg)));\n  }, []);\n\n  var _iterator = _createForOfIteratorHelper(new Set(languages)),\n      _step;\n\n  try {\n    var _loop = function _loop() {\n      var language = _step.value;\n\n      if (!(0, _botframeworkWebchatCore.isForbiddenPropertyName)(language)) {\n        // Mitigation through denylisting.\n        // eslint-disable-next-line security/detect-object-injection\n        merged[language] = args.reduce(function (merged, arg) {\n          return _objectSpread(_objectSpread({}, merged), arg[language]);\n        }, {});\n      }\n    };\n\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return merged;\n}","map":{"version":3,"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMe,SAASA,qBAAT,GAAoF;AACjG,MAAMC,MAAM,GAAG,EAAf;;AADiG,oCAAlDC,IAAkD;AAAlDA,QAAkD,MAAlDA,GAAkDC,eAAlDD;AAAkD;;AAEjG,MAAME,SAAS,GAAGF,IAAI,CAACG,MAALH,CAAY,UAACI,IAAD,EAAOC,GAAP;AAAA,wCAAmBD,IAAnB,sBAA4BE,MAAM,CAACF,IAAPE,CAAYD,GAAZC,CAA5B;AAAZ,KAA2D,EAA3DN,CAAlB;;AAFiG,6CAI1E,IAAIO,GAAJ,CAAQL,SAAR,CAJ0E;AAAA;;AAAA;AAAA;AAAA,UAItFM,QAJsF;;AAK/F,UAAI,CAAC,sDAAwBA,QAAxB,CAAL,EAAwC;AACtC;AACA;AACAT,cAAM,CAACS,QAAD,CAANT,GAAmBC,IAAI,CAACG,MAALH,CAAY,UAACD,MAAD,EAASM,GAAT;AAAA,iDAAuBN,MAAvB,GAAkCM,GAAG,CAACG,QAAD,CAArC;AAAZ,WAAgE,EAAhER,CAAnBD;AACD;AAT8F;;AAIjG,wDAA2C;AAAAU;AAM1C;AAVgG;AAAAC;AAAA;AAAAA;AAAA;;AAYjG,SAAOX,MAAP;AACD","names":["mergeLocalizedStrings","merged","args","arguments","languages","reduce","keys","arg","Object","Set","language","_loop","_iterator"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-api/lib/src/localization/mergeLocalizedStrings.ts"],"sourcesContent":["import { isForbiddenPropertyName } from 'botframework-webchat-core';\n\nimport LocalizedStrings from '../types/LocalizedStrings';\n\ntype LocalizedStringsMap = { [language: string]: LocalizedStrings };\n\nexport default function mergeLocalizedStrings(...args: LocalizedStringsMap[]): LocalizedStringsMap {\n  const merged = {};\n  const languages = args.reduce((keys, arg) => [...keys, ...Object.keys(arg)], []);\n\n  for (const language of new Set(languages)) {\n    if (!isForbiddenPropertyName(language)) {\n      // Mitigation through denylisting.\n      // eslint-disable-next-line security/detect-object-injection\n      merged[language] = args.reduce((merged, arg) => ({ ...merged, ...arg[language] }), {});\n    }\n  }\n\n  return merged;\n}\n"]},"metadata":{},"sourceType":"script"}