{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { Contracts } from \"./Contracts\";\nimport { PronunciationAssessmentGradingSystem, PronunciationAssessmentGranularity, PropertyCollection, PropertyId } from \"./Exports\";\n/**\n * Pronunciation assessment configuration.\n * @class PronunciationAssessmentConfig\n * Added in version 1.15.0.\n */\n\nexport class PronunciationAssessmentConfig {\n  /**\n   * PronunciationAssessmentConfig constructor.\n   * @constructor\n   * @param {string} referenceText\n   * @param gradingSystem\n   * @param granularity\n   * @param enableMiscue\n   */\n  constructor(referenceText) {\n    let gradingSystem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : PronunciationAssessmentGradingSystem.FivePoint;\n    let granularity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : PronunciationAssessmentGranularity.Phoneme;\n    let enableMiscue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    Contracts.throwIfNullOrUndefined(referenceText, \"referenceText\");\n    this.privProperties = new PropertyCollection();\n    this.privProperties.setProperty(PropertyId.PronunciationAssessment_ReferenceText, referenceText);\n    this.privProperties.setProperty(PropertyId.PronunciationAssessment_GradingSystem, PronunciationAssessmentGradingSystem[gradingSystem]);\n    this.privProperties.setProperty(PropertyId.PronunciationAssessment_Granularity, PronunciationAssessmentGranularity[granularity]);\n    this.privProperties.setProperty(PropertyId.PronunciationAssessment_EnableMiscue, String(enableMiscue));\n  }\n  /**\n   * @member PronunciationAssessmentConfig.fromJSON\n   * @function\n   * @public\n   * @param {string} json The json string containing the pronunciation assessment parameters.\n   * @return {PronunciationAssessmentConfig} Instance of PronunciationAssessmentConfig\n   * @summary Creates an instance of the PronunciationAssessmentConfig from json.\n   */\n\n\n  static fromJSON(json) {\n    Contracts.throwIfNullOrUndefined(json, \"json\");\n    const config = new PronunciationAssessmentConfig(\"\");\n    config.privProperties = new PropertyCollection();\n    config.properties.setProperty(PropertyId.PronunciationAssessment_Json, json);\n    return config;\n  }\n\n  toJSON() {\n    this.updateJson();\n    return this.privProperties.getProperty(PropertyId.PronunciationAssessment_Params);\n  }\n\n  applyTo(recognizer) {\n    this.updateJson();\n    const recoBase = recognizer.internalData;\n    recoBase.speechContext.setPronunciationAssessmentParams(this.properties.getProperty(PropertyId.PronunciationAssessment_Params));\n  }\n  /**\n   * Gets the reference text.\n   * @member PronunciationAssessmentConfig.prototype.referenceText\n   * @function\n   * @public\n   * @returns {string} Reference text.\n   */\n\n\n  get referenceText() {\n    return this.properties.getProperty(PropertyId.PronunciationAssessment_ReferenceText);\n  }\n  /**\n   * Gets/Sets the reference text.\n   * @member PronunciationAssessmentConfig.prototype.referenceText\n   * @function\n   * @public\n   * @param {string} referenceText - Reference text.\n   */\n\n\n  set referenceText(referenceText) {\n    Contracts.throwIfNullOrWhitespace(referenceText, \"referenceText\");\n    this.properties.setProperty(PropertyId.PronunciationAssessment_ReferenceText, referenceText);\n  }\n  /**\n   * @member PronunciationAssessmentConfig.prototype.properties\n   * @function\n   * @public\n   * @return {PropertyCollection} Properties of the config.\n   * @summary Gets a pronunciation assessment config properties\n   */\n\n\n  get properties() {\n    return this.privProperties;\n  }\n\n  updateJson() {\n    const jsonString = this.privProperties.getProperty(PropertyId.PronunciationAssessment_Json, \"{}\");\n    const paramsJson = JSON.parse(jsonString);\n    const referenceText = this.privProperties.getProperty(PropertyId.PronunciationAssessment_ReferenceText);\n\n    if (referenceText) {\n      paramsJson.referenceText = referenceText;\n    }\n\n    const gradingSystem = this.privProperties.getProperty(PropertyId.PronunciationAssessment_GradingSystem);\n\n    if (gradingSystem) {\n      paramsJson.gradingSystem = gradingSystem;\n    }\n\n    const granularity = this.privProperties.getProperty(PropertyId.PronunciationAssessment_Granularity);\n\n    if (granularity) {\n      paramsJson.granularity = granularity;\n    } // always set dimension to Comprehensive\n\n\n    paramsJson.dimension = \"Comprehensive\";\n    const enableMiscueString = this.privProperties.getProperty(PropertyId.PronunciationAssessment_EnableMiscue);\n\n    if (enableMiscueString === \"true\") {\n      paramsJson.enableMiscue = true;\n    } else if (enableMiscueString === \"false\") {\n      paramsJson.enableMiscue = false;\n    }\n\n    this.privProperties.setProperty(PropertyId.PronunciationAssessment_Params, JSON.stringify(paramsJson));\n  }\n\n}","map":{"version":3,"mappings":"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","names":["Contracts","PronunciationAssessmentGradingSystem","PronunciationAssessmentGranularity","PropertyCollection","PropertyId","PronunciationAssessmentConfig","constructor","referenceText","gradingSystem","FivePoint","granularity","Phoneme","enableMiscue","throwIfNullOrUndefined","privProperties","setProperty","PronunciationAssessment_ReferenceText","PronunciationAssessment_GradingSystem","PronunciationAssessment_Granularity","PronunciationAssessment_EnableMiscue","String","fromJSON","json","config","properties","PronunciationAssessment_Json","toJSON","updateJson","getProperty","PronunciationAssessment_Params","applyTo","recognizer","recoBase","internalData","speechContext","setPronunciationAssessmentParams","throwIfNullOrWhitespace","jsonString","paramsJson","JSON","parse","dimension","enableMiscueString","stringify"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/src/sdk/PronunciationAssessmentConfig.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ServiceRecognizerBase } from \"../common.speech/ServiceRecognizerBase\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    PronunciationAssessmentGradingSystem,\r\n    PronunciationAssessmentGranularity,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Pronunciation assessment configuration.\r\n * @class PronunciationAssessmentConfig\r\n * Added in version 1.15.0.\r\n */\r\nexport class PronunciationAssessmentConfig {\r\n    private privProperties: PropertyCollection;\r\n\r\n    /**\r\n     * PronunciationAssessmentConfig constructor.\r\n     * @constructor\r\n     * @param {string} referenceText\r\n     * @param gradingSystem\r\n     * @param granularity\r\n     * @param enableMiscue\r\n     */\r\n    public constructor(referenceText: string,\r\n                       gradingSystem: PronunciationAssessmentGradingSystem = PronunciationAssessmentGradingSystem.FivePoint,\r\n                       granularity: PronunciationAssessmentGranularity = PronunciationAssessmentGranularity.Phoneme,\r\n                       enableMiscue: boolean = false) {\r\n        Contracts.throwIfNullOrUndefined(referenceText, \"referenceText\");\r\n        this.privProperties = new PropertyCollection();\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_ReferenceText, referenceText);\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_GradingSystem, PronunciationAssessmentGradingSystem[gradingSystem]);\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_Granularity, PronunciationAssessmentGranularity[granularity]);\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_EnableMiscue, String(enableMiscue));\r\n    }\r\n\r\n    /**\r\n     * @member PronunciationAssessmentConfig.fromJSON\r\n     * @function\r\n     * @public\r\n     * @param {string} json The json string containing the pronunciation assessment parameters.\r\n     * @return {PronunciationAssessmentConfig} Instance of PronunciationAssessmentConfig\r\n     * @summary Creates an instance of the PronunciationAssessmentConfig from json.\r\n     */\r\n    public static fromJSON(json: string): PronunciationAssessmentConfig {\r\n        Contracts.throwIfNullOrUndefined(json, \"json\");\r\n        const config = new PronunciationAssessmentConfig(\"\");\r\n        config.privProperties = new PropertyCollection();\r\n        config.properties.setProperty(PropertyId.PronunciationAssessment_Json, json);\r\n        return config;\r\n    }\r\n\r\n    public toJSON(): string {\r\n        this.updateJson();\r\n        return this.privProperties.getProperty(PropertyId.PronunciationAssessment_Params);\r\n    }\r\n\r\n    public applyTo(recognizer: Recognizer): void {\r\n        this.updateJson();\r\n        const recoBase = recognizer.internalData as ServiceRecognizerBase;\r\n        recoBase.speechContext.setPronunciationAssessmentParams(this.properties.getProperty(PropertyId.PronunciationAssessment_Params));\r\n    }\r\n\r\n    /**\r\n     * Gets the reference text.\r\n     * @member PronunciationAssessmentConfig.prototype.referenceText\r\n     * @function\r\n     * @public\r\n     * @returns {string} Reference text.\r\n     */\r\n    public get referenceText(): string {\r\n        return this.properties.getProperty(PropertyId.PronunciationAssessment_ReferenceText);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the reference text.\r\n     * @member PronunciationAssessmentConfig.prototype.referenceText\r\n     * @function\r\n     * @public\r\n     * @param {string} referenceText - Reference text.\r\n     */\r\n    public set referenceText(referenceText: string) {\r\n        Contracts.throwIfNullOrWhitespace(referenceText, \"referenceText\");\r\n        this.properties.setProperty(PropertyId.PronunciationAssessment_ReferenceText, referenceText);\r\n    }\r\n\r\n    /**\r\n     * @member PronunciationAssessmentConfig.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @return {PropertyCollection} Properties of the config.\r\n     * @summary Gets a pronunciation assessment config properties\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    private updateJson(): void {\r\n        const jsonString = this.privProperties.getProperty(PropertyId.PronunciationAssessment_Json, \"{}\");\r\n        const paramsJson = JSON.parse(jsonString);\r\n\r\n        const referenceText = this.privProperties.getProperty(PropertyId.PronunciationAssessment_ReferenceText);\r\n        if (referenceText) {\r\n            paramsJson.referenceText = referenceText;\r\n        }\r\n\r\n        const gradingSystem = this.privProperties.getProperty(PropertyId.PronunciationAssessment_GradingSystem);\r\n        if (gradingSystem) {\r\n            paramsJson.gradingSystem = gradingSystem;\r\n        }\r\n\r\n        const granularity = this.privProperties.getProperty(PropertyId.PronunciationAssessment_Granularity);\r\n        if (granularity) {\r\n            paramsJson.granularity = granularity;\r\n        }\r\n\r\n        // always set dimension to Comprehensive\r\n        paramsJson.dimension = \"Comprehensive\";\r\n\r\n        const enableMiscueString = this.privProperties.getProperty(PropertyId.PronunciationAssessment_EnableMiscue);\r\n        if (enableMiscueString === \"true\") {\r\n            paramsJson.enableMiscue = true;\r\n        } else if (enableMiscueString === \"false\") {\r\n            paramsJson.enableMiscue = false;\r\n        }\r\n\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_Params, JSON.stringify(paramsJson));\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}