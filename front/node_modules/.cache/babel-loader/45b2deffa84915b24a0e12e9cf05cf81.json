{"ast":null,"code":"\"use strict\"; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConversationConnectionConfig = void 0;\n\nvar RestConfigBase_1 = require(\"../../common.browser/RestConfigBase\");\n\nvar ConversationConnectionConfig =\n/** @class */\nfunction (_super) {\n  __extends(ConversationConnectionConfig, _super);\n\n  function ConversationConnectionConfig() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(ConversationConnectionConfig, \"host\", {\n    get: function () {\n      return ConversationConnectionConfig.privHost;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ConversationConnectionConfig, \"apiVersion\", {\n    get: function () {\n      return ConversationConnectionConfig.privApiVersion;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ConversationConnectionConfig, \"clientAppId\", {\n    get: function () {\n      return ConversationConnectionConfig.privClientAppId;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ConversationConnectionConfig, \"defaultLanguageCode\", {\n    get: function () {\n      return ConversationConnectionConfig.privDefaultLanguageCode;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ConversationConnectionConfig, \"restPath\", {\n    get: function () {\n      return ConversationConnectionConfig.privRestPath;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ConversationConnectionConfig, \"webSocketPath\", {\n    get: function () {\n      return ConversationConnectionConfig.privWebSocketPath;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ConversationConnectionConfig, \"speechHost\", {\n    get: function () {\n      return ConversationConnectionConfig.privSpeechHost;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ConversationConnectionConfig, \"speechPath\", {\n    get: function () {\n      return ConversationConnectionConfig.privSpeechPath;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ConversationConnectionConfig, \"transcriptionEventKeys\", {\n    get: function () {\n      return ConversationConnectionConfig.privTranscriptionEventKeys;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  ConversationConnectionConfig.privHost = \"dev.microsofttranslator.com\";\n  ConversationConnectionConfig.privRestPath = \"/capito/room\";\n  ConversationConnectionConfig.privApiVersion = \"2.0\";\n  ConversationConnectionConfig.privDefaultLanguageCode = \"en-US\";\n  ConversationConnectionConfig.privClientAppId = \"FC539C22-1767-4F1F-84BC-B4D811114F15\";\n  ConversationConnectionConfig.privWebSocketPath = \"/capito/translate\";\n  ConversationConnectionConfig.privSpeechHost = \"{region}.s2s.speech.microsoft.com\";\n  ConversationConnectionConfig.privSpeechPath = \"/speech/translation/cognitiveservices/v1\";\n  ConversationConnectionConfig.privTranscriptionEventKeys = [\"iCalUid\", \"callId\", \"organizer\", \"FLAC\", \"MTUri\", \"DifferenciateGuestSpeakers\", \"audiorecording\", \"Threadid\", \"OrganizerMri\", \"OrganizerTenantId\", \"UserToken\"];\n  return ConversationConnectionConfig;\n}(RestConfigBase_1.RestConfigBase);\n\nexports.ConversationConnectionConfig = ConversationConnectionConfig;","map":{"version":3,"mappings":"cACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;AAIA;AAAA;AAAA;AAAkDA;;AAAlD;;AA+CC;;AAnCGC,wBAAkBC,4BAAlB,EAAkB,MAAlB,EAAsB;SAAtB;AACI,aAAOA,4BAA4B,CAACC,QAApC;AACH,KAFqB;qBAAA;;AAAA,GAAtB;AAIAF,wBAAkBC,4BAAlB,EAAkB,YAAlB,EAA4B;SAA5B;AACI,aAAOA,4BAA4B,CAACE,cAApC;AACH,KAF2B;qBAAA;;AAAA,GAA5B;AAIAH,wBAAkBC,4BAAlB,EAAkB,aAAlB,EAA6B;SAA7B;AACI,aAAOA,4BAA4B,CAACG,eAApC;AACH,KAF4B;qBAAA;;AAAA,GAA7B;AAIAJ,wBAAkBC,4BAAlB,EAAkB,qBAAlB,EAAqC;SAArC;AACI,aAAOA,4BAA4B,CAACI,uBAApC;AACH,KAFoC;qBAAA;;AAAA,GAArC;AAIAL,wBAAkBC,4BAAlB,EAAkB,UAAlB,EAA0B;SAA1B;AACI,aAAOA,4BAA4B,CAACK,YAApC;AACH,KAFyB;qBAAA;;AAAA,GAA1B;AAIAN,wBAAkBC,4BAAlB,EAAkB,eAAlB,EAA+B;SAA/B;AACI,aAAOA,4BAA4B,CAACM,iBAApC;AACH,KAF8B;qBAAA;;AAAA,GAA/B;AAIAP,wBAAkBC,4BAAlB,EAAkB,YAAlB,EAA4B;SAA5B;AACI,aAAOA,4BAA4B,CAACO,cAApC;AACH,KAF2B;qBAAA;;AAAA,GAA5B;AAIAR,wBAAkBC,4BAAlB,EAAkB,YAAlB,EAA4B;SAA5B;AACI,aAAOA,4BAA4B,CAACQ,cAApC;AACH,KAF2B;qBAAA;;AAAA,GAA5B;AAIAT,wBAAkBC,4BAAlB,EAAkB,wBAAlB,EAAwC;SAAxC;AACI,aAAOA,4BAA4B,CAACS,0BAApC;AACH,KAFuC;qBAAA;;AAAA,GAAxC;AA1CwBT,0CAAmB,6BAAnB;AACAA,8CAAuB,cAAvB;AACAA,gDAAyB,KAAzB;AACAA,yDAAkC,OAAlC;AACAA,iDAA0B,sCAA1B;AACAA,mDAA4B,mBAA5B;AACAA,gDAAyB,mCAAzB;AACAA,gDAAyB,0CAAzB;AACAA,4DAAuC,CAAC,SAAD,EAAY,QAAZ,EAAsB,WAAtB,EAAmC,MAAnC,EAA2C,OAA3C,EAAoD,4BAApD,EAAkF,gBAAlF,EAAoG,UAApG,EAAgH,cAAhH,EAAgI,mBAAhI,EAAqJ,WAArJ,CAAvC;AAqC5B;AA/CA,EAAkDU,+BAAlD;;AAAaC","names":["__extends","Object","ConversationConnectionConfig","privHost","privApiVersion","privClientAppId","privDefaultLanguageCode","privRestPath","privWebSocketPath","privSpeechHost","privSpeechPath","privTranscriptionEventKeys","RestConfigBase_1","exports"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/src/common.speech/Transcription/ConversationConnectionConfig.ts"],"sourcesContent":["\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    RestConfigBase\r\n} from \"../../common.browser/RestConfigBase\";\r\n\r\nexport class ConversationConnectionConfig extends RestConfigBase {\r\n\r\n    private static readonly privHost: string = \"dev.microsofttranslator.com\";\r\n    private static readonly privRestPath: string = \"/capito/room\";\r\n    private static readonly privApiVersion: string = \"2.0\";\r\n    private static readonly privDefaultLanguageCode: string = \"en-US\";\r\n    private static readonly privClientAppId: string = \"FC539C22-1767-4F1F-84BC-B4D811114F15\";\r\n    private static readonly privWebSocketPath: string = \"/capito/translate\";\r\n    private static readonly privSpeechHost: string = \"{region}.s2s.speech.microsoft.com\";\r\n    private static readonly privSpeechPath: string = \"/speech/translation/cognitiveservices/v1\";\r\n    private static readonly privTranscriptionEventKeys: string[] = [\"iCalUid\", \"callId\", \"organizer\", \"FLAC\", \"MTUri\", \"DifferenciateGuestSpeakers\", \"audiorecording\", \"Threadid\", \"OrganizerMri\", \"OrganizerTenantId\", \"UserToken\"];\r\n\r\n    public static get host(): string {\r\n        return ConversationConnectionConfig.privHost;\r\n    }\r\n\r\n    public static get apiVersion(): string {\r\n        return ConversationConnectionConfig.privApiVersion;\r\n    }\r\n\r\n    public static get clientAppId(): string {\r\n        return ConversationConnectionConfig.privClientAppId;\r\n    }\r\n\r\n    public static get defaultLanguageCode(): string {\r\n        return ConversationConnectionConfig.privDefaultLanguageCode;\r\n    }\r\n\r\n    public static get restPath(): string {\r\n        return ConversationConnectionConfig.privRestPath;\r\n    }\r\n\r\n    public static get webSocketPath(): string {\r\n        return ConversationConnectionConfig.privWebSocketPath;\r\n    }\r\n\r\n    public static get speechHost(): string {\r\n        return ConversationConnectionConfig.privSpeechHost;\r\n    }\r\n\r\n    public static get speechPath(): string {\r\n        return ConversationConnectionConfig.privSpeechPath;\r\n    }\r\n\r\n    public static get transcriptionEventKeys(): string[] {\r\n        return ConversationConnectionConfig.privTranscriptionEventKeys;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}