{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs3/helpers/slicedToArray\";\n/* eslint no-magic-numbers: [\"error\", { \"ignore\": [0, 1, 2, 3] }] */\n\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useState } from 'react';\nimport Composer from './Composer';\nimport useReadyState from './hooks/useReadyState';\nimport useSupported from './hooks/useSupported';\n\nvar DictateCheckboxCore = function DictateCheckboxCore(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      disabled = _ref.disabled,\n      onChange = _ref.onChange,\n      started = _ref.started;\n\n  var _useReadyState = useReadyState(),\n      _useReadyState2 = _slicedToArray(_useReadyState, 1),\n      readyState = _useReadyState2[0];\n\n  var _useSupported = useSupported(),\n      _useSupported2 = _slicedToArray(_useSupported, 1),\n      supported = _useSupported2[0];\n\n  return /*#__PURE__*/React.createElement(\"label\", null, /*#__PURE__*/React.createElement(\"input\", {\n    checked: started,\n    className: className,\n    disabled: readyState === 1 || readyState === 3 || !supported || disabled,\n    onChange: onChange,\n    type: \"checkbox\"\n  }), typeof children === 'function' ? children({\n    readyState: readyState\n  }) : children);\n};\n\nDictateCheckboxCore.defaultProps = {\n  children: undefined,\n  className: undefined,\n  disabled: undefined\n};\nDictateCheckboxCore.propTypes = {\n  children: PropTypes.any,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func.isRequired,\n  started: PropTypes.bool.isRequired\n};\n\nvar DictateCheckbox = function DictateCheckbox(_ref2) {\n  var children = _ref2.children,\n      className = _ref2.className,\n      disabled = _ref2.disabled,\n      extra = _ref2.extra,\n      grammar = _ref2.grammar,\n      lang = _ref2.lang,\n      onDictate = _ref2.onDictate,\n      onError = _ref2.onError,\n      onProgress = _ref2.onProgress,\n      onRawEvent = _ref2.onRawEvent,\n      speechGrammarList = _ref2.speechGrammarList,\n      speechRecognition = _ref2.speechRecognition;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      started = _useState2[0],\n      setStarted = _useState2[1];\n\n  var handleChange = useCallback(function (_ref3) {\n    var checked = _ref3.target.checked;\n    setStarted(checked);\n  }, [setStarted]);\n  var handleDictate = useCallback(function (event) {\n    setStarted(false);\n    onDictate && onDictate(event);\n  }, [onDictate, setStarted]);\n  var handleError = useCallback(function (event) {\n    setStarted(false);\n    onError && onError(event);\n  }, [onError, setStarted]);\n  return /*#__PURE__*/React.createElement(Composer, {\n    extra: extra,\n    grammar: grammar,\n    lang: lang,\n    onDictate: handleDictate,\n    onError: handleError,\n    onProgress: onProgress,\n    onRawEvent: onRawEvent,\n    speechGrammarList: speechGrammarList,\n    speechRecognition: speechRecognition,\n    started: started && !disabled\n  }, /*#__PURE__*/React.createElement(DictateCheckboxCore, {\n    className: className,\n    disabled: disabled,\n    onChange: handleChange,\n    started: started\n  }, children));\n};\n\nDictateCheckbox.defaultProps = {\n  children: undefined,\n  className: undefined,\n  disabled: undefined,\n  extra: undefined,\n  grammar: undefined,\n  lang: undefined,\n  onDictate: undefined,\n  onError: undefined,\n  onProgress: undefined,\n  onRawEvent: undefined,\n  speechGrammarList: undefined,\n  speechRecognition: undefined\n};\nDictateCheckbox.propTypes = {\n  children: PropTypes.any,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  extra: PropTypes.any,\n  grammar: PropTypes.string,\n  lang: PropTypes.string,\n  onDictate: PropTypes.func,\n  onError: PropTypes.func,\n  onProgress: PropTypes.func,\n  onRawEvent: PropTypes.func,\n  speechGrammarList: PropTypes.any,\n  speechRecognition: PropTypes.any\n};\nexport default DictateCheckbox;","map":{"version":3,"mappings":";AAAA;;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,YAAP,MAAyB,sBAAzB;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAA0D;AAAA,MAAvDC,QAAuD,QAAvDA,QAAuD;AAAA,MAA7CC,SAA6C,QAA7CA,SAA6C;AAAA,MAAlCC,QAAkC,QAAlCA,QAAkC;AAAA,MAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AACpF,uBAAqBP,aAAa,EAAlC;AAAA;AAAA,MAAOQ,UAAP;;AACA,sBAAoBP,YAAY,EAAhC;AAAA;AAAA,MAAOQ,SAAP;;AAEA,sBACEb,gDACEA;AACEc,WAAO,EAAEH,OADX;AAEEH,aAAS,EAAEA,SAFb;AAGEC,YAAQ,EAAEG,UAAU,KAAK,CAAfA,IAAoBA,UAAU,KAAK,CAAnCA,IAAwC,CAACC,SAAzCD,IAAsDH,QAHlE;AAIEC,YAAQ,EAAEA,QAJZ;AAKEK,QAAI,EAAC;AALP,IADF,EAQG,OAAOR,QAAP,KAAoB,UAApB,GAAiCA,QAAQ,CAAC;AAAEK,cAAU,EAAVA;AAAF,GAAD,CAAzC,GAA4DL,QAR/D,CADF;AAJF;;AAkBAD,mBAAmB,CAACU,YAApBV,GAAmC;AACjCC,UAAQ,EAAEU,SADuB;AAEjCT,WAAS,EAAES,SAFsB;AAGjCR,UAAQ,EAAEQ;AAHuB,CAAnCX;AAMAA,mBAAmB,CAACY,SAApBZ,GAAgC;AAC9BC,UAAQ,EAAER,SAAS,CAACoB,GADU;AAE9BX,WAAS,EAAET,SAAS,CAACqB,MAFS;AAG9BX,UAAQ,EAAEV,SAAS,CAACsB,IAHU;AAI9BX,UAAQ,EAAEX,SAAS,CAACuB,IAAVvB,CAAewB,UAJK;AAK9BZ,SAAO,EAAEZ,SAAS,CAACsB,IAAVtB,CAAewB;AALM,CAAhCjB;;AAQA,IAAMkB,eAAe,GAAG,SAAlBA,eAAkB,QAalB;AAAA,MAZJjB,QAYI,SAZJA,QAYI;AAAA,MAXJC,SAWI,SAXJA,SAWI;AAAA,MAVJC,QAUI,SAVJA,QAUI;AAAA,MATJgB,KASI,SATJA,KASI;AAAA,MARJC,OAQI,SARJA,OAQI;AAAA,MAPJC,IAOI,SAPJA,IAOI;AAAA,MANJC,SAMI,SANJA,SAMI;AAAA,MALJC,OAKI,SALJA,OAKI;AAAA,MAJJC,UAII,SAJJA,UAII;AAAA,MAHJC,UAGI,SAHJA,UAGI;AAAA,MAFJC,iBAEI,SAFJA,iBAEI;AAAA,MADJC,iBACI,SADJA,iBACI;;AACJ,kBAA8B/B,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOS,OAAP;AAAA,MAAgBuB,UAAhB;;AAEA,MAAMC,YAAY,GAAGlC,WAAW,CAC9B,iBAA6B;AAAA,QAAhBa,OAAgB,SAA1BsB,MAA0B,CAAhBtB,OAAgB;AAC3BoB,cAAU,CAACpB,OAAD,CAAVoB;AAF4B,KAI9B,CAACA,UAAD,CAJ8B,CAAhC;AAOA,MAAMG,aAAa,GAAGpC,WAAW,CAC/B,iBAAS;AACPiC,cAAU,CAAC,KAAD,CAAVA;AAEAN,aAAS,IAAIA,SAAS,CAACU,KAAD,CAAtBV;AAJ6B,KAM/B,CAACA,SAAD,EAAYM,UAAZ,CAN+B,CAAjC;AASA,MAAMK,WAAW,GAAGtC,WAAW,CAC7B,iBAAS;AACPiC,cAAU,CAAC,KAAD,CAAVA;AACAL,WAAO,IAAIA,OAAO,CAACS,KAAD,CAAlBT;AAH2B,KAK7B,CAACA,OAAD,EAAUK,UAAV,CAL6B,CAA/B;AAQA,sBACElC,oBAACG,QAAD;AACEsB,SAAK,EAAEA,KADT;AAEEC,WAAO,EAAEA,OAFX;AAGEC,QAAI,EAAEA,IAHR;AAIEC,aAAS,EAAES,aAJb;AAKER,WAAO,EAAEU,WALX;AAMET,cAAU,EAAEA,UANd;AAOEC,cAAU,EAAEA,UAPd;AAQEC,qBAAiB,EAAEA,iBARrB;AASEC,qBAAiB,EAAEA,iBATrB;AAUEtB,WAAO,EAAEA,OAAO,IAAI,CAACF;AAVvB,kBAYET,oBAACM,mBAAD;AAAqBE,aAAS,EAAEA,SAAhC;AAA2CC,YAAQ,EAAEA,QAArD;AAA+DC,YAAQ,EAAEyB,YAAzE;AAAuFxB,WAAO,EAAEA;AAAhG,KACGJ,QADH,CAZF,CADF;AAxCF;;AA4DAiB,eAAe,CAACR,YAAhBQ,GAA+B;AAC7BjB,UAAQ,EAAEU,SADmB;AAE7BT,WAAS,EAAES,SAFkB;AAG7BR,UAAQ,EAAEQ,SAHmB;AAI7BQ,OAAK,EAAER,SAJsB;AAK7BS,SAAO,EAAET,SALoB;AAM7BU,MAAI,EAAEV,SANuB;AAO7BW,WAAS,EAAEX,SAPkB;AAQ7BY,SAAO,EAAEZ,SARoB;AAS7Ba,YAAU,EAAEb,SATiB;AAU7Bc,YAAU,EAAEd,SAViB;AAW7Be,mBAAiB,EAAEf,SAXU;AAY7BgB,mBAAiB,EAAEhB;AAZU,CAA/BO;AAeAA,eAAe,CAACN,SAAhBM,GAA4B;AAC1BjB,UAAQ,EAAER,SAAS,CAACoB,GADM;AAE1BX,WAAS,EAAET,SAAS,CAACqB,MAFK;AAG1BX,UAAQ,EAAEV,SAAS,CAACsB,IAHM;AAI1BI,OAAK,EAAE1B,SAAS,CAACoB,GAJS;AAK1BO,SAAO,EAAE3B,SAAS,CAACqB,MALO;AAM1BO,MAAI,EAAE5B,SAAS,CAACqB,MANU;AAO1BQ,WAAS,EAAE7B,SAAS,CAACuB,IAPK;AAQ1BO,SAAO,EAAE9B,SAAS,CAACuB,IARO;AAS1BQ,YAAU,EAAE/B,SAAS,CAACuB,IATI;AAU1BS,YAAU,EAAEhC,SAAS,CAACuB,IAVI;AAW1BU,mBAAiB,EAAEjC,SAAS,CAACoB,GAXH;AAY1Bc,mBAAiB,EAAElC,SAAS,CAACoB;AAZH,CAA5BK;AAeA,eAAeA,eAAf","names":["PropTypes","React","useCallback","useState","Composer","useReadyState","useSupported","DictateCheckboxCore","children","className","disabled","onChange","started","readyState","supported","checked","type","defaultProps","undefined","propTypes","any","string","bool","func","isRequired","DictateCheckbox","extra","grammar","lang","onDictate","onError","onProgress","onRawEvent","speechGrammarList","speechRecognition","setStarted","handleChange","target","handleDictate","event","handleError"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/react-dictate-button/src/DictateCheckbox.js"],"sourcesContent":["/* eslint no-magic-numbers: [\"error\", { \"ignore\": [0, 1, 2, 3] }] */\n\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useState } from 'react';\n\nimport Composer from './Composer';\nimport useReadyState from './hooks/useReadyState';\nimport useSupported from './hooks/useSupported';\n\nconst DictateCheckboxCore = ({ children, className, disabled, onChange, started }) => {\n  const [readyState] = useReadyState();\n  const [supported] = useSupported();\n\n  return (\n    <label>\n      <input\n        checked={started}\n        className={className}\n        disabled={readyState === 1 || readyState === 3 || !supported || disabled}\n        onChange={onChange}\n        type=\"checkbox\"\n      />\n      {typeof children === 'function' ? children({ readyState }) : children}\n    </label>\n  );\n};\n\nDictateCheckboxCore.defaultProps = {\n  children: undefined,\n  className: undefined,\n  disabled: undefined\n};\n\nDictateCheckboxCore.propTypes = {\n  children: PropTypes.any,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func.isRequired,\n  started: PropTypes.bool.isRequired\n};\n\nconst DictateCheckbox = ({\n  children,\n  className,\n  disabled,\n  extra,\n  grammar,\n  lang,\n  onDictate,\n  onError,\n  onProgress,\n  onRawEvent,\n  speechGrammarList,\n  speechRecognition\n}) => {\n  const [started, setStarted] = useState(false);\n\n  const handleChange = useCallback(\n    ({ target: { checked } }) => {\n      setStarted(checked);\n    },\n    [setStarted]\n  );\n\n  const handleDictate = useCallback(\n    event => {\n      setStarted(false);\n\n      onDictate && onDictate(event);\n    },\n    [onDictate, setStarted]\n  );\n\n  const handleError = useCallback(\n    event => {\n      setStarted(false);\n      onError && onError(event);\n    },\n    [onError, setStarted]\n  );\n\n  return (\n    <Composer\n      extra={extra}\n      grammar={grammar}\n      lang={lang}\n      onDictate={handleDictate}\n      onError={handleError}\n      onProgress={onProgress}\n      onRawEvent={onRawEvent}\n      speechGrammarList={speechGrammarList}\n      speechRecognition={speechRecognition}\n      started={started && !disabled}\n    >\n      <DictateCheckboxCore className={className} disabled={disabled} onChange={handleChange} started={started}>\n        {children}\n      </DictateCheckboxCore>\n    </Composer>\n  );\n};\n\nDictateCheckbox.defaultProps = {\n  children: undefined,\n  className: undefined,\n  disabled: undefined,\n  extra: undefined,\n  grammar: undefined,\n  lang: undefined,\n  onDictate: undefined,\n  onError: undefined,\n  onProgress: undefined,\n  onRawEvent: undefined,\n  speechGrammarList: undefined,\n  speechRecognition: undefined\n};\n\nDictateCheckbox.propTypes = {\n  children: PropTypes.any,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  extra: PropTypes.any,\n  grammar: PropTypes.string,\n  lang: PropTypes.string,\n  onDictate: PropTypes.func,\n  onError: PropTypes.func,\n  onProgress: PropTypes.func,\n  onRawEvent: PropTypes.func,\n  speechGrammarList: PropTypes.any,\n  speechRecognition: PropTypes.any\n};\n\nexport default DictateCheckbox;\n"]},"metadata":{},"sourceType":"module"}