{"ast":null,"code":"\"use strict\"; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TranscriberRecognizer = void 0;\n\nvar Exports_1 = require(\"../../common/Exports\");\n\nvar Contracts_1 = require(\"../../sdk/Contracts\");\n\nvar Exports_2 = require(\"../../sdk/Exports\");\n\nvar Exports_3 = require(\"../Exports\");\n\nvar TranscriberRecognizer =\n/** @class */\nfunction (_super) {\n  __extends(TranscriberRecognizer, _super);\n  /**\n   * TranscriberRecognizer constructor.\n   * @constructor\n   * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\n   */\n\n\n  function TranscriberRecognizer(speechTranslationConfig, audioConfig) {\n    var _this = this;\n\n    var speechTranslationConfigImpl = speechTranslationConfig;\n    Contracts_1.Contracts.throwIfNull(speechTranslationConfigImpl, \"speechTranslationConfig\");\n    Contracts_1.Contracts.throwIfNullOrWhitespace(speechTranslationConfigImpl.speechRecognitionLanguage, Exports_2.PropertyId[Exports_2.PropertyId.SpeechServiceConnection_RecoLanguage]);\n    _this = _super.call(this, audioConfig, speechTranslationConfigImpl.properties, new Exports_3.TranscriberConnectionFactory()) || this;\n    _this.privDisposedRecognizer = false;\n    return _this;\n  }\n\n  TranscriberRecognizer.prototype.getConversationInfo = function () {\n    Contracts_1.Contracts.throwIfNullOrUndefined(this.privConversation, \"Conversation\");\n    return this.privConversation.conversationInfo;\n  };\n\n  Object.defineProperty(TranscriberRecognizer.prototype, \"authorizationToken\", {\n    get: function () {\n      return this.properties.getProperty(Exports_2.PropertyId.SpeechServiceAuthorization_Token);\n    },\n    set: function (token) {\n      Contracts_1.Contracts.throwIfNullOrWhitespace(token, \"token\");\n      this.properties.setProperty(Exports_2.PropertyId.SpeechServiceAuthorization_Token, token);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TranscriberRecognizer.prototype, \"conversation\", {\n    set: function (c) {\n      Contracts_1.Contracts.throwIfNullOrUndefined(c, \"Conversation\");\n      this.privConversation = c;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TranscriberRecognizer.prototype, \"speechRecognitionLanguage\", {\n    get: function () {\n      Contracts_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n      return this.properties.getProperty(Exports_2.PropertyId.SpeechServiceConnection_RecoLanguage);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TranscriberRecognizer.prototype, \"properties\", {\n    get: function () {\n      return this.privProperties;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  TranscriberRecognizer.prototype.startContinuousRecognitionAsync = function (cb, err) {\n    Exports_1.marshalPromiseToCallbacks(this.startContinuousRecognitionAsyncImpl(Exports_3.RecognitionMode.Conversation), cb, err);\n  };\n\n  TranscriberRecognizer.prototype.stopContinuousRecognitionAsync = function (cb, err) {\n    Exports_1.marshalPromiseToCallbacks(this.stopContinuousRecognitionAsyncImpl(), cb, err);\n  };\n\n  TranscriberRecognizer.prototype.close = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            Contracts_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n            return [4\n            /*yield*/\n            , this.dispose(true)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }; // Push async join/leave conversation message via serviceRecognizer\n\n\n  TranscriberRecognizer.prototype.pushConversationEvent = function (conversationInfo, command) {\n    return __awaiter(this, void 0, void 0, function () {\n      var reco;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            reco = this.privReco;\n            Contracts_1.Contracts.throwIfNullOrUndefined(reco, \"serviceRecognizer\");\n            return [4\n            /*yield*/\n            , reco.sendSpeechEventAsync(conversationInfo, command)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  TranscriberRecognizer.prototype.connectCallbacks = function (transcriber) {\n    this.canceled = function (s, e) {\n      if (!!transcriber.canceled) {\n        transcriber.canceled(transcriber, e);\n      }\n    };\n\n    this.recognizing = function (s, e) {\n      if (!!transcriber.transcribing) {\n        transcriber.transcribing(transcriber, e);\n      }\n    };\n\n    this.recognized = function (s, e) {\n      if (!!transcriber.transcribed) {\n        transcriber.transcribed(transcriber, e);\n      }\n    };\n\n    this.sessionStarted = function (s, e) {\n      if (!!transcriber.sessionStarted) {\n        transcriber.sessionStarted(transcriber, e);\n      }\n    };\n\n    this.sessionStopped = function (s, e) {\n      if (!!transcriber.sessionStopped) {\n        transcriber.sessionStopped(transcriber, e);\n      }\n    };\n  };\n\n  TranscriberRecognizer.prototype.disconnectCallbacks = function () {\n    this.canceled = undefined;\n    this.recognizing = undefined;\n    this.recognized = undefined;\n    this.sessionStarted = undefined;\n    this.sessionStopped = undefined;\n  };\n  /**\n   * Disposes any resources held by the object.\n   * @member ConversationTranscriber.prototype.dispose\n   * @function\n   * @public\n   * @param {boolean} disposing - true if disposing the object.\n   */\n\n\n  TranscriberRecognizer.prototype.dispose = function (disposing) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (this.privDisposedRecognizer) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            if (!disposing) return [3\n            /*break*/\n            , 2];\n            this.privDisposedRecognizer = true;\n            return [4\n            /*yield*/\n            , this.implRecognizerStop()];\n\n          case 1:\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            return [4\n            /*yield*/\n            , _super.prototype.dispose.call(this, disposing)];\n\n          case 3:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  TranscriberRecognizer.prototype.createRecognizerConfig = function (speechConfig) {\n    return new Exports_3.RecognizerConfig(speechConfig, this.properties);\n  };\n\n  TranscriberRecognizer.prototype.createServiceRecognizer = function (authentication, connectionFactory, audioConfig, recognizerConfig) {\n    var configImpl = audioConfig;\n    return new Exports_3.TranscriptionServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\n  };\n\n  return TranscriberRecognizer;\n}(Exports_2.Recognizer);\n\nexports.TranscriberRecognizer = TranscriberRecognizer;","map":{"version":3,"mappings":"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","names":["__extends","speechTranslationConfig","audioConfig","speechTranslationConfigImpl","Contracts_1","throwIfNull","throwIfNullOrWhitespace","speechRecognitionLanguage","Exports_2","SpeechServiceConnection_RecoLanguage","_this","properties","Exports_3","privDisposedRecognizer","TranscriberRecognizer","throwIfNullOrUndefined","privConversation","conversationInfo","Object","getProperty","SpeechServiceAuthorization_Token","token","setProperty","c","throwIfDisposed","privProperties","cb","err","Exports_1","startContinuousRecognitionAsyncImpl","Conversation","stopContinuousRecognitionAsyncImpl","dispose","_a","command","reco","privReco","sendSpeechEventAsync","transcriber","canceled","s","e","recognizing","transcribing","recognized","transcribed","sessionStarted","sessionStopped","undefined","disposing","implRecognizerStop","_super","call","speechConfig","authentication","connectionFactory","recognizerConfig","configImpl","exports"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/src/common.speech/Transcription/TranscriberRecognizer.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { marshalPromiseToCallbacks } from \"../../common/Exports\";\r\nimport { AudioConfigImpl } from \"../../sdk/Audio/AudioConfig\";\r\nimport { Contracts } from \"../../sdk/Contracts\";\r\nimport {\r\n    AudioConfig,\r\n    CancellationEventArgs,\r\n    Conversation,\r\n    ConversationInfo,\r\n    ConversationTranscriber,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer,\r\n    SessionEventArgs,\r\n    SpeechRecognitionEventArgs,\r\n    SpeechTranslationConfig,\r\n    SpeechTranslationConfigImpl,\r\n} from \"../../sdk/Exports\";\r\nimport {\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechServiceConfig,\r\n    TranscriberConnectionFactory,\r\n    TranscriptionServiceRecognizer,\r\n} from \"../Exports\";\r\n\r\nexport class TranscriberRecognizer extends Recognizer {\r\n    private privDisposedRecognizer: boolean;\r\n    private privConversation: Conversation;\r\n\r\n    /**\r\n     * TranscriberRecognizer constructor.\r\n     * @constructor\r\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\r\n     */\r\n    public constructor(speechTranslationConfig: SpeechTranslationConfig, audioConfig?: AudioConfig) {\r\n        const speechTranslationConfigImpl: SpeechTranslationConfigImpl = speechTranslationConfig as SpeechTranslationConfigImpl;\r\n        Contracts.throwIfNull(speechTranslationConfigImpl, \"speechTranslationConfig\");\r\n\r\n        Contracts.throwIfNullOrWhitespace(\r\n            speechTranslationConfigImpl.speechRecognitionLanguage,\r\n            PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n\r\n        super(audioConfig, speechTranslationConfigImpl.properties, new TranscriberConnectionFactory());\r\n        this.privDisposedRecognizer = false;\r\n    }\r\n\r\n    public recognizing: (sender: Recognizer, event: SpeechRecognitionEventArgs) => void;\r\n\r\n    public recognized: (sender: Recognizer, event: SpeechRecognitionEventArgs) => void;\r\n\r\n    public canceled: (sender: Recognizer, event: CancellationEventArgs) => void;\r\n\r\n    public getConversationInfo(): ConversationInfo {\r\n        Contracts.throwIfNullOrUndefined(this.privConversation, \"Conversation\");\r\n        return this.privConversation.conversationInfo;\r\n    }\r\n\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    public set conversation(c: Conversation) {\r\n        Contracts.throwIfNullOrUndefined(c, \"Conversation\");\r\n        this.privConversation = c;\r\n    }\r\n\r\n    public get speechRecognitionLanguage(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public startContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.startContinuousRecognitionAsyncImpl(RecognitionMode.Conversation), cb, err);\r\n    }\r\n\r\n    public stopContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.stopContinuousRecognitionAsyncImpl(), cb, err);\r\n    }\r\n\r\n    public async close(): Promise<void> {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n        await this.dispose(true);\r\n    }\r\n\r\n    // Push async join/leave conversation message via serviceRecognizer\r\n    public async pushConversationEvent(conversationInfo: ConversationInfo, command: string): Promise<void> {\r\n        const reco = (this.privReco) as TranscriptionServiceRecognizer;\r\n        Contracts.throwIfNullOrUndefined(reco, \"serviceRecognizer\");\r\n        await reco.sendSpeechEventAsync(conversationInfo, command);\r\n    }\r\n\r\n    public connectCallbacks(transcriber: ConversationTranscriber): void {\r\n        this.canceled = (s: any, e: CancellationEventArgs): void => {\r\n            if (!!transcriber.canceled) {\r\n                transcriber.canceled(transcriber, e);\r\n            }\r\n        };\r\n        this.recognizing = (s: any, e: SpeechRecognitionEventArgs): void => {\r\n            if (!!transcriber.transcribing) {\r\n                transcriber.transcribing(transcriber, e);\r\n            }\r\n        };\r\n        this.recognized = (s: any, e: SpeechRecognitionEventArgs): void => {\r\n            if (!!transcriber.transcribed) {\r\n                transcriber.transcribed(transcriber, e);\r\n            }\r\n        };\r\n        this.sessionStarted = (s: any, e: SessionEventArgs): void => {\r\n            if (!!transcriber.sessionStarted) {\r\n                transcriber.sessionStarted(transcriber, e);\r\n            }\r\n        };\r\n        this.sessionStopped = (s: any, e: SessionEventArgs): void => {\r\n            if (!!transcriber.sessionStopped) {\r\n                transcriber.sessionStopped(transcriber, e);\r\n            }\r\n        };\r\n    }\r\n\r\n    public disconnectCallbacks(): void {\r\n        this.canceled = undefined;\r\n        this.recognizing = undefined;\r\n        this.recognized = undefined;\r\n        this.sessionStarted = undefined;\r\n        this.sessionStopped = undefined;\r\n    }\r\n\r\n    /**\r\n     * Disposes any resources held by the object.\r\n     * @member ConversationTranscriber.prototype.dispose\r\n     * @function\r\n     * @public\r\n     * @param {boolean} disposing - true if disposing the object.\r\n     */\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposedRecognizer) {\r\n            return;\r\n        }\r\n\r\n        if (disposing) {\r\n            this.privDisposedRecognizer = true;\r\n            await this.implRecognizerStop();\r\n        }\r\n\r\n        await super.dispose(disposing);\r\n    }\r\n\r\n    protected createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig {\r\n        return new RecognizerConfig(\r\n            speechConfig,\r\n            this.properties);\r\n    }\r\n\r\n    protected createServiceRecognizer(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        recognizerConfig: RecognizerConfig): ServiceRecognizerBase {\r\n        const configImpl: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n        return new TranscriptionServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}