{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _ImageContent = _interopRequireDefault(require(\"./ImageContent\"));\n\nvar _readDataURIToBlob = _interopRequireDefault(require(\"../Utils/readDataURIToBlob\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar ImageAttachment = function ImageAttachment(_ref) {\n  var attachment = _ref.attachment;\n  var imageURL = attachment.thumbnailUrl || attachment.contentUrl; // To support Content Security Policy, data URI cannot be used.\n  // We need to parse the data URI into a blob: URL.\n\n  var blob = (0, _readDataURIToBlob.default)(imageURL);\n\n  if (blob) {\n    imageURL = URL.createObjectURL(blob);\n  }\n\n  return /*#__PURE__*/_react.default.createElement(_ImageContent.default, {\n    alt: attachment.name,\n    src: imageURL\n  });\n};\n\nImageAttachment.propTypes = {\n  // Either attachment.contentUrl or attachment.thumbnailUrl must be specified.\n  attachment: _propTypes.default.oneOfType([_propTypes.default.shape({\n    contentUrl: _propTypes.default.string.isRequired,\n    name: _propTypes.default.string,\n    thumbnailUrl: _propTypes.default.string\n  }), _propTypes.default.shape({\n    contentUrl: _propTypes.default.string,\n    name: _propTypes.default.string,\n    thumbnailUrl: _propTypes.default.string.isRequired\n  })]).isRequired\n};\nvar _default = ImageAttachment;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;;;;;AAEA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAC1C,MAAIC,QAAQ,GAAGD,UAAU,CAACE,YAAXF,IAA2BA,UAAU,CAACG,UAArD,CAD0C,CAG1C;AACA;;AACA,MAAMC,IAAI,GAAG,gCAAkBH,QAAlB,CAAb;;AAEA,MAAIG,IAAJ,EAAU;AACRH,YAAQ,GAAGI,GAAG,CAACC,eAAJD,CAAoBD,IAApBC,CAAXJ;AACD;;AAED,sBAAOM,6BAACC,qBAAD;AAAcC,OAAG,EAAET,UAAU,CAACU,IAA9B;AAAoCC,OAAG,EAAEV;AAAzC,IAAP;AAXF;;AAcAF,eAAe,CAACa,SAAhBb,GAA4B;AAC1B;AACAC,YAAU,EAAEa,mBAAUC,SAAVD,CAAoB,CAC9BA,mBAAUE,KAAVF,CAAgB;AACdV,cAAU,EAAEU,mBAAUG,MAAVH,CAAiBI,UADf;AAEdP,QAAI,EAAEG,mBAAUG,MAFF;AAGdd,gBAAY,EAAEW,mBAAUG;AAHV,GAAhBH,CAD8B,EAM9BA,mBAAUE,KAAVF,CAAgB;AACdV,cAAU,EAAEU,mBAAUG,MADR;AAEdN,QAAI,EAAEG,mBAAUG,MAFF;AAGdd,gBAAY,EAAEW,mBAAUG,MAAVH,CAAiBI;AAHjB,GAAhBJ,CAN8B,CAApBA,EAWTI;AAbuB,CAA5BlB;eAgBeA","names":["ImageAttachment","attachment","imageURL","thumbnailUrl","contentUrl","blob","URL","createObjectURL","_react","_ImageContent","alt","name","src","propTypes","PropTypes","oneOfType","shape","string","isRequired"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-component/lib/src/Attachment/ImageAttachment.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport ImageContent from './ImageContent';\nimport readDataURIToBlob from '../Utils/readDataURIToBlob';\n\nconst ImageAttachment = ({ attachment }) => {\n  let imageURL = attachment.thumbnailUrl || attachment.contentUrl;\n\n  // To support Content Security Policy, data URI cannot be used.\n  // We need to parse the data URI into a blob: URL.\n  const blob = readDataURIToBlob(imageURL);\n\n  if (blob) {\n    imageURL = URL.createObjectURL(blob);\n  }\n\n  return <ImageContent alt={attachment.name} src={imageURL} />;\n};\n\nImageAttachment.propTypes = {\n  // Either attachment.contentUrl or attachment.thumbnailUrl must be specified.\n  attachment: PropTypes.oneOfType([\n    PropTypes.shape({\n      contentUrl: PropTypes.string.isRequired,\n      name: PropTypes.string,\n      thumbnailUrl: PropTypes.string\n    }),\n    PropTypes.shape({\n      contentUrl: PropTypes.string,\n      name: PropTypes.string,\n      thumbnailUrl: PropTypes.string.isRequired\n    })\n  ]).isRequired\n};\n\nexport default ImageAttachment;\n"]},"metadata":{},"sourceType":"script"}