{"ast":null,"code":"\"use strict\"; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PronunciationAssessmentConfig = void 0;\n\nvar Contracts_1 = require(\"./Contracts\");\n\nvar Exports_1 = require(\"./Exports\");\n/**\n * Pronunciation assessment configuration.\n * @class PronunciationAssessmentConfig\n * Added in version 1.15.0.\n */\n\n\nvar PronunciationAssessmentConfig =\n/** @class */\nfunction () {\n  /**\n   * PronunciationAssessmentConfig constructor.\n   * @constructor\n   * @param {string} referenceText\n   * @param gradingSystem\n   * @param granularity\n   * @param enableMiscue\n   */\n  function PronunciationAssessmentConfig(referenceText, gradingSystem, granularity, enableMiscue) {\n    if (gradingSystem === void 0) {\n      gradingSystem = Exports_1.PronunciationAssessmentGradingSystem.FivePoint;\n    }\n\n    if (granularity === void 0) {\n      granularity = Exports_1.PronunciationAssessmentGranularity.Phoneme;\n    }\n\n    if (enableMiscue === void 0) {\n      enableMiscue = false;\n    }\n\n    Contracts_1.Contracts.throwIfNullOrUndefined(referenceText, \"referenceText\");\n    this.privProperties = new Exports_1.PropertyCollection();\n    this.privProperties.setProperty(Exports_1.PropertyId.PronunciationAssessment_ReferenceText, referenceText);\n    this.privProperties.setProperty(Exports_1.PropertyId.PronunciationAssessment_GradingSystem, Exports_1.PronunciationAssessmentGradingSystem[gradingSystem]);\n    this.privProperties.setProperty(Exports_1.PropertyId.PronunciationAssessment_Granularity, Exports_1.PronunciationAssessmentGranularity[granularity]);\n    this.privProperties.setProperty(Exports_1.PropertyId.PronunciationAssessment_EnableMiscue, String(enableMiscue));\n  }\n  /**\n   * @member PronunciationAssessmentConfig.fromJSON\n   * @function\n   * @public\n   * @param {string} json The json string containing the pronunciation assessment parameters.\n   * @return {PronunciationAssessmentConfig} Instance of PronunciationAssessmentConfig\n   * @summary Creates an instance of the PronunciationAssessmentConfig from json.\n   */\n\n\n  PronunciationAssessmentConfig.fromJSON = function (json) {\n    Contracts_1.Contracts.throwIfNullOrUndefined(json, \"json\");\n    var config = new PronunciationAssessmentConfig(\"\");\n    config.privProperties = new Exports_1.PropertyCollection();\n    config.properties.setProperty(Exports_1.PropertyId.PronunciationAssessment_Json, json);\n    return config;\n  };\n\n  PronunciationAssessmentConfig.prototype.toJSON = function () {\n    this.updateJson();\n    return this.privProperties.getProperty(Exports_1.PropertyId.PronunciationAssessment_Params);\n  };\n\n  PronunciationAssessmentConfig.prototype.applyTo = function (recognizer) {\n    this.updateJson();\n    var recoBase = recognizer.internalData;\n    recoBase.speechContext.setPronunciationAssessmentParams(this.properties.getProperty(Exports_1.PropertyId.PronunciationAssessment_Params));\n  };\n\n  Object.defineProperty(PronunciationAssessmentConfig.prototype, \"referenceText\", {\n    /**\n     * Gets the reference text.\n     * @member PronunciationAssessmentConfig.prototype.referenceText\n     * @function\n     * @public\n     * @returns {string} Reference text.\n     */\n    get: function () {\n      return this.properties.getProperty(Exports_1.PropertyId.PronunciationAssessment_ReferenceText);\n    },\n\n    /**\n     * Gets/Sets the reference text.\n     * @member PronunciationAssessmentConfig.prototype.referenceText\n     * @function\n     * @public\n     * @param {string} referenceText - Reference text.\n     */\n    set: function (referenceText) {\n      Contracts_1.Contracts.throwIfNullOrWhitespace(referenceText, \"referenceText\");\n      this.properties.setProperty(Exports_1.PropertyId.PronunciationAssessment_ReferenceText, referenceText);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(PronunciationAssessmentConfig.prototype, \"properties\", {\n    /**\n     * @member PronunciationAssessmentConfig.prototype.properties\n     * @function\n     * @public\n     * @return {PropertyCollection} Properties of the config.\n     * @summary Gets a pronunciation assessment config properties\n     */\n    get: function () {\n      return this.privProperties;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  PronunciationAssessmentConfig.prototype.updateJson = function () {\n    var jsonString = this.privProperties.getProperty(Exports_1.PropertyId.PronunciationAssessment_Json, \"{}\");\n    var paramsJson = JSON.parse(jsonString);\n    var referenceText = this.privProperties.getProperty(Exports_1.PropertyId.PronunciationAssessment_ReferenceText);\n\n    if (referenceText) {\n      paramsJson.referenceText = referenceText;\n    }\n\n    var gradingSystem = this.privProperties.getProperty(Exports_1.PropertyId.PronunciationAssessment_GradingSystem);\n\n    if (gradingSystem) {\n      paramsJson.gradingSystem = gradingSystem;\n    }\n\n    var granularity = this.privProperties.getProperty(Exports_1.PropertyId.PronunciationAssessment_Granularity);\n\n    if (granularity) {\n      paramsJson.granularity = granularity;\n    } // always set dimension to Comprehensive\n\n\n    paramsJson.dimension = \"Comprehensive\";\n    var enableMiscueString = this.privProperties.getProperty(Exports_1.PropertyId.PronunciationAssessment_EnableMiscue);\n\n    if (enableMiscueString === \"true\") {\n      paramsJson.enableMiscue = true;\n    } else if (enableMiscueString === \"false\") {\n      paramsJson.enableMiscue = false;\n    }\n\n    this.privProperties.setProperty(Exports_1.PropertyId.PronunciationAssessment_Params, JSON.stringify(paramsJson));\n  };\n\n  return PronunciationAssessmentConfig;\n}();\n\nexports.PronunciationAssessmentConfig = PronunciationAssessmentConfig;","map":{"version":3,"mappings":"cAAA;AACA;;;;;;;AAGA;;AACA;AAQA;;;;;;;AAKA;AAAA;AAAA;AAGI;;;;;;;;AAQA,yCAAmBA,aAAnB,EACmBC,aADnB,EAEmBC,WAFnB,EAGmBC,YAHnB,EAGgD;AAF7B;AAAAF,sBAAsDG,+CAAqCC,SAA3F;AAAoG;;AACpG;AAAAH,oBAAkDE,6CAAmCE,OAArF;AAA4F;;AAC5F;AAAAH;AAA6B;;AAC5CI,0BAAUC,sBAAV,CAAiCR,aAAjC,EAAgD,eAAhD;AACA,SAAKS,cAAL,GAAsB,IAAIL,4BAAJ,EAAtB;AACA,SAAKK,cAAL,CAAoBC,WAApB,CAAgCN,qBAAWO,qCAA3C,EAAkFX,aAAlF;AACA,SAAKS,cAAL,CAAoBC,WAApB,CAAgCN,qBAAWQ,qCAA3C,EAAkFR,+CAAqCH,aAArC,CAAlF;AACA,SAAKQ,cAAL,CAAoBC,WAApB,CAAgCN,qBAAWS,mCAA3C,EAAgFT,6CAAmCF,WAAnC,CAAhF;AACA,SAAKO,cAAL,CAAoBC,WAApB,CAAgCN,qBAAWU,oCAA3C,EAAiFC,MAAM,CAACZ,YAAD,CAAvF;AACH;AAED;;;;;;;;;;AAQca,2CAAd,UAAuBC,IAAvB,EAAmC;AAC/BV,0BAAUC,sBAAV,CAAiCS,IAAjC,EAAuC,MAAvC;AACA,QAAMC,MAAM,GAAG,IAAIF,6BAAJ,CAAkC,EAAlC,CAAf;AACAE,UAAM,CAACT,cAAP,GAAwB,IAAIL,4BAAJ,EAAxB;AACAc,UAAM,CAACC,UAAP,CAAkBT,WAAlB,CAA8BN,qBAAWgB,4BAAzC,EAAuEH,IAAvE;AACA,WAAOC,MAAP;AACH,GANa;;AAQPF,mDAAP;AACI,SAAKK,UAAL;AACA,WAAO,KAAKZ,cAAL,CAAoBa,WAApB,CAAgClB,qBAAWmB,8BAA3C,CAAP;AACH,GAHM;;AAKAP,oDAAP,UAAeQ,UAAf,EAAqC;AACjC,SAAKH,UAAL;AACA,QAAMI,QAAQ,GAAGD,UAAU,CAACE,YAA5B;AACAD,YAAQ,CAACE,aAAT,CAAuBC,gCAAvB,CAAwD,KAAKT,UAAL,CAAgBG,WAAhB,CAA4BlB,qBAAWmB,8BAAvC,CAAxD;AACH,GAJM;;AAaPM,wBAAWb,uCAAX,EAAW,eAAX,EAAwB;AAPxB;;;;;;;SAOA;AACI,aAAO,KAAKG,UAAL,CAAgBG,WAAhB,CAA4BlB,qBAAWO,qCAAvC,CAAP;AACH,KAFuB;;AAIxB;;;;;;;SAOA,UAAyBX,aAAzB,EAA8C;AAC1CO,4BAAUuB,uBAAV,CAAkC9B,aAAlC,EAAiD,eAAjD;AACA,WAAKmB,UAAL,CAAgBT,WAAhB,CAA4BN,qBAAWO,qCAAvC,EAA8EX,aAA9E;AACH,KAduB;qBAAA;;AAAA,GAAxB;AAuBA6B,wBAAWb,uCAAX,EAAW,YAAX,EAAqB;AAPrB;;;;;;;SAOA;AACI,aAAO,KAAKP,cAAZ;AACH,KAFoB;qBAAA;;AAAA,GAArB;;AAIQO,uDAAR;AACI,QAAMe,UAAU,GAAG,KAAKtB,cAAL,CAAoBa,WAApB,CAAgClB,qBAAWgB,4BAA3C,EAAyE,IAAzE,CAAnB;AACA,QAAMY,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWH,UAAX,CAAnB;AAEA,QAAM/B,aAAa,GAAG,KAAKS,cAAL,CAAoBa,WAApB,CAAgClB,qBAAWO,qCAA3C,CAAtB;;AACA,QAAIX,aAAJ,EAAmB;AACfgC,gBAAU,CAAChC,aAAX,GAA2BA,aAA3B;AACH;;AAED,QAAMC,aAAa,GAAG,KAAKQ,cAAL,CAAoBa,WAApB,CAAgClB,qBAAWQ,qCAA3C,CAAtB;;AACA,QAAIX,aAAJ,EAAmB;AACf+B,gBAAU,CAAC/B,aAAX,GAA2BA,aAA3B;AACH;;AAED,QAAMC,WAAW,GAAG,KAAKO,cAAL,CAAoBa,WAApB,CAAgClB,qBAAWS,mCAA3C,CAApB;;AACA,QAAIX,WAAJ,EAAiB;AACb8B,gBAAU,CAAC9B,WAAX,GAAyBA,WAAzB;AACH,KAjBL,CAmBI;;;AACA8B,cAAU,CAACG,SAAX,GAAuB,eAAvB;AAEA,QAAMC,kBAAkB,GAAG,KAAK3B,cAAL,CAAoBa,WAApB,CAAgClB,qBAAWU,oCAA3C,CAA3B;;AACA,QAAIsB,kBAAkB,KAAK,MAA3B,EAAmC;AAC/BJ,gBAAU,CAAC7B,YAAX,GAA0B,IAA1B;AACH,KAFD,MAEO,IAAIiC,kBAAkB,KAAK,OAA3B,EAAoC;AACvCJ,gBAAU,CAAC7B,YAAX,GAA0B,KAA1B;AACH;;AAED,SAAKM,cAAL,CAAoBC,WAApB,CAAgCN,qBAAWmB,8BAA3C,EAA2EU,IAAI,CAACI,SAAL,CAAeL,UAAf,CAA3E;AACH,GA9BO;;AAgCZ;AApHA;;AAAaM","names":["referenceText","gradingSystem","granularity","enableMiscue","Exports_1","FivePoint","Phoneme","Contracts_1","throwIfNullOrUndefined","privProperties","setProperty","PronunciationAssessment_ReferenceText","PronunciationAssessment_GradingSystem","PronunciationAssessment_Granularity","PronunciationAssessment_EnableMiscue","String","PronunciationAssessmentConfig","json","config","properties","PronunciationAssessment_Json","updateJson","getProperty","PronunciationAssessment_Params","recognizer","recoBase","internalData","speechContext","setPronunciationAssessmentParams","Object","throwIfNullOrWhitespace","jsonString","paramsJson","JSON","parse","dimension","enableMiscueString","stringify","exports"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/PronunciationAssessmentConfig.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ServiceRecognizerBase } from \"../common.speech/ServiceRecognizerBase\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    PronunciationAssessmentGradingSystem,\r\n    PronunciationAssessmentGranularity,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Pronunciation assessment configuration.\r\n * @class PronunciationAssessmentConfig\r\n * Added in version 1.15.0.\r\n */\r\nexport class PronunciationAssessmentConfig {\r\n    private privProperties: PropertyCollection;\r\n\r\n    /**\r\n     * PronunciationAssessmentConfig constructor.\r\n     * @constructor\r\n     * @param {string} referenceText\r\n     * @param gradingSystem\r\n     * @param granularity\r\n     * @param enableMiscue\r\n     */\r\n    public constructor(referenceText: string,\r\n                       gradingSystem: PronunciationAssessmentGradingSystem = PronunciationAssessmentGradingSystem.FivePoint,\r\n                       granularity: PronunciationAssessmentGranularity = PronunciationAssessmentGranularity.Phoneme,\r\n                       enableMiscue: boolean = false) {\r\n        Contracts.throwIfNullOrUndefined(referenceText, \"referenceText\");\r\n        this.privProperties = new PropertyCollection();\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_ReferenceText, referenceText);\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_GradingSystem, PronunciationAssessmentGradingSystem[gradingSystem]);\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_Granularity, PronunciationAssessmentGranularity[granularity]);\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_EnableMiscue, String(enableMiscue));\r\n    }\r\n\r\n    /**\r\n     * @member PronunciationAssessmentConfig.fromJSON\r\n     * @function\r\n     * @public\r\n     * @param {string} json The json string containing the pronunciation assessment parameters.\r\n     * @return {PronunciationAssessmentConfig} Instance of PronunciationAssessmentConfig\r\n     * @summary Creates an instance of the PronunciationAssessmentConfig from json.\r\n     */\r\n    public static fromJSON(json: string): PronunciationAssessmentConfig {\r\n        Contracts.throwIfNullOrUndefined(json, \"json\");\r\n        const config = new PronunciationAssessmentConfig(\"\");\r\n        config.privProperties = new PropertyCollection();\r\n        config.properties.setProperty(PropertyId.PronunciationAssessment_Json, json);\r\n        return config;\r\n    }\r\n\r\n    public toJSON(): string {\r\n        this.updateJson();\r\n        return this.privProperties.getProperty(PropertyId.PronunciationAssessment_Params);\r\n    }\r\n\r\n    public applyTo(recognizer: Recognizer): void {\r\n        this.updateJson();\r\n        const recoBase = recognizer.internalData as ServiceRecognizerBase;\r\n        recoBase.speechContext.setPronunciationAssessmentParams(this.properties.getProperty(PropertyId.PronunciationAssessment_Params));\r\n    }\r\n\r\n    /**\r\n     * Gets the reference text.\r\n     * @member PronunciationAssessmentConfig.prototype.referenceText\r\n     * @function\r\n     * @public\r\n     * @returns {string} Reference text.\r\n     */\r\n    public get referenceText(): string {\r\n        return this.properties.getProperty(PropertyId.PronunciationAssessment_ReferenceText);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the reference text.\r\n     * @member PronunciationAssessmentConfig.prototype.referenceText\r\n     * @function\r\n     * @public\r\n     * @param {string} referenceText - Reference text.\r\n     */\r\n    public set referenceText(referenceText: string) {\r\n        Contracts.throwIfNullOrWhitespace(referenceText, \"referenceText\");\r\n        this.properties.setProperty(PropertyId.PronunciationAssessment_ReferenceText, referenceText);\r\n    }\r\n\r\n    /**\r\n     * @member PronunciationAssessmentConfig.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @return {PropertyCollection} Properties of the config.\r\n     * @summary Gets a pronunciation assessment config properties\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    private updateJson(): void {\r\n        const jsonString = this.privProperties.getProperty(PropertyId.PronunciationAssessment_Json, \"{}\");\r\n        const paramsJson = JSON.parse(jsonString);\r\n\r\n        const referenceText = this.privProperties.getProperty(PropertyId.PronunciationAssessment_ReferenceText);\r\n        if (referenceText) {\r\n            paramsJson.referenceText = referenceText;\r\n        }\r\n\r\n        const gradingSystem = this.privProperties.getProperty(PropertyId.PronunciationAssessment_GradingSystem);\r\n        if (gradingSystem) {\r\n            paramsJson.gradingSystem = gradingSystem;\r\n        }\r\n\r\n        const granularity = this.privProperties.getProperty(PropertyId.PronunciationAssessment_Granularity);\r\n        if (granularity) {\r\n            paramsJson.granularity = granularity;\r\n        }\r\n\r\n        // always set dimension to Comprehensive\r\n        paramsJson.dimension = \"Comprehensive\";\r\n\r\n        const enableMiscueString = this.privProperties.getProperty(PropertyId.PronunciationAssessment_EnableMiscue);\r\n        if (enableMiscueString === \"true\") {\r\n            paramsJson.enableMiscue = true;\r\n        } else if (enableMiscueString === \"false\") {\r\n            paramsJson.enableMiscue = false;\r\n        }\r\n\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_Params, JSON.stringify(paramsJson));\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"script"}