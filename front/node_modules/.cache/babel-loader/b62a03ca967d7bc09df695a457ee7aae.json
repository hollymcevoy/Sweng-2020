{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _botframeworkWebchatComponent = require(\"botframework-webchat-component\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _AdaptiveCardBuilder = _interopRequireDefault(require(\"./AdaptiveCardBuilder\"));\n\nvar _AdaptiveCardRenderer = _interopRequireDefault(require(\"./AdaptiveCardRenderer\"));\n\nvar _useAdaptiveCardsPackage = _interopRequireDefault(require(\"../hooks/useAdaptiveCardsPackage\"));\n\nvar _useStyleOptions3 = _interopRequireDefault(require(\"../../hooks/useStyleOptions\"));\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n/* eslint no-magic-numbers: [\"error\", { \"ignore\": [0, 1, 10, 15, 25, 50, 75] }] */\n\n\nvar useDirection = _botframeworkWebchatComponent.hooks.useDirection,\n    useLocalizer = _botframeworkWebchatComponent.hooks.useLocalizer;\n\nfunction nullOrUndefined(obj) {\n  return obj === null || typeof obj === 'undefined';\n}\n\nvar ReceiptCardContent = function ReceiptCardContent(_ref) {\n  var actionPerformedClassName = _ref.actionPerformedClassName,\n      content = _ref.content,\n      disabled = _ref.disabled;\n\n  var _useAdaptiveCardsPack = (0, _useAdaptiveCardsPackage.default)(),\n      _useAdaptiveCardsPack2 = (0, _slicedToArray2.default)(_useAdaptiveCardsPack, 1),\n      adaptiveCardsPackage = _useAdaptiveCardsPack2[0];\n\n  var _useDirection = useDirection(),\n      _useDirection2 = (0, _slicedToArray2.default)(_useDirection, 1),\n      direction = _useDirection2[0];\n\n  var _useStyleOptions = (0, _useStyleOptions3.default)(),\n      _useStyleOptions2 = (0, _slicedToArray2.default)(_useStyleOptions, 1),\n      styleOptions = _useStyleOptions2[0];\n\n  var localize = useLocalizer();\n  var taxText = localize('RECEIPT_CARD_TAX');\n  var totalText = localize('RECEIPT_CARD_TOTAL');\n  var vatText = localize('RECEIPT_CARD_VAT');\n  var builtCard = (0, _react.useMemo)(function () {\n    var builder = new _AdaptiveCardBuilder.default(adaptiveCardsPackage, styleOptions, direction);\n    var HorizontalAlignment = adaptiveCardsPackage.HorizontalAlignment,\n        TextSize = adaptiveCardsPackage.TextSize,\n        TextWeight = adaptiveCardsPackage.TextWeight;\n    var buttons = content.buttons,\n        facts = content.facts,\n        items = content.items,\n        tax = content.tax,\n        title = content.title,\n        total = content.total,\n        vat = content.vat;\n    var richCardWrapTitle = styleOptions.richCardWrapTitle;\n\n    if (content) {\n      builder.addTextBlock(title, {\n        size: TextSize.Medium,\n        weight: TextWeight.Bolder,\n        wrap: richCardWrapTitle\n      });\n\n      if (facts) {\n        var _builder$addColumnSet = builder.addColumnSet([75, 25]),\n            _builder$addColumnSet2 = (0, _slicedToArray2.default)(_builder$addColumnSet, 2),\n            firstFactColumn = _builder$addColumnSet2[0],\n            lastFactColumn = _builder$addColumnSet2[1];\n\n        facts.map(function (_ref2) {\n          var key = _ref2.key,\n              value = _ref2.value;\n          builder.addTextBlock(key, {\n            size: TextSize.Medium\n          }, firstFactColumn);\n          builder.addTextBlock(value, {\n            size: TextSize.Medium,\n            horizontalAlignment: HorizontalAlignment.Right\n          }, lastFactColumn);\n        });\n      }\n\n      items && items.map(function (_ref3) {\n        var _ref3$image = _ref3.image;\n        _ref3$image = _ref3$image === void 0 ? {} : _ref3$image;\n        var alt = _ref3$image.alt,\n            imageTap = _ref3$image.tap,\n            url = _ref3$image.url,\n            price = _ref3.price,\n            quantity = _ref3.quantity,\n            subtitle = _ref3.subtitle,\n            tap = _ref3.tap,\n            text = _ref3.text,\n            title = _ref3.title;\n        var itemColumns;\n\n        if (url) {\n          var _builder$addColumnSet3 = builder.addColumnSet([15, 75, 10]),\n              _builder$addColumnSet4 = (0, _toArray2.default)(_builder$addColumnSet3),\n              itemImageColumn = _builder$addColumnSet4[0],\n              columns = _builder$addColumnSet4.slice(1);\n\n          itemColumns = columns;\n          builder.addImage(url, itemImageColumn, imageTap, alt);\n        } else {\n          itemColumns = builder.addColumnSet([75, 25], undefined, tap && tap);\n        }\n\n        var _itemColumns = itemColumns,\n            _itemColumns2 = (0, _slicedToArray2.default)(_itemColumns, 2),\n            itemTitleColumn = _itemColumns2[0],\n            itemPriceColumn = _itemColumns2[1];\n\n        builder.addTextBlock(quantity ? \"\".concat(title, \" &times; \").concat(quantity) : title, {\n          size: TextSize.Medium,\n          weight: TextWeight.Bolder,\n          wrap: richCardWrapTitle\n        }, itemTitleColumn);\n        builder.addTextBlock(subtitle, {\n          size: TextSize.Medium,\n          wrap: richCardWrapTitle\n        }, itemTitleColumn);\n        builder.addTextBlock(price, {\n          horizontalAlignment: HorizontalAlignment.Right\n        }, itemPriceColumn);\n\n        if (text) {\n          builder.addTextBlock(text, {\n            size: TextSize.Medium,\n            wrap: richCardWrapTitle\n          }, itemTitleColumn);\n        }\n      });\n\n      if (!nullOrUndefined(vat)) {\n        var vatCol = builder.addColumnSet([75, 25]);\n        builder.addTextBlock(vatText, {\n          size: TextSize.Medium,\n          weight: TextWeight.Bolder\n        }, vatCol[0]);\n        builder.addTextBlock(vat, {\n          horizontalAlignment: HorizontalAlignment.Right\n        }, vatCol[1]);\n      }\n\n      if (!nullOrUndefined(tax)) {\n        var taxCol = builder.addColumnSet([75, 25]);\n        builder.addTextBlock(taxText, {\n          size: TextSize.Medium,\n          weight: TextWeight.Bolder\n        }, taxCol[0]);\n        builder.addTextBlock(tax, {\n          horizontalAlignment: HorizontalAlignment.Right\n        }, taxCol[1]);\n      }\n\n      if (!nullOrUndefined(total)) {\n        var totalCol = builder.addColumnSet([75, 25]);\n        builder.addTextBlock(totalText, {\n          size: TextSize.Medium,\n          weight: TextWeight.Bolder\n        }, totalCol[0]);\n        builder.addTextBlock(total, {\n          horizontalAlignment: HorizontalAlignment.Right,\n          size: TextSize.Medium,\n          weight: TextWeight.Bolder\n        }, totalCol[1]);\n      }\n\n      builder.addButtons(buttons);\n      return builder.card;\n    }\n  }, [adaptiveCardsPackage, content, direction, styleOptions, taxText, totalText, vatText]);\n  return /*#__PURE__*/_react.default.createElement(_AdaptiveCardRenderer.default, {\n    actionPerformedClassName: actionPerformedClassName,\n    adaptiveCard: builtCard,\n    disabled: disabled,\n    tapAction: content && content.tap\n  });\n};\n\nReceiptCardContent.defaultProps = {\n  actionPerformedClassName: '',\n  disabled: undefined\n};\nReceiptCardContent.propTypes = {\n  actionPerformedClassName: _propTypes.default.string,\n  content: _propTypes.default.shape({\n    buttons: _propTypes.default.array,\n    facts: _propTypes.default.arrayOf(_propTypes.default.shape({\n      key: _propTypes.default.string,\n      value: _propTypes.default.string\n    })),\n    items: _propTypes.default.arrayOf(_propTypes.default.shape({\n      image: _propTypes.default.shape({\n        alt: _propTypes.default.string.isRequired,\n        tap: _propTypes.default.any,\n        url: _propTypes.default.string.isRequired\n      }),\n      price: _propTypes.default.string.isRequired,\n      quantity: _propTypes.default.string,\n      subtitle: _propTypes.default.string,\n      tap: _propTypes.default.any,\n      text: _propTypes.default.string,\n      title: _propTypes.default.string.isRequired\n    })),\n    tap: _propTypes.default.any,\n    tax: _propTypes.default.string,\n    title: _propTypes.default.string,\n    total: _propTypes.default.string,\n    vat: _propTypes.default.string\n  }).isRequired,\n  disabled: _propTypes.default.bool\n};\nvar _default = ReceiptCardContent;\nexports.default = _default;","map":{"version":3,"mappings":"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","names":["useDirection","hooks","useLocalizer","nullOrUndefined","obj","ReceiptCardContent","actionPerformedClassName","content","disabled","adaptiveCardsPackage","direction","styleOptions","localize","taxText","totalText","vatText","builtCard","builder","AdaptiveCardBuilder","HorizontalAlignment","TextSize","TextWeight","buttons","facts","items","tax","title","total","vat","richCardWrapTitle","addTextBlock","size","Medium","weight","Bolder","wrap","addColumnSet","firstFactColumn","lastFactColumn","map","key","value","horizontalAlignment","Right","image","_ref3$image","alt","imageTap","tap","url","price","quantity","subtitle","text","itemColumns","itemImageColumn","columns","addImage","undefined","itemTitleColumn","itemPriceColumn","vatCol","taxCol","totalCol","addButtons","card","_react","_AdaptiveCardRenderer","adaptiveCard","tapAction","defaultProps","propTypes","PropTypes","string","shape","array","arrayOf","isRequired","any","bool"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat/lib/src/adaptiveCards/Attachment/ReceiptCardContent.tsx"],"sourcesContent":["/* eslint no-magic-numbers: [\"error\", { \"ignore\": [0, 1, 10, 15, 25, 50, 75] }] */\n\nimport { DirectLineReceiptCard } from 'botframework-webchat-core';\nimport { hooks } from 'botframework-webchat-component';\nimport PropTypes from 'prop-types';\nimport React, { FC, useMemo } from 'react';\n\nimport AdaptiveCardBuilder from './AdaptiveCardBuilder';\nimport AdaptiveCardRenderer from './AdaptiveCardRenderer';\nimport useAdaptiveCardsPackage from '../hooks/useAdaptiveCardsPackage';\nimport useStyleOptions from '../../hooks/useStyleOptions';\n\nconst { useDirection, useLocalizer } = hooks;\n\nfunction nullOrUndefined(obj) {\n  return obj === null || typeof obj === 'undefined';\n}\n\ntype ReceiptCardContentProps = {\n  actionPerformedClassName?: string;\n  content: DirectLineReceiptCard;\n  disabled?: boolean;\n};\n\nconst ReceiptCardContent: FC<ReceiptCardContentProps> = ({ actionPerformedClassName, content, disabled }) => {\n  const [adaptiveCardsPackage] = useAdaptiveCardsPackage();\n  const [direction] = useDirection();\n  const [styleOptions] = useStyleOptions();\n  const localize = useLocalizer();\n\n  const taxText = localize('RECEIPT_CARD_TAX');\n  const totalText = localize('RECEIPT_CARD_TOTAL');\n  const vatText = localize('RECEIPT_CARD_VAT');\n\n  const builtCard = useMemo(() => {\n    const builder = new AdaptiveCardBuilder(adaptiveCardsPackage, styleOptions, direction);\n    const { HorizontalAlignment, TextSize, TextWeight } = adaptiveCardsPackage;\n    const { buttons, facts, items, tax, title, total, vat } = content;\n    const { richCardWrapTitle } = styleOptions;\n\n    if (content) {\n      builder.addTextBlock(title, { size: TextSize.Medium, weight: TextWeight.Bolder, wrap: richCardWrapTitle });\n\n      if (facts) {\n        const [firstFactColumn, lastFactColumn] = builder.addColumnSet([75, 25]);\n\n        facts.map(({ key, value }) => {\n          builder.addTextBlock(key, { size: TextSize.Medium }, firstFactColumn);\n          builder.addTextBlock(\n            value,\n            { size: TextSize.Medium, horizontalAlignment: HorizontalAlignment.Right },\n            lastFactColumn\n          );\n        });\n      }\n\n      items &&\n        items.map(\n          ({\n            image: { alt, tap: imageTap, url } = {},\n            price,\n            quantity,\n            subtitle,\n            tap,\n            text,\n            title\n          }: {\n            image: {\n              alt?: string;\n              tap?: any;\n              url?: string;\n            };\n            price: string;\n            quantity: string;\n            subtitle: string;\n            tap: any;\n            text: string;\n            title: string;\n          }) => {\n            let itemColumns;\n\n            if (url) {\n              const [itemImageColumn, ...columns] = builder.addColumnSet([15, 75, 10]);\n\n              itemColumns = columns;\n              builder.addImage(url, itemImageColumn, imageTap, alt);\n            } else {\n              itemColumns = builder.addColumnSet([75, 25], undefined, tap && tap);\n            }\n\n            const [itemTitleColumn, itemPriceColumn] = itemColumns;\n\n            builder.addTextBlock(\n              quantity ? `${title} &times; ${quantity}` : title,\n              { size: TextSize.Medium, weight: TextWeight.Bolder, wrap: richCardWrapTitle },\n              itemTitleColumn\n            );\n            builder.addTextBlock(subtitle, { size: TextSize.Medium, wrap: richCardWrapTitle }, itemTitleColumn);\n            builder.addTextBlock(price, { horizontalAlignment: HorizontalAlignment.Right }, itemPriceColumn);\n\n            if (text) {\n              builder.addTextBlock(text, { size: TextSize.Medium, wrap: richCardWrapTitle }, itemTitleColumn);\n            }\n          }\n        );\n\n      if (!nullOrUndefined(vat)) {\n        const vatCol = builder.addColumnSet([75, 25]);\n\n        builder.addTextBlock(vatText, { size: TextSize.Medium, weight: TextWeight.Bolder }, vatCol[0]);\n        builder.addTextBlock(vat, { horizontalAlignment: HorizontalAlignment.Right }, vatCol[1]);\n      }\n\n      if (!nullOrUndefined(tax)) {\n        const taxCol = builder.addColumnSet([75, 25]);\n\n        builder.addTextBlock(taxText, { size: TextSize.Medium, weight: TextWeight.Bolder }, taxCol[0]);\n        builder.addTextBlock(tax, { horizontalAlignment: HorizontalAlignment.Right }, taxCol[1]);\n      }\n\n      if (!nullOrUndefined(total)) {\n        const totalCol = builder.addColumnSet([75, 25]);\n\n        builder.addTextBlock(totalText, { size: TextSize.Medium, weight: TextWeight.Bolder }, totalCol[0]);\n        builder.addTextBlock(\n          total,\n          { horizontalAlignment: HorizontalAlignment.Right, size: TextSize.Medium, weight: TextWeight.Bolder },\n          totalCol[1]\n        );\n      }\n\n      builder.addButtons(buttons);\n\n      return builder.card;\n    }\n  }, [adaptiveCardsPackage, content, direction, styleOptions, taxText, totalText, vatText]);\n\n  return (\n    <AdaptiveCardRenderer\n      actionPerformedClassName={actionPerformedClassName}\n      adaptiveCard={builtCard}\n      disabled={disabled}\n      tapAction={content && content.tap}\n    />\n  );\n};\n\nReceiptCardContent.defaultProps = {\n  actionPerformedClassName: '',\n  disabled: undefined\n};\n\nReceiptCardContent.propTypes = {\n  actionPerformedClassName: PropTypes.string,\n  content: PropTypes.shape({\n    buttons: PropTypes.array,\n    facts: PropTypes.arrayOf(\n      PropTypes.shape({\n        key: PropTypes.string,\n        value: PropTypes.string\n      })\n    ),\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        image: PropTypes.shape({\n          alt: PropTypes.string.isRequired,\n          tap: PropTypes.any,\n          url: PropTypes.string.isRequired\n        }),\n        price: PropTypes.string.isRequired,\n        quantity: PropTypes.string,\n        subtitle: PropTypes.string,\n        tap: PropTypes.any,\n        text: PropTypes.string,\n        title: PropTypes.string.isRequired\n      })\n    ),\n    tap: PropTypes.any,\n    tax: PropTypes.string,\n    title: PropTypes.string,\n    total: PropTypes.string,\n    vat: PropTypes.string\n  }).isRequired,\n  disabled: PropTypes.bool\n};\n\nexport default ReceiptCardContent;\n"]},"metadata":{},"sourceType":"script"}