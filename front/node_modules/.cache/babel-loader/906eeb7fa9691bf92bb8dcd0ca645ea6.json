{"ast":null,"code":"import { useEffect } from 'react';\n\nfunction step(from, to, stepper, index) {\n  var next = from;\n\n  for (var i = 0; i < index; i++) {\n    next = stepper(next, to);\n  }\n\n  return next;\n}\n\nfunction squareStepper(current, to) {\n  var sign = Math.sign(to - current);\n  var step = Math.sqrt(Math.abs(to - current));\n  var next = current + step * sign;\n\n  if (sign > 0) {\n    return Math.min(to, next);\n  }\n\n  return Math.max(to, next);\n}\n\nexport default function useAnimateScrollLeft(element, to, onEnd) {\n  useEffect(function () {\n    if (element) {\n      var start = Date.now();\n      var animator;\n\n      var animate = function animate(from) {\n        animator = requestAnimationFrame(function () {\n          // eslint-disable-next-line no-magic-numbers\n          var nextValue = step(from, to, squareStepper, (Date.now() - start) / 5); // eslint-disable-next-line no-magic-numbers\n\n          if (Math.abs(to - nextValue) < 0.5) {\n            nextValue = to;\n          }\n\n          element.scrollLeft = nextValue;\n\n          if (to === nextValue) {\n            onEnd && onEnd(true);\n          } else {\n            animate(from);\n          }\n        });\n      };\n\n      animate(element.scrollLeft);\n      return function () {\n        return cancelAnimationFrame(animator);\n      };\n    }\n  }, [element, to, onEnd]);\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAEA,SAASC,IAAT,CAAcC,IAAd,EAAoBC,EAApB,EAAwBC,OAAxB,EAAiCC,KAAjC,EAAwC;AACtC,MAAIC,IAAI,GAAGJ,IAAX;;AAEA,OAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAApB,EAA2BE,CAAC,EAA5B,EAAgC;AAC9BD,QAAI,GAAGF,OAAO,CAACE,IAAD,EAAOH,EAAP,CAAdG;AACD;;AAED,SAAOA,IAAP;AACD;;AAED,SAASE,aAAT,CAAuBC,OAAvB,EAAgCN,EAAhC,EAAoC;AAClC,MAAMO,IAAI,GAAGC,IAAI,CAACD,IAALC,CAAUR,EAAE,GAAGM,OAAfE,CAAb;AACA,MAAMV,IAAI,GAAGU,IAAI,CAACC,IAALD,CAAUA,IAAI,CAACE,GAALF,CAASR,EAAE,GAAGM,OAAdE,CAAVA,CAAb;AACA,MAAML,IAAI,GAAGG,OAAO,GAAGR,IAAI,GAAGS,IAA9B;;AAEA,MAAIA,IAAI,GAAG,CAAX,EAAc;AACZ,WAAOC,IAAI,CAACG,GAALH,CAASR,EAATQ,EAAaL,IAAbK,CAAP;AACD;;AAED,SAAOA,IAAI,CAACI,GAALJ,CAASR,EAATQ,EAAaL,IAAbK,CAAP;AACD;;AAED,eAAe,SAASK,oBAAT,CAA8BC,OAA9B,EAAuCd,EAAvC,EAA2Ce,KAA3C,EAAkD;AAC/DlB,WAAS,CAAC,YAAM;AACd,QAAIiB,OAAJ,EAAa;AACX,UAAME,KAAK,GAAGC,IAAI,CAACC,GAALD,EAAd;AAEA,UAAIE,QAAJ;;AAEA,UAAMC,OAAO,GAAG,SAAVA,OAAU,OAAQ;AACtBD,gBAAQ,GAAGE,qBAAqB,CAAC,YAAM;AACrC;AACA,cAAIC,SAAS,GAAGxB,IAAI,CAACC,IAAD,EAAOC,EAAP,EAAWK,aAAX,EAA0B,CAACY,IAAI,CAACC,GAALD,KAAaD,KAAd,IAAuB,CAAjD,CAApB,CAFqC,CAIrC;;AACA,cAAIR,IAAI,CAACE,GAALF,CAASR,EAAE,GAAGsB,SAAdd,IAA2B,GAA/B,EAAoC;AAClCc,qBAAS,GAAGtB,EAAZsB;AACD;;AAEDR,iBAAO,CAACS,UAART,GAAqBQ,SAArBR;;AAEA,cAAId,EAAE,KAAKsB,SAAX,EAAsB;AACpBP,iBAAK,IAAIA,KAAK,CAAC,IAAD,CAAdA;AADF,iBAEO;AACLK,mBAAO,CAACrB,IAAD,CAAPqB;AACD;AAf6B,UAAhCD;AADF;;AAoBAC,aAAO,CAACN,OAAO,CAACS,UAAT,CAAPH;AAEA,aAAO;AAAA,eAAMI,oBAAoB,CAACL,QAAD,CAA1B;AAAP;AACD;AA7BM,KA8BN,CAACL,OAAD,EAAUd,EAAV,EAAce,KAAd,CA9BM,CAATlB;AA+BD","names":["useEffect","step","from","to","stepper","index","next","i","squareStepper","current","sign","Math","sqrt","abs","min","max","useAnimateScrollLeft","element","onEnd","start","Date","now","animator","animate","requestAnimationFrame","nextValue","scrollLeft","cancelAnimationFrame"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/react-film/src/hooks/internal/useAnimateScrollLeft.js"],"sourcesContent":["import { useEffect } from 'react';\n\nfunction step(from, to, stepper, index) {\n  let next = from;\n\n  for (let i = 0; i < index; i++) {\n    next = stepper(next, to);\n  }\n\n  return next;\n}\n\nfunction squareStepper(current, to) {\n  const sign = Math.sign(to - current);\n  const step = Math.sqrt(Math.abs(to - current));\n  const next = current + step * sign;\n\n  if (sign > 0) {\n    return Math.min(to, next);\n  }\n\n  return Math.max(to, next);\n}\n\nexport default function useAnimateScrollLeft(element, to, onEnd) {\n  useEffect(() => {\n    if (element) {\n      const start = Date.now();\n\n      let animator;\n\n      const animate = from => {\n        animator = requestAnimationFrame(() => {\n          // eslint-disable-next-line no-magic-numbers\n          let nextValue = step(from, to, squareStepper, (Date.now() - start) / 5);\n\n          // eslint-disable-next-line no-magic-numbers\n          if (Math.abs(to - nextValue) < 0.5) {\n            nextValue = to;\n          }\n\n          element.scrollLeft = nextValue;\n\n          if (to === nextValue) {\n            onEnd && onEnd(true);\n          } else {\n            animate(from);\n          }\n        });\n      };\n\n      animate(element.scrollLeft);\n\n      return () => cancelAnimationFrame(animator);\n    }\n  }, [element, to, onEnd]);\n}\n"]},"metadata":{},"sourceType":"module"}