{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = observeEachEffect;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _effects = require(\"redux-saga/effects\");\n\nvar _createPromiseQueue = _interopRequireDefault(require(\"../../createPromiseQueue\"));\n\nfunction observeEachEffect(observable, saga) {\n  return (0, _effects.call)( /*#__PURE__*/_regenerator[\"default\"].mark(function observeEach() {\n    var queue, subscription, result;\n    return _regenerator[\"default\"].wrap(function observeEach$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            queue = (0, _createPromiseQueue[\"default\"])();\n            subscription = observable.subscribe({\n              next: queue.push\n            });\n            _context.prev = 2;\n\n          case 3:\n            _context.next = 5;\n            return (0, _effects.call)(queue.shift);\n\n          case 5:\n            result = _context.sent;\n            _context.next = 8;\n            return (0, _effects.call)(saga, result);\n\n          case 8:\n            _context.next = 3;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            subscription.unsubscribe();\n            return _context.finish(10);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, observeEach, null, [[2,, 10, 13]]);\n  }));\n}","map":{"version":3,"mappings":";;;;;;;;;;;AAAA;;AAEA;;AAEe,SAASA,iBAAT,CAA2BC,UAA3B,EAAuCC,IAAvC,EAA6C;AAC1D,SAAO,8DAAK,SAAUC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACJC,iBADI,GACI,qCAARA;AACAC,wBAFI,GAEWJ,UAAU,CAACK,SAAXL,CAAqB;AAAEM,kBAAI,EAAEH,KAAK,CAACI;AAAd,aAArBP,CAAfI;AAFII;;AAAA;AAAAA;AAMS,mBAAM,mBAAKL,KAAK,CAACM,KAAX,CAAN;;AANT;AAMAC,kBANA,gBAMAA;AANAF;AAQN,mBAAM,mBAAKP,IAAL,EAAWS,MAAX,CAAN;;AARM;AAAAF;AAAA;;AAAA;AAAAA;AAWRJ,wBAAY,CAACO,WAAbP;AAXQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAUF,WAAV;AAAL,KAAP;AAcD","names":["observeEachEffect","observable","saga","observeEach","queue","subscription","subscribe","next","push","_context","shift","result","unsubscribe"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-core/lib/src/sagas/effects/observeEach.js"],"sourcesContent":["import { call } from 'redux-saga/effects';\n\nimport createPromiseQueue from '../../createPromiseQueue';\n\nexport default function observeEachEffect(observable, saga) {\n  return call(function* observeEach() {\n    const queue = createPromiseQueue();\n    const subscription = observable.subscribe({ next: queue.push });\n\n    try {\n      for (;;) {\n        const result = yield call(queue.shift);\n\n        yield call(saga, result);\n      }\n    } finally {\n      subscription.unsubscribe();\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"script"}