{"ast":null,"code":"\"use strict\"; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NoMatchDetails = void 0;\n\nvar Exports_1 = require(\"../../src/common.speech/Exports\");\n\nvar Exports_2 = require(\"./Exports\");\n/**\n * Contains detailed information for NoMatch recognition results.\n * @class NoMatchDetails\n */\n\n\nvar NoMatchDetails =\n/** @class */\nfunction () {\n  /**\n   * Creates and initializes an instance of this class.\n   * @constructor\n   * @param {NoMatchReason} reason - The no-match reason.\n   */\n  function NoMatchDetails(reason) {\n    this.privReason = reason;\n  }\n  /**\n   * Creates an instance of NoMatchDetails object for the NoMatch SpeechRecognitionResults.\n   * @member NoMatchDetails.fromResult\n   * @function\n   * @public\n   * @param {SpeechRecognitionResult | IntentRecognitionResult | TranslationRecognitionResult}\n   *        result - The recognition result that was not recognized.\n   * @returns {NoMatchDetails} The no match details object being created.\n   */\n\n\n  NoMatchDetails.fromResult = function (result) {\n    var simpleSpeech = Exports_1.SimpleSpeechPhrase.fromJSON(result.json);\n    var reason = Exports_2.NoMatchReason.NotRecognized;\n\n    switch (simpleSpeech.RecognitionStatus) {\n      case Exports_1.RecognitionStatus.BabbleTimeout:\n        reason = Exports_2.NoMatchReason.InitialBabbleTimeout;\n        break;\n\n      case Exports_1.RecognitionStatus.InitialSilenceTimeout:\n        reason = Exports_2.NoMatchReason.InitialSilenceTimeout;\n        break;\n\n      default:\n        reason = Exports_2.NoMatchReason.NotRecognized;\n        break;\n    }\n\n    return new NoMatchDetails(reason);\n  };\n\n  Object.defineProperty(NoMatchDetails.prototype, \"reason\", {\n    /**\n     * The reason the recognition was canceled.\n     * @member NoMatchDetails.prototype.reason\n     * @function\n     * @public\n     * @returns {NoMatchReason} Specifies the reason canceled.\n     */\n    get: function () {\n      return this.privReason;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return NoMatchDetails;\n}();\n\nexports.NoMatchDetails = NoMatchDetails;","map":{"version":3,"mappings":"cAAA;AACA;;;;;;;AAEA;;AACA;AAEA;;;;;;AAIA;AAAA;AAAA;AAGI;;;;;AAKA,0BAAoBA,MAApB,EAAyC;AACrC,SAAKC,UAAL,GAAkBD,MAAlB;AACH;AAED;;;;;;;;;;;AAScE,8BAAd,UAAyBC,MAAzB,EAAiH;AAC7G,QAAMC,YAAY,GAAuBC,6BAAmBC,QAAnB,CAA4BH,MAAM,CAACI,IAAnC,CAAzC;AAEA,QAAIP,MAAM,GAAkBQ,wBAAcC,aAA1C;;AAEA,YAAQL,YAAY,CAACM,iBAArB;AACI,WAAKL,4BAAkBM,aAAvB;AACIX,cAAM,GAAGQ,wBAAcI,oBAAvB;AACA;;AACJ,WAAKP,4BAAkBQ,qBAAvB;AACIb,cAAM,GAAGQ,wBAAcK,qBAAvB;AACA;;AACJ;AACIb,cAAM,GAAGQ,wBAAcC,aAAvB;AACA;AATR;;AAYA,WAAO,IAAIP,cAAJ,CAAmBF,MAAnB,CAAP;AACH,GAlBa;;AA2Bdc,wBAAWZ,wBAAX,EAAW,QAAX,EAAiB;AAPjB;;;;;;;SAOA;AACI,aAAO,KAAKD,UAAZ;AACH,KAFgB;qBAAA;;AAAA,GAAjB;AAGJ;AAnDA;;AAAac","names":["reason","privReason","NoMatchDetails","result","simpleSpeech","Exports_1","fromJSON","json","Exports_2","NotRecognized","RecognitionStatus","BabbleTimeout","InitialBabbleTimeout","InitialSilenceTimeout","Object","exports"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/NoMatchDetails.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RecognitionStatus, SimpleSpeechPhrase } from \"../../src/common.speech/Exports\";\r\nimport { IntentRecognitionResult, NoMatchReason, SpeechRecognitionResult, TranslationRecognitionResult } from \"./Exports\";\r\n\r\n/**\r\n * Contains detailed information for NoMatch recognition results.\r\n * @class NoMatchDetails\r\n */\r\nexport class NoMatchDetails {\r\n    private privReason: NoMatchReason;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {NoMatchReason} reason - The no-match reason.\r\n     */\r\n    private constructor(reason: NoMatchReason) {\r\n        this.privReason = reason;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of NoMatchDetails object for the NoMatch SpeechRecognitionResults.\r\n     * @member NoMatchDetails.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {SpeechRecognitionResult | IntentRecognitionResult | TranslationRecognitionResult}\r\n     *        result - The recognition result that was not recognized.\r\n     * @returns {NoMatchDetails} The no match details object being created.\r\n     */\r\n    public static fromResult(result: SpeechRecognitionResult | IntentRecognitionResult | TranslationRecognitionResult): NoMatchDetails {\r\n        const simpleSpeech: SimpleSpeechPhrase = SimpleSpeechPhrase.fromJSON(result.json);\r\n\r\n        let reason: NoMatchReason = NoMatchReason.NotRecognized;\r\n\r\n        switch (simpleSpeech.RecognitionStatus) {\r\n            case RecognitionStatus.BabbleTimeout:\r\n                reason = NoMatchReason.InitialBabbleTimeout;\r\n                break;\r\n            case RecognitionStatus.InitialSilenceTimeout:\r\n                reason = NoMatchReason.InitialSilenceTimeout;\r\n                break;\r\n            default:\r\n                reason = NoMatchReason.NotRecognized;\r\n                break;\r\n        }\r\n\r\n        return new NoMatchDetails(reason);\r\n    }\r\n\r\n    /**\r\n     * The reason the recognition was canceled.\r\n     * @member NoMatchDetails.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {NoMatchReason} Specifies the reason canceled.\r\n     */\r\n    public get reason(): NoMatchReason {\r\n        return this.privReason;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}