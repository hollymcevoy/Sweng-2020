{"ast":null,"code":"\"use strict\";\n\nvar root_1 = require('../util/root');\n\nfunction symbolIteratorPonyfill(root) {\n  var Symbol = root.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (!Symbol.iterator) {\n      Symbol.iterator = Symbol('iterator polyfill');\n    }\n\n    return Symbol.iterator;\n  } else {\n    // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n    var Set_1 = root.Set;\n\n    if (Set_1 && typeof new Set_1()['@@iterator'] === 'function') {\n      return '@@iterator';\n    }\n\n    var Map_1 = root.Map; // required for compatability with es6-shim\n\n    if (Map_1) {\n      var keys = Object.getOwnPropertyNames(Map_1.prototype);\n\n      for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i]; // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n\n        if (key !== 'entries' && key !== 'size' && Map_1.prototype[key] === Map_1.prototype['entries']) {\n          return key;\n        }\n      }\n    }\n\n    return '@@iterator';\n  }\n}\n\nexports.symbolIteratorPonyfill = symbolIteratorPonyfill;\nexports.iterator = symbolIteratorPonyfill(root_1.root);\n/**\n * @deprecated use iterator instead\n */\n\nexports.$$iterator = exports.iterator;","map":{"version":3,"mappings":";;AAAA,qBAAqB,cAArB;;AAEA,gCAAuCA,IAAvC,EAAgD;AAC9C,MAAMC,MAAM,GAAQD,IAAI,CAACC,MAAzB;;AAEA,MAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;AAChC,QAAI,CAACA,MAAM,CAACC,QAAZ,EAAsB;AACpBD,YAAM,CAACC,QAAP,GAAkBD,MAAM,CAAC,mBAAD,CAAxB;AACD;;AACD,WAAOA,MAAM,CAACC,QAAd;AACD,GALD,MAKO;AACL;AACQ;;AACR,QAAIC,KAAG,IAAI,OAAO,IAAIA,KAAJ,GAAU,YAAV,CAAP,KAAmC,UAA9C,EAA0D;AACxD,aAAO,YAAP;AACD;;AACO,yBANH,CAOL;;AACA,QAAIC,KAAJ,EAAS;AACP,UAAIC,IAAI,GAAGC,MAAM,CAACC,mBAAP,CAA2BH,KAAG,CAACI,SAA/B,CAAX;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,IAAI,CAACK,MAAzB,EAAiC,EAAED,CAAnC,EAAsC;AACpC,YAAIE,GAAG,GAAGN,IAAI,CAACI,CAAD,CAAd,CADoC,CAEpC;;AACA,YAAIE,GAAG,KAAK,SAAR,IAAqBA,GAAG,KAAK,MAA7B,IAAuCP,KAAG,CAACI,SAAJ,CAAcG,GAAd,MAAuBP,KAAG,CAACI,SAAJ,CAAc,SAAd,CAAlE,EAA4F;AAC1F,iBAAOG,GAAP;AACD;AACF;AACF;;AACD,WAAO,YAAP;AACD;AACF;;AA5BeC,iCAAsBC,sBAAtB;AA8BHD,mBAAWC,sBAAsB,CAACC,WAAD,CAAjC;AAEb;;;;AAGaF,qBAAaA,gBAAb","names":["root","Symbol","iterator","Set_1","Map_1","keys","Object","getOwnPropertyNames","prototype","i","length","key","exports","symbolIteratorPonyfill","root_1"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/src/symbol/iterator.ts"],"sourcesContent":["import { root } from '../util/root';\n\nexport function symbolIteratorPonyfill(root: any) {\n  const Symbol: any = root.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (!Symbol.iterator) {\n      Symbol.iterator = Symbol('iterator polyfill');\n    }\n    return Symbol.iterator;\n  } else {\n    // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n    const { Set } = root;\n    if (Set && typeof new Set()['@@iterator'] === 'function') {\n      return '@@iterator';\n    }\n    const { Map } = root;\n    // required for compatability with es6-shim\n    if (Map) {\n      let keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let i = 0; i < keys.length; ++i) {\n        let key = keys[i];\n        // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n        if (key !== 'entries' && key !== 'size' && Map.prototype[key] === Map.prototype['entries']) {\n          return key;\n        }\n      }\n    }\n    return '@@iterator';\n  }\n}\n\nexport const iterator = symbolIteratorPonyfill(root);\n\n/**\n * @deprecated use iterator instead\n */\nexport const $$iterator = iterator;\n"]},"metadata":{},"sourceType":"script"}