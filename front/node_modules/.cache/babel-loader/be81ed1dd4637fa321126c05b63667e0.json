{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { ArgumentNullError } from \"../common/Exports\";\nimport { AuthInfo } from \"./IAuthentication\";\nconst AuthHeader = \"Authorization\";\nexport class CognitiveTokenAuthentication {\n  constructor(fetchCallback, fetchOnExpiryCallback) {\n    this.fetch = authFetchEventId => {\n      return this.privFetchCallback(authFetchEventId).then(token => new AuthInfo(AuthHeader, token));\n    };\n\n    this.fetchOnExpiry = authFetchEventId => {\n      return this.privFetchOnExpiryCallback(authFetchEventId).then(token => new AuthInfo(AuthHeader, token));\n    };\n\n    if (!fetchCallback) {\n      throw new ArgumentNullError(\"fetchCallback\");\n    }\n\n    if (!fetchOnExpiryCallback) {\n      throw new ArgumentNullError(\"fetchOnExpiryCallback\");\n    }\n\n    this.privFetchCallback = fetchCallback;\n    this.privFetchOnExpiryCallback = fetchOnExpiryCallback;\n  }\n\n}","map":{"version":3,"mappings":"AAAA;AACA;AAEA,SAASA,iBAAT,QAAkC,mBAAlC;AACA,SAASC,QAAT,QAA0C,mBAA1C;AAEA,MAAMC,UAAU,GAAW,eAA3B;AAEA,OAAM,MAAOC,4BAAP,CAAmC;AAIrCC,cAAYC,aAAZ,EAA0EC,qBAA1E,EAA8I;AAavI,iBAASC,gBAAD,IAAgD;AAC3D,aAAO,KAAKC,iBAAL,CAAuBD,gBAAvB,EAAyCE,IAAzC,CAA+CC,KAAD,IAAmB,IAAIT,QAAJ,CAAaC,UAAb,EAAyBQ,KAAzB,CAAjE,CAAP;AACH,KAFM;;AAIA,yBAAiBH,gBAAD,IAAgD;AACnE,aAAO,KAAKI,yBAAL,CAA+BJ,gBAA/B,EAAiDE,IAAjD,CAAuDC,KAAD,IAAmB,IAAIT,QAAJ,CAAaC,UAAb,EAAyBQ,KAAzB,CAAzE,CAAP;AACH,KAFM;;AAhBH,QAAI,CAACL,aAAL,EAAoB;AAChB,YAAM,IAAIL,iBAAJ,CAAsB,eAAtB,CAAN;AACH;;AAED,QAAI,CAACM,qBAAL,EAA4B;AACxB,YAAM,IAAIN,iBAAJ,CAAsB,uBAAtB,CAAN;AACH;;AAED,SAAKQ,iBAAL,GAAyBH,aAAzB;AACA,SAAKM,yBAAL,GAAiCL,qBAAjC;AACH;;AAfoC","names":["ArgumentNullError","AuthInfo","AuthHeader","CognitiveTokenAuthentication","constructor","fetchCallback","fetchOnExpiryCallback","authFetchEventId","privFetchCallback","then","token","privFetchOnExpiryCallback"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/src/common.speech/CognitiveTokenAuthentication.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ArgumentNullError } from \"../common/Exports\";\r\nimport { AuthInfo, IAuthentication } from \"./IAuthentication\";\r\n\r\nconst AuthHeader: string = \"Authorization\";\r\n\r\nexport class CognitiveTokenAuthentication implements IAuthentication {\r\n    private privFetchCallback: (authFetchEventId: string) => Promise<string>;\r\n    private privFetchOnExpiryCallback: (authFetchEventId: string) => Promise<string>;\r\n\r\n    constructor(fetchCallback: (authFetchEventId: string) => Promise<string>, fetchOnExpiryCallback: (authFetchEventId: string) => Promise<string>) {\r\n        if (!fetchCallback) {\r\n            throw new ArgumentNullError(\"fetchCallback\");\r\n        }\r\n\r\n        if (!fetchOnExpiryCallback) {\r\n            throw new ArgumentNullError(\"fetchOnExpiryCallback\");\r\n        }\r\n\r\n        this.privFetchCallback = fetchCallback;\r\n        this.privFetchOnExpiryCallback = fetchOnExpiryCallback;\r\n    }\r\n\r\n    public fetch = (authFetchEventId: string): Promise<AuthInfo> => {\r\n        return this.privFetchCallback(authFetchEventId).then((token: string) => new AuthInfo(AuthHeader, token));\r\n    }\r\n\r\n    public fetchOnExpiry = (authFetchEventId: string): Promise<AuthInfo> => {\r\n        return this.privFetchOnExpiryCallback(authFetchEventId).then((token: string) => new AuthInfo(AuthHeader, token));\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}