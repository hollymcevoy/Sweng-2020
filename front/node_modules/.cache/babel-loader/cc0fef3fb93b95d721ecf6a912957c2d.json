{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar TOKEN_URL_TEMPLATE = 'https://{region}.api.cognitive.microsoft.com/sts/v1.0/issueToken';\n\nfunction _default(_x) {\n  return _ref2.apply(this, arguments);\n}\n\nfunction _ref2() {\n  _ref2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(_ref) {\n    var region, subscriptionKey, res;\n    return _regenerator.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            region = _ref.region, subscriptionKey = _ref.subscriptionKey;\n            _context.next = 3;\n            return fetch(TOKEN_URL_TEMPLATE.replace(/\\{region\\}/, region), {\n              headers: {\n                'Ocp-Apim-Subscription-Key': subscriptionKey\n              },\n              method: 'POST'\n            });\n\n          case 3:\n            res = _context.sent;\n\n            if (res.ok) {\n              _context.next = 6;\n              break;\n            }\n\n            throw new Error(\"Failed to fetch authorization token, server returned \".concat(res.status));\n\n          case 6:\n            return _context.abrupt(\"return\", res.text());\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _ref2.apply(this, arguments);\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;AAAA,IAAMA,kBAAkB,GAAG,kEAA3B;;;;;;;kFAEe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkBC,kBAAlB,QAAkBA,QAAQC,eAA1B,QAA0BA,eAARD;AAAlBE;AAAA,mBACKC,KAAK,CACrBJ,kBAAkB,CAACK,OAAnBL,CAA2B,YAA3BA,EAA0CC,MAA1CD,CADqB,EAErB;AACEM,qBAAO,EAAE;AACP,6CAA6BJ;AADtB,eADX;AAIEK,oBAAM,EAAE;AAJV,aAFqB,CADV;;AAAA;AACPC,eADO,gBACPA;;AADO,gBAWRA,GAAG,CAACC,EAXI;AAAAN;AAAA;AAAA;;AAAA,kBAYL,IAAIO,KAAJ,gEAAmEF,GAAG,CAACG,MAAvE,EAZK;;AAAA;AAAA,6CAeNH,GAAG,CAACI,IAAJJ,EAfM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","names":["TOKEN_URL_TEMPLATE","region","subscriptionKey","_context","fetch","replace","headers","method","res","ok","Error","status","text"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/web-speech-cognitive-services/src/SpeechServices/fetchAuthorizationToken.js"],"sourcesContent":["const TOKEN_URL_TEMPLATE = 'https://{region}.api.cognitive.microsoft.com/sts/v1.0/issueToken';\n\nexport default async function ({ region, subscriptionKey }) {\n  const res = await fetch(\n    TOKEN_URL_TEMPLATE.replace(/\\{region\\}/u, region),\n    {\n      headers: {\n        'Ocp-Apim-Subscription-Key': subscriptionKey\n      },\n      method: 'POST'\n    }\n  );\n\n  if (!res.ok) {\n    throw new Error(`Failed to fetch authorization token, server returned ${ res.status }`);\n  }\n\n  return res.text();\n}\n"]},"metadata":{},"sourceType":"script"}