{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createToastMiddleware = _interopRequireDefault(require(\"../../Toast/createToastMiddleware\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction createCoreMiddleware() {\n  return [function () {\n    return function (next) {\n      return function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var id = args[0].notification.id; // We are ignoring \"connectivitystatus\" notifications, we will render it using <BasicConnectivityStatus> instead.\n        // If devs want to render it, they can add a middleware.\n\n        return id !== 'connectivitystatus' && next.apply(void 0, args);\n      };\n    };\n  }, (0, _createToastMiddleware.default)()];\n}\n\nvar _default = createCoreMiddleware;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;AAEA;;;;;;;;AAEA,SAASA,oBAAT,GAAmD;AACjD,SAAO,CACL;AAAA,WACE,gBAAI;AAAA,aACJ,YAAa;AAAA,0CAATC,IAAS;AAATA,cAAS,MAATA,GAASC,eAATD;AAAS;;AACX,YAEoBE,EAFpB,GAIIF,IAJJ,GAIIA,CAFAG,YAEAH,CAFgBE,EAFpB,CADW,CAOX;AACA;;AACA,eAAOA,EAAE,KAAK,oBAAPA,IAA+BE,IAAI,MAAJA,SAAQJ,IAARI,CAAtC;AAVE;AADN;AADK,KAcL,qCAdK,CAAP;AAgBD;;eAEcL","names":["createCoreMiddleware","args","arguments","id","notification","next"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-component/lib/src/Middleware/Toast/createCoreMiddleware.tsx"],"sourcesContent":["import { ToastMiddleware } from 'botframework-webchat-api';\n\nimport createToastMiddleware from '../../Toast/createToastMiddleware';\n\nfunction createCoreMiddleware(): ToastMiddleware[] {\n  return [\n    () =>\n      next =>\n      (...args) => {\n        const [\n          {\n            notification: { id }\n          }\n        ] = args;\n\n        // We are ignoring \"connectivitystatus\" notifications, we will render it using <BasicConnectivityStatus> instead.\n        // If devs want to render it, they can add a middleware.\n        return id !== 'connectivitystatus' && next(...args);\n      },\n    createToastMiddleware()\n  ];\n}\n\nexport default createCoreMiddleware;\n"]},"metadata":{},"sourceType":"script"}