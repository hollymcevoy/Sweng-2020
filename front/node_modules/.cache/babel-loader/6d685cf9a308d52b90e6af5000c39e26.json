{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = clearSuggestedActionsOnPostActivitySaga;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _effects = require(\"redux-saga/effects\");\n\nvar _postActivity = require(\"../actions/postActivity\");\n\nvar _setSuggestedActions = _interopRequireDefault(require(\"../actions/setSuggestedActions\"));\n\nvar _whileConnected = _interopRequireDefault(require(\"./effects/whileConnected\"));\n\nvar _marked = /*#__PURE__*/_regenerator[\"default\"].mark(clearSuggestedActions),\n    _marked2 = /*#__PURE__*/_regenerator[\"default\"].mark(clearSuggestedActionsOnPostActivity),\n    _marked3 = /*#__PURE__*/_regenerator[\"default\"].mark(clearSuggestedActionsOnPostActivitySaga);\n\nfunction clearSuggestedActions() {\n  return _regenerator[\"default\"].wrap(function clearSuggestedActions$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return (0, _effects.put)((0, _setSuggestedActions[\"default\"])());\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction clearSuggestedActionsOnPostActivity() {\n  return _regenerator[\"default\"].wrap(function clearSuggestedActionsOnPostActivity$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return (0, _effects.takeEvery)(function (_ref) {\n            var payload = _ref.payload,\n                type = _ref.type;\n            return type === _postActivity.POST_ACTIVITY_PENDING && payload.activity.type === 'message';\n          }, clearSuggestedActions);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction clearSuggestedActionsOnPostActivitySaga() {\n  return _regenerator[\"default\"].wrap(function clearSuggestedActionsOnPostActivitySaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return (0, _whileConnected[\"default\"])(clearSuggestedActionsOnPostActivity);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"mappings":";;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;wDAEUA;yDAIAC;yDAOeC;;AAXzB,SAAUF,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAAG;AACE,iBAAM,kBAAI,sCAAJ,CAAN;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUF,mCAAV;AAAA;AAAA;AAAA;AAAA;AAAAG;AACE,iBAAM,wBACJ;AAAA,gBAAGC,OAAH,QAAGA,OAAH;AAAA,gBAAYC,IAAZ,QAAYA,IAAZ;AAAA,mBAAuBA,IAAI,KAAKC,mCAATD,IAAkCD,OAAO,CAACG,QAARH,CAAiBC,IAAjBD,KAA0B,SAAnF;AADI,aAEJL,qBAFI,CAAN;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOe,SAAUE,uCAAV;AAAA;AAAA;AAAA;AAAA;AAAAO;AACb,iBAAM,gCAAeR,mCAAf,CAAN;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","names":["clearSuggestedActions","clearSuggestedActionsOnPostActivity","clearSuggestedActionsOnPostActivitySaga","_context","_context2","payload","type","POST_ACTIVITY_PENDING","activity","_context3"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-core/lib/src/sagas/clearSuggestedActionsOnPostActivitySaga.js"],"sourcesContent":["import { put, takeEvery } from 'redux-saga/effects';\n\nimport { POST_ACTIVITY_PENDING } from '../actions/postActivity';\nimport setSuggestedActions from '../actions/setSuggestedActions';\nimport whileConnected from './effects/whileConnected';\n\nfunction* clearSuggestedActions() {\n  yield put(setSuggestedActions());\n}\n\nfunction* clearSuggestedActionsOnPostActivity() {\n  yield takeEvery(\n    ({ payload, type }) => type === POST_ACTIVITY_PENDING && payload.activity.type === 'message',\n    clearSuggestedActions\n  );\n}\n\nexport default function* clearSuggestedActionsOnPostActivitySaga() {\n  yield whileConnected(clearSuggestedActionsOnPostActivity);\n}\n"]},"metadata":{},"sourceType":"script"}