{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _botframeworkWebchatComponent = require(\"botframework-webchat-component\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _AdaptiveCardBuilder = _interopRequireDefault(require(\"./AdaptiveCardBuilder\"));\n\nvar _AdaptiveCardRenderer = _interopRequireDefault(require(\"./AdaptiveCardRenderer\"));\n\nvar _useAdaptiveCardsPackage = _interopRequireDefault(require(\"../hooks/useAdaptiveCardsPackage\"));\n\nvar _useStyleOptions3 = _interopRequireDefault(require(\"../../hooks/useStyleOptions\"));\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar useDirection = _botframeworkWebchatComponent.hooks.useDirection;\n\nvar HeroCardContent = function HeroCardContent(_ref) {\n  var actionPerformedClassName = _ref.actionPerformedClassName,\n      content = _ref.content,\n      disabled = _ref.disabled;\n\n  var _useAdaptiveCardsPack = (0, _useAdaptiveCardsPackage.default)(),\n      _useAdaptiveCardsPack2 = (0, _slicedToArray2.default)(_useAdaptiveCardsPack, 1),\n      adaptiveCardsPackage = _useAdaptiveCardsPack2[0];\n\n  var _useStyleOptions = (0, _useStyleOptions3.default)(),\n      _useStyleOptions2 = (0, _slicedToArray2.default)(_useStyleOptions, 1),\n      styleOptions = _useStyleOptions2[0];\n\n  var _useDirection = useDirection(),\n      _useDirection2 = (0, _slicedToArray2.default)(_useDirection, 1),\n      direction = _useDirection2[0];\n\n  var builtCard = (0, _react.useMemo)(function () {\n    var builder = new _AdaptiveCardBuilder.default(adaptiveCardsPackage, styleOptions, direction);\n\n    if (content) {\n      (content.images || []).forEach(function (image) {\n        return builder.addImage(image.url, null, image.tap, image.alt);\n      });\n      builder.addCommon(content);\n      return builder.card;\n    }\n  }, [adaptiveCardsPackage, content, direction, styleOptions]);\n  return /*#__PURE__*/_react.default.createElement(_AdaptiveCardRenderer.default, {\n    actionPerformedClassName: actionPerformedClassName,\n    adaptiveCard: builtCard,\n    disabled: disabled,\n    tapAction: content && content.tap\n  });\n};\n\nHeroCardContent.defaultProps = {\n  actionPerformedClassName: '',\n  disabled: undefined\n};\nHeroCardContent.propTypes = {\n  actionPerformedClassName: _propTypes.default.string,\n  content: _propTypes.default.shape({\n    images: _propTypes.default.arrayOf(_propTypes.default.shape({\n      alt: _propTypes.default.string,\n      tap: _propTypes.default.any,\n      url: _propTypes.default.string.isRequired\n    })),\n    tap: _propTypes.default.any\n  }).isRequired,\n  disabled: _propTypes.default.bool\n};\nvar _default = HeroCardContent;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;;;;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAQA,YAAR,GAAyBC,oCAAjBD,YAAR;;AAQA,IAAME,eAAyC,GAAG,SAA5CA,eAA4C,OAAqD;AAAA,MAAlDC,wBAAkD,QAAlDA,wBAAkD;AAAA,MAAxBC,OAAwB,QAAxBA,OAAwB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACrG,8BAA+B,uCAA/B;AAAA;AAAA,MAAOC,oBAAP;;AACA,yBAAuB,gCAAvB;AAAA;AAAA,MAAOC,YAAP;;AACA,sBAAoBP,YAAY,EAAhC;AAAA;AAAA,MAAOQ,SAAP;;AAEA,MAAMC,SAAS,GAAG,oBAAQ,YAAM;AAC9B,QAAMC,OAAO,GAAG,IAAIC,4BAAJ,CAAwBL,oBAAxB,EAA8CC,YAA9C,EAA4DC,SAA5D,CAAhB;;AAEA,QAAIJ,OAAJ,EAAa;AACX,OAACA,OAAO,CAACQ,MAARR,IAAkB,EAAnB,EAAuBS,OAAvB,CAA+B,iBAAK;AAAA,eAAIH,OAAO,CAACI,QAARJ,CAAiBK,KAAK,CAACC,GAAvBN,EAA4B,IAA5BA,EAAkCK,KAAK,CAACE,GAAxCP,EAA6CK,KAAK,CAACG,GAAnDR,CAAJ;AAApC;AAEAA,aAAO,CAACS,SAART,CAAkBN,OAAlBM;AAEA,aAAOA,OAAO,CAACU,IAAf;AACD;AATe,KAUf,CAACd,oBAAD,EAAuBF,OAAvB,EAAgCI,SAAhC,EAA2CD,YAA3C,CAVe,CAAlB;AAYA,sBACEc,6BAACC,6BAAD;AACEnB,4BAAwB,EAAEA,wBAD5B;AAEEoB,gBAAY,EAAEd,SAFhB;AAGEJ,YAAQ,EAAEA,QAHZ;AAIEmB,aAAS,EAAEpB,OAAO,IAAIA,OAAO,CAACa;AAJhC,IADF;AAjBF;;AA2BAf,eAAe,CAACuB,YAAhBvB,GAA+B;AAC7BC,0BAAwB,EAAE,EADG;AAE7BE,UAAQ,EAAEqB;AAFmB,CAA/BxB;AAKAA,eAAe,CAACyB,SAAhBzB,GAA4B;AAC1BC,0BAAwB,EAAEyB,mBAAUC,MADV;AAE1BzB,SAAO,EAAEwB,mBAAUE,KAAVF,CAAgB;AACvBhB,UAAM,EAAEgB,mBAAUG,OAAVH,CACNA,mBAAUE,KAAVF,CAAgB;AACdV,SAAG,EAAEU,mBAAUC,MADD;AAEdZ,SAAG,EAAEW,mBAAUI,GAFD;AAGdhB,SAAG,EAAEY,mBAAUC,MAAVD,CAAiBK;AAHR,KAAhBL,CADMA,CADe;AAQvBX,OAAG,EAAEW,mBAAUI;AARQ,GAAhBJ,EASNK,UAXuB;AAY1B5B,UAAQ,EAAEuB,mBAAUM;AAZM,CAA5BhC;eAeeA","names":["useDirection","hooks","HeroCardContent","actionPerformedClassName","content","disabled","adaptiveCardsPackage","styleOptions","direction","builtCard","builder","AdaptiveCardBuilder","images","forEach","addImage","image","url","tap","alt","addCommon","card","_react","_AdaptiveCardRenderer","adaptiveCard","tapAction","defaultProps","undefined","propTypes","PropTypes","string","shape","arrayOf","any","isRequired","bool"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat/lib/src/adaptiveCards/Attachment/HeroCardContent.tsx"],"sourcesContent":["import { DirectLineHeroCard } from 'botframework-webchat-core';\nimport { hooks } from 'botframework-webchat-component';\nimport PropTypes from 'prop-types';\nimport React, { FC, useMemo } from 'react';\n\nimport AdaptiveCardBuilder from './AdaptiveCardBuilder';\nimport AdaptiveCardRenderer from './AdaptiveCardRenderer';\nimport useAdaptiveCardsPackage from '../hooks/useAdaptiveCardsPackage';\nimport useStyleOptions from '../../hooks/useStyleOptions';\n\nconst { useDirection } = hooks;\n\ntype HeroCardContentProps = {\n  actionPerformedClassName?: string;\n  content: DirectLineHeroCard;\n  disabled?: boolean;\n};\n\nconst HeroCardContent: FC<HeroCardContentProps> = ({ actionPerformedClassName, content, disabled }) => {\n  const [adaptiveCardsPackage] = useAdaptiveCardsPackage();\n  const [styleOptions] = useStyleOptions();\n  const [direction] = useDirection();\n\n  const builtCard = useMemo(() => {\n    const builder = new AdaptiveCardBuilder(adaptiveCardsPackage, styleOptions, direction);\n\n    if (content) {\n      (content.images || []).forEach(image => builder.addImage(image.url, null, image.tap, image.alt));\n\n      builder.addCommon(content);\n\n      return builder.card;\n    }\n  }, [adaptiveCardsPackage, content, direction, styleOptions]);\n\n  return (\n    <AdaptiveCardRenderer\n      actionPerformedClassName={actionPerformedClassName}\n      adaptiveCard={builtCard}\n      disabled={disabled}\n      tapAction={content && content.tap}\n    />\n  );\n};\n\nHeroCardContent.defaultProps = {\n  actionPerformedClassName: '',\n  disabled: undefined\n};\n\nHeroCardContent.propTypes = {\n  actionPerformedClassName: PropTypes.string,\n  content: PropTypes.shape({\n    images: PropTypes.arrayOf(\n      PropTypes.shape({\n        alt: PropTypes.string,\n        tap: PropTypes.any,\n        url: PropTypes.string.isRequired\n      })\n    ),\n    tap: PropTypes.any\n  }).isRequired,\n  disabled: PropTypes.bool\n};\n\nexport default HeroCardContent;\n"]},"metadata":{},"sourceType":"script"}