{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createCoreMiddleware;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _CarouselLayout = _interopRequireDefault(require(\"../../Activity/CarouselLayout\"));\n\nvar _StackedLayout = _interopRequireDefault(require(\"../../Activity/StackedLayout\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction createCoreMiddleware() {\n  return [function () {\n    return function (next) {\n      return function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var activity = args[0].activity; // TODO: [P4] Can we simplify these if-statement to something more readable?\n\n        var type = activity.type; // Filter out activities that should not be visible\n\n        if (type === 'conversationUpdate' || type === 'event' || type === 'invoke' || type === 'typing') {\n          return false;\n        } else if (type === 'message') {\n          var _activity$attachments = activity.attachments,\n              attachments = _activity$attachments === void 0 ? [] : _activity$attachments,\n              channelData = activity.channelData,\n              text = activity.text;\n\n          if ( // Do not show postback\n          channelData && channelData.postBack || // Do not show messageBack if displayText is undefined\n          channelData && channelData.messageBack && !channelData.messageBack.displayText || // Do not show empty bubbles (no text and attachments, and not \"typing\")\n          !(text || attachments.length)) {\n            return false;\n          } // eslint-disable-next-line no-dupe-else-if\n\n        } else if (type === 'typing' && activity.from.role === 'user') {\n          // Do not show typing by oneself\n          return false;\n        }\n\n        if (type === 'message' || type === 'typing') {\n          if (type === 'message' && (activity.attachments || []).length > 1 && activity.attachmentLayout === 'carousel') {\n            // The following line is not a React functional component, it's a render function called by useCreateActivityRenderer() hook.\n            // The function signature need to be compatible with older version of activity middleware, which was:\n            //\n            // renderActivity(\n            //   renderAttachment: ({ activity, attachment }) => React.Element\n            // ) => React.Element\n            return function renderCarouselLayout(renderAttachment, props) {\n              typeof props === 'undefined' && console.warn('botframework-webchat: One or more arguments were missing after passing through the activity middleware. Please check your custom activity middleware to make sure it passes all arguments.');\n              return /*#__PURE__*/_react.default.createElement(_CarouselLayout.default, _extends({\n                activity: activity,\n                renderAttachment: renderAttachment\n              }, props));\n            };\n          } // The following line is not a React functional component, it's a render function called by useCreateActivityRenderer() hook.\n\n\n          return function renderStackedLayout(renderAttachment, props) {\n            typeof props === 'undefined' && console.warn('botframework-webchat: One or more arguments were missing after passing through the activity middleware. Please check your custom activity middleware to make sure it passes all arguments.');\n            return /*#__PURE__*/_react.default.createElement(_StackedLayout.default, _extends({\n              activity: activity,\n              renderAttachment: renderAttachment\n            }, props));\n          };\n        }\n\n        return next.apply(void 0, args);\n      };\n    };\n  }];\n}","map":{"version":3,"mappings":";;;;;;;AAEA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEe,SAASA,oBAAT,GAAsD;AACnE,SAAO,CACL;AAAA,WACE,gBAAI;AAAA,aACJ,YAAa;AAAA,0CAATC,IAAS;AAATA,cAAS,MAATA,GAASC,eAATD;AAAS;;AACX,YAASE,QAAT,GAAuBF,IAAvB,GAAuBA,CAAdE,QAAT,CADW,CAGX;;AAEA,YAAQC,IAAR,GAAiBD,QAAjB,CAAQC,IAAR,CALW,CAOX;;AACA,YAAIA,IAAI,KAAK,oBAATA,IAAiCA,IAAI,KAAK,OAA1CA,IAAqDA,IAAI,KAAK,QAA9DA,IAA0EA,IAAI,KAAK,QAAvF,EAAiG;AAC/F,iBAAO,KAAP;AADF,eAEO,IAAIA,IAAI,KAAK,SAAb,EAAwB;AAC7B,sCAAgDD,QAAhD,CAAQE,WAAR;AAAA,cAAQA,WAAR,sCAAsB,EAAtB;AAAA,cAA0BC,WAA1B,GAAgDH,QAAhD,CAA0BG,WAA1B;AAAA,cAAuCC,IAAvC,GAAgDJ,QAAhD,CAAuCI,IAAvC;;AAEA,eACE;AACCD,qBAAW,IAAIA,WAAW,CAACE,QAA3BF,IACD;AACCA,qBAAW,IAAIA,WAAW,CAACG,WAA3BH,IAA0C,CAACA,WAAW,CAACG,WAAZH,CAAwBI,WAFnEJ,IAGD;AACA,YAAEC,IAAI,IAAIF,WAAW,CAACM,MAAtB,CANF,EAOE;AACA,mBAAO,KAAP;AAX2B,YAa7B;;AAbK,eAcA,IAAIP,IAAI,KAAK,QAATA,IAAqBD,QAAQ,CAACS,IAATT,CAAcU,IAAdV,KAAuB,MAAhD,EAAwD;AAC7D;AACA,iBAAO,KAAP;AACD;;AAED,YAAIC,IAAI,KAAK,SAATA,IAAsBA,IAAI,KAAK,QAAnC,EAA6C;AAC3C,cACEA,IAAI,KAAK,SAATA,IACA,CAACD,QAAQ,CAACE,WAATF,IAAwB,EAAzB,EAA6BQ,MAA7B,GAAsC,CADtCP,IAEAD,QAAQ,CAACW,gBAATX,KAA8B,UAHhC,EAIE;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,mBAAO,SAASY,oBAAT,CAA8BC,gBAA9B,EAAgDC,KAAhD,EAAuD;AAC5D,qBAAOA,KAAP,KAAiB,WAAjB,IACEC,OAAO,CAACC,IAARD,CACE,4LADFA,CADF;AAKA,kCAAOE,6BAACC,uBAAD;AAAgBlB,wBAAQ,EAAEA,QAA1B;AAAoCa,gCAAgB,EAAEA;AAAtD,iBAA4EC,KAA5E,EAAP;AANF;AAbyC,YAuB3C;;;AACA,iBAAO,SAASK,mBAAT,CAA6BN,gBAA7B,EAA+CC,KAA/C,EAAsD;AAC3D,mBAAOA,KAAP,KAAiB,WAAjB,IACEC,OAAO,CAACC,IAARD,CACE,4LADFA,CADF;AAKA,gCAAOE,6BAACG,sBAAD;AAAepB,sBAAQ,EAAEA,QAAzB;AAAmCa,8BAAgB,EAAEA;AAArD,eAA2EC,KAA3E,EAAP;AANF;AAQD;;AAED,eAAOO,IAAI,MAAJA,SAAQvB,IAARuB,CAAP;AAhEE;AADN;AADK,IAAP;AAqED","names":["createCoreMiddleware","args","arguments","activity","type","attachments","channelData","text","postBack","messageBack","displayText","length","from","role","attachmentLayout","renderCarouselLayout","renderAttachment","props","console","warn","_react","_CarouselLayout","renderStackedLayout","_StackedLayout","next"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-component/lib/src/Middleware/Activity/createCoreMiddleware.tsx"],"sourcesContent":["/* eslint-disable complexity */\nimport { ActivityMiddleware } from 'botframework-webchat-api';\nimport React from 'react';\n\nimport CarouselLayout from '../../Activity/CarouselLayout';\nimport StackedLayout from '../../Activity/StackedLayout';\n\nexport default function createCoreMiddleware(): ActivityMiddleware[] {\n  return [\n    () =>\n      next =>\n      (...args) => {\n        const [{ activity }] = args;\n\n        // TODO: [P4] Can we simplify these if-statement to something more readable?\n\n        const { type } = activity;\n\n        // Filter out activities that should not be visible\n        if (type === 'conversationUpdate' || type === 'event' || type === 'invoke' || type === 'typing') {\n          return false;\n        } else if (type === 'message') {\n          const { attachments = [], channelData, text } = activity;\n\n          if (\n            // Do not show postback\n            (channelData && channelData.postBack) ||\n            // Do not show messageBack if displayText is undefined\n            (channelData && channelData.messageBack && !channelData.messageBack.displayText) ||\n            // Do not show empty bubbles (no text and attachments, and not \"typing\")\n            !(text || attachments.length)\n          ) {\n            return false;\n          }\n          // eslint-disable-next-line no-dupe-else-if\n        } else if (type === 'typing' && activity.from.role === 'user') {\n          // Do not show typing by oneself\n          return false;\n        }\n\n        if (type === 'message' || type === 'typing') {\n          if (\n            type === 'message' &&\n            (activity.attachments || []).length > 1 &&\n            activity.attachmentLayout === 'carousel'\n          ) {\n            // The following line is not a React functional component, it's a render function called by useCreateActivityRenderer() hook.\n            // The function signature need to be compatible with older version of activity middleware, which was:\n            //\n            // renderActivity(\n            //   renderAttachment: ({ activity, attachment }) => React.Element\n            // ) => React.Element\n\n            return function renderCarouselLayout(renderAttachment, props) {\n              typeof props === 'undefined' &&\n                console.warn(\n                  'botframework-webchat: One or more arguments were missing after passing through the activity middleware. Please check your custom activity middleware to make sure it passes all arguments.'\n                );\n\n              return <CarouselLayout activity={activity} renderAttachment={renderAttachment} {...props} />;\n            };\n          }\n\n          // The following line is not a React functional component, it's a render function called by useCreateActivityRenderer() hook.\n          return function renderStackedLayout(renderAttachment, props) {\n            typeof props === 'undefined' &&\n              console.warn(\n                'botframework-webchat: One or more arguments were missing after passing through the activity middleware. Please check your custom activity middleware to make sure it passes all arguments.'\n              );\n\n            return <StackedLayout activity={activity} renderAttachment={renderAttachment} {...props} />;\n          };\n        }\n\n        return next(...args);\n      }\n  ];\n}\n"]},"metadata":{},"sourceType":"script"}