{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = detectSlowConnectionSaga;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _effects = require(\"redux-saga/effects\");\n\nvar _connect = require(\"../actions/connect\");\n\nvar _reconnect = require(\"../actions/reconnect\");\n\nvar _sleep = _interopRequireDefault(require(\"../utils/sleep\"));\n\nvar _marked = /*#__PURE__*/_regenerator[\"default\"].mark(detectSlowConnectionSaga);\n\nvar SLOW_CONNECTION_AFTER = 15000;\n\nfunction detectSlowConnectionSaga() {\n  var connectivityRace;\n  return _regenerator[\"default\"].wrap(function detectSlowConnectionSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return (0, _effects.take)([_connect.CONNECT_PENDING, _reconnect.RECONNECT_PENDING]);\n\n        case 2:\n          _context.next = 4;\n          return (0, _effects.race)({\n            fulfilled: (0, _effects.take)([_connect.CONNECT_FULFILLED, _reconnect.RECONNECT_FULFILLED]),\n            rejected: (0, _effects.take)([_connect.CONNECT_REJECTED, _reconnect.RECONNECT_REJECTED]),\n            slow: (0, _effects.call)(function () {\n              return (0, _sleep[\"default\"])(SLOW_CONNECTION_AFTER);\n            })\n          });\n\n        case 4:\n          connectivityRace = _context.sent;\n\n          if (!('slow' in connectivityRace)) {\n            _context.next = 8;\n            break;\n          }\n\n          _context.next = 8;\n          return (0, _effects.put)({\n            type: _connect.CONNECT_STILL_PENDING\n          });\n\n        case 8:\n          _context.next = 0;\n          break;\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"mappings":";;;;;;;;;;;AAAA;;AAEA;;AAEA;;AACA;;wDAIyBA;;AAFzB,IAAMC,qBAAqB,GAAG,KAA9B;;AAEe,SAAUD,wBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAAE;AAEX,iBAAM,mBAAK,CAACC,wBAAD,EAAkBC,4BAAlB,CAAL,CAAN;;AAFW;AAAAF;AAIc,iBAAM,mBAAK;AAClCG,qBAAS,EAAE,mBAAK,CAACC,0BAAD,EAAoBC,8BAApB,CAAL,CADuB;AAElCC,oBAAQ,EAAE,mBAAK,CAACC,yBAAD,EAAmBC,6BAAnB,CAAL,CAFwB;AAGlCC,gBAAI,EAAE,mBAAK;AAAA,qBAAM,uBAAMV,qBAAN,CAAN;AAAL;AAH4B,WAAL,CAAN;;AAJd;AAILW,0BAJK,gBAILA;;AAJK,gBAUP,UAAUA,gBAVH;AAAAV;AAAA;AAAA;;AAAAA;AAWT,iBAAM,kBAAI;AAAEW,gBAAI,EAAEC;AAAR,WAAJ,CAAN;;AAXS;AAAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","names":["detectSlowConnectionSaga","SLOW_CONNECTION_AFTER","_context","CONNECT_PENDING","RECONNECT_PENDING","fulfilled","CONNECT_FULFILLED","RECONNECT_FULFILLED","rejected","CONNECT_REJECTED","RECONNECT_REJECTED","slow","connectivityRace","type","CONNECT_STILL_PENDING"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-core/lib/src/sagas/detectSlowConnectionSaga.js"],"sourcesContent":["import { call, put, race, take } from 'redux-saga/effects';\n\nimport { CONNECT_FULFILLED, CONNECT_PENDING, CONNECT_REJECTED, CONNECT_STILL_PENDING } from '../actions/connect';\n\nimport { RECONNECT_FULFILLED, RECONNECT_PENDING, RECONNECT_REJECTED } from '../actions/reconnect';\nimport sleep from '../utils/sleep';\n\nconst SLOW_CONNECTION_AFTER = 15000;\n\nexport default function* detectSlowConnectionSaga() {\n  for (;;) {\n    yield take([CONNECT_PENDING, RECONNECT_PENDING]);\n\n    const connectivityRace = yield race({\n      fulfilled: take([CONNECT_FULFILLED, RECONNECT_FULFILLED]),\n      rejected: take([CONNECT_REJECTED, RECONNECT_REJECTED]),\n      slow: call(() => sleep(SLOW_CONNECTION_AFTER))\n    });\n\n    if ('slow' in connectivityRace) {\n      yield put({ type: CONNECT_STILL_PENDING });\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}