{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.connectSendButton = void 0;\n\nvar _botframeworkWebchatApi = require(\"botframework-webchat-api\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _connectToWebChat = _interopRequireDefault(require(\"../connectToWebChat\"));\n\nvar _IconButton = _interopRequireDefault(require(\"./IconButton\"));\n\nvar _SendIcon = _interopRequireDefault(require(\"./Assets/SendIcon\"));\n\nvar _useFocus = _interopRequireDefault(require(\"../hooks/useFocus\"));\n\nvar _useScrollToEnd = _interopRequireDefault(require(\"../hooks/useScrollToEnd\"));\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar useDisabled = _botframeworkWebchatApi.hooks.useDisabled,\n    useLocalizer = _botframeworkWebchatApi.hooks.useLocalizer,\n    useSubmitSendBox = _botframeworkWebchatApi.hooks.useSubmitSendBox;\n\nvar connectSendButton = function connectSendButton() {\n  for (var _len = arguments.length, selectors = new Array(_len), _key = 0; _key < _len; _key++) {\n    selectors[_key] = arguments[_key];\n  }\n\n  return _connectToWebChat.default.apply(void 0, [function (_ref) {\n    var disabled = _ref.disabled,\n        language = _ref.language,\n        submitSendBox = _ref.submitSendBox;\n    return {\n      disabled: disabled,\n      language: language,\n      submitSendBox: submitSendBox\n    };\n  }].concat(selectors));\n};\n\nexports.connectSendButton = connectSendButton;\n\nvar SendButton = function SendButton(_ref2) {\n  var className = _ref2.className;\n\n  var _useDisabled = useDisabled(),\n      _useDisabled2 = _slicedToArray(_useDisabled, 1),\n      disabled = _useDisabled2[0];\n\n  var focus = (0, _useFocus.default)();\n  var localize = useLocalizer();\n  var scrollToEnd = (0, _useScrollToEnd.default)();\n  var submitSendBox = useSubmitSendBox();\n  var handleClick = (0, _react.useCallback)(function () {\n    focus('sendBoxWithoutKeyboard');\n    scrollToEnd();\n    submitSendBox();\n  }, [focus, scrollToEnd, submitSendBox]);\n  return /*#__PURE__*/_react.default.createElement(_IconButton.default, {\n    alt: localize('TEXT_INPUT_SEND_BUTTON_ALT'),\n    className: (0, _classnames.default)('webchat__send-button', className),\n    disabled: disabled,\n    onClick: handleClick\n  }, /*#__PURE__*/_react.default.createElement(_SendIcon.default, null));\n};\n\nSendButton.defaultProps = {\n  className: undefined\n};\nSendButton.propTypes = {\n  className: _propTypes.default.string\n};\nvar _default = SendButton;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAQA,WAAR,GAAwDC,8BAAhDD,WAAR;AAAA,IAAqBE,YAArB,GAAwDD,8BAAnCC,YAArB;AAAA,IAAmCC,gBAAnC,GAAwDF,8BAArBE,gBAAnC;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,oCAAIC,SAAJ;AAAIA,aAAJ,MAAIA,GAAJC,eAAID;AAAJ;;AAAA,SACxBE,yCACE;AAAA,QAAGC,QAAH,QAAGA,QAAH;AAAA,QAAaC,QAAb,QAAaA,QAAb;AAAA,QAAuBC,aAAvB,QAAuBA,aAAvB;AAAA,WAA4C;AAC1CF,cAAQ,EAARA,QAD0C;AAE1CC,cAAQ,EAARA,QAF0C;AAG1CC,mBAAa,EAAbA;AAH0C,KAA5C;AADF,YAMKL,SANLE,EADwB;AAA1B;;;;AAcA,IAAMI,UAA+B,GAAG,SAAlCA,UAAkC,QAAmB;AAAA,MAAhBC,SAAgB,SAAhBA,SAAgB;;AACzD,qBAAmBZ,WAAW,EAA9B;AAAA;AAAA,MAAOQ,QAAP;;AACA,MAAMK,KAAK,GAAG,wBAAd;AACA,MAAMC,QAAQ,GAAGZ,YAAY,EAA7B;AACA,MAAMa,WAAW,GAAG,8BAApB;AACA,MAAML,aAAa,GAAGP,gBAAgB,EAAtC;AAEA,MAAMa,WAAW,GAAG,wBAAY,YAAM;AACpCH,SAAK,CAAC,wBAAD,CAALA;AACAE,eAAW;AACXL,iBAAa;AAHK,KAIjB,CAACG,KAAD,EAAQE,WAAR,EAAqBL,aAArB,CAJiB,CAApB;AAMA,sBACEO,6BAACC,mBAAD;AACEC,OAAG,EAAEL,QAAQ,CAAC,4BAAD,CADf;AAEEF,aAAS,EAAE,yBAAW,sBAAX,EAAmCA,SAAnC,CAFb;AAGEJ,YAAQ,EAAEA,QAHZ;AAIEY,WAAO,EAAEJ;AAJX,kBAMEC,6BAACI,iBAAD,OANF,CADF;AAbF;;AAyBAV,UAAU,CAACW,YAAXX,GAA0B;AACxBC,WAAS,EAAEW;AADa,CAA1BZ;AAIAA,UAAU,CAACa,SAAXb,GAAuB;AACrBC,WAAS,EAAEa,mBAAUC;AADA,CAAvBf;eAIeA","names":["useDisabled","hooks","useLocalizer","useSubmitSendBox","connectSendButton","selectors","arguments","connectToWebChat","disabled","language","submitSendBox","SendButton","className","focus","localize","scrollToEnd","handleClick","_react","_IconButton","alt","onClick","_SendIcon","defaultProps","undefined","propTypes","PropTypes","string"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-component/lib/src/SendBox/SendButton.tsx"],"sourcesContent":["import { hooks } from 'botframework-webchat-api';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { FC, useCallback } from 'react';\n\nimport connectToWebChat from '../connectToWebChat';\nimport IconButton from './IconButton';\nimport SendIcon from './Assets/SendIcon';\nimport useFocus from '../hooks/useFocus';\nimport useScrollToEnd from '../hooks/useScrollToEnd';\n\nconst { useDisabled, useLocalizer, useSubmitSendBox } = hooks;\n\nconst connectSendButton = (...selectors) =>\n  connectToWebChat(\n    ({ disabled, language, submitSendBox }) => ({\n      disabled,\n      language,\n      submitSendBox\n    }),\n    ...selectors\n  );\n\ntype SendButtonProps = {\n  className?: string;\n};\n\nconst SendButton: FC<SendButtonProps> = ({ className }) => {\n  const [disabled] = useDisabled();\n  const focus = useFocus();\n  const localize = useLocalizer();\n  const scrollToEnd = useScrollToEnd();\n  const submitSendBox = useSubmitSendBox();\n\n  const handleClick = useCallback(() => {\n    focus('sendBoxWithoutKeyboard');\n    scrollToEnd();\n    submitSendBox();\n  }, [focus, scrollToEnd, submitSendBox]);\n\n  return (\n    <IconButton\n      alt={localize('TEXT_INPUT_SEND_BUTTON_ALT')}\n      className={classNames('webchat__send-button', className)}\n      disabled={disabled}\n      onClick={handleClick}\n    >\n      <SendIcon />\n    </IconButton>\n  );\n};\n\nSendButton.defaultProps = {\n  className: undefined\n};\n\nSendButton.propTypes = {\n  className: PropTypes.string\n};\n\nexport default SendButton;\n\nexport { connectSendButton };\n"]},"metadata":{},"sourceType":"script"}