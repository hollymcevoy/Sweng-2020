{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useCreateActivityStatusRenderer;\n\nvar _botframeworkWebchatCore = require(\"botframework-webchat-core\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _useGetSendTimeoutForActivity = _interopRequireDefault(require(\"./useGetSendTimeoutForActivity\"));\n\nvar _useTimePassed = _interopRequireDefault(require(\"./internal/useTimePassed\"));\n\nvar _useWebChatAPIContext2 = _interopRequireDefault(require(\"./internal/useWebChatAPIContext\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n/* eslint react/prop-types: \"off\" */\n\n/* eslint react/require-default-props: \"off\" */\n\n\nvar _Constants$ActivityCl = _botframeworkWebchatCore.Constants.ActivityClientState,\n    SEND_FAILED = _Constants$ActivityCl.SEND_FAILED,\n    SENDING = _Constants$ActivityCl.SENDING,\n    SENT = _Constants$ActivityCl.SENT;\n\nvar ActivityStatusContainer = function ActivityStatusContainer(_ref) {\n  var activity = _ref.activity,\n      hideTimestamp = _ref.hideTimestamp,\n      nextVisibleActivity = _ref.nextVisibleActivity;\n\n  var _useWebChatAPIContext = (0, _useWebChatAPIContext2.default)(),\n      createActivityStatusRenderer = _useWebChatAPIContext.activityStatusRenderer;\n\n  var getSendTimeoutForActivity = (0, _useGetSendTimeoutForActivity.default)(); // SEND_FAILED from the activity is ignored, and is instead based on styleOptions.sendTimeout.\n  // Note that the derived state is time-sensitive. The useTimePassed() hook is used to make sure it changes over time.\n\n  var _activity$channelData = activity.channelData;\n  _activity$channelData = _activity$channelData === void 0 ? {} : _activity$channelData;\n  var _activity$channelData2 = _activity$channelData.clientTimestamp,\n      clientTimestamp = _activity$channelData2 === void 0 ? 0 : _activity$channelData2,\n      state = _activity$channelData.state,\n      role = activity.from.role;\n  var activitySent = state !== SENDING && state !== SEND_FAILED;\n  var fromUser = role === 'user';\n  var sendTimeout = getSendTimeoutForActivity({\n    activity: activity\n  });\n  var pastTimeout = (0, _useTimePassed.default)(fromUser && !activitySent ? new Date(clientTimestamp).getTime() + sendTimeout : 0);\n  var sendState = activitySent || !fromUser ? SENT : pastTimeout ? SEND_FAILED : SENDING;\n  return (0, _react.useMemo)(function () {\n    return createActivityStatusRenderer({\n      activity: activity,\n      hideTimestamp: hideTimestamp,\n      nextVisibleActivity: nextVisibleActivity,\n      // \"nextVisibleActivity\" is for backward compatibility, please remove this line on or after 2022-07-22.\n      sameTimestampGroup: hideTimestamp,\n      // \"sameTimestampGroup\" is for backward compatibility, please remove this line on or after 2022-07-22.\n      sendState: sendState\n    });\n  }, [activity, createActivityStatusRenderer, hideTimestamp, nextVisibleActivity, sendState]);\n};\n\nfunction useCreateActivityStatusRenderer() {\n  return (0, _react.useMemo)(function () {\n    return function (_ref2) {\n      var activity = _ref2.activity,\n          nextVisibleActivity = _ref2.nextVisibleActivity;\n      return function () {\n        var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            hideTimestamp = _ref3.hideTimestamp;\n\n        return /*#__PURE__*/_react.default.createElement(ActivityStatusContainer, {\n          activity: activity,\n          hideTimestamp: hideTimestamp,\n          nextVisibleActivity: nextVisibleActivity\n        });\n      };\n    };\n  }, []);\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAGA;;AACA;;AAGA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AATA;;AACA;;;AAUA,4BAEIA,mCADFC,mBADF;AAAA,IACyBC,WADzB,yBACyBA,WADzB;AAAA,IACsCC,OADtC,yBACsCA,OADtC;AAAA,IAC+CC,IAD/C,yBAC+CA,IAD/C;;AAIA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,OAAsD;AAAA,MAAnDC,QAAmD,QAAnDA,QAAmD;AAAA,MAAzCC,aAAyC,QAAzCA,aAAyC;AAAA,MAA1BC,mBAA0B,QAA1BA,mBAA0B;;AACpF,8BAAiE,qCAAjE;AAAA,MAAgCC,4BAAhC,yBAAQC,sBAAR;;AACA,MAAMC,yBAAyB,GAAG,4CAAlC,CAFoF,CAIpF;AACA;;AACA,8BAWIL,QAXJ,CACEM,WADF;AAAAC,6DACgD,EADhD;AAAA,qDACiBC,eADjB;AAAA,MACiBA,eADjB,uCACmC,CADnC;AAAA,MACsCC,KADtC,yBACsCA,KADtC;AAAA,MAEUC,IAFV,GAWIV,QAXJ,CAEEW,IASEX,CATMU,IAFV;AAaA,MAAME,YAAY,GAAGH,KAAK,KAAKZ,OAAVY,IAAqBA,KAAK,KAAKb,WAApD;AACA,MAAMiB,QAAQ,GAAGH,IAAI,KAAK,MAA1B;AACA,MAAMI,WAAW,GAAGT,yBAAyB,CAAC;AAAEL,YAAQ,EAARA;AAAF,GAAD,CAA7C;AAEA,MAAMe,WAAW,GAAG,4BAAcF,QAAQ,IAAI,CAACD,YAAbC,GAA4B,IAAIG,IAAJ,CAASR,eAAT,EAA0BS,OAA1B,KAAsCH,WAAlED,GAAgF,CAA9F,CAApB;AAEA,MAAMK,SAAS,GAAGN,YAAY,IAAI,CAACC,QAAjBD,GAA4Bd,IAA5Bc,GAAmCG,WAAW,GAAGnB,WAAH,GAAiBC,OAAjF;AAEA,SAAO,oBACL;AAAA,WACEM,4BAA4B,CAAC;AAC3BH,cAAQ,EAARA,QAD2B;AAE3BC,mBAAa,EAAbA,aAF2B;AAG3BC,yBAAmB,EAAnBA,mBAH2B;AAGN;AACrBiB,wBAAkB,EAAElB,aAJO;AAIQ;AACnCiB,eAAS,EAATA;AAL2B,KAAD,CAD9B;AADK,KASL,CAAClB,QAAD,EAAWG,4BAAX,EAAyCF,aAAzC,EAAwDC,mBAAxD,EAA6EgB,SAA7E,CATK,CAAP;AA3BF;;AAwCe,SAASE,+BAAT,GAGyC;AACtD,SAAO,oBACL;AAAA,WACE;AAAA,UAAGpB,QAAH,SAAGA,QAAH;AAAA,UAAaE,mBAAb,SAAaA,mBAAb;AAAA,aACA;AAAA,wFAAkD,EAAlD;AAAA,YAAGD,aAAH,SAAGA,aAAH;;AAAA,4BAEIoB,6BAACtB,uBAAD;AACEC,kBAAQ,EAAEA,QADZ;AAEEC,uBAAa,EAAEA,aAFjB;AAGEC,6BAAmB,EAAEA;AAHvB,UAFJ;AADA;AADF;AADK,KAWL,EAXK,CAAP;AAaD","names":["Constants","ActivityClientState","SEND_FAILED","SENDING","SENT","ActivityStatusContainer","activity","hideTimestamp","nextVisibleActivity","createActivityStatusRenderer","activityStatusRenderer","getSendTimeoutForActivity","channelData","_activity$channelData","clientTimestamp","state","role","from","activitySent","fromUser","sendTimeout","pastTimeout","Date","getTime","sendState","sameTimestampGroup","useCreateActivityStatusRenderer","_react"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-api/lib/src/hooks/useCreateActivityStatusRenderer.tsx"],"sourcesContent":["/* eslint react/prop-types: \"off\" */\n/* eslint react/require-default-props: \"off\" */\n\nimport { Constants, DirectLineActivity } from 'botframework-webchat-core';\nimport React, { ReactNode, useMemo } from 'react';\n\nimport SendState from '../types/SendState';\nimport useGetSendTimeoutForActivity from './useGetSendTimeoutForActivity';\nimport useTimePassed from './internal/useTimePassed';\nimport useWebChatAPIContext from './internal/useWebChatAPIContext';\n\nconst {\n  ActivityClientState: { SEND_FAILED, SENDING, SENT }\n} = Constants;\n\nconst ActivityStatusContainer = ({ activity, hideTimestamp, nextVisibleActivity }) => {\n  const { activityStatusRenderer: createActivityStatusRenderer } = useWebChatAPIContext();\n  const getSendTimeoutForActivity = useGetSendTimeoutForActivity();\n\n  // SEND_FAILED from the activity is ignored, and is instead based on styleOptions.sendTimeout.\n  // Note that the derived state is time-sensitive. The useTimePassed() hook is used to make sure it changes over time.\n  const {\n    channelData: { clientTimestamp = 0, state } = {},\n    from: { role }\n  }: {\n    channelData: {\n      clientTimestamp?: number;\n      state?: SendState;\n    };\n    from: {\n      role: string;\n    };\n  } = activity;\n\n  const activitySent = state !== SENDING && state !== SEND_FAILED;\n  const fromUser = role === 'user';\n  const sendTimeout = getSendTimeoutForActivity({ activity });\n\n  const pastTimeout = useTimePassed(fromUser && !activitySent ? new Date(clientTimestamp).getTime() + sendTimeout : 0);\n\n  const sendState = activitySent || !fromUser ? SENT : pastTimeout ? SEND_FAILED : SENDING;\n\n  return useMemo(\n    () =>\n      createActivityStatusRenderer({\n        activity,\n        hideTimestamp,\n        nextVisibleActivity, // \"nextVisibleActivity\" is for backward compatibility, please remove this line on or after 2022-07-22.\n        sameTimestampGroup: hideTimestamp, // \"sameTimestampGroup\" is for backward compatibility, please remove this line on or after 2022-07-22.\n        sendState\n      }),\n    [activity, createActivityStatusRenderer, hideTimestamp, nextVisibleActivity, sendState]\n  );\n};\n\nexport default function useCreateActivityStatusRenderer(): (renderOptions: {\n  activity: DirectLineActivity;\n  nextVisibleActivity: DirectLineActivity;\n}) => (props: { hideTimestamp?: boolean }) => ReactNode {\n  return useMemo(\n    () =>\n      ({ activity, nextVisibleActivity }: { activity: DirectLineActivity; nextVisibleActivity: DirectLineActivity }) =>\n      ({ hideTimestamp }: { hideTimestamp?: boolean } = {}) =>\n        (\n          <ActivityStatusContainer\n            activity={activity}\n            hideTimestamp={hideTimestamp}\n            nextVisibleActivity={nextVisibleActivity}\n          />\n        ),\n    []\n  );\n}\n"]},"metadata":{},"sourceType":"script"}