{"ast":null,"code":"\"use strict\"; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SpeakerRecognizer = void 0;\n\nvar Exports_1 = require(\"../common.speech/Exports\");\n\nvar Exports_2 = require(\"../common/Exports\");\n\nvar Contracts_1 = require(\"./Contracts\");\n\nvar Exports_3 = require(\"./Exports\");\n/**\n * Defines SpeakerRecognizer class for Speaker Recognition\n * Handles operations from user for Voice Profile operations (e.g. createProfile, deleteProfile)\n * @class SpeakerRecognizer\n */\n\n\nvar SpeakerRecognizer =\n/** @class */\nfunction () {\n  /**\n   * SpeakerRecognizer constructor.\n   * @constructor\n   * @param {SpeechConfig} speechConfig - An set of initial properties for this recognizer (authentication key, region, &c)\n   */\n  function SpeakerRecognizer(speechConfig, audioConfig) {\n    var speechConfigImpl = speechConfig;\n    Contracts_1.Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\n    this.privAudioConfigImpl = audioConfig;\n    Contracts_1.Contracts.throwIfNull(this.privAudioConfigImpl, \"audioConfig\");\n    this.privProperties = speechConfigImpl.properties.clone();\n    this.implSRSetup();\n  }\n\n  Object.defineProperty(SpeakerRecognizer.prototype, \"authorizationToken\", {\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member SpeakerRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get: function () {\n      return this.properties.getProperty(Exports_3.PropertyId.SpeechServiceAuthorization_Token);\n    },\n\n    /**\n     * Gets/Sets the authorization token used to communicate with the service.\n     * @member SpeakerRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} token - Authorization token.\n     */\n    set: function (token) {\n      Contracts_1.Contracts.throwIfNullOrWhitespace(token, \"token\");\n      this.properties.setProperty(Exports_3.PropertyId.SpeechServiceAuthorization_Token, token);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SpeakerRecognizer.prototype, \"properties\", {\n    /**\n     * The collection of properties and their values defined for this SpeakerRecognizer.\n     * @member SpeakerRecognizer.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeakerRecognizer.\n     */\n    get: function () {\n      return this.privProperties;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Get recognition result for model using given audio\n   * @member SpeakerRecognizer.prototype.recognizeOnceAsync\n   * @function\n   * @public\n   * @param {SpeakerIdentificationModel} model Model containing Voice Profiles to be identified\n   * @param cb - Callback invoked once result is returned.\n   * @param err - Callback invoked in case of an error.\n   */\n\n  SpeakerRecognizer.prototype.recognizeOnceAsync = function (model, cb, err) {\n    if (model instanceof Exports_3.SpeakerIdentificationModel) {\n      var responsePromise = this.privAdapter.identifySpeaker(model, this.privAudioConfigImpl);\n      Exports_2.marshalPromiseToCallbacks(this.getResult(responsePromise, Exports_3.SpeakerRecognitionResultType.Identify, undefined), cb, err);\n    } else if (model instanceof Exports_3.SpeakerVerificationModel) {\n      var responsePromise = this.privAdapter.verifySpeaker(model, this.privAudioConfigImpl);\n      Exports_2.marshalPromiseToCallbacks(this.getResult(responsePromise, Exports_3.SpeakerRecognitionResultType.Verify, model.voiceProfile.profileId), cb, err);\n    } else {\n      throw new Error(\"SpeakerRecognizer.recognizeOnce: Unexpected model type\");\n    }\n  };\n  /**\n   * Included for compatibility\n   * @member SpeakerRecognizer.prototype.close\n   * @function\n   * @public\n   */\n\n\n  SpeakerRecognizer.prototype.close = function () {\n    return;\n  }; // Does class setup, swiped from Recognizer.\n\n\n  SpeakerRecognizer.prototype.implSRSetup = function () {\n    var osPlatform = typeof window !== \"undefined\" ? \"Browser\" : \"Node\";\n    var osName = \"unknown\";\n    var osVersion = \"unknown\";\n\n    if (typeof navigator !== \"undefined\") {\n      osPlatform = osPlatform + \"/\" + navigator.platform;\n      osName = navigator.userAgent;\n      osVersion = navigator.appVersion;\n    }\n\n    var recognizerConfig = new Exports_1.SpeakerRecognitionConfig(new Exports_1.Context(new Exports_1.OS(osPlatform, osName, osVersion)), this.privProperties);\n    this.privAdapter = new Exports_1.SpeakerIdMessageAdapter(recognizerConfig);\n  };\n\n  SpeakerRecognizer.prototype.getResult = function (responsePromise, resultType, profileId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , responsePromise];\n\n          case 1:\n            response = _a.sent();\n            return [2\n            /*return*/\n            , new Exports_3.SpeakerRecognitionResult(resultType, response.data, profileId, response.ok ? Exports_3.ResultReason.RecognizedSpeaker : Exports_3.ResultReason.Canceled)];\n        }\n      });\n    });\n  };\n\n  return SpeakerRecognizer;\n}();\n\nexports.SpeakerRecognizer = SpeakerRecognizer;","map":{"version":3,"mappings":"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","names":["speechConfig","audioConfig","speechConfigImpl","Contracts_1","throwIfNull","privAudioConfigImpl","privProperties","properties","clone","implSRSetup","Object","SpeakerRecognizer","getProperty","Exports_3","SpeechServiceAuthorization_Token","token","throwIfNullOrWhitespace","setProperty","model","cb","err","responsePromise","privAdapter","identifySpeaker","Exports_2","getResult","Identify","undefined","verifySpeaker","Verify","voiceProfile","profileId","Error","osPlatform","window","osName","osVersion","navigator","platform","userAgent","appVersion","recognizerConfig","Exports_1","resultType","response","_a","data","ok","RecognizedSpeaker","Canceled","exports"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/SpeakerRecognizer.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IRestResponse,\r\n} from \"../common.browser/Exports\";\r\nimport {\r\n    Context,\r\n    OS,\r\n    SpeakerIdMessageAdapter,\r\n    SpeakerRecognitionConfig,\r\n} from \"../common.speech/Exports\";\r\nimport { marshalPromiseToCallbacks } from \"../common/Exports\";\r\nimport { AudioConfig, AudioConfigImpl } from \"./Audio/AudioConfig\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n    SpeakerIdentificationModel,\r\n    SpeakerRecognitionResult,\r\n    SpeakerRecognitionResultType,\r\n    SpeakerVerificationModel,\r\n} from \"./Exports\";\r\nimport { SpeechConfig, SpeechConfigImpl } from \"./SpeechConfig\";\r\n\r\n/**\r\n * Defines SpeakerRecognizer class for Speaker Recognition\r\n * Handles operations from user for Voice Profile operations (e.g. createProfile, deleteProfile)\r\n * @class SpeakerRecognizer\r\n */\r\nexport class SpeakerRecognizer {\r\n    protected privProperties: PropertyCollection;\r\n    private privAdapter: SpeakerIdMessageAdapter;\r\n    private privAudioConfigImpl: AudioConfigImpl;\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member SpeakerRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * @member SpeakerRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} token - Authorization token.\r\n     */\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this SpeakerRecognizer.\r\n     * @member SpeakerRecognizer.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeakerRecognizer.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * SpeakerRecognizer constructor.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - An set of initial properties for this recognizer (authentication key, region, &c)\r\n     */\r\n    public constructor(speechConfig: SpeechConfig, audioConfig: AudioConfig) {\r\n        const speechConfigImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\r\n\r\n        this.privAudioConfigImpl = audioConfig as AudioConfigImpl;\r\n        Contracts.throwIfNull(this.privAudioConfigImpl, \"audioConfig\");\r\n\r\n        this.privProperties = speechConfigImpl.properties.clone();\r\n        this.implSRSetup();\r\n    }\r\n\r\n    /**\r\n     * Get recognition result for model using given audio\r\n     * @member SpeakerRecognizer.prototype.recognizeOnceAsync\r\n     * @function\r\n     * @public\r\n     * @param {SpeakerIdentificationModel} model Model containing Voice Profiles to be identified\r\n     * @param cb - Callback invoked once result is returned.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public recognizeOnceAsync(model: SpeakerIdentificationModel | SpeakerVerificationModel, cb?: (e: SpeakerRecognitionResult) => void, err?: (e: string) => void): void {\r\n\r\n        if (model instanceof SpeakerIdentificationModel) {\r\n            const responsePromise: Promise<IRestResponse> = this.privAdapter.identifySpeaker(model, this.privAudioConfigImpl);\r\n            marshalPromiseToCallbacks(this.getResult(responsePromise, SpeakerRecognitionResultType.Identify, undefined), cb, err);\r\n        } else if (model instanceof SpeakerVerificationModel) {\r\n            const responsePromise: Promise<IRestResponse> = this.privAdapter.verifySpeaker(model, this.privAudioConfigImpl);\r\n            marshalPromiseToCallbacks(this.getResult(responsePromise, SpeakerRecognitionResultType.Verify, model.voiceProfile.profileId), cb, err);\r\n        } else {\r\n            throw new Error(\"SpeakerRecognizer.recognizeOnce: Unexpected model type\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Included for compatibility\r\n     * @member SpeakerRecognizer.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        return;\r\n    }\r\n\r\n    // Does class setup, swiped from Recognizer.\r\n    private implSRSetup(): void {\r\n\r\n        let osPlatform = (typeof window !== \"undefined\") ? \"Browser\" : \"Node\";\r\n        let osName = \"unknown\";\r\n        let osVersion = \"unknown\";\r\n\r\n        if (typeof navigator !== \"undefined\") {\r\n            osPlatform = osPlatform + \"/\" + navigator.platform;\r\n            osName = navigator.userAgent;\r\n            osVersion = navigator.appVersion;\r\n        }\r\n\r\n        const recognizerConfig =\r\n            new SpeakerRecognitionConfig(\r\n                new Context(new OS(osPlatform, osName, osVersion)),\r\n                this.privProperties);\r\n\r\n        this.privAdapter = new SpeakerIdMessageAdapter(recognizerConfig);\r\n    }\r\n\r\n    private async getResult(responsePromise: Promise<IRestResponse>, resultType: SpeakerRecognitionResultType, profileId?: string): Promise<SpeakerRecognitionResult> {\r\n        const response: IRestResponse = await responsePromise;\r\n        return new SpeakerRecognitionResult(\r\n            resultType,\r\n            response.data,\r\n            profileId,\r\n            response.ok ? ResultReason.RecognizedSpeaker : ResultReason.Canceled,\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}