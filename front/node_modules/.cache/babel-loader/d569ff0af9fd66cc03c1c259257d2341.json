{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/dylanmurray/Sweng-2022/front/node_modules/@babel/runtime/regenerator/index.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useTrackTiming;\n\nvar _react = require(\"react\");\n\nvar _createCustomEvent = _interopRequireDefault(require(\"../utils/createCustomEvent\"));\n\nvar _randomId = _interopRequireDefault(require(\"../utils/randomId\"));\n\nvar _useReadTelemetryDimensions = _interopRequireDefault(require(\"./internal/useReadTelemetryDimensions\"));\n\nvar _useTrackException = _interopRequireDefault(require(\"./useTrackException\"));\n\nvar _useWebChatAPIContext2 = _interopRequireDefault(require(\"./internal/useWebChatAPIContext\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nfunction useTrackTiming() {\n  var _useWebChatAPIContext = (0, _useWebChatAPIContext2.default)(),\n      onTelemetry = _useWebChatAPIContext.onTelemetry;\n\n  var readTelemetryDimensions = (0, _useReadTelemetryDimensions.default)();\n  var trackException = (0, _useTrackException.default)();\n  return (0, _react.useCallback)( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(name, functionOrPromise) {\n      var timingId, startTime, duration;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(!name || typeof name !== 'string')) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.abrupt(\"return\", console.warn('botframework-webchat: \"name\" passed to \"useTrackTiming\" hook must be specified and of type string.'));\n\n            case 4:\n              if (!(typeof functionOrPromise !== 'function' && typeof functionOrPromise.then !== 'function')) {\n                _context.next = 6;\n                break;\n              }\n\n              return _context.abrupt(\"return\", console.warn('botframework-webchat: \"functionOrPromise\" passed to \"useTrackTiming\" hook must be specified, of type function or Promise.'));\n\n            case 6:\n              timingId = (0, _randomId.default)();\n              onTelemetry && onTelemetry((0, _createCustomEvent.default)('timingstart', {\n                dimensions: readTelemetryDimensions(),\n                name: name,\n                timingId: timingId\n              }));\n              startTime = Date.now();\n              _context.prev = 9;\n              _context.next = 12;\n              return typeof functionOrPromise === 'function' ? functionOrPromise() : functionOrPromise;\n\n            case 12:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](9);\n              trackException(_context.t0, false);\n              throw _context.t0;\n\n            case 19:\n              _context.prev = 19;\n              duration = Date.now() - startTime;\n              onTelemetry && onTelemetry((0, _createCustomEvent.default)('timingend', {\n                dimensions: readTelemetryDimensions(),\n                duration: duration,\n                name: name,\n                timingId: timingId\n              }));\n              return _context.finish(19);\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[9, 15, 19, 23]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [onTelemetry, readTelemetryDimensions, trackException]);\n}","map":{"version":3,"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEe,SAASA,cAAT,GAGQ;AACrB,8BAAwB,qCAAxB;AAAA,MAAQC,WAAR,yBAAQA,WAAR;;AACA,MAAMC,uBAAuB,GAAG,0CAAhC;AACA,MAAMC,cAAc,GAAG,iCAAvB;AAEA,SAAO;AAAA,wEACL,iBAAOC,IAAP,EAAaC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACM,CAACD,IAAD,IAAS,OAAOA,IAAP,KAAgB,QAD/B;AAAAE;AAAA;AAAA;;AAAA,+CAEWC,OAAO,CAACC,IAARD,CACL,oGADKA,CAFX;;AAAA;AAAA,oBAKa,OAAOF,iBAAP,KAA6B,UAA7B,IAA2C,OAAOA,iBAAiB,CAACI,IAAzB,KAAkC,UAL1F;AAAAH;AAAA;AAAA;;AAAA,+CAMWC,OAAO,CAACC,IAARD,CACL,2HADKA,CANX;;AAAA;AAWQG,sBAXR,GAWmB,wBAAXA;AAENT,yBAAW,IACTA,WAAW,CACT,gCAAkB,aAAlB,EAAiC;AAC/BU,0BAAU,EAAET,uBAAuB,EADJ;AAE/BE,oBAAI,EAAJA,IAF+B;AAG/BM,wBAAQ,EAARA;AAH+B,eAAjC,CADS,CADbT;AASMW,uBAtBR,GAsBoBC,IAAI,CAACC,GAALD,EAAZD;AAtBRN;AAAAA;AAAA,qBAyBkB,OAAOD,iBAAP,KAA6B,UAA7B,GAA0CA,iBAAiB,EAA3D,GAAgEA,iBAzBlF;;AAAA;AAAA;;AAAA;AAAAC;AAAAA;AA2BIH,4BAAc,cAAM,KAAN,CAAdA;AA3BJ;;AAAA;AAAAG;AA+BUS,sBA/BV,GA+BqBF,IAAI,CAACC,GAALD,KAAaD,SAAxBG;AAENd,yBAAW,IACTA,WAAW,CACT,gCAAkB,WAAlB,EAA+B;AAC7BU,0BAAU,EAAET,uBAAuB,EADN;AAE7Ba,wBAAQ,EAARA,QAF6B;AAG7BX,oBAAI,EAAJA,IAH6B;AAI7BM,wBAAQ,EAARA;AAJ6B,eAA/B,CADS,CADbT;AAjCJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADK;;AAAA;AAAA;AAAA;AAAA,OA6CL,CAACA,WAAD,EAAcC,uBAAd,EAAuCC,cAAvC,CA7CK,CAAP;AA+CD","names":["useTrackTiming","onTelemetry","readTelemetryDimensions","trackException","name","functionOrPromise","_context","console","warn","then","timingId","dimensions","startTime","Date","now","duration"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-api/lib/src/hooks/useTrackTiming.ts"],"sourcesContent":["import { useCallback } from 'react';\n\nimport createCustomEvent from '../utils/createCustomEvent';\nimport randomId from '../utils/randomId';\nimport useReadTelemetryDimensions from './internal/useReadTelemetryDimensions';\nimport useTrackException from './useTrackException';\nimport useWebChatAPIContext from './internal/useWebChatAPIContext';\n\nexport default function useTrackTiming<T>(): (\n  name: string,\n  functionOrPromise: (() => T) | Promise<T>\n) => Promise<T | void> {\n  const { onTelemetry } = useWebChatAPIContext();\n  const readTelemetryDimensions = useReadTelemetryDimensions();\n  const trackException = useTrackException();\n\n  return useCallback(\n    async (name, functionOrPromise) => {\n      if (!name || typeof name !== 'string') {\n        return console.warn(\n          'botframework-webchat: \"name\" passed to \"useTrackTiming\" hook must be specified and of type string.'\n        );\n      } else if (typeof functionOrPromise !== 'function' && typeof functionOrPromise.then !== 'function') {\n        return console.warn(\n          'botframework-webchat: \"functionOrPromise\" passed to \"useTrackTiming\" hook must be specified, of type function or Promise.'\n        );\n      }\n\n      const timingId = randomId();\n\n      onTelemetry &&\n        onTelemetry(\n          createCustomEvent('timingstart', {\n            dimensions: readTelemetryDimensions(),\n            name,\n            timingId\n          })\n        );\n\n      const startTime = Date.now();\n\n      try {\n        return await (typeof functionOrPromise === 'function' ? functionOrPromise() : functionOrPromise);\n      } catch (err) {\n        trackException(err, false);\n\n        throw err;\n      } finally {\n        const duration = Date.now() - startTime;\n\n        onTelemetry &&\n          onTelemetry(\n            createCustomEvent('timingend', {\n              dimensions: readTelemetryDimensions(),\n              duration,\n              name,\n              timingId\n            })\n          );\n      }\n    },\n    [onTelemetry, readTelemetryDimensions, trackException]\n  );\n}\n"]},"metadata":{},"sourceType":"script"}