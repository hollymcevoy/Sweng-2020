{"ast":null,"code":"\"use strict\";\n\nexports.empty = {\n  closed: true,\n  next: function (value) {},\n  error: function (err) {\n    throw err;\n  },\n  complete: function () {}\n};","map":{"version":3,"mappings":";;AA8BaA,gBAAuB;AAClCC,QAAM,EAAE,IAD0B;AAElCC,MAAI,YAACC,KAAD,EAAW,CAAqB,CAFF;AAGlCC,OAAK,YAACC,GAAD,EAAS;AAAU,UAAMA,GAAN;AAAY,GAHF;AAIlCC,UAAQ,eAAqB;AAJK,CAAvB","names":["exports","closed","next","value","error","err","complete"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/src/Observer.ts"],"sourcesContent":["export interface NextObserver<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error?: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface ErrorObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface CompletionObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error?: (err: any) => void;\n  complete: () => void;\n}\n\nexport type PartialObserver<T> = NextObserver<T> | ErrorObserver<T> | CompletionObserver<T>;\n\nexport interface Observer<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error: (err: any) => void;\n  complete: () => void;\n}\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void { throw err; },\n  complete(): void { /*noop*/ }\n};\n"]},"metadata":{},"sourceType":"script"}