{"ast":null,"code":"\"use strict\"; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AudioFileWriter = void 0;\n\nvar fs = __importStar(require(\"fs\"));\n\nvar Contracts_1 = require(\"../Contracts\");\n\nvar AudioFileWriter =\n/** @class */\nfunction () {\n  function AudioFileWriter(filename) {\n    var _this = this;\n\n    this.id = function () {\n      return _this.privId;\n    };\n\n    Contracts_1.Contracts.throwIfNullOrUndefined(fs.openSync, \"\\nFile System access not available, please use Push or PullAudioOutputStream\");\n    this.privFd = fs.openSync(filename, \"w\");\n  }\n\n  Object.defineProperty(AudioFileWriter.prototype, \"format\", {\n    set: function (format) {\n      Contracts_1.Contracts.throwIfNotUndefined(this.privAudioFormat, \"format is already set\");\n      this.privAudioFormat = format;\n      var headerOffset = 0;\n\n      if (this.privAudioFormat.hasHeader) {\n        headerOffset = this.privAudioFormat.header.byteLength;\n      }\n\n      if (this.privFd !== undefined) {\n        this.privWriteStream = fs.createWriteStream(\"\", {\n          fd: this.privFd,\n          start: headerOffset,\n          autoClose: false\n        });\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  AudioFileWriter.prototype.write = function (buffer) {\n    Contracts_1.Contracts.throwIfNullOrUndefined(this.privAudioFormat, \"must set format before writing.\");\n\n    if (this.privWriteStream !== undefined) {\n      this.privWriteStream.write(new Uint8Array(buffer.slice(0)));\n    }\n  };\n\n  AudioFileWriter.prototype.close = function () {\n    var _this = this;\n\n    if (this.privFd !== undefined) {\n      this.privWriteStream.on(\"finish\", function () {\n        if (_this.privAudioFormat.hasHeader) {\n          _this.privAudioFormat.updateHeader(_this.privWriteStream.bytesWritten);\n\n          fs.writeSync(_this.privFd, new Int8Array(_this.privAudioFormat.header), 0, _this.privAudioFormat.header.byteLength, 0);\n        }\n\n        fs.closeSync(_this.privFd);\n        _this.privFd = undefined;\n      });\n      this.privWriteStream.end();\n    }\n  };\n\n  return AudioFileWriter;\n}();\n\nexports.AudioFileWriter = AudioFileWriter;","map":{"version":3,"mappings":"cAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;AAEA;;AAIA;AAAA;AAAA;AAMI,2BAAmBA,QAAnB,EAAwC;AAAxC;;AA0CO,cAAK;AACR,aAAOC,KAAI,CAACC,MAAZ;AACH,KAFM;;AAzCHC,0BAAUC,sBAAV,CAAiCC,EAAE,CAACC,QAApC,EAA8C,8EAA9C;AACA,SAAKC,MAAL,GAAcF,EAAE,CAACC,QAAH,CAAYN,QAAZ,EAAsB,GAAtB,CAAd;AACH;;AAEDQ,wBAAWC,yBAAX,EAAW,QAAX,EAAiB;SAAjB,UAAkBC,MAAlB,EAA2C;AACvCP,4BAAUQ,mBAAV,CAA8B,KAAKC,eAAnC,EAAoD,uBAApD;AACA,WAAKA,eAAL,GAAuBF,MAAvB;AACA,UAAIG,YAAY,GAAW,CAA3B;;AACA,UAAI,KAAKD,eAAL,CAAqBE,SAAzB,EAAoC;AAChCD,oBAAY,GAAG,KAAKD,eAAL,CAAqBG,MAArB,CAA4BC,UAA3C;AACH;;AACD,UAAI,KAAKT,MAAL,KAAgBU,SAApB,EAA+B;AAC3B,aAAKC,eAAL,GAAuBb,EAAE,CAACc,iBAAH,CAAqB,EAArB,EAAyB;AAACC,YAAE,EAAE,KAAKb,MAAV;AAAkBc,eAAK,EAAER,YAAzB;AAAuCS,mBAAS,EAAE;AAAlD,SAAzB,CAAvB;AACH;AACJ,KAVgB;qBAAA;;AAAA,GAAjB;;AAYOb,oCAAP,UAAac,MAAb,EAAgC;AAC5BpB,0BAAUC,sBAAV,CAAiC,KAAKQ,eAAtC,EAAuD,iCAAvD;;AACA,QAAI,KAAKM,eAAL,KAAyBD,SAA7B,EAAwC;AACpC,WAAKC,eAAL,CAAqBM,KAArB,CAA2B,IAAIC,UAAJ,CAAeF,MAAM,CAACG,KAAP,CAAa,CAAb,CAAf,CAA3B;AACH;AACJ,GALM;;AAOAjB,oCAAP;AAAA;;AACI,QAAI,KAAKF,MAAL,KAAgBU,SAApB,EAA+B;AAC3B,WAAKC,eAAL,CAAqBS,EAArB,CAAwB,QAAxB,EAAkC;AAC9B,YAAI1B,KAAI,CAACW,eAAL,CAAqBE,SAAzB,EAAoC;AAChCb,eAAI,CAACW,eAAL,CAAqBgB,YAArB,CAAkC3B,KAAI,CAACiB,eAAL,CAAqBW,YAAvD;;AACAxB,YAAE,CAACyB,SAAH,CAAa7B,KAAI,CAACM,MAAlB,EACI,IAAIwB,SAAJ,CAAc9B,KAAI,CAACW,eAAL,CAAqBG,MAAnC,CADJ,EAEI,CAFJ,EAGId,KAAI,CAACW,eAAL,CAAqBG,MAArB,CAA4BC,UAHhC,EAII,CAJJ;AAKH;;AACDX,UAAE,CAAC2B,SAAH,CAAa/B,KAAI,CAACM,MAAlB;AACAN,aAAI,CAACM,MAAL,GAAcU,SAAd;AACH,OAXD;AAYA,WAAKC,eAAL,CAAqBe,GAArB;AACH;AACJ,GAhBM;;AAqBX;AAnDA;;AAAaC","names":["filename","_this","privId","Contracts_1","throwIfNullOrUndefined","fs","openSync","privFd","Object","AudioFileWriter","format","throwIfNotUndefined","privAudioFormat","headerOffset","hasHeader","header","byteLength","undefined","privWriteStream","createWriteStream","fd","start","autoClose","buffer","write","Uint8Array","slice","on","updateHeader","bytesWritten","writeSync","Int8Array","closeSync","end","exports"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/src/sdk/Audio/AudioFileWriter.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport * as fs from \"fs\";\r\nimport { IAudioDestination } from \"../../common/Exports\";\r\nimport { Contracts } from \"../Contracts\";\r\nimport { AudioStreamFormat } from \"../Exports\";\r\nimport { AudioOutputFormatImpl } from \"./AudioOutputFormat\";\r\n\r\nexport class AudioFileWriter implements IAudioDestination {\r\n    private privAudioFormat: AudioOutputFormatImpl;\r\n    private privFd: number;\r\n    private privId: string;\r\n    private privWriteStream: fs.WriteStream;\r\n\r\n    public constructor(filename: fs.PathLike) {\r\n        Contracts.throwIfNullOrUndefined(fs.openSync, \"\\nFile System access not available, please use Push or PullAudioOutputStream\");\r\n        this.privFd = fs.openSync(filename, \"w\");\r\n    }\r\n\r\n    public set format(format: AudioStreamFormat) {\r\n        Contracts.throwIfNotUndefined(this.privAudioFormat, \"format is already set\");\r\n        this.privAudioFormat = format as AudioOutputFormatImpl;\r\n        let headerOffset: number = 0;\r\n        if (this.privAudioFormat.hasHeader) {\r\n            headerOffset = this.privAudioFormat.header.byteLength;\r\n        }\r\n        if (this.privFd !== undefined) {\r\n            this.privWriteStream = fs.createWriteStream(\"\", {fd: this.privFd, start: headerOffset, autoClose: false});\r\n        }\r\n    }\r\n\r\n    public write(buffer: ArrayBuffer): void {\r\n        Contracts.throwIfNullOrUndefined(this.privAudioFormat, \"must set format before writing.\");\r\n        if (this.privWriteStream !== undefined) {\r\n            this.privWriteStream.write(new Uint8Array(buffer.slice(0)));\r\n        }\r\n    }\r\n\r\n    public close(): void {\r\n        if (this.privFd !== undefined) {\r\n            this.privWriteStream.on(\"finish\", () => {\r\n                if (this.privAudioFormat.hasHeader) {\r\n                    this.privAudioFormat.updateHeader(this.privWriteStream.bytesWritten);\r\n                    fs.writeSync(this.privFd,\r\n                        new Int8Array(this.privAudioFormat.header),\r\n                        0,\r\n                        this.privAudioFormat.header.byteLength,\r\n                        0);\r\n                }\r\n                fs.closeSync(this.privFd);\r\n                this.privFd = undefined;\r\n            });\r\n            this.privWriteStream.end();\r\n        }\r\n    }\r\n\r\n    public id = (): string => {\r\n        return this.privId;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}