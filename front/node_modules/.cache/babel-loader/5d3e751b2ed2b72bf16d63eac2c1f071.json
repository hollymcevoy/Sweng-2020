{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar root_1 = require('../../util/root');\n\nvar tryCatch_1 = require('../../util/tryCatch');\n\nvar errorObject_1 = require('../../util/errorObject');\n\nvar Observable_1 = require('../../Observable');\n\nvar Subscriber_1 = require('../../Subscriber');\n\nvar map_1 = require('../../operators/map');\n\nfunction getCORSRequest() {\n  if (root_1.root.XMLHttpRequest) {\n    return new root_1.root.XMLHttpRequest();\n  } else if (!!root_1.root.XDomainRequest) {\n    return new root_1.root.XDomainRequest();\n  } else {\n    throw new Error('CORS is not supported by your browser');\n  }\n}\n\nfunction getXMLHttpRequest() {\n  if (root_1.root.XMLHttpRequest) {\n    return new root_1.root.XMLHttpRequest();\n  } else {\n    var progId = void 0;\n\n    try {\n      var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n\n      for (var i = 0; i < 3; i++) {\n        try {\n          progId = progIds[i];\n\n          if (new root_1.root.ActiveXObject(progId)) {\n            break;\n          }\n        } catch (e) {}\n      }\n\n      return new root_1.root.ActiveXObject(progId);\n    } catch (e) {\n      throw new Error('XMLHttpRequest is not supported by your browser');\n    }\n  }\n}\n\nfunction ajaxGet(url, headers) {\n  if (headers === void 0) {\n    headers = null;\n  }\n\n  return new AjaxObservable({\n    method: 'GET',\n    url: url,\n    headers: headers\n  });\n}\n\nexports.ajaxGet = ajaxGet;\n;\n\nfunction ajaxPost(url, body, headers) {\n  return new AjaxObservable({\n    method: 'POST',\n    url: url,\n    body: body,\n    headers: headers\n  });\n}\n\nexports.ajaxPost = ajaxPost;\n;\n\nfunction ajaxDelete(url, headers) {\n  return new AjaxObservable({\n    method: 'DELETE',\n    url: url,\n    headers: headers\n  });\n}\n\nexports.ajaxDelete = ajaxDelete;\n;\n\nfunction ajaxPut(url, body, headers) {\n  return new AjaxObservable({\n    method: 'PUT',\n    url: url,\n    body: body,\n    headers: headers\n  });\n}\n\nexports.ajaxPut = ajaxPut;\n;\n\nfunction ajaxPatch(url, body, headers) {\n  return new AjaxObservable({\n    method: 'PATCH',\n    url: url,\n    body: body,\n    headers: headers\n  });\n}\n\nexports.ajaxPatch = ajaxPatch;\n;\nvar mapResponse = map_1.map(function (x, index) {\n  return x.response;\n});\n\nfunction ajaxGetJSON(url, headers) {\n  return mapResponse(new AjaxObservable({\n    method: 'GET',\n    url: url,\n    responseType: 'json',\n    headers: headers\n  }));\n}\n\nexports.ajaxGetJSON = ajaxGetJSON;\n;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\n\nvar AjaxObservable = function (_super) {\n  __extends(AjaxObservable, _super);\n\n  function AjaxObservable(urlOrRequest) {\n    _super.call(this);\n\n    var request = {\n      async: true,\n      createXHR: function () {\n        return this.crossDomain ? getCORSRequest.call(this) : getXMLHttpRequest();\n      },\n      crossDomain: false,\n      withCredentials: false,\n      headers: {},\n      method: 'GET',\n      responseType: 'json',\n      timeout: 0\n    };\n\n    if (typeof urlOrRequest === 'string') {\n      request.url = urlOrRequest;\n    } else {\n      for (var prop in urlOrRequest) {\n        if (urlOrRequest.hasOwnProperty(prop)) {\n          request[prop] = urlOrRequest[prop];\n        }\n      }\n    }\n\n    this.request = request;\n  }\n  /** @deprecated internal use only */\n\n\n  AjaxObservable.prototype._subscribe = function (subscriber) {\n    return new AjaxSubscriber(subscriber, this.request);\n  };\n  /**\n   * Creates an observable for an Ajax request with either a request object with\n   * url, headers, etc or a string for a URL.\n   *\n   * @example\n   * source = Rx.Observable.ajax('/products');\n   * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });\n   *\n   * @param {string|Object} request Can be one of the following:\n   *   A string of the URL to make the Ajax call.\n   *   An object with the following properties\n   *   - url: URL of the request\n   *   - body: The body of the request\n   *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE\n   *   - async: Whether the request is async\n   *   - headers: Optional headers\n   *   - crossDomain: true if a cross domain request, else false\n   *   - createXHR: a function to override if you need to use an alternate\n   *   XMLHttpRequest implementation.\n   *   - resultSelector: a function to use to alter the output value type of\n   *   the Observable. Gets {@link AjaxResponse} as an argument.\n   * @return {Observable} An observable sequence containing the XMLHttpRequest.\n   * @static true\n   * @name ajax\n   * @owner Observable\n  */\n\n\n  AjaxObservable.create = function () {\n    var create = function (urlOrRequest) {\n      return new AjaxObservable(urlOrRequest);\n    };\n\n    create.get = ajaxGet;\n    create.post = ajaxPost;\n    create.delete = ajaxDelete;\n    create.put = ajaxPut;\n    create.patch = ajaxPatch;\n    create.getJSON = ajaxGetJSON;\n    return create;\n  }();\n\n  return AjaxObservable;\n}(Observable_1.Observable);\n\nexports.AjaxObservable = AjaxObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\nvar AjaxSubscriber = function (_super) {\n  __extends(AjaxSubscriber, _super);\n\n  function AjaxSubscriber(destination, request) {\n    _super.call(this, destination);\n\n    this.request = request;\n    this.done = false;\n    var headers = request.headers = request.headers || {}; // force CORS if requested\n\n    if (!request.crossDomain && !headers['X-Requested-With']) {\n      headers['X-Requested-With'] = 'XMLHttpRequest';\n    } // ensure content type is set\n\n\n    if (!('Content-Type' in headers) && !(root_1.root.FormData && request.body instanceof root_1.root.FormData) && typeof request.body !== 'undefined') {\n      headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n    } // properly serialize body\n\n\n    request.body = this.serializeBody(request.body, request.headers['Content-Type']);\n    this.send();\n  }\n\n  AjaxSubscriber.prototype.next = function (e) {\n    this.done = true;\n\n    var _a = this,\n        xhr = _a.xhr,\n        request = _a.request,\n        destination = _a.destination;\n\n    var response = new AjaxResponse(e, xhr, request);\n    destination.next(response);\n  };\n\n  AjaxSubscriber.prototype.send = function () {\n    var _a = this,\n        request = _a.request,\n        _b = _a.request,\n        user = _b.user,\n        method = _b.method,\n        url = _b.url,\n        async = _b.async,\n        password = _b.password,\n        headers = _b.headers,\n        body = _b.body;\n\n    var createXHR = request.createXHR;\n    var xhr = tryCatch_1.tryCatch(createXHR).call(request);\n\n    if (xhr === errorObject_1.errorObject) {\n      this.error(errorObject_1.errorObject.e);\n    } else {\n      this.xhr = xhr; // set up the events before open XHR\n      // https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\n      // You need to add the event listeners before calling open() on the request.\n      // Otherwise the progress events will not fire.\n\n      this.setupEvents(xhr, request); // open XHR\n\n      var result = void 0;\n\n      if (user) {\n        result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async, user, password);\n      } else {\n        result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async);\n      }\n\n      if (result === errorObject_1.errorObject) {\n        this.error(errorObject_1.errorObject.e);\n        return null;\n      } // timeout, responseType and withCredentials can be set once the XHR is open\n\n\n      if (async) {\n        xhr.timeout = request.timeout;\n        xhr.responseType = request.responseType;\n      }\n\n      if ('withCredentials' in xhr) {\n        xhr.withCredentials = !!request.withCredentials;\n      } // set headers\n\n\n      this.setHeaders(xhr, headers); // finally send the request\n\n      result = body ? tryCatch_1.tryCatch(xhr.send).call(xhr, body) : tryCatch_1.tryCatch(xhr.send).call(xhr);\n\n      if (result === errorObject_1.errorObject) {\n        this.error(errorObject_1.errorObject.e);\n        return null;\n      }\n    }\n\n    return xhr;\n  };\n\n  AjaxSubscriber.prototype.serializeBody = function (body, contentType) {\n    if (!body || typeof body === 'string') {\n      return body;\n    } else if (root_1.root.FormData && body instanceof root_1.root.FormData) {\n      return body;\n    }\n\n    if (contentType) {\n      var splitIndex = contentType.indexOf(';');\n\n      if (splitIndex !== -1) {\n        contentType = contentType.substring(0, splitIndex);\n      }\n    }\n\n    switch (contentType) {\n      case 'application/x-www-form-urlencoded':\n        return Object.keys(body).map(function (key) {\n          return encodeURIComponent(key) + \"=\" + encodeURIComponent(body[key]);\n        }).join('&');\n\n      case 'application/json':\n        return JSON.stringify(body);\n\n      default:\n        return body;\n    }\n  };\n\n  AjaxSubscriber.prototype.setHeaders = function (xhr, headers) {\n    for (var key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  };\n\n  AjaxSubscriber.prototype.setupEvents = function (xhr, request) {\n    var progressSubscriber = request.progressSubscriber;\n\n    function xhrTimeout(e) {\n      var _a = xhrTimeout,\n          subscriber = _a.subscriber,\n          progressSubscriber = _a.progressSubscriber,\n          request = _a.request;\n\n      if (progressSubscriber) {\n        progressSubscriber.error(e);\n      }\n\n      subscriber.error(new AjaxTimeoutError(this, request)); //TODO: Make betterer.\n    }\n\n    ;\n    xhr.ontimeout = xhrTimeout;\n    xhrTimeout.request = request;\n    xhrTimeout.subscriber = this;\n    xhrTimeout.progressSubscriber = progressSubscriber;\n\n    if (xhr.upload && 'withCredentials' in xhr) {\n      if (progressSubscriber) {\n        var xhrProgress_1;\n\n        xhrProgress_1 = function (e) {\n          var progressSubscriber = xhrProgress_1.progressSubscriber;\n          progressSubscriber.next(e);\n        };\n\n        if (root_1.root.XDomainRequest) {\n          xhr.onprogress = xhrProgress_1;\n        } else {\n          xhr.upload.onprogress = xhrProgress_1;\n        }\n\n        xhrProgress_1.progressSubscriber = progressSubscriber;\n      }\n\n      var xhrError_1;\n\n      xhrError_1 = function (e) {\n        var _a = xhrError_1,\n            progressSubscriber = _a.progressSubscriber,\n            subscriber = _a.subscriber,\n            request = _a.request;\n\n        if (progressSubscriber) {\n          progressSubscriber.error(e);\n        }\n\n        subscriber.error(new AjaxError('ajax error', this, request));\n      };\n\n      xhr.onerror = xhrError_1;\n      xhrError_1.request = request;\n      xhrError_1.subscriber = this;\n      xhrError_1.progressSubscriber = progressSubscriber;\n    }\n\n    function xhrReadyStateChange(e) {\n      var _a = xhrReadyStateChange,\n          subscriber = _a.subscriber,\n          progressSubscriber = _a.progressSubscriber,\n          request = _a.request;\n\n      if (this.readyState === 4) {\n        // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n        var status_1 = this.status === 1223 ? 204 : this.status;\n        var response = this.responseType === 'text' ? this.response || this.responseText : this.response; // fix status code when it is 0 (0 status is undocumented).\n        // Occurs when accessing file resources or on Android 4.1 stock browser\n        // while retrieving files from application cache.\n\n        if (status_1 === 0) {\n          status_1 = response ? 200 : 0;\n        }\n\n        if (200 <= status_1 && status_1 < 300) {\n          if (progressSubscriber) {\n            progressSubscriber.complete();\n          }\n\n          subscriber.next(e);\n          subscriber.complete();\n        } else {\n          if (progressSubscriber) {\n            progressSubscriber.error(e);\n          }\n\n          subscriber.error(new AjaxError('ajax error ' + status_1, this, request));\n        }\n      }\n    }\n\n    ;\n    xhr.onreadystatechange = xhrReadyStateChange;\n    xhrReadyStateChange.subscriber = this;\n    xhrReadyStateChange.progressSubscriber = progressSubscriber;\n    xhrReadyStateChange.request = request;\n  };\n\n  AjaxSubscriber.prototype.unsubscribe = function () {\n    var _a = this,\n        done = _a.done,\n        xhr = _a.xhr;\n\n    if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n      xhr.abort();\n    }\n\n    _super.prototype.unsubscribe.call(this);\n  };\n\n  return AjaxSubscriber;\n}(Subscriber_1.Subscriber);\n\nexports.AjaxSubscriber = AjaxSubscriber;\n/**\n * A normalized AJAX response.\n *\n * @see {@link ajax}\n *\n * @class AjaxResponse\n */\n\nvar AjaxResponse = function () {\n  function AjaxResponse(originalEvent, xhr, request) {\n    this.originalEvent = originalEvent;\n    this.xhr = xhr;\n    this.request = request;\n    this.status = xhr.status;\n    this.responseType = xhr.responseType || request.responseType;\n    this.response = parseXhrResponse(this.responseType, xhr);\n  }\n\n  return AjaxResponse;\n}();\n\nexports.AjaxResponse = AjaxResponse;\n/**\n * A normalized AJAX error.\n *\n * @see {@link ajax}\n *\n * @class AjaxError\n */\n\nvar AjaxError = function (_super) {\n  __extends(AjaxError, _super);\n\n  function AjaxError(message, xhr, request) {\n    _super.call(this, message);\n\n    this.message = message;\n    this.xhr = xhr;\n    this.request = request;\n    this.status = xhr.status;\n    this.responseType = xhr.responseType || request.responseType;\n    this.response = parseXhrResponse(this.responseType, xhr);\n  }\n\n  return AjaxError;\n}(Error);\n\nexports.AjaxError = AjaxError;\n\nfunction parseXhrResponse(responseType, xhr) {\n  switch (responseType) {\n    case 'json':\n      if ('response' in xhr) {\n        //IE does not support json as responseType, parse it internally\n        return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n      } else {\n        // HACK(benlesh): TypeScript shennanigans\n        // tslint:disable-next-line:no-any latest TS seems to think xhr is \"never\" here.\n        return JSON.parse(xhr.responseText || 'null');\n      }\n\n    case 'xml':\n      return xhr.responseXML;\n\n    case 'text':\n    default:\n      // HACK(benlesh): TypeScript shennanigans\n      // tslint:disable-next-line:no-any latest TS seems to think xhr is \"never\" here.\n      return 'response' in xhr ? xhr.response : xhr.responseText;\n  }\n}\n/**\n * @see {@link ajax}\n *\n * @class AjaxTimeoutError\n */\n\n\nvar AjaxTimeoutError = function (_super) {\n  __extends(AjaxTimeoutError, _super);\n\n  function AjaxTimeoutError(xhr, request) {\n    _super.call(this, 'ajax timeout', xhr, request);\n  }\n\n  return AjaxTimeoutError;\n}(AjaxError);\n\nexports.AjaxTimeoutError = AjaxTimeoutError;","map":{"version":3,"mappings":"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","names":["root_1","XMLHttpRequest","XDomainRequest","Error","progId","progIds","i","ActiveXObject","e","url","headers","AjaxObservable","method","exports","ajaxGet","body","ajaxPost","ajaxDelete","ajaxPut","ajaxPatch","mapResponse","map_1","x","index","response","responseType","ajaxGetJSON","__extends","urlOrRequest","_super","request","async","createXHR","crossDomain","getCORSRequest","call","getXMLHttpRequest","withCredentials","timeout","prop","hasOwnProperty","subscriber","AjaxSubscriber","create","get","post","delete","put","patch","getJSON","Observable_1","destination","FormData","serializeBody","send","done","xhr","AjaxResponse","next","_b","user","password","tryCatch_1","errorObject_1","error","setupEvents","result","open","setHeaders","contentType","splitIndex","indexOf","substring","Object","keys","map","encodeURIComponent","key","join","JSON","stringify","setRequestHeader","progressSubscriber","AjaxTimeoutError","ontimeout","xhrTimeout","upload","xhrProgress_1","onprogress","xhrError_1","AjaxError","onerror","readyState","status_1","status","responseText","complete","onreadystatechange","xhrReadyStateChange","abort","unsubscribe","Subscriber_1","originalEvent","parseXhrResponse","message","parse","responseXML"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/src/observable/dom/AjaxObservable.ts"],"sourcesContent":["import { root } from '../../util/root';\nimport { tryCatch } from '../../util/tryCatch';\nimport { errorObject } from '../../util/errorObject';\nimport { Observable } from '../../Observable';\nimport { Subscriber } from '../../Subscriber';\nimport { TeardownLogic } from '../../Subscription';\nimport { map } from '../../operators/map';\n\nexport interface AjaxRequest {\n  url?: string;\n  body?: any;\n  user?: string;\n  async?: boolean;\n  method?: string;\n  headers?: Object;\n  timeout?: number;\n  password?: string;\n  hasContent?: boolean;\n  crossDomain?: boolean;\n  withCredentials?: boolean;\n  createXHR?: () => XMLHttpRequest;\n  progressSubscriber?: Subscriber<any>;\n  responseType?: string;\n}\n\nfunction getCORSRequest(this: AjaxRequest): XMLHttpRequest {\n  if (root.XMLHttpRequest) {\n    return new root.XMLHttpRequest();\n  } else if (!!root.XDomainRequest) {\n    return new root.XDomainRequest();\n  } else {\n    throw new Error('CORS is not supported by your browser');\n  }\n}\n\nfunction getXMLHttpRequest(): XMLHttpRequest {\n  if (root.XMLHttpRequest) {\n    return new root.XMLHttpRequest();\n  } else {\n    let progId: string;\n    try {\n      const progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n      for (let i = 0; i < 3; i++) {\n        try {\n          progId = progIds[i];\n          if (new root.ActiveXObject(progId)) {\n            break;\n          }\n        } catch (e) {\n          //suppress exceptions\n        }\n      }\n      return new root.ActiveXObject(progId);\n    } catch (e) {\n      throw new Error('XMLHttpRequest is not supported by your browser');\n    }\n  }\n}\n\nexport interface AjaxCreationMethod {\n  (urlOrRequest: string | AjaxRequest): Observable<AjaxResponse>;\n  get(url: string, headers?: Object): Observable<AjaxResponse>;\n  post(url: string, body?: any, headers?: Object): Observable<AjaxResponse>;\n  put(url: string, body?: any, headers?: Object): Observable<AjaxResponse>;\n  patch(url: string, body?: any, headers?: Object): Observable<AjaxResponse>;\n  delete(url: string, headers?: Object): Observable<AjaxResponse>;\n  getJSON<T>(url: string, headers?: Object): Observable<T>;\n}\n\nexport function ajaxGet(url: string, headers: Object = null) {\n  return new AjaxObservable<AjaxResponse>({ method: 'GET', url, headers });\n};\n\nexport function ajaxPost(url: string, body?: any, headers?: Object): Observable<AjaxResponse> {\n  return new AjaxObservable<AjaxResponse>({ method: 'POST', url, body, headers });\n};\n\nexport function ajaxDelete(url: string, headers?: Object): Observable<AjaxResponse> {\n  return new AjaxObservable<AjaxResponse>({ method: 'DELETE', url, headers });\n};\n\nexport function ajaxPut(url: string, body?: any, headers?: Object): Observable<AjaxResponse> {\n  return new AjaxObservable<AjaxResponse>({ method: 'PUT', url, body, headers });\n};\n\nexport function ajaxPatch(url: string, body?: any, headers?: Object): Observable<AjaxResponse> {\n  return new AjaxObservable<AjaxResponse>({ method: 'PATCH', url, body, headers });\n};\n\nconst mapResponse = map((x: AjaxResponse, index: number) => x.response);\n\nexport function ajaxGetJSON<T>(url: string, headers?: Object): Observable<T> {\n  return mapResponse(\n    new AjaxObservable<AjaxResponse>({\n      method: 'GET',\n      url,\n      responseType: 'json',\n      headers\n    })\n  );\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class AjaxObservable<T> extends Observable<T> {\n  /**\n   * Creates an observable for an Ajax request with either a request object with\n   * url, headers, etc or a string for a URL.\n   *\n   * @example\n   * source = Rx.Observable.ajax('/products');\n   * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });\n   *\n   * @param {string|Object} request Can be one of the following:\n   *   A string of the URL to make the Ajax call.\n   *   An object with the following properties\n   *   - url: URL of the request\n   *   - body: The body of the request\n   *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE\n   *   - async: Whether the request is async\n   *   - headers: Optional headers\n   *   - crossDomain: true if a cross domain request, else false\n   *   - createXHR: a function to override if you need to use an alternate\n   *   XMLHttpRequest implementation.\n   *   - resultSelector: a function to use to alter the output value type of\n   *   the Observable. Gets {@link AjaxResponse} as an argument.\n   * @return {Observable} An observable sequence containing the XMLHttpRequest.\n   * @static true\n   * @name ajax\n   * @owner Observable\n  */\n  static create: AjaxCreationMethod = (() => {\n    const create: any = (urlOrRequest: string | AjaxRequest) => {\n      return new AjaxObservable(urlOrRequest);\n    };\n\n    create.get = ajaxGet;\n    create.post = ajaxPost;\n    create.delete = ajaxDelete;\n    create.put = ajaxPut;\n    create.patch = ajaxPatch;\n    create.getJSON = ajaxGetJSON;\n\n    return <AjaxCreationMethod>create;\n  })();\n\n  private request: AjaxRequest;\n\n  constructor(urlOrRequest: string | AjaxRequest) {\n    super();\n\n    const request: AjaxRequest = {\n      async: true,\n      createXHR: function(this: AjaxRequest) {\n        return this.crossDomain ? getCORSRequest.call(this) : getXMLHttpRequest();\n      },\n      crossDomain: false,\n      withCredentials: false,\n      headers: {},\n      method: 'GET',\n      responseType: 'json',\n      timeout: 0\n    };\n\n    if (typeof urlOrRequest === 'string') {\n      request.url = urlOrRequest;\n    } else {\n      for (const prop in urlOrRequest) {\n        if (urlOrRequest.hasOwnProperty(prop)) {\n          request[prop] = urlOrRequest[prop];\n        }\n      }\n    }\n\n    this.request = request;\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    return new AjaxSubscriber(subscriber, this.request);\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AjaxSubscriber<T> extends Subscriber<Event> {\n  private xhr: XMLHttpRequest;\n  private done: boolean = false;\n\n  constructor(destination: Subscriber<T>, public request: AjaxRequest) {\n    super(destination);\n\n    const headers = request.headers = request.headers || {};\n\n    // force CORS if requested\n    if (!request.crossDomain && !headers['X-Requested-With']) {\n      headers['X-Requested-With'] = 'XMLHttpRequest';\n    }\n\n    // ensure content type is set\n    if (!('Content-Type' in headers) && !(root.FormData && request.body instanceof root.FormData) && typeof request.body !== 'undefined') {\n      headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n    }\n\n    // properly serialize body\n    request.body = this.serializeBody(request.body, request.headers['Content-Type']);\n\n    this.send();\n  }\n\n  next(e: Event): void {\n    this.done = true;\n    const { xhr, request, destination } = this;\n    const response = new AjaxResponse(e, xhr, request);\n\n    destination.next(response);\n  }\n\n  private send(): XMLHttpRequest {\n    const {\n      request,\n      request: { user, method, url, async, password, headers, body }\n    } = this;\n    const createXHR = request.createXHR;\n    const xhr: XMLHttpRequest = tryCatch(createXHR).call(request);\n\n    if (<any>xhr === errorObject) {\n      this.error(errorObject.e);\n    } else {\n      this.xhr = xhr;\n\n      // set up the events before open XHR\n      // https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\n      // You need to add the event listeners before calling open() on the request.\n      // Otherwise the progress events will not fire.\n      this.setupEvents(xhr, request);\n      // open XHR\n      let result: any;\n      if (user) {\n        result = tryCatch(xhr.open).call(xhr, method, url, async, user, password);\n      } else {\n        result = tryCatch(xhr.open).call(xhr, method, url, async);\n      }\n\n      if (result === errorObject) {\n        this.error(errorObject.e);\n        return null;\n      }\n\n      // timeout, responseType and withCredentials can be set once the XHR is open\n      if (async) {\n        xhr.timeout = request.timeout;\n        xhr.responseType = request.responseType as any;\n      }\n\n      if ('withCredentials' in xhr) {\n        xhr.withCredentials = !!request.withCredentials;\n      }\n\n      // set headers\n      this.setHeaders(xhr, headers);\n\n      // finally send the request\n      result = body ? tryCatch(xhr.send).call(xhr, body) : tryCatch(xhr.send).call(xhr);\n      if (result === errorObject) {\n        this.error(errorObject.e);\n        return null;\n      }\n    }\n\n    return xhr;\n  }\n\n  private serializeBody(body: any, contentType?: string) {\n    if (!body || typeof body === 'string') {\n      return body;\n    } else if (root.FormData && body instanceof root.FormData) {\n      return body;\n    }\n\n    if (contentType) {\n      const splitIndex = contentType.indexOf(';');\n      if (splitIndex !== -1) {\n        contentType = contentType.substring(0, splitIndex);\n      }\n    }\n\n    switch (contentType) {\n      case 'application/x-www-form-urlencoded':\n        return Object.keys(body).map(key => `${encodeURIComponent(key)}=${encodeURIComponent(body[key])}`).join('&');\n      case 'application/json':\n        return JSON.stringify(body);\n      default:\n        return body;\n    }\n  }\n\n  private setHeaders(xhr: XMLHttpRequest, headers: Object) {\n    for (let key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  }\n\n  private setupEvents(xhr: XMLHttpRequest, request: AjaxRequest) {\n    const progressSubscriber = request.progressSubscriber;\n\n    function xhrTimeout(this: XMLHttpRequest, e: ProgressEvent) {\n      const {subscriber, progressSubscriber, request } = (<any>xhrTimeout);\n      if (progressSubscriber) {\n        progressSubscriber.error(e);\n      }\n      subscriber.error(new AjaxTimeoutError(this, request)); //TODO: Make betterer.\n    };\n    xhr.ontimeout = xhrTimeout;\n    (<any>xhrTimeout).request = request;\n    (<any>xhrTimeout).subscriber = this;\n    (<any>xhrTimeout).progressSubscriber = progressSubscriber;\n    if (xhr.upload && 'withCredentials' in xhr) {\n      if (progressSubscriber) {\n        let xhrProgress: (e: ProgressEvent) => void;\n        xhrProgress = function(e: ProgressEvent) {\n          const { progressSubscriber } = (<any>xhrProgress);\n          progressSubscriber.next(e);\n        };\n        if (root.XDomainRequest) {\n          xhr.onprogress = xhrProgress;\n        } else {\n          xhr.upload.onprogress = xhrProgress;\n        }\n        (<any>xhrProgress).progressSubscriber = progressSubscriber;\n      }\n      let xhrError: (e: ErrorEvent) => void;\n      xhrError = function(this: XMLHttpRequest, e: ErrorEvent) {\n        const { progressSubscriber, subscriber, request } = (<any>xhrError);\n        if (progressSubscriber) {\n          progressSubscriber.error(e);\n        }\n        subscriber.error(new AjaxError('ajax error', this, request));\n      };\n      xhr.onerror = xhrError;\n      (<any>xhrError).request = request;\n      (<any>xhrError).subscriber = this;\n      (<any>xhrError).progressSubscriber = progressSubscriber;\n    }\n\n    function xhrReadyStateChange(this: XMLHttpRequest, e: ProgressEvent) {\n      const { subscriber, progressSubscriber, request } = (<any>xhrReadyStateChange);\n      if (this.readyState === 4) {\n        // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n        let status: number = this.status === 1223 ? 204 : this.status;\n        let response: any = (this.responseType === 'text' ?  (\n          this.response || this.responseText) : this.response);\n\n        // fix status code when it is 0 (0 status is undocumented).\n        // Occurs when accessing file resources or on Android 4.1 stock browser\n        // while retrieving files from application cache.\n        if (status === 0) {\n          status = response ? 200 : 0;\n        }\n\n        if (200 <= status && status < 300) {\n          if (progressSubscriber) {\n            progressSubscriber.complete();\n          }\n          subscriber.next(e);\n          subscriber.complete();\n        } else {\n          if (progressSubscriber) {\n            progressSubscriber.error(e);\n          }\n          subscriber.error(new AjaxError('ajax error ' + status, this, request));\n        }\n      }\n    };\n    xhr.onreadystatechange = xhrReadyStateChange;\n    (<any>xhrReadyStateChange).subscriber = this;\n    (<any>xhrReadyStateChange).progressSubscriber = progressSubscriber;\n    (<any>xhrReadyStateChange).request = request;\n  }\n\n  unsubscribe() {\n    const { done, xhr } = this;\n    if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n      xhr.abort();\n    }\n    super.unsubscribe();\n  }\n}\n\n/**\n * A normalized AJAX response.\n *\n * @see {@link ajax}\n *\n * @class AjaxResponse\n */\nexport class AjaxResponse {\n  /** @type {number} The HTTP status code */\n  status: number;\n\n  /** @type {string|ArrayBuffer|Document|object|any} The response data */\n  response: any;\n\n  /** @type {string} The raw responseText */\n  responseText: string;\n\n  /** @type {string} The responseType (e.g. 'json', 'arraybuffer', or 'xml') */\n  responseType: string;\n\n  constructor(public originalEvent: Event, public xhr: XMLHttpRequest, public request: AjaxRequest) {\n    this.status = xhr.status;\n    this.responseType = xhr.responseType || request.responseType;\n    this.response = parseXhrResponse(this.responseType, xhr);\n  }\n}\n\n/**\n * A normalized AJAX error.\n *\n * @see {@link ajax}\n *\n * @class AjaxError\n */\nexport class AjaxError extends Error {\n  /** @type {XMLHttpRequest} The XHR instance associated with the error */\n  xhr: XMLHttpRequest;\n\n  /** @type {AjaxRequest} The AjaxRequest associated with the error */\n  request: AjaxRequest;\n\n  /** @type {number} The HTTP status code */\n  status: number;\n\n  /** @type {string} The responseType (e.g. 'json', 'arraybuffer', or 'xml') */\n  responseType: string;\n\n  /** @type {string|ArrayBuffer|Document|object|any} The response data */\n  response: any;\n\n  constructor(message: string, xhr: XMLHttpRequest, request: AjaxRequest) {\n    super(message);\n    this.message = message;\n    this.xhr = xhr;\n    this.request = request;\n    this.status = xhr.status;\n    this.responseType = xhr.responseType || request.responseType;\n    this.response = parseXhrResponse(this.responseType, xhr);\n  }\n}\n\nfunction parseXhrResponse(responseType: string, xhr: XMLHttpRequest) {\n  switch (responseType) {\n    case 'json':\n        if ('response' in xhr) {\n          //IE does not support json as responseType, parse it internally\n          return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n        } else {\n          // HACK(benlesh): TypeScript shennanigans\n          // tslint:disable-next-line:no-any latest TS seems to think xhr is \"never\" here.\n          return JSON.parse((xhr as any).responseText || 'null');\n        }\n      case 'xml':\n        return xhr.responseXML;\n      case 'text':\n      default:\n          // HACK(benlesh): TypeScript shennanigans\n          // tslint:disable-next-line:no-any latest TS seems to think xhr is \"never\" here.\n          return  ('response' in xhr) ? xhr.response : (xhr as any).responseText;\n  }\n}\n\n/**\n * @see {@link ajax}\n *\n * @class AjaxTimeoutError\n */\nexport class AjaxTimeoutError extends AjaxError {\n  constructor(xhr: XMLHttpRequest, request: AjaxRequest) {\n    super('ajax timeout', xhr, request);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}