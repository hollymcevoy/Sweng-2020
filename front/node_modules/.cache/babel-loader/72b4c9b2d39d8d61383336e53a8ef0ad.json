{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/dylanmurray/Sweng-2022/front/node_modules/@babel/runtime/regenerator/index.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = downscaleImageToDataURLUsingBrowser;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nfunction keepAspectRatio(width, height, maxWidth, maxHeight) {\n  if (width < maxWidth && height < maxHeight) {\n    // Photo is smaller than both maximum dimensions, take it as-is\n    return {\n      height: height,\n      width: width\n    };\n  }\n\n  var aspectRatio = width / height;\n\n  if (aspectRatio > maxWidth / maxHeight) {\n    // Photo is wider than maximum dimension, downscale it based on maxWidth.\n    return {\n      height: maxWidth / aspectRatio,\n      width: maxWidth\n    };\n  } // Photo is taller than maximum dimension, downscale it based on maxHeight.\n\n\n  return {\n    height: maxHeight,\n    width: maxHeight * aspectRatio\n  };\n}\n\nfunction createCanvas(width, height) {\n  var canvas = document.createElement('canvas');\n  canvas.height = height;\n  canvas.width = width;\n  return canvas;\n}\n\nfunction loadImageFromBlob(blob) {\n  var blobURL = URL.createObjectURL(blob);\n  return new Promise(function (resolve, reject) {\n    var image = document.createElement('img');\n    image.addEventListener('error', function (_ref) {\n      var error = _ref.error;\n      return reject(error);\n    });\n    image.addEventListener('load', function () {\n      return resolve(image);\n    });\n    image.setAttribute('src', blobURL);\n  }).finally(function () {\n    URL.revokeObjectURL(blobURL);\n  });\n}\n\nfunction downscaleImageToDataURLUsingBrowser(_x, _x2, _x3, _x4, _x5) {\n  return _downscaleImageToDataURLUsingBrowser.apply(this, arguments);\n}\n\nfunction _downscaleImageToDataURLUsingBrowser() {\n  _downscaleImageToDataURLUsingBrowser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(blob, maxWidth, maxHeight, type, quality) {\n    var image, _keepAspectRatio, height, width, canvas, context;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return loadImageFromBlob(blob);\n\n          case 2:\n            image = _context.sent;\n            _keepAspectRatio = keepAspectRatio(image.width, image.height, maxWidth, maxHeight), height = _keepAspectRatio.height, width = _keepAspectRatio.width;\n            canvas = createCanvas(width, height);\n            context = canvas.getContext('2d');\n            context.drawImage(image, 0, 0, width, height);\n            return _context.abrupt(\"return\", canvas.toDataURL(type, quality));\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _downscaleImageToDataURLUsingBrowser.apply(this, arguments);\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,eAAT,CAAyBC,KAAzB,EAAgCC,MAAhC,EAAwCC,QAAxC,EAAkDC,SAAlD,EAA6D;AAC3D,MAAIH,KAAK,GAAGE,QAARF,IAAoBC,MAAM,GAAGE,SAAjC,EAA4C;AAC1C;AACA,WAAO;AACLF,YAAM,EAANA,MADK;AAELD,WAAK,EAALA;AAFK,KAAP;AAID;;AAED,MAAMI,WAAW,GAAGJ,KAAK,GAAGC,MAA5B;;AAEA,MAAIG,WAAW,GAAGF,QAAQ,GAAGC,SAA7B,EAAwC;AACtC;AACA,WAAO;AACLF,YAAM,EAAEC,QAAQ,GAAGE,WADd;AAELJ,WAAK,EAAEE;AAFF,KAAP;AAbyD,IAmB3D;;;AACA,SAAO;AACLD,UAAM,EAAEE,SADH;AAELH,SAAK,EAAEG,SAAS,GAAGC;AAFd,GAAP;AAID;;AAED,SAASC,YAAT,CAAsBL,KAAtB,EAA6BC,MAA7B,EAAqC;AACnC,MAAMK,MAAM,GAAGC,QAAQ,CAACC,aAATD,CAAuB,QAAvBA,CAAf;AAEAD,QAAM,CAACL,MAAPK,GAAgBL,MAAhBK;AACAA,QAAM,CAACN,KAAPM,GAAeN,KAAfM;AAEA,SAAOA,MAAP;AACD;;AAED,SAASG,iBAAT,CAA2BC,IAA3B,EAAiC;AAC/B,MAAMC,OAAO,GAAGC,GAAG,CAACC,eAAJD,CAAoBF,IAApBE,CAAhB;AAEA,SAAO,IAAIE,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,KAAK,GAAGV,QAAQ,CAACC,aAATD,CAAuB,KAAvBA,CAAd;AAEAU,SAAK,CAACC,gBAAND,CAAuB,OAAvBA,EAAgC;AAAA,UAAGE,KAAH,QAAGA,KAAH;AAAA,aAAeH,MAAM,CAACG,KAAD,CAArB;AAAhC;AACAF,SAAK,CAACC,gBAAND,CAAuB,MAAvBA,EAA+B;AAAA,aAAMF,OAAO,CAACE,KAAD,CAAb;AAA/B;AACAA,SAAK,CAACG,YAANH,CAAmB,KAAnBA,EAA0BN,OAA1BM;AALK,KAMJI,OANI,CAMI,YAAM;AACfT,OAAG,CAACU,eAAJV,CAAoBD,OAApBC;AAPK,IAAP;AASD;;SAE6BW,oC;;;;;kGAAf,iBAAmDb,IAAnD,EAAyDR,QAAzD,EAAmEC,SAAnE,EAA8EqB,IAA9E,EAAoFC,OAApF;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAAC;AAAA,mBACOjB,iBAAiB,CAACC,IAAD,CADxB;;AAAA;AACPO,iBADO,gBACPA;AADOU,+BAEa5B,eAAe,CAACkB,KAAK,CAACjB,KAAP,EAAciB,KAAK,CAAChB,MAApB,EAA4BC,QAA5B,EAAsCC,SAAtC,CAF5B,EAELF,MAFK,oBAELA,MAFK,EAEGD,KAFH,oBAEGA,KAFH;AAGPM,kBAHO,GAGED,YAAY,CAACL,KAAD,EAAQC,MAAR,CAArBK;AACAsB,mBAJO,GAIGtB,MAAM,CAACuB,UAAPvB,CAAkB,IAAlBA,CAAVsB;AAENA,mBAAO,CAACE,SAARF,CAAkBX,KAAlBW,EAAyB,CAAzBA,EAA4B,CAA5BA,EAA+B5B,KAA/B4B,EAAsC3B,MAAtC2B;AANa,6CAQNtB,MAAM,CAACyB,SAAPzB,CAAiBkB,IAAjBlB,EAAuBmB,OAAvBnB,CARM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","names":["keepAspectRatio","width","height","maxWidth","maxHeight","aspectRatio","createCanvas","canvas","document","createElement","loadImageFromBlob","blob","blobURL","URL","createObjectURL","Promise","resolve","reject","image","addEventListener","error","setAttribute","finally","revokeObjectURL","downscaleImageToDataURLUsingBrowser","type","quality","_context","_keepAspectRatio","context","getContext","drawImage","toDataURL"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-component/lib/src/Utils/downscaleImageToDataURL/downscaleImageToDataURLUsingBrowser.js"],"sourcesContent":["function keepAspectRatio(width, height, maxWidth, maxHeight) {\n  if (width < maxWidth && height < maxHeight) {\n    // Photo is smaller than both maximum dimensions, take it as-is\n    return {\n      height,\n      width\n    };\n  }\n\n  const aspectRatio = width / height;\n\n  if (aspectRatio > maxWidth / maxHeight) {\n    // Photo is wider than maximum dimension, downscale it based on maxWidth.\n    return {\n      height: maxWidth / aspectRatio,\n      width: maxWidth\n    };\n  }\n\n  // Photo is taller than maximum dimension, downscale it based on maxHeight.\n  return {\n    height: maxHeight,\n    width: maxHeight * aspectRatio\n  };\n}\n\nfunction createCanvas(width, height) {\n  const canvas = document.createElement('canvas');\n\n  canvas.height = height;\n  canvas.width = width;\n\n  return canvas;\n}\n\nfunction loadImageFromBlob(blob) {\n  const blobURL = URL.createObjectURL(blob);\n\n  return new Promise((resolve, reject) => {\n    const image = document.createElement('img');\n\n    image.addEventListener('error', ({ error }) => reject(error));\n    image.addEventListener('load', () => resolve(image));\n    image.setAttribute('src', blobURL);\n  }).finally(() => {\n    URL.revokeObjectURL(blobURL);\n  });\n}\n\nexport default async function downscaleImageToDataURLUsingBrowser(blob, maxWidth, maxHeight, type, quality) {\n  const image = await loadImageFromBlob(blob);\n  const { height, width } = keepAspectRatio(image.width, image.height, maxWidth, maxHeight);\n  const canvas = createCanvas(width, height);\n  const context = canvas.getContext('2d');\n\n  context.drawImage(image, 0, 0, width, height);\n\n  return canvas.toDataURL(type, quality);\n}\n"]},"metadata":{},"sourceType":"script"}