{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.connectCarouselFilmStrip = void 0;\n\nvar _botframeworkWebchatApi = require(\"botframework-webchat-api\");\n\nvar _reactFilm = require(\"react-film\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Bubble = _interopRequireDefault(require(\"./Bubble\"));\n\nvar _CarouselFilmStripAttachment = _interopRequireDefault(require(\"./CarouselFilmStripAttachment\"));\n\nvar _connectToWebChat = _interopRequireDefault(require(\"../connectToWebChat\"));\n\nvar _isZeroOrPositive = _interopRequireDefault(require(\"../Utils/isZeroOrPositive\"));\n\nvar _ScreenReaderText = _interopRequireDefault(require(\"../ScreenReaderText\"));\n\nvar _textFormatToContentType = _interopRequireDefault(require(\"../Utils/textFormatToContentType\"));\n\nvar _useStyleSet3 = _interopRequireDefault(require(\"../hooks/useStyleSet\"));\n\nvar _useStyleToEmotionObject = _interopRequireDefault(require(\"../hooks/internal/useStyleToEmotionObject\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar useAvatarForBot = _botframeworkWebchatApi.hooks.useAvatarForBot,\n    useAvatarForUser = _botframeworkWebchatApi.hooks.useAvatarForUser,\n    useDirection = _botframeworkWebchatApi.hooks.useDirection,\n    useLocalizer = _botframeworkWebchatApi.hooks.useLocalizer,\n    useStyleOptions = _botframeworkWebchatApi.hooks.useStyleOptions;\nvar ROOT_STYLE = {\n  '&.webchat__carousel-filmstrip': {\n    display: 'flex',\n    flexDirection: 'column',\n    MsOverflowStyle: 'none',\n    overflowX: 'scroll',\n    overflowY: 'hidden',\n    position: 'relative',\n    // This is to keep screen reader text in the destinated area.\n    touchAction: 'manipulation',\n    WebkitOverflowScrolling: 'touch',\n    '&::-webkit-scrollbar': {\n      display: 'none'\n    },\n    '& .webchat__carousel-filmstrip__alignment-pad': {\n      flexShrink: 0\n    },\n    '& .webchat__carousel-filmstrip-attachment': {\n      flex: 1\n    },\n    '& .webchat__carousel-filmstrip__attachments': {\n      display: 'flex',\n      listStyleType: 'none',\n      margin: 0,\n      padding: 0\n    },\n    '& .webchat__carousel-filmstrip__avatar': {\n      flexShrink: 0\n    },\n    '& .webchat__carousel-filmstrip__avatar-gutter': {\n      display: 'flex',\n      flexDirection: 'column',\n      flexShrink: 0\n    },\n    '& .webchat__carousel-filmstrip__complimentary': {\n      display: 'flex'\n    },\n    '& .webchat__carousel-filmstrip__complimentary-content': {\n      display: 'flex',\n      flexGrow: 1,\n      flexDirection: 'column'\n    },\n    '& .webchat__carousel-filmstrip__content': {\n      display: 'flex',\n      flexGrow: 1,\n      flexDirection: 'column'\n    },\n    '& .webchat__carousel-filmstrip__filler': {\n      flexGrow: 10000,\n      flexShrink: 1\n    },\n    '& .webchat__carousel-filmstrip__main': {\n      display: 'flex'\n    },\n    '& .webchat__carousel-filmstrip__message': {\n      display: 'flex'\n    },\n    '& .webchat__carousel-filmstrip__nub-pad': {\n      flexShrink: 0\n    },\n    '& .webchat__carousel-filmstrip__status': {\n      display: 'flex'\n    }\n  }\n};\n\nvar connectCarouselFilmStrip = function connectCarouselFilmStrip() {\n  for (var _len = arguments.length, selectors = new Array(_len), _key = 0; _key < _len; _key++) {\n    selectors[_key] = arguments[_key];\n  }\n\n  return _connectToWebChat.default.apply(void 0, [function (_ref, _ref2) {\n    var language = _ref.language,\n        _ref$styleSet$options = _ref.styleSet.options,\n        botAvatarInitials = _ref$styleSet$options.botAvatarInitials,\n        userAvatarInitials = _ref$styleSet$options.userAvatarInitials;\n    var _ref2$activity = _ref2.activity;\n    _ref2$activity = _ref2$activity === void 0 ? {} : _ref2$activity;\n    var _ref2$activity$from = _ref2$activity.from;\n    _ref2$activity$from = _ref2$activity$from === void 0 ? {} : _ref2$activity$from;\n    var role = _ref2$activity$from.role;\n    return {\n      avatarInitials: role === 'user' ? userAvatarInitials : botAvatarInitials,\n      language: language\n    };\n  }].concat(selectors));\n};\n\nexports.connectCarouselFilmStrip = connectCarouselFilmStrip;\n\nvar CarouselFilmStrip = function CarouselFilmStrip(_ref3) {\n  var activity = _ref3.activity,\n      className = _ref3.className,\n      hideTimestamp = _ref3.hideTimestamp,\n      renderActivityStatus = _ref3.renderActivityStatus,\n      renderAttachment = _ref3.renderAttachment,\n      renderAvatar = _ref3.renderAvatar,\n      showCallout = _ref3.showCallout;\n\n  var _useStyleOptions = useStyleOptions(),\n      _useStyleOptions2 = _slicedToArray(_useStyleOptions, 1),\n      _useStyleOptions2$ = _useStyleOptions2[0],\n      bubbleNubOffset = _useStyleOptions2$.bubbleNubOffset,\n      bubbleNubSize = _useStyleOptions2$.bubbleNubSize,\n      bubbleFromUserNubOffset = _useStyleOptions2$.bubbleFromUserNubOffset,\n      bubbleFromUserNubSize = _useStyleOptions2$.bubbleFromUserNubSize;\n\n  var _useStyleSet = (0, _useStyleSet3.default)(),\n      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),\n      carouselFilmStripStyleSet = _useStyleSet2[0].carouselFilmStrip;\n\n  var _useAvatarForBot = useAvatarForBot(),\n      _useAvatarForBot2 = _slicedToArray(_useAvatarForBot, 1),\n      botInitials = _useAvatarForBot2[0].initials;\n\n  var _useAvatarForUser = useAvatarForUser(),\n      _useAvatarForUser2 = _slicedToArray(_useAvatarForUser, 1),\n      userInitials = _useAvatarForUser2[0].initials;\n\n  var _useDirection = useDirection(),\n      _useDirection2 = _slicedToArray(_useDirection, 1),\n      direction = _useDirection2[0];\n\n  var localize = useLocalizer();\n  var rootClassName = (0, _useStyleToEmotionObject.default)()(ROOT_STYLE) + '';\n  var showActivityStatus = typeof renderActivityStatus === 'function';\n  var itemContainerCallbackRef = (0, _reactFilm.useItemContainerCallbackRef)();\n  var scrollableCallbackRef = (0, _reactFilm.useScrollableCallbackRef)();\n  var _activity$attachments = activity.attachments,\n      attachments = _activity$attachments === void 0 ? [] : _activity$attachments,\n      _activity$channelData = activity.channelData;\n  _activity$channelData = _activity$channelData === void 0 ? {} : _activity$channelData;\n  var _activity$channelData2 = _activity$channelData.messageBack;\n  _activity$channelData2 = _activity$channelData2 === void 0 ? {} : _activity$channelData2;\n  var messageBackDisplayText = _activity$channelData2.displayText,\n      _activity$from = activity.from;\n  _activity$from = _activity$from === void 0 ? {} : _activity$from;\n  var role = _activity$from.role,\n      text = activity.text,\n      textFormat = activity.textFormat;\n  var activityDisplayText = messageBackDisplayText || text;\n  var fromUser = role === 'user';\n  var greetingAlt = (fromUser ? localize('ACTIVITY_YOU_SAID_ALT') : localize('ACTIVITY_BOT_SAID_ALT', botInitials || '')).replace(/[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]{2,}/g, ' ');\n  var initials = fromUser ? userInitials : botInitials;\n  var nubOffset = fromUser ? bubbleFromUserNubOffset : bubbleNubOffset;\n  var nubSize = fromUser ? bubbleFromUserNubSize : bubbleNubSize;\n  var otherInitials = fromUser ? botInitials : userInitials;\n  var otherNubSize = fromUser ? bubbleNubSize : bubbleFromUserNubSize;\n  var hasAvatar = initials || typeof initials === 'string';\n  var hasOtherAvatar = otherInitials || typeof otherInitials === 'string';\n  var hasNub = typeof nubSize === 'number';\n  var hasOtherNub = typeof otherNubSize === 'number';\n  var topAlignedCallout = (0, _isZeroOrPositive.default)(nubOffset);\n  var extraTrailing = !hasOtherAvatar && hasOtherNub; // This is for bot message with user nub and no user avatar. And vice versa.\n\n  var showAvatar = showCallout && hasAvatar && !!renderAvatar;\n  var showNub = showCallout && hasNub && (topAlignedCallout || !attachments.length);\n  var hideNub = hasNub && !showNub;\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: (0, _classnames.default)('webchat__carousel-filmstrip', {\n      'webchat__carousel-filmstrip--extra-trailing': extraTrailing,\n      'webchat__carousel-filmstrip--hide-avatar': hasAvatar && !showAvatar,\n      'webchat__carousel-filmstrip--hide-nub': hideNub,\n      'webchat__carousel-filmstrip--no-message': !activityDisplayText,\n      'webchat__carousel-filmstrip--rtl': direction === 'rtl',\n      'webchat__carousel-filmstrip--show-avatar': showAvatar,\n      'webchat__carousel-filmstrip--show-nub': showNub,\n      'webchat__carousel-filmstrip--top-callout': topAlignedCallout\n    }, 'react-film__filmstrip', rootClassName, carouselFilmStripStyleSet + '', (className || '') + ''),\n    ref: scrollableCallbackRef,\n    role: \"group\"\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__carousel-filmstrip__main\"\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__carousel-filmstrip__avatar-gutter\"\n  }, showAvatar && renderAvatar({\n    activity: activity\n  })), /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__carousel-filmstrip__content\"\n  }, !!activityDisplayText && /*#__PURE__*/_react.default.createElement(\"div\", {\n    \"aria-roledescription\": \"message\",\n    className: \"webchat__carousel-filmstrip__message\",\n    role: \"group\"\n  }, /*#__PURE__*/_react.default.createElement(_ScreenReaderText.default, {\n    text: greetingAlt\n  }), /*#__PURE__*/_react.default.createElement(_Bubble.default, {\n    className: \"webchat__carousel-filmstrip__bubble\",\n    fromUser: fromUser,\n    nub: showNub || (hasAvatar || hasNub) && 'hidden'\n  }, renderAttachment({\n    activity: activity,\n    attachment: {\n      content: activityDisplayText,\n      contentType: (0, _textFormatToContentType.default)(textFormat)\n    }\n  })), /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__carousel-filmstrip__filler\"\n  })), /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__carousel-filmstrip__complimentary\"\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__carousel-filmstrip__nub-pad\"\n  }), /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__carousel-filmstrip__complimentary-content c\"\n  }, /*#__PURE__*/_react.default.createElement(\"ul\", {\n    className: \"webchat__carousel-filmstrip__attachments react-film__filmstrip__list\",\n    ref: itemContainerCallbackRef\n  }, attachments.map(function (attachment, index) {\n    return /*#__PURE__*/_react.default.createElement(_CarouselFilmStripAttachment.default, {\n      activity: activity,\n      attachment: attachment,\n      fromUser: fromUser,\n      hasAvatar: hasAvatar,\n      hideNub: hideNub,\n      index: index\n      /* Attachments do not have an ID; it is always indexed by number */\n      // eslint-disable-next-line react/no-array-index-key\n      ,\n      key: index,\n      renderAttachment: renderAttachment,\n      showAvatar: showAvatar,\n      showNub: showNub\n    });\n  }))))), /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__carousel-filmstrip__alignment-pad\"\n  })), showActivityStatus && /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__carousel-filmstrip__status\"\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__carousel-filmstrip__avatar-gutter\"\n  }), /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__carousel-filmstrip__nub-pad\"\n  }), renderActivityStatus({\n    hideTimestamp: hideTimestamp\n  })));\n};\n\nCarouselFilmStrip.defaultProps = {\n  className: '',\n  hideTimestamp: false,\n  renderActivityStatus: false,\n  renderAvatar: false,\n  showCallout: false\n};\nCarouselFilmStrip.propTypes = {\n  activity: _propTypes.default.shape({\n    attachments: _propTypes.default.array,\n    channelData: _propTypes.default.shape({\n      messageBack: _propTypes.default.shape({\n        displayText: _propTypes.default.string\n      }),\n      state: _propTypes.default.string\n    }),\n    from: _propTypes.default.shape({\n      role: _propTypes.default.string.isRequired\n    }).isRequired,\n    text: _propTypes.default.string,\n    textFormat: _propTypes.default.string,\n    timestamp: _propTypes.default.string\n  }).isRequired,\n  className: _propTypes.default.string,\n  hideTimestamp: _propTypes.default.bool,\n  renderActivityStatus: _propTypes.default.oneOfType([_propTypes.default.oneOf([false]), _propTypes.default.func]),\n  renderAttachment: _propTypes.default.func.isRequired,\n  renderAvatar: _propTypes.default.oneOfType([_propTypes.default.oneOf([false]), _propTypes.default.func]),\n  showCallout: _propTypes.default.bool\n};\nvar _default = CarouselFilmStrip;\nexports.default = _default;","map":{"version":3,"mappings":"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","names":["useAvatarForBot","hooks","useAvatarForUser","useDirection","useLocalizer","useStyleOptions","ROOT_STYLE","display","flexDirection","MsOverflowStyle","overflowX","overflowY","position","touchAction","WebkitOverflowScrolling","flexShrink","flex","listStyleType","margin","padding","flexGrow","connectCarouselFilmStrip","selectors","arguments","connectToWebChat","language","styleSet","options","botAvatarInitials","userAvatarInitials","activity","_ref2$activity","from","_ref2$activity$from","role","avatarInitials","CarouselFilmStrip","className","hideTimestamp","renderActivityStatus","renderAttachment","renderAvatar","showCallout","bubbleNubOffset","bubbleNubSize","bubbleFromUserNubOffset","bubbleFromUserNubSize","carouselFilmStripStyleSet","carouselFilmStrip","botInitials","initials","userInitials","direction","localize","rootClassName","showActivityStatus","itemContainerCallbackRef","scrollableCallbackRef","attachments","channelData","_activity$channelData","messageBack","_activity$channelData2","messageBackDisplayText","displayText","_activity$from","text","textFormat","activityDisplayText","fromUser","greetingAlt","replace","nubOffset","nubSize","otherInitials","otherNubSize","hasAvatar","hasOtherAvatar","hasNub","hasOtherNub","topAlignedCallout","extraTrailing","showAvatar","showNub","length","hideNub","_react","ref","_ScreenReaderText","_Bubble","nub","attachment","content","contentType","map","index","_CarouselFilmStripAttachment","key","defaultProps","propTypes","PropTypes","shape","array","string","state","isRequired","timestamp","bool","oneOfType","oneOf","func"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-component/lib/src/Activity/CarouselFilmStrip.js"],"sourcesContent":["/* eslint complexity: [\"error\", 30] */\n\nimport { hooks } from 'botframework-webchat-api';\nimport { useItemContainerCallbackRef, useScrollableCallbackRef } from 'react-film';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Bubble from './Bubble';\nimport CarouselFilmStripAttachment from './CarouselFilmStripAttachment';\nimport connectToWebChat from '../connectToWebChat';\nimport isZeroOrPositive from '../Utils/isZeroOrPositive';\nimport ScreenReaderText from '../ScreenReaderText';\nimport textFormatToContentType from '../Utils/textFormatToContentType';\nimport useStyleSet from '../hooks/useStyleSet';\nimport useStyleToEmotionObject from '../hooks/internal/useStyleToEmotionObject';\n\nconst { useAvatarForBot, useAvatarForUser, useDirection, useLocalizer, useStyleOptions } = hooks;\n\nconst ROOT_STYLE = {\n  '&.webchat__carousel-filmstrip': {\n    display: 'flex',\n    flexDirection: 'column',\n    MsOverflowStyle: 'none',\n    overflowX: 'scroll',\n    overflowY: 'hidden',\n    position: 'relative', // This is to keep screen reader text in the destinated area.\n    touchAction: 'manipulation',\n    WebkitOverflowScrolling: 'touch',\n\n    '&::-webkit-scrollbar': {\n      display: 'none'\n    },\n\n    '& .webchat__carousel-filmstrip__alignment-pad': {\n      flexShrink: 0\n    },\n\n    '& .webchat__carousel-filmstrip-attachment': {\n      flex: 1\n    },\n\n    '& .webchat__carousel-filmstrip__attachments': {\n      display: 'flex',\n      listStyleType: 'none',\n      margin: 0,\n      padding: 0\n    },\n\n    '& .webchat__carousel-filmstrip__avatar': {\n      flexShrink: 0\n    },\n\n    '& .webchat__carousel-filmstrip__avatar-gutter': {\n      display: 'flex',\n      flexDirection: 'column',\n      flexShrink: 0\n    },\n\n    '& .webchat__carousel-filmstrip__complimentary': {\n      display: 'flex'\n    },\n\n    '& .webchat__carousel-filmstrip__complimentary-content': {\n      display: 'flex',\n      flexGrow: 1,\n      flexDirection: 'column'\n    },\n\n    '& .webchat__carousel-filmstrip__content': {\n      display: 'flex',\n      flexGrow: 1,\n      flexDirection: 'column'\n    },\n\n    '& .webchat__carousel-filmstrip__filler': {\n      flexGrow: 10000,\n      flexShrink: 1\n    },\n\n    '& .webchat__carousel-filmstrip__main': {\n      display: 'flex'\n    },\n\n    '& .webchat__carousel-filmstrip__message': {\n      display: 'flex'\n    },\n\n    '& .webchat__carousel-filmstrip__nub-pad': {\n      flexShrink: 0\n    },\n\n    '& .webchat__carousel-filmstrip__status': {\n      display: 'flex'\n    }\n  }\n};\n\nconst connectCarouselFilmStrip = (...selectors) =>\n  connectToWebChat(\n    (\n      {\n        language,\n        styleSet: {\n          options: { botAvatarInitials, userAvatarInitials }\n        }\n      },\n      { activity: { from: { role } = {} } = {} }\n    ) => ({\n      avatarInitials: role === 'user' ? userAvatarInitials : botAvatarInitials,\n      language\n    }),\n    ...selectors\n  );\n\nconst CarouselFilmStrip = ({\n  activity,\n  className,\n  hideTimestamp,\n  renderActivityStatus,\n  renderAttachment,\n  renderAvatar,\n  showCallout\n}) => {\n  const [{ bubbleNubOffset, bubbleNubSize, bubbleFromUserNubOffset, bubbleFromUserNubSize }] = useStyleOptions();\n  const [{ carouselFilmStrip: carouselFilmStripStyleSet }] = useStyleSet();\n  const [{ initials: botInitials }] = useAvatarForBot();\n  const [{ initials: userInitials }] = useAvatarForUser();\n  const [direction] = useDirection();\n  const localize = useLocalizer();\n  const rootClassName = useStyleToEmotionObject()(ROOT_STYLE) + '';\n  const showActivityStatus = typeof renderActivityStatus === 'function';\n\n  const itemContainerCallbackRef = useItemContainerCallbackRef();\n  const scrollableCallbackRef = useScrollableCallbackRef();\n\n  const {\n    attachments = [],\n    channelData: { messageBack: { displayText: messageBackDisplayText } = {} } = {},\n    from: { role } = {},\n    text,\n    textFormat\n  } = activity;\n\n  const activityDisplayText = messageBackDisplayText || text;\n  const fromUser = role === 'user';\n\n  const greetingAlt = (\n    fromUser ? localize('ACTIVITY_YOU_SAID_ALT') : localize('ACTIVITY_BOT_SAID_ALT', botInitials || '')\n  ).replace(/\\s{2,}/gu, ' ');\n\n  const initials = fromUser ? userInitials : botInitials;\n  const nubOffset = fromUser ? bubbleFromUserNubOffset : bubbleNubOffset;\n  const nubSize = fromUser ? bubbleFromUserNubSize : bubbleNubSize;\n  const otherInitials = fromUser ? botInitials : userInitials;\n  const otherNubSize = fromUser ? bubbleNubSize : bubbleFromUserNubSize;\n\n  const hasAvatar = initials || typeof initials === 'string';\n  const hasOtherAvatar = otherInitials || typeof otherInitials === 'string';\n  const hasNub = typeof nubSize === 'number';\n  const hasOtherNub = typeof otherNubSize === 'number';\n  const topAlignedCallout = isZeroOrPositive(nubOffset);\n\n  const extraTrailing = !hasOtherAvatar && hasOtherNub; // This is for bot message with user nub and no user avatar. And vice versa.\n\n  const showAvatar = showCallout && hasAvatar && !!renderAvatar;\n  const showNub = showCallout && hasNub && (topAlignedCallout || !attachments.length);\n\n  const hideNub = hasNub && !showNub;\n\n  return (\n    <div\n      className={classNames(\n        'webchat__carousel-filmstrip',\n        {\n          'webchat__carousel-filmstrip--extra-trailing': extraTrailing,\n          'webchat__carousel-filmstrip--hide-avatar': hasAvatar && !showAvatar,\n          'webchat__carousel-filmstrip--hide-nub': hideNub,\n          'webchat__carousel-filmstrip--no-message': !activityDisplayText,\n          'webchat__carousel-filmstrip--rtl': direction === 'rtl',\n          'webchat__carousel-filmstrip--show-avatar': showAvatar,\n          'webchat__carousel-filmstrip--show-nub': showNub,\n          'webchat__carousel-filmstrip--top-callout': topAlignedCallout\n        },\n        'react-film__filmstrip',\n        rootClassName,\n        carouselFilmStripStyleSet + '',\n        (className || '') + ''\n      )}\n      ref={scrollableCallbackRef}\n      role=\"group\"\n    >\n      <div className=\"webchat__carousel-filmstrip__main\">\n        <div className=\"webchat__carousel-filmstrip__avatar-gutter\">{showAvatar && renderAvatar({ activity })}</div>\n        <div className=\"webchat__carousel-filmstrip__content\">\n          {!!activityDisplayText && (\n            <div aria-roledescription=\"message\" className=\"webchat__carousel-filmstrip__message\" role=\"group\">\n              <ScreenReaderText text={greetingAlt} />\n              <Bubble\n                className=\"webchat__carousel-filmstrip__bubble\"\n                fromUser={fromUser}\n                nub={showNub || ((hasAvatar || hasNub) && 'hidden')}\n              >\n                {renderAttachment({\n                  activity,\n                  attachment: {\n                    content: activityDisplayText,\n                    contentType: textFormatToContentType(textFormat)\n                  }\n                })}\n              </Bubble>\n              <div className=\"webchat__carousel-filmstrip__filler\" />\n            </div>\n          )}\n          <div className=\"webchat__carousel-filmstrip__complimentary\">\n            <div className=\"webchat__carousel-filmstrip__nub-pad\" />\n            <div className=\"webchat__carousel-filmstrip__complimentary-content c\">\n              <ul\n                className=\"webchat__carousel-filmstrip__attachments react-film__filmstrip__list\"\n                ref={itemContainerCallbackRef}\n              >\n                {attachments.map((attachment, index) => (\n                  <CarouselFilmStripAttachment\n                    activity={activity}\n                    attachment={attachment}\n                    fromUser={fromUser}\n                    hasAvatar={hasAvatar}\n                    hideNub={hideNub}\n                    index={index}\n                    /* Attachments do not have an ID; it is always indexed by number */\n                    // eslint-disable-next-line react/no-array-index-key\n                    key={index}\n                    renderAttachment={renderAttachment}\n                    showAvatar={showAvatar}\n                    showNub={showNub}\n                  />\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n        <div className=\"webchat__carousel-filmstrip__alignment-pad\" />\n      </div>\n      {showActivityStatus && (\n        <div className=\"webchat__carousel-filmstrip__status\">\n          <div className=\"webchat__carousel-filmstrip__avatar-gutter\" />\n          <div className=\"webchat__carousel-filmstrip__nub-pad\" />\n          {renderActivityStatus({ hideTimestamp })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nCarouselFilmStrip.defaultProps = {\n  className: '',\n  hideTimestamp: false,\n  renderActivityStatus: false,\n  renderAvatar: false,\n  showCallout: false\n};\n\nCarouselFilmStrip.propTypes = {\n  activity: PropTypes.shape({\n    attachments: PropTypes.array,\n    channelData: PropTypes.shape({\n      messageBack: PropTypes.shape({\n        displayText: PropTypes.string\n      }),\n      state: PropTypes.string\n    }),\n    from: PropTypes.shape({\n      role: PropTypes.string.isRequired\n    }).isRequired,\n    text: PropTypes.string,\n    textFormat: PropTypes.string,\n    timestamp: PropTypes.string\n  }).isRequired,\n  className: PropTypes.string,\n  hideTimestamp: PropTypes.bool,\n  renderActivityStatus: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.func]),\n  renderAttachment: PropTypes.func.isRequired,\n  renderAvatar: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.func]),\n  showCallout: PropTypes.bool\n};\n\nexport default CarouselFilmStrip;\n\nexport { connectCarouselFilmStrip };\n"]},"metadata":{},"sourceType":"script"}