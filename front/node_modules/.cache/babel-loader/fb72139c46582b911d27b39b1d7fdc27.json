{"ast":null,"code":"\"use strict\"; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.marshalPromiseToCallbacks = exports.Sink = exports.Deferred = exports.PromiseResultEventSource = exports.PromiseResult = exports.PromiseState = void 0;\nvar PromiseState;\n\n(function (PromiseState) {\n  PromiseState[PromiseState[\"None\"] = 0] = \"None\";\n  PromiseState[PromiseState[\"Resolved\"] = 1] = \"Resolved\";\n  PromiseState[PromiseState[\"Rejected\"] = 2] = \"Rejected\";\n})(PromiseState = exports.PromiseState || (exports.PromiseState = {}));\n\nvar PromiseResult =\n/** @class */\nfunction () {\n  function PromiseResult(promiseResultEventSource) {\n    var _this = this;\n\n    this.throwIfError = function () {\n      if (_this.isError) {\n        throw _this.error;\n      }\n    };\n\n    promiseResultEventSource.on(function (result) {\n      if (!_this.privIsCompleted) {\n        _this.privIsCompleted = true;\n        _this.privIsError = false;\n        _this.privResult = result;\n      }\n    }, function (error) {\n      if (!_this.privIsCompleted) {\n        _this.privIsCompleted = true;\n        _this.privIsError = true;\n        _this.privError = error;\n      }\n    });\n  }\n\n  Object.defineProperty(PromiseResult.prototype, \"isCompleted\", {\n    get: function () {\n      return this.privIsCompleted;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(PromiseResult.prototype, \"isError\", {\n    get: function () {\n      return this.privIsError;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(PromiseResult.prototype, \"error\", {\n    get: function () {\n      return this.privError;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(PromiseResult.prototype, \"result\", {\n    get: function () {\n      return this.privResult;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return PromiseResult;\n}();\n\nexports.PromiseResult = PromiseResult;\n\nvar PromiseResultEventSource =\n/** @class */\nfunction () {\n  function PromiseResultEventSource() {\n    var _this = this;\n\n    this.setResult = function (result) {\n      _this.privOnSetResult(result);\n    };\n\n    this.setError = function (error) {\n      _this.privOnSetError(error);\n    };\n\n    this.on = function (onSetResult, onSetError) {\n      _this.privOnSetResult = onSetResult;\n      _this.privOnSetError = onSetError;\n    };\n  }\n\n  return PromiseResultEventSource;\n}();\n\nexports.PromiseResultEventSource = PromiseResultEventSource;\n\nvar Deferred =\n/** @class */\nfunction () {\n  function Deferred() {\n    var _this = this;\n\n    this.resolve = function (result) {\n      _this.privResolve(result);\n\n      return _this;\n    };\n\n    this.reject = function (error) {\n      _this.privReject(error);\n\n      return _this;\n    };\n\n    this.privPromise = new Promise(function (resolve, reject) {\n      _this.privResolve = resolve;\n      _this.privReject = reject;\n    });\n  }\n\n  Object.defineProperty(Deferred.prototype, \"promise\", {\n    get: function () {\n      return this.privPromise;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Deferred;\n}();\n\nexports.Deferred = Deferred;\n\nvar Sink =\n/** @class */\nfunction () {\n  function Sink() {\n    var _this = this;\n\n    this.privState = PromiseState.None;\n    this.privPromiseResult = null;\n    this.privPromiseResultEvents = null;\n    this.privSuccessHandlers = [];\n    this.privErrorHandlers = [];\n\n    this.resolve = function (result) {\n      if (_this.privState !== PromiseState.None) {\n        throw new Error(\"'Cannot resolve a completed promise'\");\n      }\n\n      _this.privState = PromiseState.Resolved;\n\n      _this.privPromiseResultEvents.setResult(result);\n\n      for (var i = 0; i < _this.privSuccessHandlers.length; i++) {\n        _this.executeSuccessCallback(result, _this.privSuccessHandlers[i], _this.privErrorHandlers[i]);\n      }\n\n      _this.detachHandlers();\n    };\n\n    this.reject = function (error) {\n      if (_this.privState !== PromiseState.None) {\n        throw new Error(\"'Cannot reject a completed promise'\");\n      }\n\n      _this.privState = PromiseState.Rejected;\n\n      _this.privPromiseResultEvents.setError(error);\n\n      for (var _i = 0, _a = _this.privErrorHandlers; _i < _a.length; _i++) {\n        var errorHandler = _a[_i];\n\n        _this.executeErrorCallback(error, errorHandler);\n      }\n\n      _this.detachHandlers();\n    };\n\n    this.on = function (successCallback, errorCallback) {\n      if (successCallback == null) {\n        successCallback = function (r) {\n          return;\n        };\n      }\n\n      if (_this.privState === PromiseState.None) {\n        _this.privSuccessHandlers.push(successCallback);\n\n        _this.privErrorHandlers.push(errorCallback);\n      } else {\n        if (_this.privState === PromiseState.Resolved) {\n          _this.executeSuccessCallback(_this.privPromiseResult.result, successCallback, errorCallback);\n        } else if (_this.privState === PromiseState.Rejected) {\n          _this.executeErrorCallback(_this.privPromiseResult.error, errorCallback);\n        }\n\n        _this.detachHandlers();\n      }\n    };\n\n    this.executeSuccessCallback = function (result, successCallback, errorCallback) {\n      try {\n        successCallback(result);\n      } catch (e) {\n        _this.executeErrorCallback(\"'Unhandled callback error: \" + e + \"'\", errorCallback);\n      }\n    };\n\n    this.executeErrorCallback = function (error, errorCallback) {\n      if (errorCallback) {\n        try {\n          errorCallback(error);\n        } catch (e) {\n          throw new Error(\"'Unhandled callback error: \" + e + \". InnerError: \" + error + \"'\");\n        }\n      } else {\n        throw new Error(\"'Unhandled error: \" + error + \"'\");\n      }\n    };\n\n    this.detachHandlers = function () {\n      _this.privErrorHandlers = [];\n      _this.privSuccessHandlers = [];\n    };\n\n    this.privPromiseResultEvents = new PromiseResultEventSource();\n    this.privPromiseResult = new PromiseResult(this.privPromiseResultEvents);\n  }\n\n  Object.defineProperty(Sink.prototype, \"state\", {\n    get: function () {\n      return this.privState;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Sink.prototype, \"result\", {\n    get: function () {\n      return this.privPromiseResult;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Sink;\n}();\n\nexports.Sink = Sink;\n\nfunction marshalPromiseToCallbacks(promise, cb, err) {\n  promise.then(function (val) {\n    try {\n      if (!!cb) {\n        cb(val);\n      }\n    } catch (error) {\n      if (!!err) {\n        try {\n          if (error instanceof Error) {\n            var typedError = error;\n            err(typedError.name + \": \" + typedError.message);\n          } else {\n            err(error);\n          }\n          /* tslint:disable:no-empty */\n\n        } catch (error) {}\n      }\n    }\n  }, function (error) {\n    if (!!err) {\n      try {\n        if (error instanceof Error) {\n          var typedError = error;\n          err(typedError.name + \": \" + typedError.message);\n        } else {\n          err(error);\n        }\n        /* tslint:disable:no-empty */\n\n      } catch (error) {}\n    }\n  });\n}\n\nexports.marshalPromiseToCallbacks = marshalPromiseToCallbacks;","map":{"version":3,"mappings":"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","names":["PromiseState","exports","promiseResultEventSource","_this","isError","error","on","result","privIsCompleted","privIsError","privResult","privError","Object","PromiseResult","privOnSetResult","privOnSetError","onSetResult","onSetError","privResolve","privReject","privPromise","Promise","resolve","reject","Deferred","None","privState","Error","Resolved","privPromiseResultEvents","setResult","i","privSuccessHandlers","length","executeSuccessCallback","privErrorHandlers","detachHandlers","Rejected","setError","_i","errorHandler","executeErrorCallback","successCallback","errorCallback","r","push","privPromiseResult","e","PromiseResultEventSource","Sink","marshalPromiseToCallbacks","promise","cb","err","then","val","typedError","name","message"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/src/common/Promise.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport { ArgumentNullError } from \"./Error\";\r\n\r\nexport enum PromiseState {\r\n    None,\r\n    Resolved,\r\n    Rejected,\r\n}\r\n\r\nexport interface IDeferred<T> {\r\n    readonly promise: Promise<T>;\r\n\r\n    resolve(result: T): IDeferred<T>;\r\n\r\n    reject(error: string): IDeferred<T>;\r\n}\r\n\r\nexport class PromiseResult<T> {\r\n    protected privIsCompleted: boolean;\r\n    protected privIsError: boolean;\r\n    protected privError: string;\r\n    protected privResult: T;\r\n\r\n    public constructor(promiseResultEventSource: PromiseResultEventSource<T>) {\r\n        promiseResultEventSource.on((result: T) => {\r\n            if (!this.privIsCompleted) {\r\n                this.privIsCompleted = true;\r\n                this.privIsError = false;\r\n                this.privResult = result;\r\n            }\r\n        }, (error: string) => {\r\n            if (!this.privIsCompleted) {\r\n                this.privIsCompleted = true;\r\n                this.privIsError = true;\r\n                this.privError = error;\r\n            }\r\n        });\r\n    }\r\n\r\n    public get isCompleted(): boolean {\r\n        return this.privIsCompleted;\r\n    }\r\n\r\n    public get isError(): boolean {\r\n        return this.privIsError;\r\n    }\r\n\r\n    public get error(): string {\r\n        return this.privError;\r\n    }\r\n\r\n    public get result(): T {\r\n        return this.privResult;\r\n    }\r\n\r\n    public throwIfError = (): void => {\r\n        if (this.isError) {\r\n            throw this.error;\r\n        }\r\n    }\r\n}\r\n\r\nexport class PromiseResultEventSource<T>  {\r\n\r\n    private privOnSetResult: (result: T) => void;\r\n    private privOnSetError: (error: string) => void;\r\n\r\n    public setResult = (result: T): void => {\r\n        this.privOnSetResult(result);\r\n    }\r\n\r\n    public setError = (error: string): void => {\r\n        this.privOnSetError(error);\r\n    }\r\n\r\n    public on = (onSetResult: (result: T) => void, onSetError: (error: string) => void): void => {\r\n        this.privOnSetResult = onSetResult;\r\n        this.privOnSetError = onSetError;\r\n    }\r\n}\r\n\r\nexport class Deferred<T> implements IDeferred<T> {\r\n    private privPromise: Promise<T>;\r\n    private privResolve: (value?: T | PromiseLike<T>) => void;\r\n    private privReject: (reason?: any) => void;\r\n\r\n    public constructor() {\r\n        this.privPromise = new Promise<T>((resolve: (value: T) => void, reject: (reason: any) => void) => {\r\n            this.privResolve = resolve;\r\n            this.privReject = reject;\r\n        });\r\n    }\r\n\r\n    public get promise(): Promise<T> {\r\n        return this.privPromise;\r\n    }\r\n\r\n    public resolve = (result: T | Promise<T>): Deferred<T> => {\r\n        this.privResolve(result);\r\n        return this;\r\n    }\r\n\r\n    public reject = (error: string): Deferred<T> => {\r\n        this.privReject(error);\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class Sink<T> {\r\n    private privState: PromiseState = PromiseState.None;\r\n    private privPromiseResult: PromiseResult<T> = null;\r\n    private privPromiseResultEvents: PromiseResultEventSource<T> = null;\r\n\r\n    private privSuccessHandlers: ((result: T) => void)[] = [];\r\n    private privErrorHandlers: ((e: string) => void)[] = [];\r\n\r\n    public constructor() {\r\n        this.privPromiseResultEvents = new PromiseResultEventSource();\r\n        this.privPromiseResult = new PromiseResult(this.privPromiseResultEvents);\r\n    }\r\n\r\n    public get state(): PromiseState {\r\n        return this.privState;\r\n    }\r\n\r\n    public get result(): PromiseResult<T> {\r\n        return this.privPromiseResult;\r\n    }\r\n\r\n    public resolve = (result: T): void => {\r\n        if (this.privState !== PromiseState.None) {\r\n            throw new Error(\"'Cannot resolve a completed promise'\");\r\n        }\r\n\r\n        this.privState = PromiseState.Resolved;\r\n        this.privPromiseResultEvents.setResult(result);\r\n\r\n        for (let i = 0; i < this.privSuccessHandlers.length; i++) {\r\n            this.executeSuccessCallback(result, this.privSuccessHandlers[i], this.privErrorHandlers[i]);\r\n        }\r\n\r\n        this.detachHandlers();\r\n    }\r\n\r\n    public reject = (error: string): void => {\r\n        if (this.privState !== PromiseState.None) {\r\n            throw new Error(\"'Cannot reject a completed promise'\");\r\n        }\r\n\r\n        this.privState = PromiseState.Rejected;\r\n        this.privPromiseResultEvents.setError(error);\r\n\r\n        for (const errorHandler of this.privErrorHandlers) {\r\n            this.executeErrorCallback(error, errorHandler);\r\n        }\r\n\r\n        this.detachHandlers();\r\n    }\r\n\r\n    public on = (\r\n        successCallback: (result: T) => void,\r\n        errorCallback: (error: string) => void): void => {\r\n\r\n        if (successCallback == null) {\r\n            successCallback = (r: T) => { return; };\r\n        }\r\n\r\n        if (this.privState === PromiseState.None) {\r\n            this.privSuccessHandlers.push(successCallback);\r\n            this.privErrorHandlers.push(errorCallback);\r\n        } else {\r\n            if (this.privState === PromiseState.Resolved) {\r\n                this.executeSuccessCallback(this.privPromiseResult.result, successCallback, errorCallback);\r\n            } else if (this.privState === PromiseState.Rejected) {\r\n                this.executeErrorCallback(this.privPromiseResult.error, errorCallback);\r\n            }\r\n\r\n            this.detachHandlers();\r\n        }\r\n    }\r\n\r\n    private executeSuccessCallback = (result: T, successCallback: (result: T) => void, errorCallback: (error: string) => void): void => {\r\n        try {\r\n            successCallback(result);\r\n        } catch (e) {\r\n            this.executeErrorCallback(`'Unhandled callback error: ${e}'`, errorCallback);\r\n        }\r\n    }\r\n\r\n    private executeErrorCallback = (error: string, errorCallback: (error: string) => void): void => {\r\n        if (errorCallback) {\r\n            try {\r\n                errorCallback(error);\r\n            } catch (e) {\r\n                throw new Error(`'Unhandled callback error: ${e}. InnerError: ${error}'`);\r\n            }\r\n        } else {\r\n            throw new Error(`'Unhandled error: ${error}'`);\r\n        }\r\n    }\r\n\r\n    private detachHandlers = (): void => {\r\n        this.privErrorHandlers = [];\r\n        this.privSuccessHandlers = [];\r\n    }\r\n}\r\n\r\nexport function marshalPromiseToCallbacks<T>(\r\n    promise: Promise<T>,\r\n    cb?: (value: T) => void,\r\n    err?: (error: string) => void): void {\r\n    promise.then((val: T): void => {\r\n        try {\r\n            if (!!cb) {\r\n                cb(val);\r\n            }\r\n        } catch (error) {\r\n            if (!!err) {\r\n                try {\r\n                    if (error instanceof Error) {\r\n                        const typedError: Error = error as Error;\r\n                        err(typedError.name + \": \" + typedError.message);\r\n                    } else {\r\n                        err(error);\r\n                    }\r\n                    /* tslint:disable:no-empty */\r\n                } catch (error) { }\r\n            }\r\n        }\r\n    }, (error: any): void => {\r\n        if (!!err) {\r\n            try {\r\n                if (error instanceof Error) {\r\n                    const typedError: Error = error as Error;\r\n                    err(typedError.name + \": \" + typedError.message);\r\n                } else {\r\n                    err(error);\r\n                }\r\n                /* tslint:disable:no-empty */\r\n            } catch (error) { }\r\n        }\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"script"}