{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _botframeworkWebchatApi = require(\"botframework-webchat-api\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _useStyleSet3 = _interopRequireDefault(require(\"../../hooks/useStyleSet\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar useDirection = _botframeworkWebchatApi.hooks.useDirection,\n    useLocalizer = _botframeworkWebchatApi.hooks.useLocalizer,\n    useStyleOptions = _botframeworkWebchatApi.hooks.useStyleOptions;\n\nvar ScrollToEndButton = function ScrollToEndButton(_ref) {\n  var onClick = _ref.onClick;\n\n  var _useStyleSet = (0, _useStyleSet3.default)(),\n      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),\n      scrollToEndButtonStyleSet = _useStyleSet2[0].scrollToEndButton;\n\n  var _useStyleOptions = useStyleOptions(),\n      _useStyleOptions2 = _slicedToArray(_useStyleOptions, 1),\n      scrollToEndButtonBehavior = _useStyleOptions2[0].scrollToEndButtonBehavior;\n\n  var _useDirection = useDirection(),\n      _useDirection2 = _slicedToArray(_useDirection, 1),\n      direction = _useDirection2[0];\n\n  var localize = useLocalizer();\n  var text = localize(scrollToEndButtonBehavior === 'any' ? 'TRANSCRIPT_MORE_MESSAGES' : 'TRANSCRIPT_NEW_MESSAGES');\n  return /*#__PURE__*/_react.default.createElement(\"button\", {\n    \"aria-label\": text,\n    className: (0, _classnames.default)('webchat__scroll-to-end-button', scrollToEndButtonStyleSet + '', direction === 'rtl' ? 'webchat__scroll-to-end-button--rtl' : ''),\n    onClick: onClick,\n    tabIndex: 0,\n    type: \"button\"\n  }, text);\n};\n\nScrollToEndButton.defaultProps = {\n  onClick: undefined\n};\nScrollToEndButton.displayName = 'ScrollToEndButton';\nScrollToEndButton.propTypes = {\n  onClick: _propTypes.default.func\n};\nvar _default = ScrollToEndButton;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAQA,YAAR,GAAwDC,8BAAhDD,YAAR;AAAA,IAAsBE,YAAtB,GAAwDD,8BAAlCC,YAAtB;AAAA,IAAoCC,eAApC,GAAwDF,8BAApBE,eAApC;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AACzC,qBAA2D,4BAA3D;AAAA;AAAA,MAA4BC,yBAA5B,oBAASC,iBAAT;;AACA,yBAAwCJ,eAAe,EAAvD;AAAA;AAAA,MAASK,yBAAT,wBAASA,yBAAT;;AACA,sBAAoBR,YAAY,EAAhC;AAAA;AAAA,MAAOS,SAAP;;AACA,MAAMC,QAAQ,GAAGR,YAAY,EAA7B;AAEA,MAAMS,IAAI,GAAGD,QAAQ,CAACF,yBAAyB,KAAK,KAA9BA,GAAsC,0BAAtCA,GAAmE,yBAApE,CAArB;AAEA,sBACEI;AACE,kBAAYD,IADd;AAEEE,aAAS,EAAE,yBACT,+BADS,EAETP,yBAAyB,GAAG,EAFnB,EAGTG,SAAS,KAAK,KAAdA,GAAsB,oCAAtBA,GAA6D,EAHpD,CAFb;AAOEJ,WAAO,EAAEA,OAPX;AAQES,YAAQ,EAAE,CARZ;AASEC,QAAI,EAAC;AATP,KAWGJ,IAXH,CADF;AARF;;AAyBAP,iBAAiB,CAACY,YAAlBZ,GAAiC;AAC/BC,SAAO,EAAEY;AADsB,CAAjCb;AAIAA,iBAAiB,CAACc,WAAlBd,GAAgC,mBAAhCA;AAEAA,iBAAiB,CAACe,SAAlBf,GAA8B;AAC5BC,SAAO,EAAEe,mBAAUC;AADS,CAA9BjB;eAIeA","names":["useDirection","hooks","useLocalizer","useStyleOptions","ScrollToEndButton","onClick","scrollToEndButtonStyleSet","scrollToEndButton","scrollToEndButtonBehavior","direction","localize","text","_react","className","tabIndex","type","defaultProps","undefined","displayName","propTypes","PropTypes","func"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-component/lib/src/Middleware/ScrollToEndButton/ScrollToEndButton.js"],"sourcesContent":["import { hooks } from 'botframework-webchat-api';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport useStyleSet from '../../hooks/useStyleSet';\n\nconst { useDirection, useLocalizer, useStyleOptions } = hooks;\n\nconst ScrollToEndButton = ({ onClick }) => {\n  const [{ scrollToEndButton: scrollToEndButtonStyleSet }] = useStyleSet();\n  const [{ scrollToEndButtonBehavior }] = useStyleOptions();\n  const [direction] = useDirection();\n  const localize = useLocalizer();\n\n  const text = localize(scrollToEndButtonBehavior === 'any' ? 'TRANSCRIPT_MORE_MESSAGES' : 'TRANSCRIPT_NEW_MESSAGES');\n\n  return (\n    <button\n      aria-label={text}\n      className={classNames(\n        'webchat__scroll-to-end-button',\n        scrollToEndButtonStyleSet + '',\n        direction === 'rtl' ? 'webchat__scroll-to-end-button--rtl' : ''\n      )}\n      onClick={onClick}\n      tabIndex={0}\n      type=\"button\"\n    >\n      {text}\n    </button>\n  );\n};\n\nScrollToEndButton.defaultProps = {\n  onClick: undefined\n};\n\nScrollToEndButton.displayName = 'ScrollToEndButton';\n\nScrollToEndButton.propTypes = {\n  onClick: PropTypes.func\n};\n\nexport default ScrollToEndButton;\n"]},"metadata":{},"sourceType":"script"}