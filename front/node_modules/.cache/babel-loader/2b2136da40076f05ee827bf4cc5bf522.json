{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useTrackException;\n\nvar _react = require(\"react\");\n\nvar _createCustomEvent = _interopRequireDefault(require(\"../utils/createCustomEvent\"));\n\nvar _useReadTelemetryDimensions = _interopRequireDefault(require(\"./internal/useReadTelemetryDimensions\"));\n\nvar _useWebChatAPIContext2 = _interopRequireDefault(require(\"./internal/useWebChatAPIContext\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction useTrackException() {\n  var _useWebChatAPIContext = (0, _useWebChatAPIContext2.default)(),\n      onTelemetry = _useWebChatAPIContext.onTelemetry;\n\n  var readTelemetryDimensions = (0, _useReadTelemetryDimensions.default)();\n  return (0, _react.useCallback)(function (error) {\n    var fatal = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (!(error instanceof Error)) {\n      return console.warn('botframework-webchat: \"error\" passed to \"useTrackException\" must be specified and of type Error.');\n    }\n\n    onTelemetry && onTelemetry((0, _createCustomEvent.default)('exception', {\n      dimensions: _objectSpread({}, readTelemetryDimensions()),\n      error: error,\n      fatal: !!fatal\n    }));\n  }, [onTelemetry, readTelemetryDimensions]);\n}","map":{"version":3,"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEe,SAASA,iBAAT,GAAqE;AAClF,8BAAwB,qCAAxB;AAAA,MAAQC,WAAR,yBAAQA,WAAR;;AACA,MAAMC,uBAAuB,GAAG,0CAAhC;AAEA,SAAO,wBACL,UAACC,KAAD,EAAyB;AAAA,QAAjBC,KAAiB,uEAAT,IAAS;;AACvB,QAAI,EAAED,KAAK,YAAYE,KAAnB,CAAJ,EAA+B;AAC7B,aAAOC,OAAO,CAACC,IAARD,CACL,kGADKA,CAAP;AAGD;;AAEDL,eAAW,IACTA,WAAW,CACT,gCAAkB,WAAlB,EAA+B;AAC7BO,gBAAU,oBAAON,uBAAuB,EAA9B,CADmB;AAE7BC,WAAK,EAALA,KAF6B;AAG7BC,WAAK,EAAE,CAAC,CAACA;AAHoB,KAA/B,CADS,CADbH;AARG,KAiBL,CAACA,WAAD,EAAcC,uBAAd,CAjBK,CAAP;AAmBD","names":["useTrackException","onTelemetry","readTelemetryDimensions","error","fatal","Error","console","warn","dimensions"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-api/lib/src/hooks/useTrackException.ts"],"sourcesContent":["import { useCallback } from 'react';\n\nimport createCustomEvent from '../utils/createCustomEvent';\nimport useReadTelemetryDimensions from './internal/useReadTelemetryDimensions';\nimport useWebChatAPIContext from './internal/useWebChatAPIContext';\n\nexport default function useTrackException(): (error: Error, fatal: boolean) => void {\n  const { onTelemetry } = useWebChatAPIContext();\n  const readTelemetryDimensions = useReadTelemetryDimensions();\n\n  return useCallback(\n    (error, fatal = true) => {\n      if (!(error instanceof Error)) {\n        return console.warn(\n          'botframework-webchat: \"error\" passed to \"useTrackException\" must be specified and of type Error.'\n        );\n      }\n\n      onTelemetry &&\n        onTelemetry(\n          createCustomEvent('exception', {\n            dimensions: { ...readTelemetryDimensions() },\n            error,\n            fatal: !!fatal\n          })\n        );\n    },\n    [onTelemetry, readTelemetryDimensions]\n  );\n}\n"]},"metadata":{},"sourceType":"script"}