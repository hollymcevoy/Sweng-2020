{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _adaptivecards = require(\"adaptivecards\");\n\nvar _botframeworkWebchatCore = require(\"botframework-webchat-core\");\n\nfunction addCardAction(cardAction, includesOAuthButtons) {\n  var type = cardAction.type;\n  var action;\n\n  if (type === 'imBack' || type === 'messageBack' || type === 'postBack' || type === 'signin' && includesOAuthButtons) {\n    action = new _adaptivecards.SubmitAction();\n    action.data = {\n      __isBotFrameworkCardAction: true,\n      cardAction: cardAction\n    };\n    action.title = cardAction.title;\n  } else {\n    action = new _adaptivecards.OpenUrlAction();\n    action.title = cardAction.title;\n    action.url = cardAction.type === 'call' ? \"tel:\".concat(cardAction.value) : cardAction.value;\n  }\n\n  return action;\n}\n\nvar AdaptiveCardBuilder = /*#__PURE__*/function () {\n  function AdaptiveCardBuilder(adaptiveCards, styleOptions) {\n    var direction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'ltr';\n    (0, _classCallCheck2.default)(this, AdaptiveCardBuilder);\n    (0, _defineProperty2.default)(this, \"card\", void 0);\n    (0, _defineProperty2.default)(this, \"container\", void 0);\n    (0, _defineProperty2.default)(this, \"styleOptions\", void 0);\n    this.card = new adaptiveCards.AdaptiveCard();\n    this.container = new _adaptivecards.Container();\n    this.container.rtl = direction === 'rtl';\n    this.styleOptions = styleOptions;\n    this.card.addItem(this.container);\n  }\n\n  (0, _createClass2.default)(AdaptiveCardBuilder, [{\n    key: \"addColumnSet\",\n    value: function addColumnSet(sizes) {\n      var container = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.container;\n      var selectAction = arguments.length > 2 ? arguments[2] : undefined;\n      var columnSet = new _adaptivecards.ColumnSet();\n      columnSet.selectAction = selectAction && addCardAction(selectAction);\n      container.addItem(columnSet);\n      return sizes.map(function (size) {\n        var column = new _adaptivecards.Column();\n        column.width = new _adaptivecards.SizeAndUnit(size, _adaptivecards.SizeUnit.Weight);\n        columnSet.addColumn(column);\n        return column;\n      });\n    }\n  }, {\n    key: \"addItems\",\n    value: function addItems(cardElements) {\n      var container = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.container;\n      cardElements.forEach(function (cardElement) {\n        return container.addItem(cardElement);\n      });\n    }\n  }, {\n    key: \"addTextBlock\",\n    value: function addTextBlock(text, template) {\n      var container = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.container;\n\n      if (typeof text !== 'undefined') {\n        var textblock = new _adaptivecards.TextBlock();\n\n        for (var prop in template) {\n          if (!(0, _botframeworkWebchatCore.isForbiddenPropertyName)(prop)) {\n            // Mitigated through denylisting.\n            // eslint-disable-next-line security/detect-object-injection\n            textblock[prop] = template[prop];\n          }\n        }\n\n        textblock.text = text;\n        container.addItem(textblock);\n      }\n    }\n  }, {\n    key: \"addButtons\",\n    value: function addButtons(cardActions, includesOAuthButtons) {\n      var _this = this;\n\n      cardActions && cardActions.forEach(function (cardAction) {\n        _this.card.addAction(addCardAction(cardAction, includesOAuthButtons));\n      });\n    }\n  }, {\n    key: \"addCommonHeaders\",\n    value: function addCommonHeaders(content) {\n      var richCardWrapTitle = this.styleOptions.richCardWrapTitle;\n      this.addTextBlock(content.title, {\n        color: _adaptivecards.TextColor.Default,\n        size: _adaptivecards.TextSize.Medium,\n        style: 'heading',\n        weight: _adaptivecards.TextWeight.Bolder,\n        wrap: richCardWrapTitle\n      });\n      this.addTextBlock(content.subtitle, {\n        color: _adaptivecards.TextColor.Default,\n        isSubtle: true,\n        wrap: richCardWrapTitle\n      });\n      this.addTextBlock(content.text, {\n        color: _adaptivecards.TextColor.Default,\n        wrap: true\n      });\n    }\n  }, {\n    key: \"addCommon\",\n    value: function addCommon(content) {\n      this.addCommonHeaders(content);\n      this.addButtons(content.buttons);\n    }\n  }, {\n    key: \"addImage\",\n    value: function addImage(url, container, selectAction, altText) {\n      container = container || this.container;\n      var image = new _adaptivecards.Image();\n      image.altText = altText;\n      image.url = url;\n      image.selectAction = selectAction && addCardAction(selectAction);\n      image.size = _adaptivecards.Size.Stretch;\n      container.addItem(image);\n    }\n  }]);\n  return AdaptiveCardBuilder;\n}();\n\nexports.default = AdaptiveCardBuilder;","map":{"version":3,"mappings":"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","names":["addCardAction","cardAction","includesOAuthButtons","type","action","SubmitAction","data","__isBotFrameworkCardAction","title","OpenUrlAction","url","value","AdaptiveCardBuilder","adaptiveCards","styleOptions","direction","card","AdaptiveCard","container","Container","rtl","addItem","sizes","selectAction","columnSet","ColumnSet","map","column","Column","width","SizeAndUnit","size","SizeUnit","Weight","addColumn","cardElements","forEach","cardElement","text","template","textblock","TextBlock","prop","cardActions","_this","addAction","content","richCardWrapTitle","addTextBlock","color","TextColor","Default","TextSize","Medium","style","weight","TextWeight","Bolder","wrap","subtitle","isSubtle","addCommonHeaders","addButtons","buttons","altText","image","Image","Size","Stretch"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat/lib/src/adaptiveCards/Attachment/AdaptiveCardBuilder.ts"],"sourcesContent":["import {\n  AdaptiveCard,\n  CardElement,\n  Column,\n  ColumnSet,\n  Container,\n  Image,\n  OpenUrlAction,\n  Size,\n  SizeAndUnit,\n  SizeUnit,\n  SubmitAction,\n  TextBlock,\n  TextColor,\n  TextSize,\n  TextWeight\n} from 'adaptivecards';\n\nimport { DirectLineCardAction, isForbiddenPropertyName } from 'botframework-webchat-core';\nimport AdaptiveCardsPackage from '../../types/AdaptiveCardsPackage';\nimport AdaptiveCardsStyleOptions from '../AdaptiveCardsStyleOptions';\n\nexport interface BotFrameworkCardAction {\n  __isBotFrameworkCardAction: true;\n  cardAction: DirectLineCardAction;\n}\n\nfunction addCardAction(cardAction: DirectLineCardAction, includesOAuthButtons?: boolean) {\n  const { type } = cardAction;\n  let action;\n\n  if (\n    type === 'imBack' ||\n    type === 'messageBack' ||\n    type === 'postBack' ||\n    (type === 'signin' && includesOAuthButtons)\n  ) {\n    action = new SubmitAction();\n\n    action.data = {\n      __isBotFrameworkCardAction: true,\n      cardAction\n    };\n\n    action.title = (cardAction as { title: string }).title;\n  } else {\n    action = new OpenUrlAction();\n\n    action.title = (cardAction as { title: string }).title;\n    action.url = cardAction.type === 'call' ? `tel:${cardAction.value}` : cardAction.value;\n  }\n\n  return action;\n}\n\nexport default class AdaptiveCardBuilder {\n  card: AdaptiveCard;\n  container: Container;\n  styleOptions: AdaptiveCardsStyleOptions;\n\n  constructor(\n    adaptiveCards: AdaptiveCardsPackage,\n    styleOptions: AdaptiveCardsStyleOptions,\n    direction: 'ltr' | 'rtl' | 'auto' = 'ltr'\n  ) {\n    this.card = new adaptiveCards.AdaptiveCard();\n    this.container = new Container();\n    this.container.rtl = direction === 'rtl';\n    this.styleOptions = styleOptions;\n\n    this.card.addItem(this.container);\n  }\n\n  addColumnSet(sizes: number[], container: Container = this.container, selectAction?: DirectLineCardAction) {\n    const columnSet = new ColumnSet();\n\n    columnSet.selectAction = selectAction && addCardAction(selectAction);\n    container.addItem(columnSet);\n\n    return sizes.map(size => {\n      const column = new Column();\n\n      column.width = new SizeAndUnit(size, SizeUnit.Weight);\n\n      columnSet.addColumn(column);\n\n      return column;\n    });\n  }\n\n  addItems(cardElements: CardElement[], container: Container = this.container) {\n    cardElements.forEach(cardElement => container.addItem(cardElement));\n  }\n\n  addTextBlock(text: string, template: Partial<TextBlock>, container: Container = this.container) {\n    if (typeof text !== 'undefined') {\n      const textblock = new TextBlock();\n\n      for (const prop in template) {\n        if (!isForbiddenPropertyName(prop)) {\n          // Mitigated through denylisting.\n          // eslint-disable-next-line security/detect-object-injection\n          textblock[prop] = template[prop];\n        }\n      }\n\n      textblock.text = text;\n\n      container.addItem(textblock);\n    }\n  }\n\n  addButtons(cardActions: DirectLineCardAction[], includesOAuthButtons?: boolean) {\n    cardActions &&\n      cardActions.forEach(cardAction => {\n        this.card.addAction(addCardAction(cardAction, includesOAuthButtons));\n      });\n  }\n\n  addCommonHeaders(content: ICommonContent) {\n    const { richCardWrapTitle } = this.styleOptions;\n    this.addTextBlock(content.title, {\n      color: TextColor.Default,\n      size: TextSize.Medium,\n      style: 'heading',\n      weight: TextWeight.Bolder,\n      wrap: richCardWrapTitle\n    });\n    this.addTextBlock(content.subtitle, { color: TextColor.Default, isSubtle: true, wrap: richCardWrapTitle });\n    this.addTextBlock(content.text, { color: TextColor.Default, wrap: true });\n  }\n\n  addCommon(content: ICommonContent) {\n    this.addCommonHeaders(content);\n    this.addButtons(content.buttons);\n  }\n\n  addImage(url: string, container?: Container, selectAction?: DirectLineCardAction, altText?: string) {\n    container = container || this.container;\n\n    const image = new Image();\n\n    image.altText = altText;\n    image.url = url;\n    image.selectAction = selectAction && addCardAction(selectAction);\n    image.size = Size.Stretch;\n\n    container.addItem(image);\n  }\n}\n\nexport interface ICommonContent {\n  buttons?: DirectLineCardAction[];\n  subtitle?: string;\n  text?: string;\n  title?: string;\n}\n"]},"metadata":{},"sourceType":"script"}