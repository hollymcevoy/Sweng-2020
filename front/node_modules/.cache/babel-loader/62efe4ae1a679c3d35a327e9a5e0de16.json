{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SerializationContext = exports.AdaptiveCard = exports.Authentication = exports.TokenExchangeResource = exports.AuthCardButton = exports.RefreshDefinition = exports.RefreshActionProperty = exports.ContainerWithActions = exports.ColumnSet = exports.Column = exports.Container = exports.BackgroundImage = exports.ContainerBase = exports.StylableCardElementContainer = exports.ContainerStyleProperty = exports.ActionSet = exports.ShowCardAction = exports.HttpAction = exports.HttpHeader = exports.ToggleVisibilityAction = exports.OpenUrlAction = exports.ExecuteAction = exports.SubmitAction = exports.SubmitActionBase = exports.Action = exports.TimeInput = exports.TimeProperty = exports.DateInput = exports.NumberInput = exports.ChoiceSetInput = exports.Choice = exports.ToggleInput = exports.TextInput = exports.Input = exports.Media = exports.MediaSource = exports.ImageSet = exports.CardElementContainer = exports.Image = exports.FactSet = exports.Fact = exports.RichTextBlock = exports.TextRun = exports.TextBlock = exports.BaseTextBlock = exports.ActionProperty = exports.CardElement = exports.renderSeparation = void 0; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nvar Enums = require(\"./enums\");\n\nvar shared_1 = require(\"./shared\");\n\nvar Utils = require(\"./utils\");\n\nvar host_config_1 = require(\"./host-config\");\n\nvar TextFormatters = require(\"./text-formatters\");\n\nvar card_object_1 = require(\"./card-object\");\n\nvar serialization_1 = require(\"./serialization\");\n\nvar registry_1 = require(\"./registry\");\n\nvar strings_1 = require(\"./strings\");\n\nvar controls_1 = require(\"./controls\");\n\nfunction renderSeparation(hostConfig, separationDefinition, orientation) {\n  if (separationDefinition.spacing > 0 || separationDefinition.lineThickness && separationDefinition.lineThickness > 0) {\n    var separator = document.createElement(\"div\");\n    separator.className = hostConfig.makeCssClassName(\"ac-\" + (orientation == Enums.Orientation.Horizontal ? \"horizontal\" : \"vertical\") + \"-separator\");\n    separator.setAttribute(\"aria-hidden\", \"true\");\n    var color = separationDefinition.lineColor ? Utils.stringToCssColor(separationDefinition.lineColor) : \"\";\n\n    if (orientation == Enums.Orientation.Horizontal) {\n      if (separationDefinition.lineThickness) {\n        separator.style.paddingTop = separationDefinition.spacing / 2 + \"px\";\n        separator.style.marginBottom = separationDefinition.spacing / 2 + \"px\";\n        separator.style.borderBottom = separationDefinition.lineThickness + \"px solid \" + color;\n      } else {\n        separator.style.height = separationDefinition.spacing + \"px\";\n      }\n    } else {\n      if (separationDefinition.lineThickness) {\n        separator.style.paddingLeft = separationDefinition.spacing / 2 + \"px\";\n        separator.style.marginRight = separationDefinition.spacing / 2 + \"px\";\n        separator.style.borderRight = separationDefinition.lineThickness + \"px solid \" + color;\n      } else {\n        separator.style.width = separationDefinition.spacing + \"px\";\n      }\n    }\n\n    separator.style.overflow = \"hidden\";\n    separator.style.flex = \"0 0 auto\";\n    return separator;\n  } else {\n    return undefined;\n  }\n}\n\nexports.renderSeparation = renderSeparation;\n\nvar CardElement =\n/** @class */\nfunction (_super) {\n  __extends(CardElement, _super);\n\n  function CardElement() {\n    //#region Schema\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._truncatedDueToOverflow = false;\n    return _this;\n  }\n\n  Object.defineProperty(CardElement.prototype, \"lang\", {\n    get: function () {\n      var lang = this.getValue(CardElement.langProperty);\n\n      if (lang) {\n        return lang;\n      } else {\n        if (this.parent) {\n          return this.parent.lang;\n        } else {\n          return undefined;\n        }\n      }\n    },\n    set: function (value) {\n      this.setValue(CardElement.langProperty, value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CardElement.prototype, \"isVisible\", {\n    get: function () {\n      return this.getValue(CardElement.isVisibleProperty);\n    },\n    set: function (value) {\n      // If the element is going to be hidden, reset any changes that were due\n      // to overflow truncation (this ensures that if the element is later\n      // un-hidden it has the right content)\n      if (shared_1.GlobalSettings.useAdvancedCardBottomTruncation && !value) {\n        this.undoOverflowTruncation();\n      }\n\n      if (this.isVisible !== value) {\n        this.setValue(CardElement.isVisibleProperty, value);\n        this.updateRenderedElementVisibility();\n\n        if (this._renderedElement) {\n          raiseElementVisibilityChangedEvent(this);\n        }\n      }\n\n      if (this._renderedElement) {\n        this._renderedElement.setAttribute(\"aria-expanded\", value.toString());\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  CardElement.prototype.internalRenderSeparator = function () {\n    var renderedSeparator = renderSeparation(this.hostConfig, {\n      spacing: this.hostConfig.getEffectiveSpacing(this.spacing),\n      lineThickness: this.separator ? this.hostConfig.separator.lineThickness : undefined,\n      lineColor: this.separator ? this.hostConfig.separator.lineColor : undefined\n    }, this.separatorOrientation);\n\n    if (shared_1.GlobalSettings.alwaysBleedSeparators && renderedSeparator && this.separatorOrientation == Enums.Orientation.Horizontal) {\n      // Adjust separator's margins if the option to always bleed separators is turned on\n      var parentContainer = this.getParentContainer();\n\n      if (parentContainer && parentContainer.getEffectivePadding()) {\n        var parentPhysicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(parentContainer.getEffectivePadding());\n        renderedSeparator.style.marginLeft = \"-\" + parentPhysicalPadding.left + \"px\";\n        renderedSeparator.style.marginRight = \"-\" + parentPhysicalPadding.right + \"px\";\n      }\n    }\n\n    return renderedSeparator;\n  };\n\n  CardElement.prototype.updateRenderedElementVisibility = function () {\n    var displayMode = this.isDesignMode() || this.isVisible ? this._defaultRenderedElementDisplayMode : \"none\";\n\n    if (this._renderedElement) {\n      if (displayMode) {\n        this._renderedElement.style.display = displayMode;\n      } else {\n        this._renderedElement.style.removeProperty(\"display\");\n      }\n    }\n\n    if (this._separatorElement) {\n      if (this.parent && this.parent.isFirstElement(this)) {\n        this._separatorElement.style.display = \"none\";\n      } else {\n        if (displayMode) {\n          this._separatorElement.style.display = displayMode;\n        } else {\n          this._separatorElement.style.removeProperty(\"display\");\n        }\n      }\n    }\n  };\n\n  CardElement.prototype.hideElementDueToOverflow = function () {\n    if (this._renderedElement && this.isVisible) {\n      this._renderedElement.style.visibility = \"hidden\";\n      this.isVisible = false;\n      raiseElementVisibilityChangedEvent(this, false);\n    }\n  };\n\n  CardElement.prototype.showElementHiddenDueToOverflow = function () {\n    if (this._renderedElement && !this.isVisible) {\n      this._renderedElement.style.removeProperty(\"visibility\");\n\n      this.isVisible = true;\n      raiseElementVisibilityChangedEvent(this, false);\n    }\n  }; // Marked private to emulate internal access\n\n\n  CardElement.prototype.handleOverflow = function (maxHeight) {\n    if (this.isVisible || this.isHiddenDueToOverflow()) {\n      var handled = this.truncateOverflow(maxHeight); // Even if we were unable to truncate the element to fit this time,\n      // it still could have been previously truncated\n\n      this._truncatedDueToOverflow = handled || this._truncatedDueToOverflow;\n\n      if (!handled) {\n        this.hideElementDueToOverflow();\n      } else if (handled && !this.isVisible) {\n        this.showElementHiddenDueToOverflow();\n      }\n    }\n  }; // Marked private to emulate internal access\n\n\n  CardElement.prototype.resetOverflow = function () {\n    var sizeChanged = false;\n\n    if (this._truncatedDueToOverflow) {\n      this.undoOverflowTruncation();\n      this._truncatedDueToOverflow = false;\n      sizeChanged = true;\n    }\n\n    if (this.isHiddenDueToOverflow()) {\n      this.showElementHiddenDueToOverflow();\n    }\n\n    return sizeChanged;\n  };\n\n  CardElement.prototype.getDefaultSerializationContext = function () {\n    return new SerializationContext();\n  };\n\n  CardElement.prototype.createPlaceholderElement = function () {\n    var styleDefinition = this.getEffectiveStyleDefinition();\n    var foregroundCssColor = Utils.stringToCssColor(styleDefinition.foregroundColors.default.subtle);\n    var element = document.createElement(\"div\");\n    element.style.border = \"1px dashed \" + foregroundCssColor;\n    element.style.padding = \"4px\";\n    element.style.minHeight = \"32px\";\n    element.style.fontSize = \"10px\";\n    element.style.color = foregroundCssColor;\n    element.innerText = \"Empty \" + this.getJsonTypeName();\n    return element;\n  };\n\n  CardElement.prototype.adjustRenderedElementSize = function (renderedElement) {\n    if (this.height === \"auto\") {\n      renderedElement.style.flex = \"0 0 auto\";\n    } else {\n      renderedElement.style.flex = \"1 1 auto\";\n    }\n  };\n\n  CardElement.prototype.isDisplayed = function () {\n    return this._renderedElement !== undefined && this.isVisible && this._renderedElement.offsetHeight > 0;\n  };\n\n  CardElement.prototype.overrideInternalRender = function () {\n    return this.internalRender();\n  };\n\n  CardElement.prototype.applyPadding = function () {\n    if (this.separatorElement && this.separatorOrientation === Enums.Orientation.Horizontal) {\n      if (shared_1.GlobalSettings.alwaysBleedSeparators && !this.isBleeding()) {\n        var padding = new shared_1.PaddingDefinition();\n        this.getImmediateSurroundingPadding(padding);\n        var physicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(padding);\n        this.separatorElement.style.marginLeft = \"-\" + physicalPadding.left + \"px\";\n        this.separatorElement.style.marginRight = \"-\" + physicalPadding.right + \"px\";\n      } else {\n        this.separatorElement.style.marginRight = \"0\";\n        this.separatorElement.style.marginLeft = \"0\";\n      }\n    }\n  };\n  /*\n   * Called when this element overflows the bottom of the card.\n   * maxHeight will be the amount of space still available on the card (0 if\n   * the element is fully off the card).\n   */\n\n\n  CardElement.prototype.truncateOverflow = function (maxHeight) {\n    // Child implementations should return true if the element handled\n    // the truncation request such that its content fits within maxHeight,\n    // false if the element should fall back to being hidden\n    return false;\n  };\n  /*\n   * This should reverse any changes performed in truncateOverflow().\n   */\n\n\n  CardElement.prototype.undoOverflowTruncation = function () {};\n\n  CardElement.prototype.getDefaultPadding = function () {\n    return new shared_1.PaddingDefinition();\n  };\n\n  CardElement.prototype.getHasBackground = function () {\n    return false;\n  };\n\n  CardElement.prototype.getHasBorder = function () {\n    return false;\n  };\n\n  CardElement.prototype.getPadding = function () {\n    return this._padding;\n  };\n\n  CardElement.prototype.setPadding = function (value) {\n    this._padding = value;\n  };\n\n  CardElement.prototype.shouldSerialize = function (context) {\n    return context.elementRegistry.findByName(this.getJsonTypeName()) !== undefined;\n  };\n\n  Object.defineProperty(CardElement.prototype, \"useDefaultSizing\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CardElement.prototype, \"separatorOrientation\", {\n    get: function () {\n      return Enums.Orientation.Horizontal;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CardElement.prototype, \"defaultStyle\", {\n    get: function () {\n      return Enums.ContainerStyle.Default;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  CardElement.prototype.parse = function (source, context) {\n    _super.prototype.parse.call(this, source, context ? context : new SerializationContext());\n  };\n\n  CardElement.prototype.asString = function () {\n    return \"\";\n  };\n\n  CardElement.prototype.isBleeding = function () {\n    return false;\n  };\n\n  CardElement.prototype.getEffectiveStyle = function () {\n    if (this.parent) {\n      return this.parent.getEffectiveStyle();\n    }\n\n    return this.defaultStyle;\n  };\n\n  CardElement.prototype.getEffectiveStyleDefinition = function () {\n    return this.hostConfig.containerStyles.getStyleByName(this.getEffectiveStyle());\n  };\n\n  CardElement.prototype.getEffectiveTextStyleDefinition = function () {\n    if (this.parent) {\n      return this.parent.getEffectiveTextStyleDefinition();\n    }\n\n    return this.hostConfig.textStyles.default;\n  };\n\n  CardElement.prototype.getForbiddenActionTypes = function () {\n    return [];\n  };\n\n  CardElement.prototype.getImmediateSurroundingPadding = function (result, processTop, processRight, processBottom, processLeft) {\n    if (processTop === void 0) {\n      processTop = true;\n    }\n\n    if (processRight === void 0) {\n      processRight = true;\n    }\n\n    if (processBottom === void 0) {\n      processBottom = true;\n    }\n\n    if (processLeft === void 0) {\n      processLeft = true;\n    }\n\n    if (this.parent) {\n      var doProcessTop = processTop && this.parent.isTopElement(this);\n      var doProcessRight = processRight && this.parent.isRightMostElement(this);\n      var doProcessBottom = processBottom && this.parent.isBottomElement(this);\n      var doProcessLeft = processLeft && this.parent.isLeftMostElement(this);\n      var effectivePadding = this.parent.getEffectivePadding();\n\n      if (effectivePadding) {\n        if (doProcessTop && effectivePadding.top != Enums.Spacing.None) {\n          result.top = effectivePadding.top;\n          doProcessTop = false;\n        }\n\n        if (doProcessRight && effectivePadding.right != Enums.Spacing.None) {\n          result.right = effectivePadding.right;\n          doProcessRight = false;\n        }\n\n        if (doProcessBottom && effectivePadding.bottom != Enums.Spacing.None) {\n          result.bottom = effectivePadding.bottom;\n          doProcessBottom = false;\n        }\n\n        if (doProcessLeft && effectivePadding.left != Enums.Spacing.None) {\n          result.left = effectivePadding.left;\n          doProcessLeft = false;\n        }\n      }\n\n      if (doProcessTop || doProcessRight || doProcessBottom || doProcessLeft) {\n        this.parent.getImmediateSurroundingPadding(result, doProcessTop, doProcessRight, doProcessBottom, doProcessLeft);\n      }\n    }\n  };\n\n  CardElement.prototype.getActionCount = function () {\n    return 0;\n  };\n\n  CardElement.prototype.getActionAt = function (index) {\n    throw new Error(strings_1.Strings.errors.indexOutOfRange(index));\n  };\n\n  CardElement.prototype.indexOfAction = function (action) {\n    for (var i = 0; i < this.getActionCount(); i++) {\n      if (this.getActionAt(i) === action) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  CardElement.prototype.remove = function () {\n    if (this.parent && this.parent instanceof CardElementContainer) {\n      return this.parent.removeItem(this);\n    }\n\n    return false;\n  };\n\n  CardElement.prototype.render = function () {\n    this._renderedElement = this.overrideInternalRender();\n    this._separatorElement = this.internalRenderSeparator();\n\n    if (this._renderedElement) {\n      if (this.id) {\n        this._renderedElement.id = this.id;\n      }\n\n      if (this.customCssSelector) {\n        this._renderedElement.classList.add(this.customCssSelector);\n      }\n\n      this._renderedElement.style.boxSizing = \"border-box\";\n      this._defaultRenderedElementDisplayMode = this._renderedElement.style.display ? this._renderedElement.style.display : undefined;\n      this.adjustRenderedElementSize(this._renderedElement);\n      this.updateLayout(false);\n    } else if (this.isDesignMode()) {\n      this._renderedElement = this.createPlaceholderElement();\n    }\n\n    return this._renderedElement;\n  };\n\n  CardElement.prototype.updateLayout = function (processChildren) {\n    if (processChildren === void 0) {\n      processChildren = true;\n    }\n\n    this.updateRenderedElementVisibility();\n    this.applyPadding();\n  };\n\n  CardElement.prototype.indexOf = function (cardElement) {\n    return -1;\n  };\n\n  CardElement.prototype.isDesignMode = function () {\n    var rootElement = this.getRootElement();\n    return rootElement instanceof AdaptiveCard && rootElement.designMode;\n  };\n\n  CardElement.prototype.isFirstElement = function (element) {\n    return true;\n  };\n\n  CardElement.prototype.isLastElement = function (element) {\n    return true;\n  };\n\n  CardElement.prototype.isAtTheVeryLeft = function () {\n    return this.parent ? this.parent.isLeftMostElement(this) && this.parent.isAtTheVeryLeft() : true;\n  };\n\n  CardElement.prototype.isAtTheVeryRight = function () {\n    return this.parent ? this.parent.isRightMostElement(this) && this.parent.isAtTheVeryRight() : true;\n  };\n\n  CardElement.prototype.isAtTheVeryTop = function () {\n    return this.parent ? this.parent.isFirstElement(this) && this.parent.isAtTheVeryTop() : true;\n  };\n\n  CardElement.prototype.isAtTheVeryBottom = function () {\n    return this.parent ? this.parent.isLastElement(this) && this.parent.isAtTheVeryBottom() : true;\n  };\n\n  CardElement.prototype.isBleedingAtTop = function () {\n    return false;\n  };\n\n  CardElement.prototype.isBleedingAtBottom = function () {\n    return false;\n  };\n\n  CardElement.prototype.isLeftMostElement = function (element) {\n    return true;\n  };\n\n  CardElement.prototype.isRightMostElement = function (element) {\n    return true;\n  };\n\n  CardElement.prototype.isTopElement = function (element) {\n    return this.isFirstElement(element);\n  };\n\n  CardElement.prototype.isBottomElement = function (element) {\n    return this.isLastElement(element);\n  };\n\n  CardElement.prototype.isHiddenDueToOverflow = function () {\n    return this._renderedElement !== undefined && this._renderedElement.style.visibility == 'hidden';\n  };\n\n  CardElement.prototype.getRootElement = function () {\n    return this.getRootObject();\n  };\n\n  CardElement.prototype.getParentContainer = function () {\n    var currentElement = this.parent;\n\n    while (currentElement) {\n      if (currentElement instanceof Container) {\n        return currentElement;\n      }\n\n      currentElement = currentElement.parent;\n    }\n\n    return undefined;\n  };\n\n  CardElement.prototype.getAllInputs = function (processActions) {\n    if (processActions === void 0) {\n      processActions = true;\n    }\n\n    return [];\n  };\n\n  CardElement.prototype.getResourceInformation = function () {\n    return [];\n  };\n\n  CardElement.prototype.getElementById = function (id) {\n    return this.id === id ? this : undefined;\n  };\n\n  CardElement.prototype.getActionById = function (id) {\n    return undefined;\n  };\n\n  CardElement.prototype.getEffectivePadding = function () {\n    var padding = this.getPadding();\n    return padding ? padding : this.getDefaultPadding();\n  };\n\n  CardElement.prototype.getEffectiveHorizontalAlignment = function () {\n    if (this.horizontalAlignment !== undefined) {\n      return this.horizontalAlignment;\n    }\n\n    if (this.parent) {\n      return this.parent.getEffectiveHorizontalAlignment();\n    }\n\n    return Enums.HorizontalAlignment.Left;\n  };\n\n  Object.defineProperty(CardElement.prototype, \"hostConfig\", {\n    get: function () {\n      if (this._hostConfig) {\n        return this._hostConfig;\n      } else {\n        if (this.parent) {\n          return this.parent.hostConfig;\n        } else {\n          return host_config_1.defaultHostConfig;\n        }\n      }\n    },\n    set: function (value) {\n      this._hostConfig = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CardElement.prototype, \"index\", {\n    get: function () {\n      if (this.parent) {\n        return this.parent.indexOf(this);\n      } else {\n        return 0;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CardElement.prototype, \"isInteractive\", {\n    get: function () {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CardElement.prototype, \"isStandalone\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CardElement.prototype, \"isInline\", {\n    get: function () {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CardElement.prototype, \"hasVisibleSeparator\", {\n    get: function () {\n      if (this.parent && this.separatorElement) {\n        return !this.parent.isFirstElement(this) && (this.isVisible || this.isDesignMode());\n      } else {\n        return false;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CardElement.prototype, \"separatorElement\", {\n    get: function () {\n      return this._separatorElement;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CardElement.prototype, \"parent\", {\n    get: function () {\n      return this._parent;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  CardElement.langProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_1, \"lang\", true, /^[a-z]{2,3}$/ig);\n  CardElement.isVisibleProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_2, \"isVisible\", true);\n  CardElement.separatorProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_0, \"separator\", false);\n  CardElement.heightProperty = new serialization_1.ValueSetProperty(serialization_1.Versions.v1_1, \"height\", [{\n    value: \"auto\"\n  }, {\n    value: \"stretch\"\n  }], \"auto\");\n  CardElement.horizontalAlignmentProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_0, \"horizontalAlignment\", Enums.HorizontalAlignment);\n  CardElement.spacingProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_0, \"spacing\", Enums.Spacing, Enums.Spacing.Default);\n\n  __decorate([serialization_1.property(CardElement.horizontalAlignmentProperty)], CardElement.prototype, \"horizontalAlignment\", void 0);\n\n  __decorate([serialization_1.property(CardElement.spacingProperty)], CardElement.prototype, \"spacing\", void 0);\n\n  __decorate([serialization_1.property(CardElement.separatorProperty)], CardElement.prototype, \"separator\", void 0);\n\n  __decorate([serialization_1.property(CardElement.heightProperty)], CardElement.prototype, \"height\", void 0);\n\n  __decorate([serialization_1.property(CardElement.langProperty)], CardElement.prototype, \"lang\", null);\n\n  __decorate([serialization_1.property(CardElement.isVisibleProperty)], CardElement.prototype, \"isVisible\", null);\n\n  return CardElement;\n}(card_object_1.CardObject);\n\nexports.CardElement = CardElement;\n\nvar ActionProperty =\n/** @class */\nfunction (_super) {\n  __extends(ActionProperty, _super);\n\n  function ActionProperty(targetVersion, name, forbiddenActionTypes) {\n    if (forbiddenActionTypes === void 0) {\n      forbiddenActionTypes = [];\n    }\n\n    var _this = _super.call(this, targetVersion, name, undefined) || this;\n\n    _this.targetVersion = targetVersion;\n    _this.name = name;\n    _this.forbiddenActionTypes = forbiddenActionTypes;\n    return _this;\n  }\n\n  ActionProperty.prototype.parse = function (sender, source, context) {\n    var parent = sender;\n    return context.parseAction(parent, source[this.name], this.forbiddenActionTypes, parent.isDesignMode());\n  };\n\n  ActionProperty.prototype.toJSON = function (sender, target, value, context) {\n    context.serializeValue(target, this.name, value ? value.toJSON(context) : undefined, undefined, true);\n  };\n\n  return ActionProperty;\n}(serialization_1.PropertyDefinition);\n\nexports.ActionProperty = ActionProperty;\n\nvar BaseTextBlock =\n/** @class */\nfunction (_super) {\n  __extends(BaseTextBlock, _super);\n\n  function BaseTextBlock(text) {\n    var _this = _super.call(this) || this;\n\n    _this.ariaHidden = false;\n\n    if (text) {\n      _this.text = text;\n    }\n\n    return _this;\n  }\n\n  BaseTextBlock.prototype.populateSchema = function (schema) {\n    _super.prototype.populateSchema.call(this, schema); // selectAction is declared on BaseTextBlock but is only exposed on TextRun,\n    // so the property is removed from the BaseTextBlock schema.\n\n\n    schema.remove(BaseTextBlock.selectActionProperty);\n  };\n\n  Object.defineProperty(BaseTextBlock.prototype, \"text\", {\n    get: function () {\n      return this.getValue(BaseTextBlock.textProperty);\n    },\n    set: function (value) {\n      this.setText(value);\n    },\n    enumerable: false,\n    configurable: true\n  }); //#endregion\n\n  BaseTextBlock.prototype.getFontSize = function (fontType) {\n    switch (this.effectiveSize) {\n      case Enums.TextSize.Small:\n        return fontType.fontSizes.small;\n\n      case Enums.TextSize.Medium:\n        return fontType.fontSizes.medium;\n\n      case Enums.TextSize.Large:\n        return fontType.fontSizes.large;\n\n      case Enums.TextSize.ExtraLarge:\n        return fontType.fontSizes.extraLarge;\n\n      default:\n        return fontType.fontSizes.default;\n    }\n  };\n\n  BaseTextBlock.prototype.getColorDefinition = function (colorSet, color) {\n    switch (color) {\n      case Enums.TextColor.Accent:\n        return colorSet.accent;\n\n      case Enums.TextColor.Dark:\n        return colorSet.dark;\n\n      case Enums.TextColor.Light:\n        return colorSet.light;\n\n      case Enums.TextColor.Good:\n        return colorSet.good;\n\n      case Enums.TextColor.Warning:\n        return colorSet.warning;\n\n      case Enums.TextColor.Attention:\n        return colorSet.attention;\n\n      default:\n        return colorSet.default;\n    }\n  };\n\n  BaseTextBlock.prototype.setText = function (value) {\n    this.setValue(BaseTextBlock.textProperty, value);\n  };\n\n  BaseTextBlock.prototype.init = function (textDefinition) {\n    this.size = textDefinition.size;\n    this.weight = textDefinition.weight;\n    this.color = textDefinition.color;\n    this.isSubtle = textDefinition.isSubtle;\n  };\n\n  BaseTextBlock.prototype.asString = function () {\n    return this.text;\n  };\n\n  BaseTextBlock.prototype.applyStylesTo = function (targetElement) {\n    var fontType = this.hostConfig.getFontTypeDefinition(this.effectiveFontType);\n\n    if (fontType.fontFamily) {\n      targetElement.style.fontFamily = fontType.fontFamily;\n    }\n\n    var fontSize;\n\n    switch (this.effectiveSize) {\n      case Enums.TextSize.Small:\n        fontSize = fontType.fontSizes.small;\n        break;\n\n      case Enums.TextSize.Medium:\n        fontSize = fontType.fontSizes.medium;\n        break;\n\n      case Enums.TextSize.Large:\n        fontSize = fontType.fontSizes.large;\n        break;\n\n      case Enums.TextSize.ExtraLarge:\n        fontSize = fontType.fontSizes.extraLarge;\n        break;\n\n      default:\n        fontSize = fontType.fontSizes.default;\n        break;\n    }\n\n    targetElement.style.fontSize = fontSize + \"px\";\n    var colorDefinition = this.getColorDefinition(this.getEffectiveStyleDefinition().foregroundColors, this.effectiveColor);\n    targetElement.style.color = Utils.stringToCssColor(this.effectiveIsSubtle ? colorDefinition.subtle : colorDefinition.default);\n    var fontWeight;\n\n    switch (this.effectiveWeight) {\n      case Enums.TextWeight.Lighter:\n        fontWeight = fontType.fontWeights.lighter;\n        break;\n\n      case Enums.TextWeight.Bolder:\n        fontWeight = fontType.fontWeights.bolder;\n        break;\n\n      default:\n        fontWeight = fontType.fontWeights.default;\n        break;\n    }\n\n    targetElement.style.fontWeight = fontWeight.toString();\n\n    if (this.ariaHidden) {\n      targetElement.setAttribute(\"aria-hidden\", \"true\");\n    }\n  };\n\n  Object.defineProperty(BaseTextBlock.prototype, \"effectiveColor\", {\n    get: function () {\n      return this.color !== undefined ? this.color : this.getEffectiveTextStyleDefinition().color;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BaseTextBlock.prototype, \"effectiveFontType\", {\n    get: function () {\n      return this.fontType !== undefined ? this.fontType : this.getEffectiveTextStyleDefinition().fontType;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BaseTextBlock.prototype, \"effectiveIsSubtle\", {\n    get: function () {\n      return this.isSubtle !== undefined ? this.isSubtle : this.getEffectiveTextStyleDefinition().isSubtle;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BaseTextBlock.prototype, \"effectiveSize\", {\n    get: function () {\n      return this.size !== undefined ? this.size : this.getEffectiveTextStyleDefinition().size;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BaseTextBlock.prototype, \"effectiveWeight\", {\n    get: function () {\n      return this.weight !== undefined ? this.weight : this.getEffectiveTextStyleDefinition().weight;\n    },\n    enumerable: false,\n    configurable: true\n  }); //#region Schema\n\n  BaseTextBlock.textProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"text\", true);\n  BaseTextBlock.sizeProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_0, \"size\", Enums.TextSize);\n  BaseTextBlock.weightProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_0, \"weight\", Enums.TextWeight);\n  BaseTextBlock.colorProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_0, \"color\", Enums.TextColor);\n  BaseTextBlock.isSubtleProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_0, \"isSubtle\");\n  BaseTextBlock.fontTypeProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_2, \"fontType\", Enums.FontType);\n  BaseTextBlock.selectActionProperty = new ActionProperty(serialization_1.Versions.v1_1, \"selectAction\", [\"Action.ShowCard\"]);\n\n  __decorate([serialization_1.property(BaseTextBlock.sizeProperty)], BaseTextBlock.prototype, \"size\", void 0);\n\n  __decorate([serialization_1.property(BaseTextBlock.weightProperty)], BaseTextBlock.prototype, \"weight\", void 0);\n\n  __decorate([serialization_1.property(BaseTextBlock.colorProperty)], BaseTextBlock.prototype, \"color\", void 0);\n\n  __decorate([serialization_1.property(BaseTextBlock.fontTypeProperty)], BaseTextBlock.prototype, \"fontType\", void 0);\n\n  __decorate([serialization_1.property(BaseTextBlock.isSubtleProperty)], BaseTextBlock.prototype, \"isSubtle\", void 0);\n\n  __decorate([serialization_1.property(BaseTextBlock.textProperty)], BaseTextBlock.prototype, \"text\", null);\n\n  __decorate([serialization_1.property(BaseTextBlock.selectActionProperty)], BaseTextBlock.prototype, \"selectAction\", void 0);\n\n  return BaseTextBlock;\n}(CardElement);\n\nexports.BaseTextBlock = BaseTextBlock;\n\nvar TextBlock =\n/** @class */\nfunction (_super) {\n  __extends(TextBlock, _super);\n\n  function TextBlock() {\n    //#region Schema\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.wrap = false;\n    _this._treatAsPlainText = true;\n    _this.useMarkdown = true;\n    return _this;\n  }\n\n  TextBlock.prototype.restoreOriginalContent = function () {\n    if (this.renderedElement !== undefined) {\n      if (this.maxLines && this.maxLines > 0) {\n        this.renderedElement.style.maxHeight = this._computedLineHeight * this.maxLines + \"px\";\n      }\n\n      this.renderedElement.innerHTML = this._originalInnerHtml;\n    }\n  };\n\n  TextBlock.prototype.truncateIfSupported = function (maxHeight) {\n    if (this.renderedElement !== undefined) {\n      // For now, only truncate TextBlocks that contain just a single\n      // paragraph -- since the maxLines calculation doesn't take into\n      // account Markdown lists\n      var children = this.renderedElement.children;\n      var isTextOnly = !children.length;\n      var truncationSupported = isTextOnly || children.length == 1 && children[0].tagName.toLowerCase() == 'p';\n\n      if (truncationSupported) {\n        var element = isTextOnly ? this.renderedElement : children[0];\n        Utils.truncate(element, maxHeight, this._computedLineHeight);\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  TextBlock.prototype.setText = function (value) {\n    _super.prototype.setText.call(this, value);\n\n    this._processedText = undefined;\n  };\n\n  TextBlock.prototype.internalRender = function () {\n    var _this = this;\n\n    this._processedText = undefined;\n\n    if (this.text) {\n      var preProcessedText = this.preProcessPropertyValue(BaseTextBlock.textProperty);\n      var hostConfig = this.hostConfig;\n      var element = void 0;\n\n      if (this.forElementId) {\n        var labelElement = document.createElement(\"label\");\n        labelElement.htmlFor = this.forElementId;\n        element = labelElement;\n      } else {\n        element = document.createElement(\"div\");\n      }\n\n      element.classList.add(hostConfig.makeCssClassName(\"ac-textBlock\"));\n      element.style.overflow = \"hidden\";\n      this.applyStylesTo(element);\n\n      if (this.style === \"heading\") {\n        element.setAttribute(\"role\", \"heading\");\n        var headingLevel = this.hostConfig.textBlock.headingLevel;\n\n        if (headingLevel !== undefined && headingLevel > 0) {\n          element.setAttribute(\"aria-level\", headingLevel.toString());\n        }\n      }\n\n      if (this.selectAction && hostConfig.supportsInteractivity) {\n        element.onclick = function (e) {\n          if (_this.selectAction && _this.selectAction.isEnabled) {\n            e.preventDefault();\n            e.cancelBubble = true;\n\n            _this.selectAction.execute();\n          }\n        };\n\n        this.selectAction.setupElementForAccessibility(element);\n\n        if (this.selectAction.isEnabled) {\n          element.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\n        }\n      }\n\n      if (!this._processedText) {\n        this._treatAsPlainText = true;\n        var formattedText = TextFormatters.formatText(this.lang, preProcessedText);\n\n        if (this.useMarkdown && formattedText) {\n          if (shared_1.GlobalSettings.allowMarkForTextHighlighting) {\n            formattedText = formattedText.replace(/<mark>/g, \"===\").replace(/<\\/mark>/g, \"/==/\");\n          }\n\n          var markdownProcessingResult = AdaptiveCard.applyMarkdown(formattedText);\n\n          if (markdownProcessingResult.didProcess && markdownProcessingResult.outputHtml) {\n            this._processedText = markdownProcessingResult.outputHtml;\n            this._treatAsPlainText = false; // Only process <mark> tag if markdown processing was applied because\n            // markdown processing is also responsible for sanitizing the input string\n\n            if (shared_1.GlobalSettings.allowMarkForTextHighlighting && this._processedText) {\n              var markStyle = \"\";\n              var effectiveStyle = this.getEffectiveStyleDefinition();\n\n              if (effectiveStyle.highlightBackgroundColor) {\n                markStyle += \"background-color: \" + effectiveStyle.highlightBackgroundColor + \";\";\n              }\n\n              if (effectiveStyle.highlightForegroundColor) {\n                markStyle += \"color: \" + effectiveStyle.highlightForegroundColor + \";\";\n              }\n\n              if (markStyle) {\n                markStyle = 'style=\"' + markStyle + '\"';\n              }\n\n              this._processedText = this._processedText.replace(/===/g, \"<mark \" + markStyle + \">\").replace(/\\/==\\//g, \"</mark>\");\n            }\n          } else {\n            this._processedText = formattedText;\n            this._treatAsPlainText = true;\n          }\n        } else {\n          this._processedText = formattedText;\n          this._treatAsPlainText = true;\n        }\n      }\n\n      if (!this._processedText) {\n        this._processedText = \"\";\n      }\n\n      if (this._treatAsPlainText) {\n        element.innerText = this._processedText;\n      } else {\n        element.innerHTML = this._processedText;\n      }\n\n      if (element.firstElementChild instanceof HTMLElement) {\n        var firstElementChild = element.firstElementChild;\n        firstElementChild.style.marginTop = \"0px\";\n        firstElementChild.style.width = \"100%\";\n\n        if (!this.wrap) {\n          firstElementChild.style.overflow = \"hidden\";\n          firstElementChild.style.textOverflow = \"ellipsis\";\n        }\n      }\n\n      if (element.lastElementChild instanceof HTMLElement) {\n        element.lastElementChild.style.marginBottom = \"0px\";\n      }\n\n      var anchors = element.getElementsByTagName(\"a\");\n\n      for (var i = 0; i < anchors.length; i++) {\n        var anchor = anchors[i];\n        anchor.classList.add(hostConfig.makeCssClassName(\"ac-anchor\"));\n        anchor.target = \"_blank\";\n\n        anchor.onclick = function (e) {\n          if (raiseAnchorClickedEvent(_this, e.target, e)) {\n            e.preventDefault();\n            e.cancelBubble = true;\n          }\n        };\n\n        anchor.oncontextmenu = function (e) {\n          if (raiseAnchorClickedEvent(_this, e.target, e)) {\n            e.preventDefault();\n            e.cancelBubble = true;\n            return false;\n          }\n\n          return true;\n        };\n      }\n\n      if (this.wrap) {\n        element.style.wordWrap = \"break-word\";\n\n        if (this.maxLines && this.maxLines > 0) {\n          element.style.overflow = \"hidden\";\n\n          if (Utils.isInternetExplorer() || !shared_1.GlobalSettings.useWebkitLineClamp) {\n            element.style.maxHeight = this._computedLineHeight * this.maxLines + \"px\";\n          } else {\n            // While non standard, --webkit-line-clamp works in every browser (except IE)\n            // and is a great solution to support the maxLines feature with ellipsis\n            // truncation. With --webkit-line-clamp there is need to use explicit line heights\n            element.style.removeProperty(\"line-height\");\n            element.style.display = \"-webkit-box\";\n            element.style.webkitBoxOrient = \"vertical\";\n            element.style.webkitLineClamp = this.maxLines.toString();\n          }\n        }\n      } else {\n        element.style.whiteSpace = \"nowrap\";\n        element.style.textOverflow = \"ellipsis\";\n      }\n\n      if (shared_1.GlobalSettings.useAdvancedTextBlockTruncation || shared_1.GlobalSettings.useAdvancedCardBottomTruncation) {\n        this._originalInnerHtml = element.innerHTML;\n      }\n\n      return element;\n    } else {\n      return undefined;\n    }\n  };\n\n  TextBlock.prototype.truncateOverflow = function (maxHeight) {\n    if (maxHeight >= this._computedLineHeight) {\n      return this.truncateIfSupported(maxHeight);\n    }\n\n    return false;\n  };\n\n  TextBlock.prototype.undoOverflowTruncation = function () {\n    this.restoreOriginalContent();\n\n    if (shared_1.GlobalSettings.useAdvancedTextBlockTruncation && this.maxLines) {\n      var maxHeight = this._computedLineHeight * this.maxLines;\n      this.truncateIfSupported(maxHeight);\n    }\n  };\n\n  TextBlock.prototype.applyStylesTo = function (targetElement) {\n    _super.prototype.applyStylesTo.call(this, targetElement);\n\n    switch (this.getEffectiveHorizontalAlignment()) {\n      case Enums.HorizontalAlignment.Center:\n        targetElement.style.textAlign = \"center\";\n        break;\n\n      case Enums.HorizontalAlignment.Right:\n        targetElement.style.textAlign = \"end\";\n        break;\n\n      default:\n        targetElement.style.textAlign = \"start\";\n        break;\n    }\n\n    var lineHeights = this.hostConfig.lineHeights;\n\n    if (lineHeights) {\n      switch (this.effectiveSize) {\n        case Enums.TextSize.Small:\n          this._computedLineHeight = lineHeights.small;\n          break;\n\n        case Enums.TextSize.Medium:\n          this._computedLineHeight = lineHeights.medium;\n          break;\n\n        case Enums.TextSize.Large:\n          this._computedLineHeight = lineHeights.large;\n          break;\n\n        case Enums.TextSize.ExtraLarge:\n          this._computedLineHeight = lineHeights.extraLarge;\n          break;\n\n        default:\n          this._computedLineHeight = lineHeights.default;\n          break;\n      }\n    } else {\n      // Looks like 1.33 is the magic number to compute line-height\n      // from font size.\n      this._computedLineHeight = this.getFontSize(this.hostConfig.getFontTypeDefinition(this.effectiveFontType)) * 1.33;\n    }\n\n    targetElement.style.lineHeight = this._computedLineHeight + \"px\";\n  };\n\n  TextBlock.prototype.getJsonTypeName = function () {\n    return \"TextBlock\";\n  };\n\n  TextBlock.prototype.getEffectiveTextStyleDefinition = function () {\n    if (this.style) {\n      return this.hostConfig.textStyles.getStyleByName(this.style);\n    }\n\n    return _super.prototype.getEffectiveTextStyleDefinition.call(this);\n  };\n\n  TextBlock.prototype.updateLayout = function (processChildren) {\n    if (processChildren === void 0) {\n      processChildren = false;\n    }\n\n    _super.prototype.updateLayout.call(this, processChildren);\n\n    if (shared_1.GlobalSettings.useAdvancedTextBlockTruncation && this.maxLines && this.isDisplayed()) {\n      // Reset the element's innerHTML in case the available room for\n      // content has increased\n      this.restoreOriginalContent();\n      this.truncateIfSupported(this._computedLineHeight * this.maxLines);\n    }\n  };\n\n  TextBlock.wrapProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_0, \"wrap\", false);\n  TextBlock.maxLinesProperty = new serialization_1.NumProperty(serialization_1.Versions.v1_0, \"maxLines\");\n  TextBlock.styleProperty = new serialization_1.ValueSetProperty(serialization_1.Versions.v1_5, \"style\", [{\n    value: \"default\"\n  }, {\n    value: \"columnHeader\"\n  }, {\n    value: \"heading\"\n  }]);\n\n  __decorate([serialization_1.property(TextBlock.wrapProperty)], TextBlock.prototype, \"wrap\", void 0);\n\n  __decorate([serialization_1.property(TextBlock.maxLinesProperty)], TextBlock.prototype, \"maxLines\", void 0);\n\n  __decorate([serialization_1.property(TextBlock.styleProperty)], TextBlock.prototype, \"style\", void 0);\n\n  return TextBlock;\n}(BaseTextBlock);\n\nexports.TextBlock = TextBlock;\n\nvar TextRun =\n/** @class */\nfunction (_super) {\n  __extends(TextRun, _super);\n\n  function TextRun() {\n    //#region Schema\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.italic = false;\n    _this.strikethrough = false;\n    _this.highlight = false;\n    _this.underline = false;\n    return _this;\n  }\n\n  TextRun.prototype.populateSchema = function (schema) {\n    _super.prototype.populateSchema.call(this, schema);\n\n    schema.add(BaseTextBlock.selectActionProperty);\n  }; //#endregion\n\n\n  TextRun.prototype.internalRender = function () {\n    var _this = this;\n\n    if (this.text) {\n      var preProcessedText = this.preProcessPropertyValue(BaseTextBlock.textProperty);\n      var hostConfig = this.hostConfig;\n      var formattedText = TextFormatters.formatText(this.lang, preProcessedText);\n\n      if (!formattedText) {\n        formattedText = \"\";\n      }\n\n      var element = document.createElement(\"span\");\n      element.classList.add(hostConfig.makeCssClassName(\"ac-textRun\"));\n      this.applyStylesTo(element);\n\n      if (this.selectAction && hostConfig.supportsInteractivity) {\n        var anchor = document.createElement(\"a\");\n        anchor.classList.add(hostConfig.makeCssClassName(\"ac-anchor\"));\n        var href = this.selectAction.getHref();\n        anchor.href = href ? href : \"\";\n        anchor.target = \"_blank\";\n\n        anchor.onclick = function (e) {\n          if (_this.selectAction && _this.selectAction.isEnabled) {\n            e.preventDefault();\n            e.cancelBubble = true;\n\n            _this.selectAction.execute();\n          }\n        };\n\n        this.selectAction.setupElementForAccessibility(anchor);\n        anchor.innerText = formattedText;\n        element.appendChild(anchor);\n      } else {\n        element.innerText = formattedText;\n      }\n\n      return element;\n    } else {\n      return undefined;\n    }\n  };\n\n  TextRun.prototype.applyStylesTo = function (targetElement) {\n    _super.prototype.applyStylesTo.call(this, targetElement);\n\n    if (this.italic) {\n      targetElement.style.fontStyle = \"italic\";\n    }\n\n    if (this.strikethrough) {\n      targetElement.style.textDecoration = \"line-through\";\n    }\n\n    if (this.highlight) {\n      var colorDefinition = this.getColorDefinition(this.getEffectiveStyleDefinition().foregroundColors, this.effectiveColor);\n      targetElement.style.backgroundColor = Utils.stringToCssColor(this.effectiveIsSubtle ? colorDefinition.highlightColors.subtle : colorDefinition.highlightColors.default);\n    }\n\n    if (this.underline) {\n      targetElement.style.textDecoration = \"underline\";\n    }\n  };\n\n  TextRun.prototype.getJsonTypeName = function () {\n    return \"TextRun\";\n  };\n\n  Object.defineProperty(TextRun.prototype, \"isStandalone\", {\n    get: function () {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TextRun.prototype, \"isInline\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  TextRun.italicProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_2, \"italic\", false);\n  TextRun.strikethroughProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_2, \"strikethrough\", false);\n  TextRun.highlightProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_2, \"highlight\", false);\n  TextRun.underlineProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_3, \"underline\", false);\n\n  __decorate([serialization_1.property(TextRun.italicProperty)], TextRun.prototype, \"italic\", void 0);\n\n  __decorate([serialization_1.property(TextRun.strikethroughProperty)], TextRun.prototype, \"strikethrough\", void 0);\n\n  __decorate([serialization_1.property(TextRun.highlightProperty)], TextRun.prototype, \"highlight\", void 0);\n\n  __decorate([serialization_1.property(TextRun.underlineProperty)], TextRun.prototype, \"underline\", void 0);\n\n  return TextRun;\n}(BaseTextBlock);\n\nexports.TextRun = TextRun;\n\nvar RichTextBlock =\n/** @class */\nfunction (_super) {\n  __extends(RichTextBlock, _super);\n\n  function RichTextBlock() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._inlines = [];\n    return _this;\n  }\n\n  RichTextBlock.prototype.internalAddInline = function (inline, forceAdd) {\n    if (forceAdd === void 0) {\n      forceAdd = false;\n    }\n\n    if (!inline.isInline) {\n      throw new Error(strings_1.Strings.errors.elementCannotBeUsedAsInline());\n    }\n\n    var doAdd = inline.parent === undefined || forceAdd;\n\n    if (!doAdd && inline.parent != this) {\n      throw new Error(strings_1.Strings.errors.inlineAlreadyParented());\n    } else {\n      inline.setParent(this);\n\n      this._inlines.push(inline);\n    }\n  };\n\n  RichTextBlock.prototype.internalParse = function (source, context) {\n    _super.prototype.internalParse.call(this, source, context);\n\n    this._inlines = [];\n\n    if (Array.isArray(source[\"inlines\"])) {\n      for (var _i = 0, _a = source[\"inlines\"]; _i < _a.length; _i++) {\n        var jsonInline = _a[_i];\n        var inline = void 0;\n\n        if (typeof jsonInline === \"string\") {\n          var textRun = new TextRun();\n          textRun.text = jsonInline;\n          inline = textRun;\n        } else {\n          // No fallback for inlines in 1.2\n          inline = context.parseElement(this, jsonInline, false);\n        }\n\n        if (inline) {\n          this.internalAddInline(inline, true);\n        }\n      }\n    }\n  };\n\n  RichTextBlock.prototype.internalToJSON = function (target, context) {\n    _super.prototype.internalToJSON.call(this, target, context);\n\n    if (this._inlines.length > 0) {\n      var jsonInlines = [];\n\n      for (var _i = 0, _a = this._inlines; _i < _a.length; _i++) {\n        var inline = _a[_i];\n        jsonInlines.push(inline.toJSON(context));\n      }\n\n      context.serializeValue(target, \"inlines\", jsonInlines);\n    }\n  };\n\n  RichTextBlock.prototype.internalRender = function () {\n    if (this._inlines.length > 0) {\n      var element = void 0;\n\n      if (this.forElementId) {\n        var labelElement = document.createElement(\"label\");\n        labelElement.htmlFor = this.forElementId;\n        element = labelElement;\n      } else {\n        element = document.createElement(\"div\");\n      }\n\n      element.className = this.hostConfig.makeCssClassName(\"ac-richTextBlock\");\n\n      switch (this.getEffectiveHorizontalAlignment()) {\n        case Enums.HorizontalAlignment.Center:\n          element.style.textAlign = \"center\";\n          break;\n\n        case Enums.HorizontalAlignment.Right:\n          element.style.textAlign = \"end\";\n          break;\n\n        default:\n          element.style.textAlign = \"start\";\n          break;\n      }\n\n      var renderedInlines = 0;\n\n      for (var _i = 0, _a = this._inlines; _i < _a.length; _i++) {\n        var inline = _a[_i];\n        var renderedInline = inline.render();\n\n        if (renderedInline) {\n          element.appendChild(renderedInline);\n          renderedInlines++;\n        }\n      }\n\n      if (renderedInlines > 0) {\n        return element;\n      }\n    }\n\n    return undefined;\n  };\n\n  RichTextBlock.prototype.asString = function () {\n    var result = \"\";\n\n    for (var _i = 0, _a = this._inlines; _i < _a.length; _i++) {\n      var inline = _a[_i];\n      result += inline.asString();\n    }\n\n    return result;\n  };\n\n  RichTextBlock.prototype.getJsonTypeName = function () {\n    return \"RichTextBlock\";\n  };\n\n  RichTextBlock.prototype.getInlineCount = function () {\n    return this._inlines.length;\n  };\n\n  RichTextBlock.prototype.getInlineAt = function (index) {\n    if (index >= 0 && index < this._inlines.length) {\n      return this._inlines[index];\n    } else {\n      throw new Error(strings_1.Strings.errors.indexOutOfRange(index));\n    }\n  };\n\n  RichTextBlock.prototype.addInline = function (inline) {\n    if (typeof inline === \"string\") {\n      this.internalAddInline(new TextRun(inline));\n    } else {\n      this.internalAddInline(inline);\n    }\n  };\n\n  RichTextBlock.prototype.removeInline = function (inline) {\n    var index = this._inlines.indexOf(inline);\n\n    if (index >= 0) {\n      this._inlines[index].setParent(undefined);\n\n      this._inlines.splice(index, 1);\n\n      return true;\n    }\n\n    return false;\n  };\n\n  return RichTextBlock;\n}(CardElement);\n\nexports.RichTextBlock = RichTextBlock;\n\nvar Fact =\n/** @class */\nfunction (_super) {\n  __extends(Fact, _super);\n\n  function Fact(name, value) {\n    var _this = _super.call(this) || this;\n\n    _this.name = name;\n    _this.value = value;\n    return _this;\n  } //#endregion\n\n\n  Fact.prototype.getSchemaKey = function () {\n    return \"Fact\";\n  }; //#region Schema\n\n\n  Fact.titleProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"title\");\n  Fact.valueProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"value\");\n\n  __decorate([serialization_1.property(Fact.titleProperty)], Fact.prototype, \"name\", void 0);\n\n  __decorate([serialization_1.property(Fact.valueProperty)], Fact.prototype, \"value\", void 0);\n\n  return Fact;\n}(serialization_1.SerializableObject);\n\nexports.Fact = Fact;\n\nvar FactSet =\n/** @class */\nfunction (_super) {\n  __extends(FactSet, _super);\n\n  function FactSet() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(FactSet.prototype, \"useDefaultSizing\", {\n    //#endregion\n    get: function () {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  FactSet.prototype.internalRender = function () {\n    var element = undefined;\n    var hostConfig = this.hostConfig;\n\n    if (this.facts.length > 0) {\n      element = document.createElement(\"table\");\n      element.style.borderWidth = \"0px\";\n      element.style.borderSpacing = \"0px\";\n      element.style.borderStyle = \"none\";\n      element.style.borderCollapse = \"collapse\";\n      element.style.display = \"block\";\n      element.style.overflow = \"hidden\";\n      element.classList.add(hostConfig.makeCssClassName(\"ac-factset\"));\n      element.setAttribute(\"role\", \"presentation\");\n\n      for (var i = 0; i < this.facts.length; i++) {\n        var trElement = document.createElement(\"tr\");\n\n        if (i > 0) {\n          trElement.style.marginTop = hostConfig.factSet.spacing + \"px\";\n        } // Title column\n\n\n        var tdElement = document.createElement(\"td\");\n        tdElement.style.padding = \"0\";\n        tdElement.classList.add(hostConfig.makeCssClassName(\"ac-fact-title\"));\n\n        if (hostConfig.factSet.title.maxWidth) {\n          tdElement.style.maxWidth = hostConfig.factSet.title.maxWidth + \"px\";\n        }\n\n        tdElement.style.verticalAlign = \"top\";\n        var textBlock = new TextBlock();\n        textBlock.setParent(this);\n        textBlock.text = !this.facts[i].name && this.isDesignMode() ? \"Title\" : this.facts[i].name;\n        textBlock.size = hostConfig.factSet.title.size;\n        textBlock.color = hostConfig.factSet.title.color;\n        textBlock.isSubtle = hostConfig.factSet.title.isSubtle;\n        textBlock.weight = hostConfig.factSet.title.weight;\n        textBlock.wrap = hostConfig.factSet.title.wrap;\n        textBlock.spacing = Enums.Spacing.None;\n        Utils.appendChild(tdElement, textBlock.render());\n        Utils.appendChild(trElement, tdElement); // Spacer column\n\n        tdElement = document.createElement(\"td\");\n        tdElement.style.width = \"10px\";\n        Utils.appendChild(trElement, tdElement); // Value column\n\n        tdElement = document.createElement(\"td\");\n        tdElement.style.padding = \"0\";\n        tdElement.style.verticalAlign = \"top\";\n        tdElement.classList.add(hostConfig.makeCssClassName(\"ac-fact-value\"));\n        textBlock = new TextBlock();\n        textBlock.setParent(this);\n        textBlock.text = this.facts[i].value;\n        textBlock.size = hostConfig.factSet.value.size;\n        textBlock.color = hostConfig.factSet.value.color;\n        textBlock.isSubtle = hostConfig.factSet.value.isSubtle;\n        textBlock.weight = hostConfig.factSet.value.weight;\n        textBlock.wrap = hostConfig.factSet.value.wrap;\n        textBlock.spacing = Enums.Spacing.None;\n        Utils.appendChild(tdElement, textBlock.render());\n        Utils.appendChild(trElement, tdElement);\n        Utils.appendChild(element, trElement);\n      }\n    }\n\n    return element;\n  };\n\n  FactSet.prototype.getJsonTypeName = function () {\n    return \"FactSet\";\n  }; //#region Schema\n\n\n  FactSet.factsProperty = new serialization_1.SerializableObjectCollectionProperty(serialization_1.Versions.v1_0, \"facts\", Fact);\n\n  __decorate([serialization_1.property(FactSet.factsProperty)], FactSet.prototype, \"facts\", void 0);\n\n  return FactSet;\n}(CardElement);\n\nexports.FactSet = FactSet;\n\nvar ImageDimensionProperty =\n/** @class */\nfunction (_super) {\n  __extends(ImageDimensionProperty, _super);\n\n  function ImageDimensionProperty(targetVersion, name, internalName, fallbackProperty) {\n    var _this = _super.call(this, targetVersion, name) || this;\n\n    _this.targetVersion = targetVersion;\n    _this.name = name;\n    _this.internalName = internalName;\n    _this.fallbackProperty = fallbackProperty;\n    return _this;\n  }\n\n  ImageDimensionProperty.prototype.getInternalName = function () {\n    return this.internalName;\n  };\n\n  ImageDimensionProperty.prototype.parse = function (sender, source, context) {\n    var result = undefined;\n    var sourceValue = source[this.name];\n\n    if (sourceValue === undefined) {\n      return this.defaultValue;\n    }\n\n    var isValid = false;\n\n    if (typeof sourceValue === \"string\") {\n      try {\n        var size = shared_1.SizeAndUnit.parse(sourceValue, true);\n\n        if (size.unit == Enums.SizeUnit.Pixel) {\n          result = size.physicalSize;\n          isValid = true;\n        }\n      } catch (_a) {// Swallow the exception\n      } // If the source value isn't valid per this property definition,\n      // check its validity per the fallback property, if specified\n\n\n      if (!isValid && this.fallbackProperty) {\n        isValid = this.fallbackProperty.isValidValue(sourceValue, context);\n      }\n    }\n\n    if (!isValid) {\n      context.logParseEvent(sender, Enums.ValidationEvent.InvalidPropertyValue, strings_1.Strings.errors.invalidPropertyValue(sourceValue, this.name));\n    }\n\n    return result;\n  };\n\n  ImageDimensionProperty.prototype.toJSON = function (sender, target, value, context) {\n    context.serializeValue(target, this.name, typeof value === \"number\" && !isNaN(value) ? value + \"px\" : undefined);\n  };\n\n  return ImageDimensionProperty;\n}(serialization_1.PropertyDefinition);\n\nvar Image =\n/** @class */\nfunction (_super) {\n  __extends(Image, _super);\n\n  function Image() {\n    //#region Schema\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.size = Enums.Size.Auto;\n    _this.style = Enums.ImageStyle.Default;\n    return _this;\n  }\n\n  Image.prototype.populateSchema = function (schema) {\n    _super.prototype.populateSchema.call(this, schema);\n\n    schema.remove(CardElement.heightProperty);\n  }; //#endregion\n\n\n  Image.prototype.applySize = function (element) {\n    if (this.pixelWidth || this.pixelHeight) {\n      if (this.pixelWidth) {\n        element.style.width = this.pixelWidth + \"px\";\n      }\n\n      if (this.pixelHeight) {\n        element.style.height = this.pixelHeight + \"px\";\n      }\n    } else {\n      if (this.maxHeight) {\n        // If the image is constrained in height, we set its height property and\n        // auto and stretch are ignored (default to medium). THis is necessary for\n        // ImageSet which uses a maximum image height as opposed to the cards width\n        // as a constraining dimension\n        switch (this.size) {\n          case Enums.Size.Small:\n            element.style.height = this.hostConfig.imageSizes.small + \"px\";\n            break;\n\n          case Enums.Size.Large:\n            element.style.height = this.hostConfig.imageSizes.large + \"px\";\n            break;\n\n          default:\n            element.style.height = this.hostConfig.imageSizes.medium + \"px\";\n            break;\n        }\n\n        element.style.maxHeight = this.maxHeight + \"px\";\n      } else {\n        switch (this.size) {\n          case Enums.Size.Stretch:\n            element.style.width = \"100%\";\n            break;\n\n          case Enums.Size.Auto:\n            element.style.maxWidth = \"100%\";\n            break;\n\n          case Enums.Size.Small:\n            element.style.width = this.hostConfig.imageSizes.small + \"px\";\n            break;\n\n          case Enums.Size.Large:\n            element.style.width = this.hostConfig.imageSizes.large + \"px\";\n            break;\n\n          case Enums.Size.Medium:\n            element.style.width = this.hostConfig.imageSizes.medium + \"px\";\n            break;\n        }\n\n        element.style.maxHeight = \"100%\";\n      }\n    }\n  };\n\n  Object.defineProperty(Image.prototype, \"useDefaultSizing\", {\n    get: function () {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Image.prototype.internalRender = function () {\n    var _this = this;\n\n    var element = undefined;\n\n    if (this.url) {\n      element = document.createElement(\"div\");\n      element.style.display = \"flex\";\n      element.style.alignItems = \"flex-start\"; // Cache hostConfig to avoid walking the parent hierarchy multiple times\n\n      var hostConfig = this.hostConfig;\n\n      switch (this.getEffectiveHorizontalAlignment()) {\n        case Enums.HorizontalAlignment.Center:\n          element.style.justifyContent = \"center\";\n          break;\n\n        case Enums.HorizontalAlignment.Right:\n          element.style.justifyContent = \"flex-end\";\n          break;\n\n        default:\n          element.style.justifyContent = \"flex-start\";\n          break;\n      }\n\n      var imageElement = document.createElement(\"img\");\n\n      imageElement.onload = function (e) {\n        raiseImageLoadedEvent(_this);\n      };\n\n      imageElement.onerror = function (e) {\n        if (_this.renderedElement) {\n          var card = _this.getRootElement();\n\n          _this.renderedElement.innerHTML = \"\";\n\n          if (card && card.designMode) {\n            var errorElement = document.createElement(\"div\");\n            errorElement.style.display = \"flex\";\n            errorElement.style.alignItems = \"center\";\n            errorElement.style.justifyContent = \"center\";\n            errorElement.style.backgroundColor = \"#EEEEEE\";\n            errorElement.style.color = \"black\";\n            errorElement.innerText = \":-(\";\n            errorElement.style.padding = \"10px\";\n\n            _this.applySize(errorElement);\n\n            _this.renderedElement.appendChild(errorElement);\n          }\n        }\n\n        raiseImageLoadedEvent(_this);\n      };\n\n      imageElement.style.minWidth = \"0\";\n      imageElement.classList.add(hostConfig.makeCssClassName(\"ac-image\"));\n\n      if (this.selectAction && hostConfig.supportsInteractivity) {\n        imageElement.onkeypress = function (e) {\n          if (_this.selectAction && _this.selectAction.isEnabled && (e.code == \"Enter\" || e.code == \"Space\")) {\n            // enter or space pressed\n            e.preventDefault();\n            e.cancelBubble = true;\n\n            _this.selectAction.execute();\n          }\n        };\n\n        imageElement.onclick = function (e) {\n          if (_this.selectAction && _this.selectAction.isEnabled) {\n            e.preventDefault();\n            e.cancelBubble = true;\n\n            _this.selectAction.execute();\n          }\n        };\n\n        this.selectAction.setupElementForAccessibility(imageElement);\n\n        if (this.selectAction.isEnabled) {\n          imageElement.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\n        }\n      }\n\n      this.applySize(imageElement);\n\n      if (this.style === Enums.ImageStyle.Person) {\n        imageElement.style.borderRadius = \"50%\";\n        imageElement.style.backgroundPosition = \"50% 50%\";\n        imageElement.style.backgroundRepeat = \"no-repeat\";\n      }\n\n      imageElement.style.backgroundColor = Utils.stringToCssColor(this.backgroundColor);\n      imageElement.src = this.preProcessPropertyValue(Image.urlProperty);\n      var altTextProperty = this.preProcessPropertyValue(Image.altTextProperty);\n\n      if (altTextProperty) {\n        imageElement.alt = altTextProperty;\n      }\n\n      element.appendChild(imageElement);\n    }\n\n    return element;\n  };\n\n  Image.prototype.getJsonTypeName = function () {\n    return \"Image\";\n  };\n\n  Image.prototype.getActionById = function (id) {\n    var result = _super.prototype.getActionById.call(this, id);\n\n    if (!result && this.selectAction) {\n      result = this.selectAction.getActionById(id);\n    }\n\n    return result;\n  };\n\n  Image.prototype.getResourceInformation = function () {\n    return this.url ? [{\n      url: this.url,\n      mimeType: \"image\"\n    }] : [];\n  };\n\n  Image.urlProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"url\");\n  Image.altTextProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"altText\");\n  Image.backgroundColorProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_1, \"backgroundColor\");\n  Image.styleProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_0, \"style\", Enums.ImageStyle, Enums.ImageStyle.Default);\n  Image.sizeProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_0, \"size\", Enums.Size, Enums.Size.Auto);\n  Image.pixelWidthProperty = new ImageDimensionProperty(serialization_1.Versions.v1_1, \"width\", \"pixelWidth\");\n  Image.pixelHeightProperty = new ImageDimensionProperty(serialization_1.Versions.v1_1, \"height\", \"pixelHeight\", CardElement.heightProperty);\n  Image.selectActionProperty = new ActionProperty(serialization_1.Versions.v1_1, \"selectAction\", [\"Action.ShowCard\"]);\n\n  __decorate([serialization_1.property(Image.urlProperty)], Image.prototype, \"url\", void 0);\n\n  __decorate([serialization_1.property(Image.altTextProperty)], Image.prototype, \"altText\", void 0);\n\n  __decorate([serialization_1.property(Image.backgroundColorProperty)], Image.prototype, \"backgroundColor\", void 0);\n\n  __decorate([serialization_1.property(Image.sizeProperty)], Image.prototype, \"size\", void 0);\n\n  __decorate([serialization_1.property(Image.styleProperty)], Image.prototype, \"style\", void 0);\n\n  __decorate([serialization_1.property(Image.pixelWidthProperty)], Image.prototype, \"pixelWidth\", void 0);\n\n  __decorate([serialization_1.property(Image.pixelHeightProperty)], Image.prototype, \"pixelHeight\", void 0);\n\n  __decorate([serialization_1.property(Image.selectActionProperty)], Image.prototype, \"selectAction\", void 0);\n\n  return Image;\n}(CardElement);\n\nexports.Image = Image;\n\nvar CardElementContainer =\n/** @class */\nfunction (_super) {\n  __extends(CardElementContainer, _super);\n\n  function CardElementContainer() {\n    //#region Schema\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.allowVerticalOverflow = false;\n    return _this;\n  }\n\n  CardElementContainer.prototype.populateSchema = function (schema) {\n    _super.prototype.populateSchema.call(this, schema);\n\n    if (!this.isSelectable) {\n      schema.remove(CardElementContainer.selectActionProperty);\n    }\n  }; //#endregion\n\n\n  CardElementContainer.prototype.isElementAllowed = function (element) {\n    return this.hostConfig.supportsInteractivity || !element.isInteractive;\n  };\n\n  CardElementContainer.prototype.applyPadding = function () {\n    _super.prototype.applyPadding.call(this);\n\n    if (!this.renderedElement) {\n      return;\n    }\n\n    var physicalPadding = new shared_1.SpacingDefinition();\n\n    if (this.getEffectivePadding()) {\n      physicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(this.getEffectivePadding());\n    }\n\n    this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\n    this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\n    this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\n    this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\n    this.renderedElement.style.marginRight = \"0\";\n    this.renderedElement.style.marginLeft = \"0\";\n  };\n\n  Object.defineProperty(CardElementContainer.prototype, \"isSelectable\", {\n    get: function () {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  CardElementContainer.prototype.internalValidateProperties = function (context) {\n    _super.prototype.internalValidateProperties.call(this, context);\n\n    for (var i = 0; i < this.getItemCount(); i++) {\n      var item = this.getItemAt(i);\n\n      if (!this.hostConfig.supportsInteractivity && item.isInteractive) {\n        context.addFailure(this, Enums.ValidationEvent.InteractivityNotAllowed, strings_1.Strings.errors.interactivityNotAllowed());\n      }\n\n      if (!this.isElementAllowed(item)) {\n        context.addFailure(this, Enums.ValidationEvent.InteractivityNotAllowed, strings_1.Strings.errors.elementTypeNotAllowed(item.getJsonTypeName()));\n      }\n\n      item.internalValidateProperties(context);\n    }\n\n    if (this._selectAction) {\n      this._selectAction.internalValidateProperties(context);\n    }\n  };\n\n  CardElementContainer.prototype.render = function () {\n    var _this = this;\n\n    var element = _super.prototype.render.call(this);\n\n    if (element) {\n      var hostConfig = this.hostConfig;\n\n      if (this.allowVerticalOverflow) {\n        element.style.overflowX = \"hidden\";\n        element.style.overflowY = \"auto\";\n      }\n\n      if (element && this.isSelectable && this._selectAction && hostConfig.supportsInteractivity) {\n        element.onclick = function (e) {\n          if (_this._selectAction && _this._selectAction.isEnabled) {\n            e.preventDefault();\n            e.cancelBubble = true;\n\n            _this._selectAction.execute();\n          }\n        };\n\n        element.onkeypress = function (e) {\n          if (_this._selectAction && _this._selectAction.isEnabled && (e.code == \"Enter\" || e.code == \"Space\")) {\n            // Enter or space pressed\n            e.preventDefault();\n            e.cancelBubble = true;\n\n            _this._selectAction.execute();\n          }\n        };\n\n        this._selectAction.setupElementForAccessibility(element);\n\n        if (this._selectAction.isEnabled) {\n          element.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\n        }\n      }\n    }\n\n    return element;\n  };\n\n  CardElementContainer.prototype.updateLayout = function (processChildren) {\n    if (processChildren === void 0) {\n      processChildren = true;\n    }\n\n    _super.prototype.updateLayout.call(this, processChildren);\n\n    if (processChildren) {\n      for (var i = 0; i < this.getItemCount(); i++) {\n        this.getItemAt(i).updateLayout();\n      }\n    }\n  };\n\n  CardElementContainer.prototype.getAllInputs = function (processActions) {\n    if (processActions === void 0) {\n      processActions = true;\n    }\n\n    var result = [];\n\n    for (var i = 0; i < this.getItemCount(); i++) {\n      result = result.concat(this.getItemAt(i).getAllInputs(processActions));\n    }\n\n    return result;\n  };\n\n  CardElementContainer.prototype.getResourceInformation = function () {\n    var result = [];\n\n    for (var i = 0; i < this.getItemCount(); i++) {\n      result = result.concat(this.getItemAt(i).getResourceInformation());\n    }\n\n    return result;\n  };\n\n  CardElementContainer.prototype.getElementById = function (id) {\n    var result = _super.prototype.getElementById.call(this, id);\n\n    if (!result) {\n      for (var i = 0; i < this.getItemCount(); i++) {\n        result = this.getItemAt(i).getElementById(id);\n\n        if (result) {\n          break;\n        }\n      }\n    }\n\n    return result;\n  };\n  /**\n   * @inheritdoc\n   */\n\n\n  CardElementContainer.prototype.findDOMNodeOwner = function (node) {\n    var target = undefined;\n\n    for (var i = 0; i < this.getItemCount(); i++) {\n      // recur through child elements\n      target = this.getItemAt(i).findDOMNodeOwner(node);\n\n      if (target) {\n        return target;\n      }\n    } // if not found in children, defer to parent implementation\n\n\n    return _super.prototype.findDOMNodeOwner.call(this, node);\n  };\n\n  CardElementContainer.selectActionProperty = new ActionProperty(serialization_1.Versions.v1_1, \"selectAction\", [\"Action.ShowCard\"]);\n\n  __decorate([serialization_1.property(CardElementContainer.selectActionProperty)], CardElementContainer.prototype, \"_selectAction\", void 0);\n\n  return CardElementContainer;\n}(CardElement);\n\nexports.CardElementContainer = CardElementContainer;\n\nvar ImageSet =\n/** @class */\nfunction (_super) {\n  __extends(ImageSet, _super);\n\n  function ImageSet() {\n    //#region Schema\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._images = [];\n    _this.imageSize = Enums.ImageSize.Medium;\n    return _this;\n  } //#endregion\n\n\n  ImageSet.prototype.internalRender = function () {\n    var element = undefined;\n\n    if (this._images.length > 0) {\n      element = document.createElement(\"div\");\n      element.style.display = \"flex\";\n      element.style.flexWrap = \"wrap\";\n\n      for (var _i = 0, _a = this._images; _i < _a.length; _i++) {\n        var image = _a[_i];\n\n        switch (this.imageSize) {\n          case Enums.ImageSize.Small:\n            image.size = Enums.Size.Small;\n            break;\n\n          case Enums.ImageSize.Large:\n            image.size = Enums.Size.Large;\n            break;\n\n          default:\n            image.size = Enums.Size.Medium;\n            break;\n        }\n\n        image.maxHeight = this.hostConfig.imageSet.maxImageHeight;\n        var renderedImage = image.render();\n\n        if (renderedImage) {\n          renderedImage.style.display = \"inline-flex\";\n          renderedImage.style.margin = \"0px\";\n          renderedImage.style.marginRight = \"10px\";\n          Utils.appendChild(element, renderedImage);\n        }\n      }\n    }\n\n    return element;\n  };\n\n  ImageSet.prototype.getItemCount = function () {\n    return this._images.length;\n  };\n\n  ImageSet.prototype.getItemAt = function (index) {\n    return this._images[index];\n  };\n\n  ImageSet.prototype.getFirstVisibleRenderedItem = function () {\n    return this._images && this._images.length > 0 ? this._images[0] : undefined;\n  };\n\n  ImageSet.prototype.getLastVisibleRenderedItem = function () {\n    return this._images && this._images.length > 0 ? this._images[this._images.length - 1] : undefined;\n  };\n\n  ImageSet.prototype.removeItem = function (item) {\n    if (item instanceof Image) {\n      var itemIndex = this._images.indexOf(item);\n\n      if (itemIndex >= 0) {\n        this._images.splice(itemIndex, 1);\n\n        item.setParent(undefined);\n        this.updateLayout();\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  ImageSet.prototype.getJsonTypeName = function () {\n    return \"ImageSet\";\n  };\n\n  ImageSet.prototype.addImage = function (image) {\n    if (!image.parent) {\n      this._images.push(image);\n\n      image.setParent(this);\n    } else {\n      throw new Error(\"This image already belongs to another ImageSet\");\n    }\n  };\n\n  ImageSet.prototype.indexOf = function (cardElement) {\n    return cardElement instanceof Image ? this._images.indexOf(cardElement) : -1;\n  };\n\n  ImageSet.imagesProperty = new serialization_1.SerializableObjectCollectionProperty(serialization_1.Versions.v1_0, \"images\", Image, function (sender, item) {\n    item.setParent(sender);\n  });\n  ImageSet.imageSizeProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_0, \"imageSize\", Enums.ImageSize, Enums.ImageSize.Medium);\n\n  __decorate([serialization_1.property(ImageSet.imagesProperty)], ImageSet.prototype, \"_images\", void 0);\n\n  __decorate([serialization_1.property(ImageSet.imageSizeProperty)], ImageSet.prototype, \"imageSize\", void 0);\n\n  return ImageSet;\n}(CardElementContainer);\n\nexports.ImageSet = ImageSet;\n\nvar MediaSource =\n/** @class */\nfunction (_super) {\n  __extends(MediaSource, _super);\n\n  function MediaSource(url, mimeType) {\n    var _this = _super.call(this) || this;\n\n    _this.url = url;\n    _this.mimeType = mimeType;\n    return _this;\n  } //#endregion\n\n\n  MediaSource.prototype.getSchemaKey = function () {\n    return \"MediaSource\";\n  };\n\n  MediaSource.prototype.isValid = function () {\n    return this.mimeType && this.url ? true : false;\n  };\n\n  MediaSource.prototype.render = function () {\n    var result = undefined;\n\n    if (this.isValid()) {\n      result = document.createElement(\"source\");\n      result.src = this.url;\n      result.type = this.mimeType;\n    }\n\n    return result;\n  }; //#region Schema\n\n\n  MediaSource.mimeTypeProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_1, \"mimeType\");\n  MediaSource.urlProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_1, \"url\");\n\n  __decorate([serialization_1.property(MediaSource.mimeTypeProperty)], MediaSource.prototype, \"mimeType\", void 0);\n\n  __decorate([serialization_1.property(MediaSource.urlProperty)], MediaSource.prototype, \"url\", void 0);\n\n  return MediaSource;\n}(serialization_1.SerializableObject);\n\nexports.MediaSource = MediaSource;\n\nvar Media =\n/** @class */\nfunction (_super) {\n  __extends(Media, _super);\n\n  function Media() {\n    //#region Schema\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.sources = [];\n    return _this;\n  }\n\n  Media.prototype.getPosterUrl = function () {\n    return this.poster ? this.poster : this.hostConfig.media.defaultPoster;\n  };\n\n  Media.prototype.processSources = function () {\n    this._selectedSources = [];\n    this._selectedMediaType = undefined;\n\n    for (var _i = 0, _a = this.sources; _i < _a.length; _i++) {\n      var source = _a[_i];\n      var mimeComponents = source.mimeType ? source.mimeType.split('/') : [];\n\n      if (mimeComponents.length == 2) {\n        if (!this._selectedMediaType) {\n          var index = Media.supportedMediaTypes.indexOf(mimeComponents[0]);\n\n          if (index >= 0) {\n            this._selectedMediaType = Media.supportedMediaTypes[index];\n          }\n        }\n\n        if (mimeComponents[0] == this._selectedMediaType) {\n          this._selectedSources.push(source);\n        }\n      }\n    }\n  };\n\n  Media.prototype.handlePlayButtonInvoke = function (event) {\n    if (this.hostConfig.media.allowInlinePlayback) {\n      event.preventDefault();\n      event.cancelBubble = true;\n\n      if (this.renderedElement) {\n        var mediaPlayerElement = this.renderMediaPlayer();\n        this.renderedElement.innerHTML = \"\";\n        this.renderedElement.appendChild(mediaPlayerElement);\n        mediaPlayerElement.play();\n        mediaPlayerElement.focus();\n      }\n    } else {\n      if (Media.onPlay) {\n        event.preventDefault();\n        event.cancelBubble = true;\n        Media.onPlay(this);\n      }\n    }\n  };\n\n  Media.prototype.renderPoster = function () {\n    var _this = this;\n\n    var playButtonArrowWidth = 12;\n    var playButtonArrowHeight = 15;\n    var posterRootElement = document.createElement(\"div\");\n    posterRootElement.className = this.hostConfig.makeCssClassName(\"ac-media-poster\");\n    posterRootElement.setAttribute(\"role\", \"contentinfo\");\n    posterRootElement.setAttribute(\"aria-label\", this.altText ? this.altText : strings_1.Strings.defaults.mediaPlayerAriaLabel());\n    posterRootElement.style.position = \"relative\";\n    posterRootElement.style.display = \"flex\";\n    var posterUrl = this.getPosterUrl();\n\n    if (posterUrl) {\n      var posterImageElement_1 = document.createElement(\"img\");\n      posterImageElement_1.style.width = \"100%\";\n      posterImageElement_1.style.height = \"100%\";\n      posterImageElement_1.setAttribute(\"role\", \"presentation\");\n\n      posterImageElement_1.onerror = function (e) {\n        if (posterImageElement_1.parentNode) {\n          posterImageElement_1.parentNode.removeChild(posterImageElement_1);\n        }\n\n        posterRootElement.classList.add(\"empty\");\n        posterRootElement.style.minHeight = \"150px\";\n      };\n\n      posterImageElement_1.src = posterUrl;\n      posterRootElement.appendChild(posterImageElement_1);\n    } else {\n      posterRootElement.classList.add(\"empty\");\n      posterRootElement.style.minHeight = \"150px\";\n    }\n\n    if (this.hostConfig.supportsInteractivity && this._selectedSources.length > 0) {\n      var playButtonOuterElement = document.createElement(\"div\");\n      playButtonOuterElement.tabIndex = 0;\n      playButtonOuterElement.setAttribute(\"role\", \"button\");\n      playButtonOuterElement.setAttribute(\"aria-label\", strings_1.Strings.defaults.mediaPlayerPlayMedia());\n      playButtonOuterElement.className = this.hostConfig.makeCssClassName(\"ac-media-playButton\");\n      playButtonOuterElement.style.display = \"flex\";\n      playButtonOuterElement.style.alignItems = \"center\";\n      playButtonOuterElement.style.justifyContent = \"center\";\n\n      playButtonOuterElement.onclick = function (e) {\n        _this.handlePlayButtonInvoke(e);\n      };\n\n      playButtonOuterElement.onkeypress = function (e) {\n        if (e.code == \"Enter\" || e.code == \"Space\") {\n          // space or enter\n          _this.handlePlayButtonInvoke(e);\n        }\n      };\n\n      var playButtonInnerElement = document.createElement(\"div\");\n      playButtonInnerElement.className = this.hostConfig.makeCssClassName(\"ac-media-playButton-arrow\");\n      playButtonInnerElement.style.width = playButtonArrowWidth + \"px\";\n      playButtonInnerElement.style.height = playButtonArrowHeight + \"px\";\n      playButtonInnerElement.style.borderTopWidth = playButtonArrowHeight / 2 + \"px\";\n      playButtonInnerElement.style.borderBottomWidth = playButtonArrowHeight / 2 + \"px\";\n      playButtonInnerElement.style.borderLeftWidth = playButtonArrowWidth + \"px\";\n      playButtonInnerElement.style.borderRightWidth = \"0\";\n      playButtonInnerElement.style.borderStyle = \"solid\";\n      playButtonInnerElement.style.borderTopColor = \"transparent\";\n      playButtonInnerElement.style.borderRightColor = \"transparent\";\n      playButtonInnerElement.style.borderBottomColor = \"transparent\";\n      playButtonInnerElement.style.transform = \"translate(\" + playButtonArrowWidth / 10 + \"px,0px)\";\n      playButtonOuterElement.appendChild(playButtonInnerElement);\n      var playButtonContainer = document.createElement(\"div\");\n      playButtonContainer.style.position = \"absolute\";\n      playButtonContainer.style.left = \"0\";\n      playButtonContainer.style.top = \"0\";\n      playButtonContainer.style.width = \"100%\";\n      playButtonContainer.style.height = \"100%\";\n      playButtonContainer.style.display = \"flex\";\n      playButtonContainer.style.justifyContent = \"center\";\n      playButtonContainer.style.alignItems = \"center\";\n      playButtonContainer.appendChild(playButtonOuterElement);\n      posterRootElement.appendChild(playButtonContainer);\n    }\n\n    return posterRootElement;\n  };\n\n  Media.prototype.renderMediaPlayer = function () {\n    var mediaElement;\n\n    if (this._selectedMediaType == \"video\") {\n      var videoPlayer = document.createElement(\"video\");\n      var posterUrl = this.getPosterUrl();\n\n      if (posterUrl) {\n        videoPlayer.poster = posterUrl;\n      }\n\n      mediaElement = videoPlayer;\n    } else {\n      mediaElement = document.createElement(\"audio\");\n    }\n\n    mediaElement.setAttribute(\"aria-label\", this.altText ? this.altText : strings_1.Strings.defaults.mediaPlayerAriaLabel());\n    mediaElement.setAttribute(\"webkit-playsinline\", \"\");\n    mediaElement.setAttribute(\"playsinline\", \"\");\n    mediaElement.autoplay = true;\n    mediaElement.controls = true;\n\n    if (Utils.isMobileOS()) {\n      mediaElement.muted = true;\n    }\n\n    mediaElement.preload = \"none\";\n    mediaElement.style.width = \"100%\";\n\n    for (var _i = 0, _a = this.sources; _i < _a.length; _i++) {\n      var source = _a[_i];\n      var renderedSource = source.render();\n      Utils.appendChild(mediaElement, renderedSource);\n    }\n\n    return mediaElement;\n  };\n\n  Media.prototype.internalRender = function () {\n    var element = document.createElement(\"div\");\n    element.className = this.hostConfig.makeCssClassName(\"ac-media\");\n    this.processSources();\n    element.appendChild(this.renderPoster());\n    return element;\n  };\n\n  Media.prototype.getJsonTypeName = function () {\n    return \"Media\";\n  };\n\n  Media.prototype.getResourceInformation = function () {\n    var result = [];\n    var posterUrl = this.getPosterUrl();\n\n    if (posterUrl) {\n      result.push({\n        url: posterUrl,\n        mimeType: \"image\"\n      });\n    }\n\n    for (var _i = 0, _a = this.sources; _i < _a.length; _i++) {\n      var mediaSource = _a[_i];\n\n      if (mediaSource.isValid()) {\n        result.push({\n          url: mediaSource.url,\n          mimeType: mediaSource.mimeType\n        });\n      }\n    }\n\n    return result;\n  };\n\n  Object.defineProperty(Media.prototype, \"selectedMediaType\", {\n    get: function () {\n      return this._selectedMediaType;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Media.sourcesProperty = new serialization_1.SerializableObjectCollectionProperty(serialization_1.Versions.v1_1, \"sources\", MediaSource);\n  Media.posterProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_1, \"poster\");\n  Media.altTextProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_1, \"altText\"); //#endregion\n\n  Media.supportedMediaTypes = [\"audio\", \"video\"];\n\n  __decorate([serialization_1.property(Media.sourcesProperty)], Media.prototype, \"sources\", void 0);\n\n  __decorate([serialization_1.property(Media.posterProperty)], Media.prototype, \"poster\", void 0);\n\n  __decorate([serialization_1.property(Media.altTextProperty)], Media.prototype, \"altText\", void 0);\n\n  return Media;\n}(CardElement);\n\nexports.Media = Media;\n\nvar Input =\n/** @class */\nfunction (_super) {\n  __extends(Input, _super);\n\n  function Input() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Input.prototype.getAllLabelIds = function () {\n    var labelIds = [];\n\n    if (this.labelledBy) {\n      labelIds.push(this.labelledBy);\n    }\n\n    if (this._renderedLabelElement) {\n      labelIds.push(this._renderedLabelElement.id);\n    }\n\n    if (this._renderedErrorMessageElement) {\n      labelIds.push(this._renderedErrorMessageElement.id);\n    }\n\n    return labelIds;\n  };\n\n  Input.prototype.updateInputControlAriaLabelledBy = function () {\n    if (this._renderedInputControlElement) {\n      var labelIds = this.getAllLabelIds();\n\n      if (labelIds.length > 0) {\n        this._renderedInputControlElement.setAttribute(\"aria-labelledby\", labelIds.join(\" \"));\n      } else {\n        this._renderedInputControlElement.removeAttribute(\"aria-labelledby\");\n      }\n    }\n  };\n\n  Object.defineProperty(Input.prototype, \"isNullable\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Input.prototype, \"renderedInputControlElement\", {\n    get: function () {\n      return this._renderedInputControlElement;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Input.prototype, \"inputControlContainerElement\", {\n    get: function () {\n      return this._inputControlContainerElement;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Input.prototype.overrideInternalRender = function () {\n    var hostConfig = this.hostConfig;\n    this._outerContainerElement = document.createElement(\"div\");\n    this._outerContainerElement.style.display = \"flex\";\n    this._outerContainerElement.style.flexDirection = \"column\";\n    var renderedInputControlId = Utils.generateUniqueId();\n\n    if (this.label) {\n      var labelRichTextBlock = new RichTextBlock();\n      labelRichTextBlock.setParent(this);\n      labelRichTextBlock.forElementId = renderedInputControlId;\n      var labelInline = new TextRun(this.label);\n      labelRichTextBlock.addInline(labelInline);\n\n      if (this.isRequired) {\n        labelInline.init(hostConfig.inputs.label.requiredInputs);\n        var isRequiredCueInline = new TextRun(hostConfig.inputs.label.requiredInputs.suffix);\n        isRequiredCueInline.color = hostConfig.inputs.label.requiredInputs.suffixColor;\n        isRequiredCueInline.ariaHidden = true;\n        labelRichTextBlock.addInline(isRequiredCueInline);\n      } else {\n        labelInline.init(hostConfig.inputs.label.optionalInputs);\n      }\n\n      this._renderedLabelElement = labelRichTextBlock.render();\n\n      if (this._renderedLabelElement) {\n        this._renderedLabelElement.id = Utils.generateUniqueId();\n        this._renderedLabelElement.style.marginBottom = hostConfig.getEffectiveSpacing(hostConfig.inputs.label.inputSpacing) + \"px\";\n\n        this._outerContainerElement.appendChild(this._renderedLabelElement);\n      }\n    }\n\n    this._inputControlContainerElement = document.createElement(\"div\");\n    this._inputControlContainerElement.className = hostConfig.makeCssClassName(\"ac-input-container\");\n    this._inputControlContainerElement.style.display = \"flex\";\n\n    if (this.height === \"stretch\") {\n      this._inputControlContainerElement.style.alignItems = \"stretch\";\n      this._inputControlContainerElement.style.flex = \"1 1 auto\";\n    }\n\n    this._renderedInputControlElement = this.internalRender();\n\n    if (this._renderedInputControlElement) {\n      this._renderedInputControlElement.id = renderedInputControlId;\n      this._renderedInputControlElement.style.minWidth = \"0px\";\n\n      if (this.isNullable && this.isRequired) {\n        this._renderedInputControlElement.setAttribute(\"aria-required\", \"true\");\n\n        this._renderedInputControlElement.classList.add(hostConfig.makeCssClassName(\"ac-input-required\"));\n      }\n\n      this._inputControlContainerElement.appendChild(this._renderedInputControlElement);\n\n      this._outerContainerElement.appendChild(this._inputControlContainerElement);\n\n      this.updateInputControlAriaLabelledBy();\n      return this._outerContainerElement;\n    }\n\n    return undefined;\n  };\n\n  Input.prototype.valueChanged = function () {\n    if (this.isValid()) {\n      this.resetValidationFailureCue();\n    }\n\n    if (this.onValueChanged) {\n      this.onValueChanged(this);\n    }\n\n    raiseInputValueChangedEvent(this);\n  };\n\n  Input.prototype.resetValidationFailureCue = function () {\n    if (this.renderedInputControlElement) {\n      this.renderedInputControlElement.classList.remove(this.hostConfig.makeCssClassName(\"ac-input-validation-failed\"));\n      this.updateInputControlAriaLabelledBy();\n\n      if (this._renderedErrorMessageElement) {\n        this._outerContainerElement.removeChild(this._renderedErrorMessageElement);\n\n        this._renderedErrorMessageElement = undefined;\n      }\n    }\n  };\n\n  Input.prototype.showValidationErrorMessage = function () {\n    if (this.renderedElement && this.errorMessage && shared_1.GlobalSettings.displayInputValidationErrors) {\n      var errorMessageTextBlock = new TextBlock();\n      errorMessageTextBlock.setParent(this);\n      errorMessageTextBlock.text = this.errorMessage;\n      errorMessageTextBlock.wrap = true;\n      errorMessageTextBlock.init(this.hostConfig.inputs.errorMessage);\n      this._renderedErrorMessageElement = errorMessageTextBlock.render();\n\n      if (this._renderedErrorMessageElement) {\n        this._renderedErrorMessageElement.id = Utils.generateUniqueId();\n\n        this._outerContainerElement.appendChild(this._renderedErrorMessageElement);\n\n        this.updateInputControlAriaLabelledBy();\n      }\n    }\n  };\n\n  Input.prototype.focus = function () {\n    if (this._renderedInputControlElement) {\n      this._renderedInputControlElement.focus();\n    }\n  };\n\n  Input.prototype.isValid = function () {\n    return true;\n  };\n\n  Input.prototype.internalValidateProperties = function (context) {\n    _super.prototype.internalValidateProperties.call(this, context);\n\n    if (!this.id) {\n      context.addFailure(this, Enums.ValidationEvent.PropertyCantBeNull, strings_1.Strings.errors.inputsMustHaveUniqueId());\n    }\n\n    if (this.isRequired) {\n      if (!this.label) {\n        context.addFailure(this, Enums.ValidationEvent.RequiredInputsShouldHaveLabel, \"Required inputs should have a label\");\n      }\n\n      if (!this.errorMessage) {\n        context.addFailure(this, Enums.ValidationEvent.RequiredInputsShouldHaveErrorMessage, \"Required inputs should have an error message\");\n      }\n    }\n  };\n\n  Input.prototype.validateValue = function () {\n    this.resetValidationFailureCue();\n    var result = this.isRequired ? this.isSet() && this.isValid() : this.isValid();\n\n    if (!result && this.renderedInputControlElement) {\n      this.renderedInputControlElement.classList.add(this.hostConfig.makeCssClassName(\"ac-input-validation-failed\"));\n      this.showValidationErrorMessage();\n    }\n\n    return result;\n  };\n\n  Input.prototype.getAllInputs = function (processActions) {\n    if (processActions === void 0) {\n      processActions = true;\n    }\n\n    return [this];\n  };\n\n  Object.defineProperty(Input.prototype, \"isInteractive\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  }); //#region Schema\n\n  Input.labelProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_3, \"label\", true);\n  Input.isRequiredProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_3, \"isRequired\", false);\n  Input.errorMessageProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_3, \"errorMessage\", true);\n\n  __decorate([serialization_1.property(Input.labelProperty)], Input.prototype, \"label\", void 0);\n\n  __decorate([serialization_1.property(Input.isRequiredProperty)], Input.prototype, \"isRequired\", void 0);\n\n  __decorate([serialization_1.property(Input.errorMessageProperty)], Input.prototype, \"errorMessage\", void 0);\n\n  return Input;\n}(CardElement);\n\nexports.Input = Input;\n\nvar TextInput =\n/** @class */\nfunction (_super) {\n  __extends(TextInput, _super);\n\n  function TextInput() {\n    //#region Schema\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.isMultiline = false;\n    _this.style = Enums.InputTextStyle.Text;\n    return _this;\n  } //#endregion\n\n\n  TextInput.prototype.setupInput = function (input) {\n    var _this = this;\n\n    input.style.flex = \"1 1 auto\";\n    input.tabIndex = 0;\n\n    if (this.placeholder) {\n      input.placeholder = this.placeholder;\n      input.setAttribute(\"aria-label\", this.placeholder);\n    }\n\n    if (this.defaultValue) {\n      input.value = this.defaultValue;\n    }\n\n    if (this.maxLength && this.maxLength > 0) {\n      input.maxLength = this.maxLength;\n    }\n\n    input.oninput = function () {\n      _this.valueChanged();\n    };\n\n    input.onkeypress = function (e) {\n      // Ctrl+Enter pressed\n      if (e.ctrlKey && e.code === \"Enter\" && _this.inlineAction && _this.inlineAction.isEnabled) {\n        _this.inlineAction.execute();\n      }\n    };\n  };\n\n  TextInput.prototype.internalRender = function () {\n    var result;\n\n    if (this.isMultiline && this.style !== Enums.InputTextStyle.Password) {\n      result = document.createElement(\"textarea\");\n      result.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-textInput\", \"ac-multiline\");\n\n      if (this.height === \"stretch\") {\n        result.style.height = \"initial\";\n      }\n    } else {\n      result = document.createElement(\"input\");\n      result.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-textInput\");\n      result.type = Enums.InputTextStyle[this.style].toLowerCase();\n    }\n\n    this.setupInput(result);\n    return result;\n  };\n\n  TextInput.prototype.overrideInternalRender = function () {\n    var _this = this;\n\n    var renderedInputControl = _super.prototype.overrideInternalRender.call(this);\n\n    if (this.inlineAction) {\n      var button_1 = document.createElement(\"button\");\n      button_1.className = this.hostConfig.makeCssClassName(this.inlineAction.isEnabled ? \"ac-inlineActionButton\" : \"ac-inlineActionButton-disabled\");\n\n      button_1.onclick = function (e) {\n        if (_this.inlineAction && _this.inlineAction.isEnabled) {\n          e.preventDefault();\n          e.cancelBubble = true;\n\n          _this.inlineAction.execute();\n        }\n      };\n\n      if (this.inlineAction.iconUrl) {\n        button_1.classList.add(\"iconOnly\");\n        var icon_1 = document.createElement(\"img\");\n        icon_1.style.height = \"100%\";\n        icon_1.setAttribute(\"role\", \"presentation\"); // The below trick is necessary as a workaround in Chrome where the icon is initially displayed\n        // at its native size then resized to 100% of the button's height. This cfreates an unpleasant\n        // flicker. On top of that, Chrome's flex implementation fails to prperly re-layout the button\n        // after the image has loaded and been gicven its final size. The below trick also fixes that.\n\n        icon_1.style.display = \"none\";\n\n        icon_1.onload = function () {\n          icon_1.style.removeProperty(\"display\");\n        };\n\n        icon_1.onerror = function () {\n          button_1.removeChild(icon_1);\n          button_1.classList.remove(\"iconOnly\");\n          button_1.classList.add(\"textOnly\");\n          button_1.textContent = _this.inlineAction && _this.inlineAction.title ? _this.inlineAction.title : strings_1.Strings.defaults.inlineActionTitle();\n        };\n\n        icon_1.src = this.inlineAction.iconUrl;\n        button_1.appendChild(icon_1);\n        button_1.title = this.inlineAction.title ? this.inlineAction.title : strings_1.Strings.defaults.inlineActionTitle();\n      } else {\n        button_1.classList.add(\"textOnly\");\n        button_1.textContent = this.inlineAction.title ? this.inlineAction.title : strings_1.Strings.defaults.inlineActionTitle();\n      }\n\n      this.inlineAction.setupElementForAccessibility(button_1, true);\n      button_1.style.marginLeft = \"8px\";\n      this.inputControlContainerElement.appendChild(button_1);\n    }\n\n    return renderedInputControl;\n  };\n\n  TextInput.prototype.getJsonTypeName = function () {\n    return \"Input.Text\";\n  };\n\n  TextInput.prototype.getActionById = function (id) {\n    var result = _super.prototype.getActionById.call(this, id);\n\n    if (!result && this.inlineAction) {\n      result = this.inlineAction.getActionById(id);\n    }\n\n    return result;\n  };\n\n  TextInput.prototype.isSet = function () {\n    return this.value ? true : false;\n  };\n\n  TextInput.prototype.isValid = function () {\n    if (!this.value) {\n      return true;\n    }\n\n    if (this.regex) {\n      return new RegExp(this.regex, \"g\").test(this.value);\n    }\n\n    return true;\n  };\n\n  Object.defineProperty(TextInput.prototype, \"value\", {\n    get: function () {\n      if (this.renderedInputControlElement) {\n        if (this.isMultiline) {\n          return this.renderedInputControlElement.value;\n        } else {\n          return this.renderedInputControlElement.value;\n        }\n      } else {\n        return undefined;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  TextInput.valueProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"value\");\n  TextInput.maxLengthProperty = new serialization_1.NumProperty(serialization_1.Versions.v1_0, \"maxLength\");\n  TextInput.isMultilineProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_0, \"isMultiline\", false);\n  TextInput.placeholderProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"placeholder\");\n  TextInput.styleProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_0, \"style\", Enums.InputTextStyle, Enums.InputTextStyle.Text, [{\n    value: Enums.InputTextStyle.Text\n  }, {\n    value: Enums.InputTextStyle.Tel\n  }, {\n    value: Enums.InputTextStyle.Url\n  }, {\n    value: Enums.InputTextStyle.Email\n  }, {\n    value: Enums.InputTextStyle.Password,\n    targetVersion: serialization_1.Versions.v1_5\n  }]);\n  TextInput.inlineActionProperty = new ActionProperty(serialization_1.Versions.v1_0, \"inlineAction\", [\"Action.ShowCard\"]);\n  TextInput.regexProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_3, \"regex\", true);\n\n  __decorate([serialization_1.property(TextInput.valueProperty)], TextInput.prototype, \"defaultValue\", void 0);\n\n  __decorate([serialization_1.property(TextInput.maxLengthProperty)], TextInput.prototype, \"maxLength\", void 0);\n\n  __decorate([serialization_1.property(TextInput.isMultilineProperty)], TextInput.prototype, \"isMultiline\", void 0);\n\n  __decorate([serialization_1.property(TextInput.placeholderProperty)], TextInput.prototype, \"placeholder\", void 0);\n\n  __decorate([serialization_1.property(TextInput.styleProperty)], TextInput.prototype, \"style\", void 0);\n\n  __decorate([serialization_1.property(TextInput.inlineActionProperty)], TextInput.prototype, \"inlineAction\", void 0);\n\n  __decorate([serialization_1.property(TextInput.regexProperty)], TextInput.prototype, \"regex\", void 0);\n\n  return TextInput;\n}(Input);\n\nexports.TextInput = TextInput;\n\nvar ToggleInput =\n/** @class */\nfunction (_super) {\n  __extends(ToggleInput, _super);\n\n  function ToggleInput() {\n    //#region Schema\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.valueOn = \"true\";\n    _this.valueOff = \"false\";\n    _this.wrap = false;\n    return _this;\n  }\n\n  ToggleInput.prototype.updateInputControlAriaLabelledBy = function () {\n    if (this._checkboxInputElement) {\n      var joinedLabelIds = this.getAllLabelIds().join(\" \");\n\n      if (this._checkboxInputLabelElement && this._checkboxInputLabelElement.id) {\n        joinedLabelIds += \" \" + this._checkboxInputLabelElement.id;\n      }\n\n      if (joinedLabelIds) {\n        this._checkboxInputElement.setAttribute(\"aria-labelledby\", joinedLabelIds);\n      } else {\n        this._checkboxInputElement.removeAttribute(\"aria-labelledby\");\n      }\n    }\n  };\n\n  ToggleInput.prototype.internalRender = function () {\n    var _this = this;\n\n    var element = document.createElement(\"div\");\n    element.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-toggleInput\");\n    element.style.width = \"100%\";\n    element.style.display = \"flex\";\n    element.style.alignItems = \"center\";\n    this._checkboxInputElement = document.createElement(\"input\");\n    this._checkboxInputElement.id = Utils.generateUniqueId();\n    this._checkboxInputElement.type = \"checkbox\";\n    this._checkboxInputElement.style.display = \"inline-block\";\n    this._checkboxInputElement.style.verticalAlign = \"middle\";\n    this._checkboxInputElement.style.margin = \"0\";\n    this._checkboxInputElement.style.flex = \"0 0 auto\";\n\n    if (this.title) {\n      this._checkboxInputElement.setAttribute(\"aria-label\", this.title);\n    }\n\n    if (this.isRequired) {\n      this._checkboxInputElement.setAttribute(\"aria-required\", \"true\");\n    }\n\n    this._checkboxInputElement.tabIndex = 0;\n\n    if (this.defaultValue == this.valueOn) {\n      this._checkboxInputElement.checked = true;\n    }\n\n    this._checkboxInputElement.onchange = function () {\n      _this.valueChanged();\n    };\n\n    Utils.appendChild(element, this._checkboxInputElement);\n\n    if (this.title || this.isDesignMode()) {\n      var label = new TextBlock();\n      label.setParent(this);\n      label.forElementId = this._checkboxInputElement.id;\n      label.hostConfig = this.hostConfig;\n      label.text = !this.title ? this.getJsonTypeName() : this.title;\n      label.useMarkdown = shared_1.GlobalSettings.useMarkdownInRadioButtonAndCheckbox;\n      label.wrap = this.wrap;\n      this._checkboxInputLabelElement = label.render();\n\n      if (this._checkboxInputLabelElement) {\n        this._checkboxInputLabelElement.id = Utils.generateUniqueId();\n        this._checkboxInputLabelElement.style.display = \"inline-block\";\n        this._checkboxInputLabelElement.style.flex = \"1 1 auto\";\n        this._checkboxInputLabelElement.style.marginLeft = \"6px\";\n        this._checkboxInputLabelElement.style.verticalAlign = \"middle\";\n        var spacerElement = document.createElement(\"div\");\n        spacerElement.style.width = \"6px\";\n        Utils.appendChild(element, spacerElement);\n        Utils.appendChild(element, this._checkboxInputLabelElement);\n      }\n    }\n\n    return element;\n  };\n\n  Object.defineProperty(ToggleInput.prototype, \"isNullable\", {\n    get: function () {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ToggleInput.prototype.getJsonTypeName = function () {\n    return \"Input.Toggle\";\n  };\n\n  ToggleInput.prototype.focus = function () {\n    if (this._checkboxInputElement) {\n      this._checkboxInputElement.focus();\n    }\n  };\n\n  ToggleInput.prototype.isSet = function () {\n    if (this.isRequired) {\n      return this.value === this.valueOn;\n    }\n\n    return this.value ? true : false;\n  };\n\n  Object.defineProperty(ToggleInput.prototype, \"value\", {\n    get: function () {\n      if (this._checkboxInputElement) {\n        return this._checkboxInputElement.checked ? this.valueOn : this.valueOff;\n      } else {\n        return undefined;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  ToggleInput.valueProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"value\");\n  ToggleInput.titleProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"title\");\n  ToggleInput.valueOnProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"valueOn\", true, undefined, \"true\", function (sender) {\n    return \"true\";\n  });\n  ToggleInput.valueOffProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"valueOff\", true, undefined, \"false\", function (sender) {\n    return \"false\";\n  });\n  ToggleInput.wrapProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_2, \"wrap\", false);\n\n  __decorate([serialization_1.property(ToggleInput.valueProperty)], ToggleInput.prototype, \"defaultValue\", void 0);\n\n  __decorate([serialization_1.property(ToggleInput.titleProperty)], ToggleInput.prototype, \"title\", void 0);\n\n  __decorate([serialization_1.property(ToggleInput.valueOnProperty)], ToggleInput.prototype, \"valueOn\", void 0);\n\n  __decorate([serialization_1.property(ToggleInput.valueOffProperty)], ToggleInput.prototype, \"valueOff\", void 0);\n\n  __decorate([serialization_1.property(ToggleInput.wrapProperty)], ToggleInput.prototype, \"wrap\", void 0);\n\n  return ToggleInput;\n}(Input);\n\nexports.ToggleInput = ToggleInput;\n\nvar Choice =\n/** @class */\nfunction (_super) {\n  __extends(Choice, _super);\n\n  function Choice(title, value) {\n    var _this = _super.call(this) || this;\n\n    _this.title = title;\n    _this.value = value;\n    return _this;\n  } //#endregion\n\n\n  Choice.prototype.getSchemaKey = function () {\n    return \"Choice\";\n  }; //#region Schema\n\n\n  Choice.titleProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"title\");\n  Choice.valueProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"value\");\n\n  __decorate([serialization_1.property(Choice.titleProperty)], Choice.prototype, \"title\", void 0);\n\n  __decorate([serialization_1.property(Choice.valueProperty)], Choice.prototype, \"value\", void 0);\n\n  return Choice;\n}(serialization_1.SerializableObject);\n\nexports.Choice = Choice;\n\nvar ChoiceSetInput =\n/** @class */\nfunction (_super) {\n  __extends(ChoiceSetInput, _super);\n\n  function ChoiceSetInput() {\n    //#region Schema\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.isMultiSelect = false;\n    _this.wrap = false;\n    _this.choices = [];\n    return _this;\n  }\n\n  Object.defineProperty(ChoiceSetInput.prototype, \"isCompact\", {\n    get: function () {\n      return !this.style || this.style === \"compact\";\n    },\n    set: function (value) {\n      this.style = value ? undefined : \"expanded\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ChoiceSetInput.getUniqueCategoryName = function () {\n    var uniqueCategoryName = \"__ac-category\" + ChoiceSetInput.uniqueCategoryCounter;\n    ChoiceSetInput.uniqueCategoryCounter++;\n    return uniqueCategoryName;\n  }; // Make sure `aria-current` is applied to the currently-selected item\n\n\n  ChoiceSetInput.prototype.internalApplyAriaCurrent = function () {\n    if (this._selectElement) {\n      var options = this._selectElement.options;\n\n      if (options) {\n        for (var i = 0; i < options.length; i++) {\n          if (options[i].selected) {\n            options[i].setAttribute(\"aria-current\", \"true\");\n          } else {\n            options[i].removeAttribute(\"aria-current\");\n          }\n        }\n      }\n    }\n  };\n\n  ChoiceSetInput.prototype.renderCompoundInput = function (cssClassName, type, defaultValues) {\n    var _this = this;\n\n    var element = document.createElement(\"div\");\n    element.className = this.hostConfig.makeCssClassName(\"ac-input\", cssClassName);\n    element.style.width = \"100%\";\n    this._toggleInputs = [];\n    this._labels = [];\n\n    for (var _i = 0, _a = this.choices; _i < _a.length; _i++) {\n      var choice = _a[_i];\n      var input = document.createElement(\"input\");\n      input.id = Utils.generateUniqueId();\n      input.type = type;\n      input.style.margin = \"0\";\n      input.style.display = \"inline-block\";\n      input.style.verticalAlign = \"middle\";\n      input.style.flex = \"0 0 auto\";\n      input.name = this.id ? this.id : this._uniqueCategoryName;\n\n      if (this.isRequired) {\n        input.setAttribute(\"aria-required\", \"true\");\n      }\n\n      if (choice.value) {\n        input.value = choice.value;\n      }\n\n      if (choice.title) {\n        input.setAttribute(\"aria-label\", choice.title);\n      }\n\n      if (defaultValues && choice.value) {\n        if (defaultValues.indexOf(choice.value) >= 0) {\n          input.checked = true;\n        }\n      }\n\n      input.onchange = function () {\n        _this.valueChanged();\n      };\n\n      this._toggleInputs.push(input);\n\n      var compoundInput = document.createElement(\"div\");\n      compoundInput.style.display = \"flex\";\n      compoundInput.style.alignItems = \"center\";\n      Utils.appendChild(compoundInput, input);\n      var label = new TextBlock();\n      label.setParent(this);\n      label.forElementId = input.id;\n      label.hostConfig = this.hostConfig;\n      label.text = choice.title ? choice.title : \"Choice \" + this._toggleInputs.length;\n      label.useMarkdown = shared_1.GlobalSettings.useMarkdownInRadioButtonAndCheckbox;\n      label.wrap = this.wrap;\n      var labelElement = label.render();\n\n      this._labels.push(labelElement);\n\n      if (labelElement) {\n        labelElement.id = Utils.generateUniqueId();\n        labelElement.style.display = \"inline-block\";\n        labelElement.style.flex = \"1 1 auto\";\n        labelElement.style.marginLeft = \"6px\";\n        labelElement.style.verticalAlign = \"middle\";\n        var spacerElement = document.createElement(\"div\");\n        spacerElement.style.width = \"6px\";\n        Utils.appendChild(compoundInput, spacerElement);\n        Utils.appendChild(compoundInput, labelElement);\n      }\n\n      Utils.appendChild(element, compoundInput);\n    }\n\n    return element;\n  };\n\n  ChoiceSetInput.prototype.updateInputControlAriaLabelledBy = function () {\n    if ((this.isMultiSelect || this.style === \"expanded\") && this._toggleInputs && this._labels) {\n      var labelIds = this.getAllLabelIds();\n\n      for (var i = 0; i < this._toggleInputs.length; i++) {\n        var joinedLabelIds = labelIds.join(\" \");\n        var label = this._labels[i];\n\n        if (label && label.id) {\n          joinedLabelIds += \" \" + label.id;\n        }\n\n        if (joinedLabelIds) {\n          this._toggleInputs[i].setAttribute(\"aria-labelledby\", joinedLabelIds);\n        } else {\n          this._toggleInputs[i].removeAttribute(\"aria-labelledby\");\n        }\n      }\n    } else {\n      _super.prototype.updateInputControlAriaLabelledBy.call(this);\n    }\n  };\n\n  ChoiceSetInput.prototype.internalRender = function () {\n    var _this = this;\n\n    this._uniqueCategoryName = ChoiceSetInput.getUniqueCategoryName();\n\n    if (this.isMultiSelect) {\n      // Render as a list of toggle inputs\n      return this.renderCompoundInput(\"ac-choiceSetInput-multiSelect\", \"checkbox\", this.defaultValue ? this.defaultValue.split(this.hostConfig.choiceSetInputValueSeparator) : undefined);\n    } else {\n      if (this.style === \"expanded\") {\n        // Render as a series of radio buttons\n        return this.renderCompoundInput(\"ac-choiceSetInput-expanded\", \"radio\", this.defaultValue ? [this.defaultValue] : undefined);\n      } else if (this.style === \"filtered\") {\n        // Render as a text input coupled with a datalist\n        var inputContainer = document.createElement(\"div\");\n        inputContainer.style.width = \"100%\";\n        this._textInput = document.createElement(\"input\");\n        this._textInput.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-multichoiceInput\", \"ac-choiceSetInput-filtered\");\n        this._textInput.type = \"text\";\n        this._textInput.style.width = \"100%\";\n\n        this._textInput.oninput = function () {\n          _this.valueChanged();\n\n          if (_this._textInput) {\n            // Remove aria-label when value is not empty so narration software doesn't\n            // read the placeholder\n            if (_this.value) {\n              _this._textInput.removeAttribute(\"placeholder\");\n\n              _this._textInput.removeAttribute(\"aria-label\");\n            } else if (_this.placeholder) {\n              _this._textInput.placeholder = _this.placeholder;\n\n              _this._textInput.setAttribute(\"aria-label\", _this.placeholder);\n            }\n          }\n        };\n\n        if (this.defaultValue) {\n          this._textInput.value = this.defaultValue;\n        }\n\n        if (this.placeholder && !this._textInput.value) {\n          this._textInput.placeholder = this.placeholder;\n\n          this._textInput.setAttribute(\"aria-label\", this.placeholder);\n        }\n\n        var dataList = document.createElement(\"datalist\");\n        dataList.id = Utils.generateUniqueId();\n\n        for (var _i = 0, _a = this.choices; _i < _a.length; _i++) {\n          var choice = _a[_i];\n          var option = document.createElement(\"option\"); // To fix https://stackoverflow.com/questions/29882361/show-datalist-labels-but-submit-the-actual-value\n          // value is mapped to choice.title other than choice.value\n\n          option.value = choice.title;\n          option.setAttribute(\"aria-label\", choice.title);\n          dataList.appendChild(option);\n        }\n\n        this._textInput.setAttribute(\"list\", dataList.id);\n\n        inputContainer.append(this._textInput, dataList);\n        return inputContainer;\n      } else {\n        // Render as a combo box\n        this._selectElement = document.createElement(\"select\");\n        this._selectElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-multichoiceInput\", \"ac-choiceSetInput-compact\");\n        this._selectElement.style.width = \"100%\";\n        var option = document.createElement(\"option\");\n        option.selected = true;\n        option.disabled = true;\n        option.hidden = true;\n        option.value = \"\";\n\n        if (this.placeholder) {\n          option.text = this.placeholder;\n        }\n\n        Utils.appendChild(this._selectElement, option);\n\n        for (var _b = 0, _c = this.choices; _b < _c.length; _b++) {\n          var choice = _c[_b];\n          var option_1 = document.createElement(\"option\");\n          option_1.value = choice.value;\n          option_1.text = choice.title;\n          option_1.setAttribute(\"aria-label\", choice.title);\n\n          if (choice.value == this.defaultValue) {\n            option_1.selected = true;\n          }\n\n          Utils.appendChild(this._selectElement, option_1);\n        }\n\n        this._selectElement.onchange = function () {\n          _this.internalApplyAriaCurrent();\n\n          _this.valueChanged();\n        };\n\n        this.internalApplyAriaCurrent();\n        return this._selectElement;\n      }\n    }\n  };\n\n  ChoiceSetInput.prototype.getJsonTypeName = function () {\n    return \"Input.ChoiceSet\";\n  };\n\n  ChoiceSetInput.prototype.focus = function () {\n    if (this._toggleInputs && (this.isMultiSelect || this.style === \"expanded\")) {\n      if (this._toggleInputs.length > 0) {\n        this._toggleInputs[0].focus();\n      }\n    } else if (this._textInput) {\n      this._textInput.focus();\n    } else {\n      _super.prototype.focus.call(this);\n    }\n  };\n\n  ChoiceSetInput.prototype.internalValidateProperties = function (context) {\n    _super.prototype.internalValidateProperties.call(this, context);\n\n    if (this.choices.length == 0) {\n      context.addFailure(this, Enums.ValidationEvent.CollectionCantBeEmpty, strings_1.Strings.errors.choiceSetMustHaveAtLeastOneChoice());\n    }\n\n    for (var _i = 0, _a = this.choices; _i < _a.length; _i++) {\n      var choice = _a[_i];\n\n      if (!choice.title || !choice.value) {\n        context.addFailure(this, Enums.ValidationEvent.PropertyCantBeNull, strings_1.Strings.errors.choiceSetChoicesMustHaveTitleAndValue());\n      }\n    }\n  };\n\n  ChoiceSetInput.prototype.isSet = function () {\n    return this.value ? true : false;\n  };\n\n  ChoiceSetInput.prototype.isValid = function () {\n    if (this._textInput) {\n      if (this.value === \"\" || this.value === this.placeholder) {\n        return true;\n      }\n\n      for (var _i = 0, _a = this.choices; _i < _a.length; _i++) {\n        var choice = _a[_i];\n\n        if (this.value === choice.value) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    return _super.prototype.isValid.call(this);\n  };\n\n  Object.defineProperty(ChoiceSetInput.prototype, \"value\", {\n    get: function () {\n      if (!this.isMultiSelect) {\n        if (this._selectElement) {\n          return this._selectElement.selectedIndex > 0 ? this._selectElement.value : undefined;\n        } else if (this._textInput) {\n          for (var _i = 0, _a = this.choices; _i < _a.length; _i++) {\n            var choice = _a[_i];\n\n            if (choice.title && this._textInput.value === choice.title) {\n              return choice.value;\n            }\n          }\n\n          return this._textInput.value;\n        } else if (this._toggleInputs && this._toggleInputs.length > 0) {\n          for (var _b = 0, _c = this._toggleInputs; _b < _c.length; _b++) {\n            var toggleInput = _c[_b];\n\n            if (toggleInput.checked) {\n              return toggleInput.value;\n            }\n          }\n        }\n\n        return undefined;\n      } else {\n        if (!this._toggleInputs || this._toggleInputs.length == 0) {\n          return undefined;\n        }\n\n        var result = \"\";\n\n        for (var _d = 0, _e = this._toggleInputs; _d < _e.length; _d++) {\n          var toggleInput = _e[_d];\n\n          if (toggleInput.checked) {\n            if (result != \"\") {\n              result += this.hostConfig.choiceSetInputValueSeparator;\n            }\n\n            result += toggleInput.value;\n          }\n        }\n\n        return result ? result : undefined;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  ChoiceSetInput.valueProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"value\");\n  ChoiceSetInput.choicesProperty = new serialization_1.SerializableObjectCollectionProperty(serialization_1.Versions.v1_0, \"choices\", Choice);\n  ChoiceSetInput.styleProperty = new serialization_1.ValueSetProperty(serialization_1.Versions.v1_0, \"style\", [{\n    value: \"compact\"\n  }, {\n    value: \"expanded\"\n  }, {\n    value: \"filtered\",\n    targetVersion: serialization_1.Versions.v1_5\n  }], \"compact\");\n  ChoiceSetInput.isMultiSelectProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_0, \"isMultiSelect\", false);\n  ChoiceSetInput.placeholderProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"placeholder\");\n  ChoiceSetInput.wrapProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_2, \"wrap\", false); //#endregion\n\n  ChoiceSetInput.uniqueCategoryCounter = 0;\n\n  __decorate([serialization_1.property(ChoiceSetInput.valueProperty)], ChoiceSetInput.prototype, \"defaultValue\", void 0);\n\n  __decorate([serialization_1.property(ChoiceSetInput.styleProperty)], ChoiceSetInput.prototype, \"style\", void 0);\n\n  __decorate([serialization_1.property(ChoiceSetInput.isMultiSelectProperty)], ChoiceSetInput.prototype, \"isMultiSelect\", void 0);\n\n  __decorate([serialization_1.property(ChoiceSetInput.placeholderProperty)], ChoiceSetInput.prototype, \"placeholder\", void 0);\n\n  __decorate([serialization_1.property(ChoiceSetInput.wrapProperty)], ChoiceSetInput.prototype, \"wrap\", void 0);\n\n  __decorate([serialization_1.property(ChoiceSetInput.choicesProperty)], ChoiceSetInput.prototype, \"choices\", void 0);\n\n  return ChoiceSetInput;\n}(Input);\n\nexports.ChoiceSetInput = ChoiceSetInput;\n\nvar NumberInput =\n/** @class */\nfunction (_super) {\n  __extends(NumberInput, _super);\n\n  function NumberInput() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  NumberInput.prototype.internalRender = function () {\n    var _this = this;\n\n    this._numberInputElement = document.createElement(\"input\");\n\n    this._numberInputElement.setAttribute(\"type\", \"number\");\n\n    if (this.min !== undefined) {\n      this._numberInputElement.setAttribute(\"min\", this.min.toString());\n    }\n\n    if (this.max !== undefined) {\n      this._numberInputElement.setAttribute(\"max\", this.max.toString());\n    }\n\n    this._numberInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-numberInput\");\n    this._numberInputElement.style.width = \"100%\";\n    this._numberInputElement.tabIndex = 0;\n\n    if (this.defaultValue !== undefined) {\n      this._numberInputElement.valueAsNumber = this.defaultValue;\n    }\n\n    if (this.placeholder) {\n      this._numberInputElement.placeholder = this.placeholder;\n\n      this._numberInputElement.setAttribute(\"aria-label\", this.placeholder);\n    }\n\n    this._numberInputElement.oninput = function () {\n      _this.valueChanged();\n    };\n\n    return this._numberInputElement;\n  };\n\n  NumberInput.prototype.getJsonTypeName = function () {\n    return \"Input.Number\";\n  };\n\n  NumberInput.prototype.isSet = function () {\n    return this.value !== undefined && !isNaN(this.value);\n  };\n\n  NumberInput.prototype.isValid = function () {\n    if (this.value === undefined) {\n      return !this.isRequired;\n    }\n\n    var result = true;\n\n    if (this.min !== undefined) {\n      result = result && this.value >= this.min;\n    }\n\n    if (this.max !== undefined) {\n      result = result && this.value <= this.max;\n    }\n\n    return result;\n  };\n\n  Object.defineProperty(NumberInput.prototype, \"value\", {\n    get: function () {\n      return this._numberInputElement ? this._numberInputElement.valueAsNumber : undefined;\n    },\n    enumerable: false,\n    configurable: true\n  }); //#region Schema\n\n  NumberInput.valueProperty = new serialization_1.NumProperty(serialization_1.Versions.v1_0, \"value\");\n  NumberInput.placeholderProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"placeholder\");\n  NumberInput.minProperty = new serialization_1.NumProperty(serialization_1.Versions.v1_0, \"min\");\n  NumberInput.maxProperty = new serialization_1.NumProperty(serialization_1.Versions.v1_0, \"max\");\n\n  __decorate([serialization_1.property(NumberInput.valueProperty)], NumberInput.prototype, \"defaultValue\", void 0);\n\n  __decorate([serialization_1.property(NumberInput.minProperty)], NumberInput.prototype, \"min\", void 0);\n\n  __decorate([serialization_1.property(NumberInput.maxProperty)], NumberInput.prototype, \"max\", void 0);\n\n  __decorate([serialization_1.property(NumberInput.placeholderProperty)], NumberInput.prototype, \"placeholder\", void 0);\n\n  return NumberInput;\n}(Input);\n\nexports.NumberInput = NumberInput;\n\nvar DateInput =\n/** @class */\nfunction (_super) {\n  __extends(DateInput, _super);\n\n  function DateInput() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DateInput.prototype.internalRender = function () {\n    var _this = this;\n\n    this._dateInputElement = document.createElement(\"input\");\n\n    this._dateInputElement.setAttribute(\"type\", \"date\");\n\n    if (this.min) {\n      this._dateInputElement.setAttribute(\"min\", this.min);\n    }\n\n    if (this.max) {\n      this._dateInputElement.setAttribute(\"max\", this.max);\n    }\n\n    if (this.placeholder) {\n      this._dateInputElement.placeholder = this.placeholder;\n\n      this._dateInputElement.setAttribute(\"aria-label\", this.placeholder);\n    }\n\n    this._dateInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-dateInput\");\n    this._dateInputElement.style.width = \"100%\";\n\n    this._dateInputElement.oninput = function () {\n      _this.valueChanged();\n    };\n\n    if (this.defaultValue) {\n      this._dateInputElement.value = this.defaultValue;\n    }\n\n    return this._dateInputElement;\n  };\n\n  DateInput.prototype.getJsonTypeName = function () {\n    return \"Input.Date\";\n  };\n\n  DateInput.prototype.isSet = function () {\n    return this.value ? true : false;\n  };\n\n  DateInput.prototype.isValid = function () {\n    if (!this.value) {\n      return !this.isRequired;\n    }\n\n    var valueAsDate = new Date(this.value);\n    var result = true;\n\n    if (this.min) {\n      var minDate = new Date(this.min);\n      result = result && valueAsDate >= minDate;\n    }\n\n    if (this.max) {\n      var maxDate = new Date(this.max);\n      result = result && valueAsDate <= maxDate;\n    }\n\n    return result;\n  };\n\n  Object.defineProperty(DateInput.prototype, \"value\", {\n    get: function () {\n      return this._dateInputElement ? this._dateInputElement.value : undefined;\n    },\n    enumerable: false,\n    configurable: true\n  }); //#region Schema\n\n  DateInput.valueProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"value\");\n  DateInput.placeholderProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"placeholder\");\n  DateInput.minProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"min\");\n  DateInput.maxProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"max\");\n\n  __decorate([serialization_1.property(DateInput.valueProperty)], DateInput.prototype, \"defaultValue\", void 0);\n\n  __decorate([serialization_1.property(DateInput.minProperty)], DateInput.prototype, \"min\", void 0);\n\n  __decorate([serialization_1.property(DateInput.maxProperty)], DateInput.prototype, \"max\", void 0);\n\n  __decorate([serialization_1.property(DateInput.placeholderProperty)], DateInput.prototype, \"placeholder\", void 0);\n\n  return DateInput;\n}(Input);\n\nexports.DateInput = DateInput;\n\nvar TimeProperty =\n/** @class */\nfunction (_super) {\n  __extends(TimeProperty, _super);\n\n  function TimeProperty(targetVersion, name) {\n    var _this = _super.call(this, targetVersion, name, function (sender, property, source, context) {\n      var value = source[property.name];\n\n      if (typeof value === \"string\" && value && /^[0-9]{2}:[0-9]{2}$/.test(value)) {\n        return value;\n      }\n\n      return undefined;\n    }, function (sender, property, target, value, context) {\n      context.serializeValue(target, property.name, value);\n    }) || this;\n\n    _this.targetVersion = targetVersion;\n    _this.name = name;\n    return _this;\n  }\n\n  return TimeProperty;\n}(serialization_1.CustomProperty);\n\nexports.TimeProperty = TimeProperty;\n\nvar TimeInput =\n/** @class */\nfunction (_super) {\n  __extends(TimeInput, _super);\n\n  function TimeInput() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TimeInput.convertTimeStringToDate = function (timeString) {\n    return new Date(\"1973-09-04T\" + timeString + \":00Z\");\n  };\n\n  TimeInput.prototype.internalRender = function () {\n    var _this = this;\n\n    this._timeInputElement = document.createElement(\"input\");\n\n    this._timeInputElement.setAttribute(\"type\", \"time\");\n\n    this._timeInputElement.setAttribute(\"min\", this.min);\n\n    this._timeInputElement.setAttribute(\"max\", this.max);\n\n    this._timeInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-timeInput\");\n    this._timeInputElement.style.width = \"100%\";\n\n    this._timeInputElement.oninput = function () {\n      _this.valueChanged();\n    };\n\n    if (this.placeholder) {\n      this._timeInputElement.placeholder = this.placeholder;\n\n      this._timeInputElement.setAttribute(\"aria-label\", this.placeholder);\n    }\n\n    if (this.defaultValue) {\n      this._timeInputElement.value = this.defaultValue;\n    }\n\n    return this._timeInputElement;\n  };\n\n  TimeInput.prototype.getJsonTypeName = function () {\n    return \"Input.Time\";\n  };\n\n  TimeInput.prototype.isSet = function () {\n    return this.value ? true : false;\n  };\n\n  TimeInput.prototype.isValid = function () {\n    if (!this.value) {\n      return !this.isRequired;\n    }\n\n    var valueAsDate = TimeInput.convertTimeStringToDate(this.value);\n    var result = true;\n\n    if (this.min) {\n      var minDate = TimeInput.convertTimeStringToDate(this.min);\n      result = result && valueAsDate >= minDate;\n    }\n\n    if (this.max) {\n      var maxDate = TimeInput.convertTimeStringToDate(this.max);\n      result = result && valueAsDate <= maxDate;\n    }\n\n    return result;\n  };\n\n  Object.defineProperty(TimeInput.prototype, \"value\", {\n    get: function () {\n      return this._timeInputElement ? this._timeInputElement.value : undefined;\n    },\n    enumerable: false,\n    configurable: true\n  }); //#region Schema\n\n  TimeInput.valueProperty = new TimeProperty(serialization_1.Versions.v1_0, \"value\");\n  TimeInput.placeholderProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"placeholder\");\n  TimeInput.minProperty = new TimeProperty(serialization_1.Versions.v1_0, \"min\");\n  TimeInput.maxProperty = new TimeProperty(serialization_1.Versions.v1_0, \"max\");\n\n  __decorate([serialization_1.property(TimeInput.valueProperty)], TimeInput.prototype, \"defaultValue\", void 0);\n\n  __decorate([serialization_1.property(TimeInput.minProperty)], TimeInput.prototype, \"min\", void 0);\n\n  __decorate([serialization_1.property(TimeInput.maxProperty)], TimeInput.prototype, \"max\", void 0);\n\n  __decorate([serialization_1.property(TimeInput.placeholderProperty)], TimeInput.prototype, \"placeholder\", void 0);\n\n  return TimeInput;\n}(Input);\n\nexports.TimeInput = TimeInput;\n\nvar Action =\n/** @class */\nfunction (_super) {\n  __extends(Action, _super);\n\n  function Action() {\n    //#region Schema\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.style = Enums.ActionStyle.Default;\n    _this.mode = Enums.ActionMode.Primary;\n    _this._state = 0\n    /* Normal */\n    ;\n    _this._isFocusable = true;\n    return _this;\n  } //#endregion\n\n\n  Action.prototype.renderButtonContent = function () {\n    if (this.renderedElement) {\n      // Cache hostConfig for perf\n      var hostConfig = this.hostConfig;\n      var titleElement = document.createElement(\"div\");\n      titleElement.style.overflow = \"hidden\";\n      titleElement.style.textOverflow = \"ellipsis\";\n\n      if (!(hostConfig.actions.iconPlacement == Enums.ActionIconPlacement.AboveTitle || hostConfig.actions.allowTitleToWrap)) {\n        titleElement.style.whiteSpace = \"nowrap\";\n      }\n\n      if (this.title) {\n        titleElement.innerText = this.title;\n      }\n\n      if (!this.iconUrl) {\n        this.renderedElement.classList.add(\"noIcon\");\n        this.renderedElement.appendChild(titleElement);\n      } else {\n        var iconElement = document.createElement(\"img\");\n        iconElement.src = this.iconUrl;\n        iconElement.style.width = hostConfig.actions.iconSize + \"px\";\n        iconElement.style.height = hostConfig.actions.iconSize + \"px\";\n        iconElement.style.flex = \"0 0 auto\";\n\n        if (hostConfig.actions.iconPlacement == Enums.ActionIconPlacement.AboveTitle) {\n          this.renderedElement.classList.add(\"iconAbove\");\n          this.renderedElement.style.flexDirection = \"column\";\n\n          if (this.title) {\n            iconElement.style.marginBottom = \"6px\";\n          }\n        } else {\n          this.renderedElement.classList.add(\"iconLeft\");\n          iconElement.style.maxHeight = \"100%\";\n\n          if (this.title) {\n            iconElement.style.marginRight = \"6px\";\n          }\n        }\n\n        this.renderedElement.appendChild(iconElement);\n        this.renderedElement.appendChild(titleElement);\n      }\n    }\n  };\n\n  Action.prototype.getParentContainer = function () {\n    if (this.parent instanceof Container) {\n      return this.parent;\n    }\n\n    return this.parent ? this.parent.getParentContainer() : undefined;\n  };\n\n  Action.prototype.updateCssClasses = function () {\n    var _a, _b;\n\n    if (this.parent && this.renderedElement) {\n      var hostConfig = this.parent.hostConfig;\n      this.renderedElement.className = hostConfig.makeCssClassName(this.isEnabled ? \"ac-pushButton\" : \"ac-pushButton-disabled\");\n      var parentContainer = this.getParentContainer();\n\n      if (parentContainer) {\n        var parentContainerStyle = parentContainer.getEffectiveStyle();\n\n        if (parentContainerStyle) {\n          this.renderedElement.classList.add(\"style-\" + parentContainerStyle);\n        }\n      }\n\n      this.renderedElement.tabIndex = this.isFocusable ? 0 : -1;\n\n      switch (this._state) {\n        case 1\n        /* Expanded */\n        :\n          this.renderedElement.classList.add(hostConfig.makeCssClassName(\"expanded\"));\n          break;\n\n        case 2\n        /* Subdued */\n        :\n          this.renderedElement.classList.add(hostConfig.makeCssClassName(\"subdued\"));\n          break;\n      }\n\n      if (this.style && this.isEnabled) {\n        if (this.style === Enums.ActionStyle.Positive) {\n          (_a = this.renderedElement.classList).add.apply(_a, hostConfig.makeCssClassNames(\"primary\", \"style-positive\"));\n        } else {\n          (_b = this.renderedElement.classList).add.apply(_b, hostConfig.makeCssClassNames(\"style-\" + this.style.toLowerCase()));\n        }\n      }\n    }\n  };\n\n  Action.prototype.getDefaultSerializationContext = function () {\n    return new SerializationContext();\n  };\n\n  Action.prototype.internalGetReferencedInputs = function () {\n    return {};\n  };\n\n  Action.prototype.internalPrepareForExecution = function (inputs) {// Do nothing in base implementation\n  };\n\n  Action.prototype.internalValidateInputs = function (referencedInputs) {\n    var result = [];\n\n    if (referencedInputs) {\n      for (var _i = 0, _a = Object.keys(referencedInputs); _i < _a.length; _i++) {\n        var key = _a[_i];\n        var input = referencedInputs[key];\n\n        if (!input.validateValue()) {\n          result.push(input);\n        }\n      }\n    }\n\n    return result;\n  };\n\n  Action.prototype.shouldSerialize = function (context) {\n    return context.actionRegistry.findByName(this.getJsonTypeName()) !== undefined;\n  };\n\n  Action.prototype.raiseExecuteActionEvent = function () {\n    if (this.onExecute) {\n      this.onExecute(this);\n    }\n\n    raiseExecuteActionEvent(this);\n  };\n\n  Action.prototype.getHref = function () {\n    return \"\";\n  };\n\n  Action.prototype.getAriaRole = function () {\n    return \"button\";\n  };\n\n  Action.prototype.setupElementForAccessibility = function (element, promoteTooltipToLabel) {\n    if (promoteTooltipToLabel === void 0) {\n      promoteTooltipToLabel = false;\n    }\n\n    element.tabIndex = this.isEnabled ? 0 : -1;\n    element.setAttribute(\"role\", this.getAriaRole());\n\n    if (element instanceof HTMLButtonElement) {\n      element.disabled = !this.isEnabled;\n    }\n\n    if (!this.isEnabled) {\n      element.setAttribute(\"aria-disabled\", \"true\");\n    } else {\n      element.classList.add(this.hostConfig.makeCssClassName(\"ac-selectable\"));\n    }\n\n    if (this.title) {\n      element.setAttribute(\"aria-label\", this.title);\n      element.title = this.title;\n    }\n\n    if (this.tooltip) {\n      var targetAriaAttribute = promoteTooltipToLabel ? this.title ? \"aria-description\" : \"aria-label\" : \"aria-description\";\n      element.setAttribute(targetAriaAttribute, this.tooltip);\n      element.title = this.tooltip;\n    }\n  };\n\n  Action.prototype.parse = function (source, context) {\n    return _super.prototype.parse.call(this, source, context ? context : new SerializationContext());\n  };\n\n  Action.prototype.render = function () {\n    var _this = this;\n\n    var buttonElement = document.createElement(\"button\");\n    buttonElement.type = \"button\";\n    buttonElement.style.display = \"flex\";\n    buttonElement.style.alignItems = \"center\";\n    buttonElement.style.justifyContent = \"center\";\n\n    buttonElement.onclick = function (e) {\n      if (_this.isEnabled) {\n        e.preventDefault();\n        e.cancelBubble = true;\n\n        _this.execute();\n      }\n    };\n\n    this._renderedElement = buttonElement;\n    this.renderButtonContent();\n    this.updateCssClasses();\n    this.setupElementForAccessibility(buttonElement);\n  };\n\n  Action.prototype.execute = function () {\n    if (this._actionCollection) {\n      this._actionCollection.actionExecuted(this);\n    }\n\n    this.raiseExecuteActionEvent();\n  };\n\n  Action.prototype.prepareForExecution = function () {\n    var referencedInputs = this.getReferencedInputs();\n    var invalidInputs = this.internalValidateInputs(referencedInputs);\n\n    if (invalidInputs.length > 0) {\n      invalidInputs[0].focus();\n      return false;\n    }\n\n    this.internalPrepareForExecution(referencedInputs);\n    return true;\n  };\n\n  ;\n\n  Action.prototype.remove = function () {\n    if (this._actionCollection) {\n      return this._actionCollection.removeAction(this);\n    }\n\n    return false;\n  };\n\n  Action.prototype.getAllInputs = function (processActions) {\n    if (processActions === void 0) {\n      processActions = true;\n    }\n\n    return [];\n  };\n\n  Action.prototype.getResourceInformation = function () {\n    return this.iconUrl ? [{\n      url: this.iconUrl,\n      mimeType: \"image\"\n    }] : [];\n  };\n\n  Action.prototype.getActionById = function (id) {\n    return this.id === id ? this : undefined;\n  };\n\n  Action.prototype.getReferencedInputs = function () {\n    return this.internalGetReferencedInputs();\n  };\n  /**\n   * Validates the inputs associated with this action.\n   *\n   * @returns A list of inputs that failed validation, or an empty array if no input failed validation.\n   */\n\n\n  Action.prototype.validateInputs = function () {\n    return this.internalValidateInputs(this.getReferencedInputs());\n  };\n\n  Object.defineProperty(Action.prototype, \"isPrimary\", {\n    get: function () {\n      return this.style == Enums.ActionStyle.Positive;\n    },\n    set: function (value) {\n      if (value) {\n        this.style = Enums.ActionStyle.Positive;\n      } else {\n        if (this.style == Enums.ActionStyle.Positive) {\n          this.style = Enums.ActionStyle.Default;\n        }\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Action.prototype, \"hostConfig\", {\n    get: function () {\n      return this.parent ? this.parent.hostConfig : host_config_1.defaultHostConfig;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Action.prototype, \"parent\", {\n    get: function () {\n      return this._parent;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Action.prototype, \"state\", {\n    get: function () {\n      return this._state;\n    },\n    set: function (value) {\n      if (this._state !== value) {\n        this._state = value;\n        this.updateCssClasses();\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Action.prototype, \"isFocusable\", {\n    get: function () {\n      return this._isFocusable;\n    },\n    set: function (value) {\n      if (this._isFocusable !== value) {\n        this._isFocusable = value;\n        this.updateCssClasses();\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Action.titleProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"title\");\n  Action.iconUrlProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_1, \"iconUrl\");\n  Action.styleProperty = new serialization_1.ValueSetProperty(serialization_1.Versions.v1_2, \"style\", [{\n    value: Enums.ActionStyle.Default\n  }, {\n    value: Enums.ActionStyle.Positive\n  }, {\n    value: Enums.ActionStyle.Destructive\n  }], Enums.ActionStyle.Default);\n  Action.modeProperty = new serialization_1.ValueSetProperty(serialization_1.Versions.v1_5, \"mode\", [{\n    value: Enums.ActionMode.Primary\n  }, {\n    value: Enums.ActionMode.Secondary\n  }], Enums.ActionMode.Primary);\n  Action.tooltipProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_5, \"tooltip\");\n  Action.isEnabledProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_5, \"isEnabled\", true);\n\n  __decorate([serialization_1.property(Action.titleProperty)], Action.prototype, \"title\", void 0);\n\n  __decorate([serialization_1.property(Action.iconUrlProperty)], Action.prototype, \"iconUrl\", void 0);\n\n  __decorate([serialization_1.property(Action.styleProperty)], Action.prototype, \"style\", void 0);\n\n  __decorate([serialization_1.property(Action.modeProperty)], Action.prototype, \"mode\", void 0);\n\n  __decorate([serialization_1.property(Action.tooltipProperty)], Action.prototype, \"tooltip\", void 0);\n\n  __decorate([serialization_1.property(Action.isEnabledProperty)], Action.prototype, \"isEnabled\", void 0);\n\n  return Action;\n}(card_object_1.CardObject);\n\nexports.Action = Action;\n\nvar SubmitActionBase =\n/** @class */\nfunction (_super) {\n  __extends(SubmitActionBase, _super);\n\n  function SubmitActionBase() {\n    //#region Schema\n    var _this = _super !== null && _super.apply(this, arguments) || this; //#endregion\n\n\n    _this._isPrepared = false;\n    return _this;\n  }\n\n  SubmitActionBase.prototype.internalGetReferencedInputs = function () {\n    var result = {};\n\n    if (this.associatedInputs !== \"none\") {\n      var current = this.parent;\n      var inputs = [];\n\n      while (current) {\n        inputs = inputs.concat(current.getAllInputs(false));\n        current = current.parent;\n      }\n\n      for (var _i = 0, inputs_1 = inputs; _i < inputs_1.length; _i++) {\n        var input = inputs_1[_i];\n\n        if (input.id) {\n          result[input.id] = input;\n        }\n      }\n    }\n\n    return result;\n  };\n\n  SubmitActionBase.prototype.internalPrepareForExecution = function (inputs) {\n    if (this._originalData) {\n      this._processedData = JSON.parse(JSON.stringify(this._originalData));\n    } else {\n      this._processedData = {};\n    }\n\n    if (this._processedData && inputs) {\n      for (var _i = 0, _a = Object.keys(inputs); _i < _a.length; _i++) {\n        var key = _a[_i];\n        var input = inputs[key];\n\n        if (input.id && input.isSet()) {\n          this._processedData[input.id] = typeof input.value === \"string\" ? input.value : input.value.toString();\n        }\n      }\n    }\n\n    this._isPrepared = true;\n  };\n\n  Object.defineProperty(SubmitActionBase.prototype, \"data\", {\n    get: function () {\n      return this._isPrepared ? this._processedData : this._originalData;\n    },\n    set: function (value) {\n      this._originalData = value;\n      this._isPrepared = false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  SubmitActionBase.dataProperty = new serialization_1.PropertyDefinition(serialization_1.Versions.v1_0, \"data\");\n  SubmitActionBase.associatedInputsProperty = new serialization_1.CustomProperty(serialization_1.Versions.v1_3, \"associatedInputs\", function (sender, property, source, context) {\n    var value = source[property.name];\n\n    if (value !== undefined && typeof value === \"string\") {\n      return value.toLowerCase() === \"none\" ? \"none\" : \"auto\";\n    }\n\n    return undefined;\n  }, function (sender, property, target, value, context) {\n    context.serializeValue(target, property.name, value);\n  });\n\n  __decorate([serialization_1.property(SubmitActionBase.dataProperty)], SubmitActionBase.prototype, \"_originalData\", void 0);\n\n  __decorate([serialization_1.property(SubmitActionBase.associatedInputsProperty)], SubmitActionBase.prototype, \"associatedInputs\", void 0);\n\n  return SubmitActionBase;\n}(Action);\n\nexports.SubmitActionBase = SubmitActionBase;\n\nvar SubmitAction =\n/** @class */\nfunction (_super) {\n  __extends(SubmitAction, _super);\n\n  function SubmitAction() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SubmitAction.prototype.getJsonTypeName = function () {\n    return SubmitAction.JsonTypeName;\n  }; // Note the \"weird\" way this field is declared is to work around a breaking\n  // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\n\n\n  SubmitAction.JsonTypeName = \"Action.Submit\";\n  return SubmitAction;\n}(SubmitActionBase);\n\nexports.SubmitAction = SubmitAction;\n\nvar ExecuteAction =\n/** @class */\nfunction (_super) {\n  __extends(ExecuteAction, _super);\n\n  function ExecuteAction() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  } //#endregion\n\n\n  ExecuteAction.prototype.getJsonTypeName = function () {\n    return ExecuteAction.JsonTypeName;\n  }; // Note the \"weird\" way this field is declared is to work around a breaking\n  // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\n\n\n  ExecuteAction.JsonTypeName = \"Action.Execute\"; //#region Schema\n\n  ExecuteAction.verbProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_4, \"verb\");\n\n  __decorate([serialization_1.property(ExecuteAction.verbProperty)], ExecuteAction.prototype, \"verb\", void 0);\n\n  return ExecuteAction;\n}(SubmitActionBase);\n\nexports.ExecuteAction = ExecuteAction;\n\nvar OpenUrlAction =\n/** @class */\nfunction (_super) {\n  __extends(OpenUrlAction, _super);\n\n  function OpenUrlAction() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  OpenUrlAction.prototype.getJsonTypeName = function () {\n    return OpenUrlAction.JsonTypeName;\n  };\n\n  OpenUrlAction.prototype.getAriaRole = function () {\n    return \"link\";\n  };\n\n  OpenUrlAction.prototype.internalValidateProperties = function (context) {\n    _super.prototype.internalValidateProperties.call(this, context);\n\n    if (!this.url) {\n      context.addFailure(this, Enums.ValidationEvent.PropertyCantBeNull, strings_1.Strings.errors.propertyMustBeSet(\"url\"));\n    }\n  };\n\n  OpenUrlAction.prototype.getHref = function () {\n    return this.url;\n  }; //#region Schema\n\n\n  OpenUrlAction.urlProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"url\"); //#endregion\n  // Note the \"weird\" way this field is declared is to work around a breaking\n  // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\n\n  OpenUrlAction.JsonTypeName = \"Action.OpenUrl\";\n\n  __decorate([serialization_1.property(OpenUrlAction.urlProperty)], OpenUrlAction.prototype, \"url\", void 0);\n\n  return OpenUrlAction;\n}(Action);\n\nexports.OpenUrlAction = OpenUrlAction;\n\nvar ToggleVisibilityAction =\n/** @class */\nfunction (_super) {\n  __extends(ToggleVisibilityAction, _super);\n\n  function ToggleVisibilityAction() {\n    //#region Schema\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.targetElements = {};\n    return _this;\n  }\n\n  ToggleVisibilityAction.prototype.updateAriaControlsAttribute = function () {\n    // apply aria labels to make it clear which elements this action will toggle\n    if (this.targetElements) {\n      var elementIds = Object.keys(this.targetElements);\n\n      if (this._renderedElement) {\n        if (elementIds.length > 0) {\n          this._renderedElement.setAttribute(\"aria-controls\", elementIds.join(\" \"));\n        } else {\n          this._renderedElement.removeAttribute(\"aria-controls\");\n        }\n      }\n    }\n  };\n\n  ToggleVisibilityAction.prototype.internalValidateProperties = function (context) {\n    _super.prototype.internalValidateProperties.call(this, context);\n\n    if (!this.targetElements) {\n      context.addFailure(this, Enums.ValidationEvent.PropertyCantBeNull, strings_1.Strings.errors.propertyMustBeSet(\"targetElements\"));\n    }\n  };\n\n  ToggleVisibilityAction.prototype.getJsonTypeName = function () {\n    return ToggleVisibilityAction.JsonTypeName;\n  };\n\n  ToggleVisibilityAction.prototype.render = function () {\n    _super.prototype.render.call(this);\n\n    this.updateAriaControlsAttribute();\n  };\n\n  ToggleVisibilityAction.prototype.execute = function () {\n    if (this.parent) {\n      for (var _i = 0, _a = Object.keys(this.targetElements); _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        var targetElement = this.parent.getRootElement().getElementById(elementId);\n\n        if (targetElement) {\n          if (typeof this.targetElements[elementId] === \"boolean\") {\n            targetElement.isVisible = this.targetElements[elementId];\n          } else {\n            targetElement.isVisible = !targetElement.isVisible;\n          }\n        }\n      }\n    }\n  };\n\n  ToggleVisibilityAction.prototype.addTargetElement = function (elementId, isVisible) {\n    if (isVisible === void 0) {\n      isVisible = undefined;\n    }\n\n    this.targetElements[elementId] = isVisible;\n    this.updateAriaControlsAttribute();\n  };\n\n  ToggleVisibilityAction.prototype.removeTargetElement = function (elementId) {\n    delete this.targetElements[elementId];\n    this.updateAriaControlsAttribute();\n  };\n\n  ToggleVisibilityAction.targetElementsProperty = new serialization_1.CustomProperty(serialization_1.Versions.v1_2, \"targetElements\", function (sender, property, source, context) {\n    var result = {};\n\n    if (Array.isArray(source[property.name])) {\n      for (var _i = 0, _a = source[property.name]; _i < _a.length; _i++) {\n        var item = _a[_i];\n\n        if (typeof item === \"string\") {\n          result[item] = undefined;\n        } else if (typeof item === \"object\") {\n          var elementId = item[\"elementId\"];\n\n          if (typeof elementId === \"string\") {\n            result[elementId] = Utils.parseBool(item[\"isVisible\"]);\n          }\n        }\n      }\n    }\n\n    return result;\n  }, function (sender, property, target, value, context) {\n    var targetElements = [];\n\n    for (var _i = 0, _a = Object.keys(value); _i < _a.length; _i++) {\n      var id = _a[_i];\n\n      if (typeof value[id] === \"boolean\") {\n        targetElements.push({\n          elementId: id,\n          isVisible: value[id]\n        });\n      } else {\n        targetElements.push(id);\n      }\n    }\n\n    context.serializeArray(target, property.name, targetElements);\n  }, {}, function (sender) {\n    return {};\n  }); //#endregion\n  // Note the \"weird\" way this field is declared is to work around a breaking\n  // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\n\n  ToggleVisibilityAction.JsonTypeName = \"Action.ToggleVisibility\";\n\n  __decorate([serialization_1.property(ToggleVisibilityAction.targetElementsProperty)], ToggleVisibilityAction.prototype, \"targetElements\", void 0);\n\n  return ToggleVisibilityAction;\n}(Action);\n\nexports.ToggleVisibilityAction = ToggleVisibilityAction;\n\nvar StringWithSubstitutionProperty =\n/** @class */\nfunction (_super) {\n  __extends(StringWithSubstitutionProperty, _super);\n\n  function StringWithSubstitutionProperty(targetVersion, name) {\n    var _this = _super.call(this, targetVersion, name, undefined, function () {\n      return new shared_1.StringWithSubstitutions();\n    }) || this;\n\n    _this.targetVersion = targetVersion;\n    _this.name = name;\n    return _this;\n  }\n\n  StringWithSubstitutionProperty.prototype.parse = function (sender, source, context) {\n    var result = new shared_1.StringWithSubstitutions();\n    result.set(Utils.parseString(source[this.name]));\n    return result;\n  };\n\n  StringWithSubstitutionProperty.prototype.toJSON = function (sender, target, value, context) {\n    context.serializeValue(target, this.name, value.getOriginal());\n  };\n\n  return StringWithSubstitutionProperty;\n}(serialization_1.PropertyDefinition);\n\nvar HttpHeader =\n/** @class */\nfunction (_super) {\n  __extends(HttpHeader, _super); //#endregion\n\n\n  function HttpHeader(name, value) {\n    if (name === void 0) {\n      name = \"\";\n    }\n\n    if (value === void 0) {\n      value = \"\";\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.name = name;\n    _this.value = value;\n    return _this;\n  }\n\n  HttpHeader.prototype.getSchemaKey = function () {\n    return \"HttpHeader\";\n  };\n\n  HttpHeader.prototype.getReferencedInputs = function (inputs, referencedInputs) {\n    this._value.getReferencedInputs(inputs, referencedInputs);\n  };\n\n  HttpHeader.prototype.prepareForExecution = function (inputs) {\n    this._value.substituteInputValues(inputs, shared_1.ContentTypes.applicationXWwwFormUrlencoded);\n  };\n\n  Object.defineProperty(HttpHeader.prototype, \"value\", {\n    get: function () {\n      return this._value.get();\n    },\n    set: function (newValue) {\n      this._value.set(newValue);\n    },\n    enumerable: false,\n    configurable: true\n  }); //#region Schema\n\n  HttpHeader.nameProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"name\");\n  HttpHeader.valueProperty = new StringWithSubstitutionProperty(serialization_1.Versions.v1_0, \"value\");\n\n  __decorate([serialization_1.property(HttpHeader.nameProperty)], HttpHeader.prototype, \"name\", void 0);\n\n  __decorate([serialization_1.property(HttpHeader.valueProperty)], HttpHeader.prototype, \"_value\", void 0);\n\n  return HttpHeader;\n}(serialization_1.SerializableObject);\n\nexports.HttpHeader = HttpHeader;\n\nvar HttpAction =\n/** @class */\nfunction (_super) {\n  __extends(HttpAction, _super);\n\n  function HttpAction() {\n    //#region Schema\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._ignoreInputValidation = false;\n    return _this;\n  }\n\n  HttpAction.prototype.internalGetReferencedInputs = function () {\n    var allInputs = this.parent ? this.parent.getRootElement().getAllInputs() : [];\n    var result = {};\n\n    this._url.getReferencedInputs(allInputs, result);\n\n    for (var _i = 0, _a = this.headers; _i < _a.length; _i++) {\n      var header = _a[_i];\n      header.getReferencedInputs(allInputs, result);\n    }\n\n    this._body.getReferencedInputs(allInputs, result);\n\n    return result;\n  };\n\n  HttpAction.prototype.internalPrepareForExecution = function (inputs) {\n    if (inputs) {\n      this._url.substituteInputValues(inputs, shared_1.ContentTypes.applicationXWwwFormUrlencoded);\n\n      var contentType = shared_1.ContentTypes.applicationJson;\n\n      for (var _i = 0, _a = this.headers; _i < _a.length; _i++) {\n        var header = _a[_i];\n        header.prepareForExecution(inputs);\n\n        if (header.name && header.name.toLowerCase() == \"content-type\") {\n          contentType = header.value;\n        }\n      }\n\n      this._body.substituteInputValues(inputs, contentType);\n    }\n  };\n\n  ;\n\n  HttpAction.prototype.getJsonTypeName = function () {\n    return HttpAction.JsonTypeName;\n  };\n\n  HttpAction.prototype.internalValidateProperties = function (context) {\n    _super.prototype.internalValidateProperties.call(this, context);\n\n    if (!this.url) {\n      context.addFailure(this, Enums.ValidationEvent.PropertyCantBeNull, strings_1.Strings.errors.propertyMustBeSet(\"url\"));\n    }\n\n    if (this.headers.length > 0) {\n      for (var _i = 0, _a = this.headers; _i < _a.length; _i++) {\n        var header = _a[_i];\n\n        if (!header.name) {\n          context.addFailure(this, Enums.ValidationEvent.PropertyCantBeNull, strings_1.Strings.errors.actionHttpHeadersMustHaveNameAndValue());\n        }\n      }\n    }\n  };\n\n  Object.defineProperty(HttpAction.prototype, \"ignoreInputValidation\", {\n    get: function () {\n      return this._ignoreInputValidation;\n    },\n    set: function (value) {\n      this._ignoreInputValidation = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(HttpAction.prototype, \"url\", {\n    get: function () {\n      return this._url.get();\n    },\n    set: function (value) {\n      this._url.set(value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(HttpAction.prototype, \"body\", {\n    get: function () {\n      return this._body.get();\n    },\n    set: function (value) {\n      this._body.set(value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  HttpAction.urlProperty = new StringWithSubstitutionProperty(serialization_1.Versions.v1_0, \"url\");\n  HttpAction.bodyProperty = new StringWithSubstitutionProperty(serialization_1.Versions.v1_0, \"body\");\n  HttpAction.methodProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"method\");\n  HttpAction.headersProperty = new serialization_1.SerializableObjectCollectionProperty(serialization_1.Versions.v1_0, \"headers\", HttpHeader);\n  HttpAction.ignoreInputValidationProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_3, \"ignoreInputValidation\", false); //#endregion\n  // Note the \"weird\" way this field is declared is to work around a breaking\n  // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\n\n  HttpAction.JsonTypeName = \"Action.Http\";\n\n  __decorate([serialization_1.property(HttpAction.urlProperty)], HttpAction.prototype, \"_url\", void 0);\n\n  __decorate([serialization_1.property(HttpAction.bodyProperty)], HttpAction.prototype, \"_body\", void 0);\n\n  __decorate([serialization_1.property(HttpAction.methodProperty)], HttpAction.prototype, \"method\", void 0);\n\n  __decorate([serialization_1.property(HttpAction.headersProperty)], HttpAction.prototype, \"headers\", void 0);\n\n  __decorate([serialization_1.property(HttpAction.ignoreInputValidationProperty)], HttpAction.prototype, \"_ignoreInputValidation\", void 0);\n\n  return HttpAction;\n}(Action);\n\nexports.HttpAction = HttpAction;\n\nvar ShowCardAction =\n/** @class */\nfunction (_super) {\n  __extends(ShowCardAction, _super);\n\n  function ShowCardAction() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.card = new InlineAdaptiveCard();\n    return _this;\n  }\n\n  ShowCardAction.prototype.updateCssClasses = function () {\n    _super.prototype.updateCssClasses.call(this);\n\n    if (this.renderedElement) {\n      var effectiveHostConfig = this.parent ? this.parent.hostConfig : host_config_1.defaultHostConfig;\n      this.renderedElement.classList.add(effectiveHostConfig.makeCssClassName(\"expandable\"));\n      this.renderedElement.setAttribute(\"aria-expanded\", (this.state === 1\n      /* Expanded */\n      ).toString());\n    }\n  };\n\n  ShowCardAction.prototype.internalParse = function (source, context) {\n    _super.prototype.internalParse.call(this, source, context);\n\n    var jsonCard = source[\"card\"];\n\n    if (jsonCard) {\n      this.card.parse(jsonCard, context);\n    } else {\n      context.logParseEvent(this, Enums.ValidationEvent.PropertyCantBeNull, strings_1.Strings.errors.showCardMustHaveCard());\n    }\n  };\n\n  ShowCardAction.prototype.internalToJSON = function (target, context) {\n    _super.prototype.internalToJSON.call(this, target, context);\n\n    if (this.card) {\n      context.serializeValue(target, \"card\", this.card.toJSON(context));\n    }\n  };\n\n  ShowCardAction.prototype.raiseExecuteActionEvent = function () {\n    if (this.hostConfig.actions.showCard.actionMode === Enums.ShowCardActionMode.Popup) {\n      // Only raise the event in Popup mode.\n      _super.prototype.raiseExecuteActionEvent.call(this);\n    }\n  };\n\n  ShowCardAction.prototype.getJsonTypeName = function () {\n    return ShowCardAction.JsonTypeName;\n  };\n\n  ShowCardAction.prototype.internalValidateProperties = function (context) {\n    _super.prototype.internalValidateProperties.call(this, context);\n\n    this.card.internalValidateProperties(context);\n  };\n\n  ShowCardAction.prototype.setParent = function (value) {\n    _super.prototype.setParent.call(this, value);\n\n    this.card.setParent(value);\n  };\n\n  ShowCardAction.prototype.getAllInputs = function (processActions) {\n    if (processActions === void 0) {\n      processActions = true;\n    }\n\n    return this.card.getAllInputs(processActions);\n  };\n\n  ShowCardAction.prototype.getResourceInformation = function () {\n    return _super.prototype.getResourceInformation.call(this).concat(this.card.getResourceInformation());\n  };\n\n  ShowCardAction.prototype.getActionById = function (id) {\n    var result = _super.prototype.getActionById.call(this, id);\n\n    if (!result) {\n      result = this.card.getActionById(id);\n    }\n\n    return result;\n  }; // Note the \"weird\" way this field is declared is to work around a breaking\n  // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\n\n\n  ShowCardAction.JsonTypeName = \"Action.ShowCard\";\n  return ShowCardAction;\n}(Action);\n\nexports.ShowCardAction = ShowCardAction;\n\nvar OverflowAction =\n/** @class */\nfunction (_super) {\n  __extends(OverflowAction, _super);\n\n  function OverflowAction(actions) {\n    var _this = _super.call(this) || this;\n\n    _this.actions = actions;\n    _this.title = strings_1.Strings.defaults.overflowButtonText();\n    return _this;\n  }\n\n  OverflowAction.prototype.getActions = function () {\n    return this.actions;\n  };\n\n  OverflowAction.prototype.getJsonTypeName = function () {\n    return ShowCardAction.JsonTypeName;\n  };\n\n  OverflowAction.prototype.execute = function () {\n    var _this = this;\n\n    var _a;\n\n    var shouldDisplayPopupMenu = !raiseDisplayOverflowActionMenuEvent(this, this.renderedElement);\n\n    if (shouldDisplayPopupMenu && this.renderedElement) {\n      var contextMenu_1 = new controls_1.PopupMenu();\n      contextMenu_1.hostConfig = this.hostConfig;\n\n      var _loop_1 = function (i) {\n        var menuItem = new controls_1.MenuItem(i.toString(), (_a = this_1.actions[i].title) !== null && _a !== void 0 ? _a : \"\");\n        menuItem.isEnabled = this_1.actions[i].isEnabled;\n\n        menuItem.onClick = function () {\n          var actionToExecute = _this.actions[i];\n          contextMenu_1.closePopup(false);\n\n          if (actionToExecute.isEnabled) {\n            actionToExecute.execute();\n          }\n        };\n\n        contextMenu_1.items.add(menuItem);\n      };\n\n      var this_1 = this;\n\n      for (var i = 0; i < this.actions.length; i++) {\n        _loop_1(i);\n      }\n\n      ;\n      contextMenu_1.popup(this.renderedElement);\n    }\n  };\n\n  OverflowAction.JsonTypeName = \"Action.Overflow\";\n  return OverflowAction;\n}(Action);\n\nvar ActionCollection =\n/** @class */\nfunction () {\n  function ActionCollection(owner) {\n    this._items = [];\n    this._renderedActions = [];\n    this._owner = owner;\n  }\n\n  ActionCollection.prototype.isActionAllowed = function (action) {\n    var forbiddenTypes = this._owner.getForbiddenActionTypes();\n\n    if (forbiddenTypes) {\n      for (var _i = 0, forbiddenTypes_1 = forbiddenTypes; _i < forbiddenTypes_1.length; _i++) {\n        var forbiddenType = forbiddenTypes_1[_i];\n\n        if (action.constructor === forbiddenType) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  };\n\n  ActionCollection.prototype.refreshContainer = function () {\n    this._actionCardContainer.innerHTML = \"\";\n\n    if (!this._actionCard) {\n      this._actionCardContainer.style.marginTop = \"0px\";\n      return;\n    }\n\n    this._actionCardContainer.style.marginTop = this.renderedActionCount > 0 ? this._owner.hostConfig.actions.showCard.inlineTopMargin + \"px\" : \"0px\";\n\n    var padding = this._owner.getEffectivePadding();\n\n    this._owner.getImmediateSurroundingPadding(padding);\n\n    var physicalPadding = this._owner.hostConfig.paddingDefinitionToSpacingDefinition(padding);\n\n    if (this._actionCard) {\n      this._actionCard.style.paddingLeft = physicalPadding.left + \"px\";\n      this._actionCard.style.paddingRight = physicalPadding.right + \"px\";\n      this._actionCard.style.marginLeft = \"-\" + physicalPadding.left + \"px\";\n      this._actionCard.style.marginRight = \"-\" + physicalPadding.right + \"px\";\n\n      if (physicalPadding.bottom != 0 && !this._owner.isDesignMode()) {\n        this._actionCard.style.paddingBottom = physicalPadding.bottom + \"px\";\n        this._actionCard.style.marginBottom = \"-\" + physicalPadding.bottom + \"px\";\n      }\n\n      Utils.appendChild(this._actionCardContainer, this._actionCard);\n    }\n  };\n\n  ActionCollection.prototype.layoutChanged = function () {\n    this._owner.getRootElement().updateLayout();\n  };\n\n  ActionCollection.prototype.showActionCard = function (action, suppressStyle, raiseEvent) {\n    if (suppressStyle === void 0) {\n      suppressStyle = false;\n    }\n\n    if (raiseEvent === void 0) {\n      raiseEvent = true;\n    }\n\n    action.card.suppressStyle = suppressStyle; // Always re-render a ShowCard action in design mode; reuse already rendered ShowCard (if available) otherwise\n\n    var renderedCard = action.card.renderedElement && !this._owner.isDesignMode() ? action.card.renderedElement : action.card.render();\n    this._actionCard = renderedCard;\n    this._expandedAction = action;\n    this.refreshContainer();\n\n    if (raiseEvent) {\n      this.layoutChanged();\n      raiseInlineCardExpandedEvent(action, true);\n    }\n  };\n\n  ActionCollection.prototype.collapseExpandedAction = function () {\n    for (var _i = 0, _a = this._renderedActions; _i < _a.length; _i++) {\n      var action = _a[_i];\n      action.state = 0\n      /* Normal */\n      ;\n    }\n\n    var previouslyExpandedAction = this._expandedAction;\n    this._expandedAction = undefined;\n    this._actionCard = undefined;\n    this.refreshContainer();\n\n    if (previouslyExpandedAction) {\n      this.layoutChanged();\n      raiseInlineCardExpandedEvent(previouslyExpandedAction, false);\n    }\n  };\n\n  ActionCollection.prototype.expandShowCardAction = function (action, raiseEvent) {\n    var _this = this;\n\n    var afterSelectedAction = false;\n\n    for (var _i = 0, _a = this._renderedActions; _i < _a.length; _i++) {\n      var renderedAction = _a[_i]; // Remove actions after selected action from tabOrder, to skip focus directly to expanded card\n\n      if (afterSelectedAction) {\n        renderedAction.isFocusable = false;\n      }\n\n      if (renderedAction !== action) {\n        renderedAction.state = 2\n        /* Subdued */\n        ;\n      } else {\n        renderedAction.state = 1\n        /* Expanded */\n        ;\n        afterSelectedAction = true;\n\n        if (renderedAction.renderedElement) {\n          renderedAction.renderedElement.onblur = function (e) {\n            for (var _i = 0, _a = _this._renderedActions; _i < _a.length; _i++) {\n              var ra = _a[_i];\n              ra.isFocusable = true;\n            }\n          };\n        }\n      }\n    }\n\n    this.showActionCard(action, !(this._owner.isAtTheVeryLeft() && this._owner.isAtTheVeryRight()), raiseEvent);\n  };\n\n  ActionCollection.prototype.actionExecuted = function (action) {\n    if (!(action instanceof ShowCardAction)) {\n      this.collapseExpandedAction();\n    } else {\n      if (action === this._expandedAction) {\n        this.collapseExpandedAction();\n      } else if (this._owner.hostConfig.actions.showCard.actionMode === Enums.ShowCardActionMode.Inline) {\n        this.expandShowCardAction(action, true);\n      }\n    }\n  };\n\n  ActionCollection.prototype.parse = function (source, context) {\n    this.clear();\n\n    if (Array.isArray(source)) {\n      for (var _i = 0, source_1 = source; _i < source_1.length; _i++) {\n        var jsonAction = source_1[_i];\n        var action = context.parseAction(this._owner, jsonAction, [], !this._owner.isDesignMode());\n\n        if (action) {\n          this.addAction(action);\n        }\n      }\n    }\n  };\n\n  ActionCollection.prototype.toJSON = function (target, propertyName, context) {\n    context.serializeArray(target, propertyName, this._items);\n  };\n\n  ActionCollection.prototype.getActionAt = function (id) {\n    return this._items[id];\n  };\n\n  ActionCollection.prototype.getActionCount = function () {\n    return this._items.length;\n  };\n\n  ActionCollection.prototype.getActionById = function (id) {\n    var result = undefined;\n\n    for (var _i = 0, _a = this._items; _i < _a.length; _i++) {\n      var item = _a[_i];\n      result = item.getActionById(id);\n\n      if (result) {\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  ActionCollection.prototype.validateProperties = function (context) {\n    if (this._owner.hostConfig.actions.maxActions && this._items.length > this._owner.hostConfig.actions.maxActions) {\n      context.addFailure(this._owner, Enums.ValidationEvent.TooManyActions, strings_1.Strings.errors.tooManyActions(this._owner.hostConfig.actions.maxActions));\n    }\n\n    if (this._items.length > 0 && !this._owner.hostConfig.supportsInteractivity) {\n      context.addFailure(this._owner, Enums.ValidationEvent.InteractivityNotAllowed, strings_1.Strings.errors.interactivityNotAllowed());\n    }\n\n    for (var _i = 0, _a = this._items; _i < _a.length; _i++) {\n      var item = _a[_i];\n\n      if (!this.isActionAllowed(item)) {\n        context.addFailure(this._owner, Enums.ValidationEvent.ActionTypeNotAllowed, strings_1.Strings.errors.actionTypeNotAllowed(item.getJsonTypeName()));\n      }\n\n      item.internalValidateProperties(context);\n    }\n  };\n\n  ActionCollection.prototype.render = function (orientation, isDesignMode) {\n    // Cache hostConfig for better perf\n    var hostConfig = this._owner.hostConfig;\n\n    if (!hostConfig.supportsInteractivity) {\n      return undefined;\n    }\n\n    var element = document.createElement(\"div\");\n    var maxActions = hostConfig.actions.maxActions ? Math.min(hostConfig.actions.maxActions, this._items.length) : this._items.length;\n    this._actionCardContainer = document.createElement(\"div\");\n    this._renderedActions = [];\n\n    if (hostConfig.actions.preExpandSingleShowCardAction && maxActions == 1 && this._items[0] instanceof ShowCardAction && this.isActionAllowed(this._items[0])) {\n      this.showActionCard(this._items[0], true);\n\n      this._renderedActions.push(this._items[0]);\n    } else {\n      var buttonStrip = document.createElement(\"div\");\n      buttonStrip.className = hostConfig.makeCssClassName(\"ac-actionSet\");\n      buttonStrip.style.display = \"flex\";\n      buttonStrip.setAttribute(\"role\", \"menubar\");\n\n      if (orientation == Enums.Orientation.Horizontal) {\n        buttonStrip.style.flexDirection = \"row\";\n\n        if (this._owner.horizontalAlignment && hostConfig.actions.actionAlignment != Enums.ActionAlignment.Stretch) {\n          switch (this._owner.horizontalAlignment) {\n            case Enums.HorizontalAlignment.Center:\n              buttonStrip.style.justifyContent = \"center\";\n              break;\n\n            case Enums.HorizontalAlignment.Right:\n              buttonStrip.style.justifyContent = \"flex-end\";\n              break;\n\n            default:\n              buttonStrip.style.justifyContent = \"flex-start\";\n              break;\n          }\n        } else {\n          switch (hostConfig.actions.actionAlignment) {\n            case Enums.ActionAlignment.Center:\n              buttonStrip.style.justifyContent = \"center\";\n              break;\n\n            case Enums.ActionAlignment.Right:\n              buttonStrip.style.justifyContent = \"flex-end\";\n              break;\n\n            default:\n              buttonStrip.style.justifyContent = \"flex-start\";\n              break;\n          }\n        }\n      } else {\n        buttonStrip.style.flexDirection = \"column\";\n\n        if (this._owner.horizontalAlignment && hostConfig.actions.actionAlignment != Enums.ActionAlignment.Stretch) {\n          switch (this._owner.horizontalAlignment) {\n            case Enums.HorizontalAlignment.Center:\n              buttonStrip.style.alignItems = \"center\";\n              break;\n\n            case Enums.HorizontalAlignment.Right:\n              buttonStrip.style.alignItems = \"flex-end\";\n              break;\n\n            default:\n              buttonStrip.style.alignItems = \"flex-start\";\n              break;\n          }\n        } else {\n          switch (hostConfig.actions.actionAlignment) {\n            case Enums.ActionAlignment.Center:\n              buttonStrip.style.alignItems = \"center\";\n              break;\n\n            case Enums.ActionAlignment.Right:\n              buttonStrip.style.alignItems = \"flex-end\";\n              break;\n\n            case Enums.ActionAlignment.Stretch:\n              buttonStrip.style.alignItems = \"stretch\";\n              break;\n\n            default:\n              buttonStrip.style.alignItems = \"flex-start\";\n              break;\n          }\n        }\n      }\n\n      var allowedActions = this._items.filter(this.isActionAllowed.bind(this));\n\n      var primaryActions_1 = [];\n      var secondaryActions_1 = [];\n\n      if (!this._owner.isDesignMode()) {\n        allowedActions.forEach(function (action) {\n          return action.mode === Enums.ActionMode.Secondary ? secondaryActions_1.push(action) : primaryActions_1.push(action);\n        }); // If primaryActions.length > maxActions, extra actions are moved to overflow\n\n        var overflowPrimaryActions = primaryActions_1.splice(hostConfig.actions.maxActions);\n\n        if (shared_1.GlobalSettings.allowMoreThanMaxActionsInOverflowMenu) {\n          secondaryActions_1.push.apply(secondaryActions_1, overflowPrimaryActions);\n        }\n\n        var shouldRenderOverflowActionButton = true;\n\n        if (secondaryActions_1.length > 0) {\n          if (!this._overflowAction) {\n            this._overflowAction = new OverflowAction(secondaryActions_1);\n\n            this._overflowAction.setParent(this._owner);\n\n            this._overflowAction[\"_actionCollection\"] = this;\n          }\n\n          var isRootAction = this._owner instanceof AdaptiveCard && !this._owner.parent;\n          shouldRenderOverflowActionButton = !raiseRenderOverflowActionsEvent(this._overflowAction, isRootAction);\n        }\n\n        if (this._overflowAction && shouldRenderOverflowActionButton) {\n          primaryActions_1.push(this._overflowAction);\n        }\n      } else {\n        primaryActions_1 = allowedActions;\n      }\n\n      for (var i = 0; i < primaryActions_1.length; i++) {\n        var action = primaryActions_1[i];\n        action.render();\n\n        if (action.renderedElement) {\n          if (primaryActions_1.length > 1) {\n            action.renderedElement.setAttribute(\"aria-posinset\", (i + 1).toString());\n            action.renderedElement.setAttribute(\"aria-setsize\", primaryActions_1.length.toString());\n            action.renderedElement.setAttribute(\"role\", \"menuitem\");\n          }\n\n          if (hostConfig.actions.actionsOrientation == Enums.Orientation.Horizontal && hostConfig.actions.actionAlignment == Enums.ActionAlignment.Stretch) {\n            action.renderedElement.style.flex = \"0 1 100%\";\n          } else {\n            action.renderedElement.style.flex = \"0 1 auto\";\n          }\n\n          buttonStrip.appendChild(action.renderedElement);\n\n          this._renderedActions.push(action);\n\n          if (i < primaryActions_1.length - 1 && hostConfig.actions.buttonSpacing > 0) {\n            var spacer = document.createElement(\"div\");\n\n            if (orientation === Enums.Orientation.Horizontal) {\n              spacer.style.flex = \"0 0 auto\";\n              spacer.style.width = hostConfig.actions.buttonSpacing + \"px\";\n            } else {\n              spacer.style.height = hostConfig.actions.buttonSpacing + \"px\";\n            }\n\n            Utils.appendChild(buttonStrip, spacer);\n          }\n        }\n      }\n\n      var buttonStripContainer = document.createElement(\"div\");\n      buttonStripContainer.style.overflow = \"hidden\";\n      buttonStripContainer.appendChild(buttonStrip);\n      Utils.appendChild(element, buttonStripContainer);\n    }\n\n    Utils.appendChild(element, this._actionCardContainer);\n\n    for (var _i = 0, _a = this._renderedActions; _i < _a.length; _i++) {\n      var renderedAction = _a[_i];\n\n      if (renderedAction.state == 1\n      /* Expanded */\n      ) {\n        this.expandShowCardAction(renderedAction, false);\n        break;\n      }\n    }\n\n    return this._renderedActions.length > 0 ? element : undefined;\n  };\n\n  ActionCollection.prototype.addAction = function (action) {\n    if (!action) {\n      throw new Error(\"The action parameter cannot be null.\");\n    }\n\n    if ((!action.parent || action.parent === this._owner) && this._items.indexOf(action) < 0) {\n      this._items.push(action);\n\n      if (!action.parent) {\n        action.setParent(this._owner);\n      }\n\n      action[\"_actionCollection\"] = this;\n    } else {\n      throw new Error(strings_1.Strings.errors.actionAlreadyParented());\n    }\n  };\n\n  ActionCollection.prototype.removeAction = function (action) {\n    if (this.expandedAction && this._expandedAction == action) {\n      this.collapseExpandedAction();\n    }\n\n    var actionIndex = this._items.indexOf(action);\n\n    if (actionIndex >= 0) {\n      this._items.splice(actionIndex, 1);\n\n      action.setParent(undefined);\n      action[\"_actionCollection\"] = undefined;\n\n      for (var i = 0; i < this._renderedActions.length; i++) {\n        if (this._renderedActions[i] == action) {\n          this._renderedActions.splice(i, 1);\n\n          break;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  };\n\n  ActionCollection.prototype.clear = function () {\n    this._items = [];\n    this._renderedActions = [];\n    this._expandedAction = undefined;\n  };\n\n  ActionCollection.prototype.getAllInputs = function (processActions) {\n    if (processActions === void 0) {\n      processActions = true;\n    }\n\n    var result = [];\n\n    if (processActions) {\n      for (var _i = 0, _a = this._items; _i < _a.length; _i++) {\n        var action = _a[_i];\n        result = result.concat(action.getAllInputs());\n      }\n    }\n\n    return result;\n  };\n\n  ActionCollection.prototype.getResourceInformation = function () {\n    var result = [];\n\n    for (var _i = 0, _a = this._items; _i < _a.length; _i++) {\n      var action = _a[_i];\n      result = result.concat(action.getResourceInformation());\n    }\n\n    return result;\n  };\n\n  Object.defineProperty(ActionCollection.prototype, \"renderedActionCount\", {\n    get: function () {\n      return this._renderedActions.length;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ActionCollection.prototype, \"expandedAction\", {\n    get: function () {\n      return this._expandedAction;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return ActionCollection;\n}();\n\nvar ActionSet =\n/** @class */\nfunction (_super) {\n  __extends(ActionSet, _super);\n\n  function ActionSet() {\n    var _this = _super.call(this) || this;\n\n    _this._actionCollection = new ActionCollection(_this);\n    return _this;\n  }\n\n  ActionSet.prototype.internalParse = function (source, context) {\n    _super.prototype.internalParse.call(this, source, context);\n\n    this._actionCollection.parse(source[\"actions\"], context);\n  };\n\n  ActionSet.prototype.internalToJSON = function (target, context) {\n    _super.prototype.internalToJSON.call(this, target, context);\n\n    this._actionCollection.toJSON(target, \"actions\", context);\n  };\n\n  ActionSet.prototype.internalRender = function () {\n    return this._actionCollection.render(this.orientation !== undefined ? this.orientation : this.hostConfig.actions.actionsOrientation, this.isDesignMode());\n  };\n\n  ActionSet.prototype.isBleedingAtBottom = function () {\n    if (this._actionCollection.renderedActionCount == 0) {\n      return _super.prototype.isBleedingAtBottom.call(this);\n    } else {\n      if (this._actionCollection.getActionCount() == 1) {\n        return this._actionCollection.expandedAction !== undefined && !this.hostConfig.actions.preExpandSingleShowCardAction;\n      } else {\n        return this._actionCollection.expandedAction !== undefined;\n      }\n    }\n  };\n\n  ActionSet.prototype.getJsonTypeName = function () {\n    return \"ActionSet\";\n  };\n\n  ActionSet.prototype.getActionCount = function () {\n    return this._actionCollection.getActionCount();\n  };\n\n  ActionSet.prototype.getActionAt = function (index) {\n    if (index >= 0 && index < this.getActionCount()) {\n      return this._actionCollection.getActionAt(index);\n    } else {\n      return _super.prototype.getActionAt.call(this, index);\n    }\n  };\n\n  ActionSet.prototype.getActionById = function (id) {\n    var result = this._actionCollection.getActionById(id);\n\n    return result ? result : _super.prototype.getActionById.call(this, id);\n  };\n\n  ActionSet.prototype.internalValidateProperties = function (context) {\n    _super.prototype.internalValidateProperties.call(this, context);\n\n    this._actionCollection.validateProperties(context);\n  };\n\n  ActionSet.prototype.addAction = function (action) {\n    this._actionCollection.addAction(action);\n  };\n\n  ActionSet.prototype.getAllInputs = function (processActions) {\n    if (processActions === void 0) {\n      processActions = true;\n    }\n\n    return processActions ? this._actionCollection.getAllInputs() : [];\n  };\n\n  ActionSet.prototype.getResourceInformation = function () {\n    return this._actionCollection.getResourceInformation();\n  };\n  /**\n   * @inheritdoc\n   */\n\n\n  ActionSet.prototype.findDOMNodeOwner = function (node) {\n    var target = undefined;\n\n    for (var i = 0; i < this.getActionCount(); i++) {\n      var action = this.getActionAt(i);\n\n      if (action) {\n        // recur through each Action\n        target = action.findDOMNodeOwner(node);\n\n        if (target) {\n          return target;\n        }\n      }\n    } // if not found in any Action, defer to parent implementation\n\n\n    return _super.prototype.findDOMNodeOwner.call(this, node);\n  };\n\n  Object.defineProperty(ActionSet.prototype, \"isInteractive\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  }); //#region Schema\n\n  ActionSet.orientationProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_1, \"orientation\", Enums.Orientation);\n\n  __decorate([serialization_1.property(ActionSet.orientationProperty)], ActionSet.prototype, \"orientation\", void 0);\n\n  return ActionSet;\n}(CardElement);\n\nexports.ActionSet = ActionSet;\n\nvar ContainerStyleProperty =\n/** @class */\nfunction (_super) {\n  __extends(ContainerStyleProperty, _super);\n\n  function ContainerStyleProperty(targetVersion, name, defaultValue, onGetInitialValue) {\n    var _this = _super.call(this, targetVersion, name, [{\n      value: Enums.ContainerStyle.Default\n    }, {\n      value: Enums.ContainerStyle.Emphasis\n    }, {\n      targetVersion: serialization_1.Versions.v1_2,\n      value: Enums.ContainerStyle.Accent\n    }, {\n      targetVersion: serialization_1.Versions.v1_2,\n      value: Enums.ContainerStyle.Good\n    }, {\n      targetVersion: serialization_1.Versions.v1_2,\n      value: Enums.ContainerStyle.Attention\n    }, {\n      targetVersion: serialization_1.Versions.v1_2,\n      value: Enums.ContainerStyle.Warning\n    }], defaultValue, onGetInitialValue) || this;\n\n    _this.targetVersion = targetVersion;\n    _this.name = name;\n    _this.defaultValue = defaultValue;\n    _this.onGetInitialValue = onGetInitialValue;\n    return _this;\n  }\n\n  return ContainerStyleProperty;\n}(serialization_1.ValueSetProperty);\n\nexports.ContainerStyleProperty = ContainerStyleProperty;\n\nvar StylableCardElementContainer =\n/** @class */\nfunction (_super) {\n  __extends(StylableCardElementContainer, _super);\n\n  function StylableCardElementContainer() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(StylableCardElementContainer.prototype, \"style\", {\n    get: function () {\n      if (this.allowCustomStyle) {\n        var style = this.getValue(StylableCardElementContainer.styleProperty);\n\n        if (style && this.hostConfig.containerStyles.getStyleByName(style)) {\n          return style;\n        }\n      }\n\n      return undefined;\n    },\n    set: function (value) {\n      this.setValue(StylableCardElementContainer.styleProperty, value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StylableCardElementContainer.prototype, \"allowCustomStyle\", {\n    //#endregion\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StylableCardElementContainer.prototype, \"hasExplicitStyle\", {\n    get: function () {\n      return this.getValue(StylableCardElementContainer.styleProperty) !== undefined;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StylableCardElementContainer.prototype.applyBorder = function () {// No border in base implementation\n  };\n\n  StylableCardElementContainer.prototype.applyBackground = function () {\n    if (this.renderedElement) {\n      var styleDefinition = this.hostConfig.containerStyles.getStyleByName(this.style, this.hostConfig.containerStyles.getStyleByName(this.defaultStyle));\n\n      if (styleDefinition.backgroundColor) {\n        var bgColor = Utils.stringToCssColor(styleDefinition.backgroundColor);\n        this.renderedElement.style.backgroundColor = bgColor;\n      }\n    }\n  };\n\n  StylableCardElementContainer.prototype.applyPadding = function () {\n    _super.prototype.applyPadding.call(this);\n\n    if (!this.renderedElement) {\n      return;\n    }\n\n    var physicalPadding = new shared_1.SpacingDefinition();\n\n    if (this.getEffectivePadding()) {\n      physicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(this.getEffectivePadding());\n    }\n\n    this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\n    this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\n    this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\n    this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\n\n    if (this.isBleeding()) {\n      // Bleed into the first parent that does have padding\n      var padding = new shared_1.PaddingDefinition();\n      this.getImmediateSurroundingPadding(padding);\n      var surroundingPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(padding);\n      this.renderedElement.style.marginRight = \"-\" + surroundingPadding.right + \"px\";\n      this.renderedElement.style.marginLeft = \"-\" + surroundingPadding.left + \"px\";\n\n      if (!this.isDesignMode()) {\n        this.renderedElement.style.marginTop = \"-\" + surroundingPadding.top + \"px\";\n        this.renderedElement.style.marginBottom = \"-\" + surroundingPadding.bottom + \"px\";\n      }\n\n      if (this.separatorElement && this.separatorOrientation == Enums.Orientation.Horizontal) {\n        this.separatorElement.style.marginLeft = \"-\" + surroundingPadding.left + \"px\";\n        this.separatorElement.style.marginRight = \"-\" + surroundingPadding.right + \"px\";\n      }\n    } else {\n      this.renderedElement.style.marginRight = \"0\";\n      this.renderedElement.style.marginLeft = \"0\";\n      this.renderedElement.style.marginTop = \"0\";\n      this.renderedElement.style.marginBottom = \"0\";\n\n      if (this.separatorElement && this.separatorOrientation === Enums.Orientation.Horizontal) {\n        this.separatorElement.style.marginRight = \"0\";\n        this.separatorElement.style.marginLeft = \"0\";\n      }\n    }\n  };\n\n  StylableCardElementContainer.prototype.getHasBackground = function () {\n    var currentElement = this.parent;\n\n    while (currentElement) {\n      var currentElementHasBackgroundImage = currentElement instanceof Container ? currentElement.backgroundImage.isValid() : false;\n\n      if (currentElement instanceof StylableCardElementContainer) {\n        if (this.hasExplicitStyle && (currentElement.getEffectiveStyle() != this.getEffectiveStyle() || currentElementHasBackgroundImage)) {\n          return true;\n        }\n      }\n\n      currentElement = currentElement.parent;\n    }\n\n    return false;\n  };\n\n  StylableCardElementContainer.prototype.getDefaultPadding = function () {\n    return this.getHasBackground() || this.getHasBorder() ? new shared_1.PaddingDefinition(Enums.Spacing.Padding, Enums.Spacing.Padding, Enums.Spacing.Padding, Enums.Spacing.Padding) : _super.prototype.getDefaultPadding.call(this);\n  };\n\n  StylableCardElementContainer.prototype.internalValidateProperties = function (context) {\n    _super.prototype.internalValidateProperties.call(this, context);\n\n    var explicitStyle = this.getValue(StylableCardElementContainer.styleProperty);\n\n    if (explicitStyle !== undefined) {\n      var styleDefinition = this.hostConfig.containerStyles.getStyleByName(explicitStyle);\n\n      if (!styleDefinition) {\n        context.addFailure(this, Enums.ValidationEvent.InvalidPropertyValue, strings_1.Strings.errors.invalidPropertyValue(explicitStyle, \"style\"));\n      }\n    }\n  };\n\n  StylableCardElementContainer.prototype.render = function () {\n    var renderedElement = _super.prototype.render.call(this);\n\n    if (renderedElement && this.getHasBackground()) {\n      this.applyBackground();\n    }\n\n    this.applyBorder();\n    return renderedElement;\n  };\n\n  StylableCardElementContainer.prototype.getEffectiveStyle = function () {\n    var effectiveStyle = this.style;\n    return effectiveStyle ? effectiveStyle : _super.prototype.getEffectiveStyle.call(this);\n  }; //#region Schema\n\n\n  StylableCardElementContainer.styleProperty = new ContainerStyleProperty(serialization_1.Versions.v1_0, \"style\");\n\n  __decorate([serialization_1.property(StylableCardElementContainer.styleProperty)], StylableCardElementContainer.prototype, \"style\", null);\n\n  return StylableCardElementContainer;\n}(CardElementContainer);\n\nexports.StylableCardElementContainer = StylableCardElementContainer;\n\nvar ContainerBase =\n/** @class */\nfunction (_super) {\n  __extends(ContainerBase, _super);\n\n  function ContainerBase() {\n    //#region Schema\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._bleed = false;\n    return _this;\n  } //#endregion\n\n\n  ContainerBase.prototype.adjustRenderedElementSize = function (renderedElement) {\n    _super.prototype.adjustRenderedElementSize.call(this, renderedElement);\n\n    if (this.minPixelHeight) {\n      renderedElement.style.minHeight = this.minPixelHeight + \"px\";\n    }\n  };\n\n  ContainerBase.prototype.getHasExpandedAction = function () {\n    return false;\n  };\n\n  ContainerBase.prototype.getBleed = function () {\n    return this._bleed;\n  };\n\n  ContainerBase.prototype.setBleed = function (value) {\n    this._bleed = value;\n  };\n\n  Object.defineProperty(ContainerBase.prototype, \"renderedActionCount\", {\n    get: function () {\n      return 0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ContainerBase.prototype.isBleeding = function () {\n    return (this.getHasBackground() || this.hostConfig.alwaysAllowBleed) && this.getBleed();\n  };\n\n  ContainerBase.bleedProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_2, \"bleed\", false);\n  ContainerBase.minHeightProperty = new serialization_1.PixelSizeProperty(serialization_1.Versions.v1_2, \"minHeight\");\n\n  __decorate([serialization_1.property(ContainerBase.bleedProperty)], ContainerBase.prototype, \"_bleed\", void 0);\n\n  __decorate([serialization_1.property(ContainerBase.minHeightProperty)], ContainerBase.prototype, \"minPixelHeight\", void 0);\n\n  return ContainerBase;\n}(StylableCardElementContainer);\n\nexports.ContainerBase = ContainerBase;\n\nvar BackgroundImage =\n/** @class */\nfunction (_super) {\n  __extends(BackgroundImage, _super);\n\n  function BackgroundImage() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  } //#endregion\n\n\n  BackgroundImage.prototype.getSchemaKey = function () {\n    return \"BackgroundImage\";\n  };\n\n  BackgroundImage.prototype.internalParse = function (source, context) {\n    if (typeof source === \"string\") {\n      this.resetDefaultValues();\n      this.url = source;\n    } else {\n      return _super.prototype.internalParse.call(this, source, context);\n    }\n  };\n\n  BackgroundImage.prototype.apply = function (element) {\n    if (this.url && element.renderedElement) {\n      element.renderedElement.style.backgroundImage = \"url('\" + element.preProcessPropertyValue(BackgroundImage.urlProperty, this.url) + \"')\";\n\n      switch (this.fillMode) {\n        case Enums.FillMode.Repeat:\n          element.renderedElement.style.backgroundRepeat = \"repeat\";\n          break;\n\n        case Enums.FillMode.RepeatHorizontally:\n          element.renderedElement.style.backgroundRepeat = \"repeat-x\";\n          break;\n\n        case Enums.FillMode.RepeatVertically:\n          element.renderedElement.style.backgroundRepeat = \"repeat-y\";\n          break;\n\n        case Enums.FillMode.Cover:\n        default:\n          element.renderedElement.style.backgroundRepeat = \"no-repeat\";\n          element.renderedElement.style.backgroundSize = \"cover\";\n          break;\n      }\n\n      switch (this.horizontalAlignment) {\n        case Enums.HorizontalAlignment.Center:\n          element.renderedElement.style.backgroundPositionX = \"center\";\n          break;\n\n        case Enums.HorizontalAlignment.Right:\n          element.renderedElement.style.backgroundPositionX = \"right\";\n          break;\n      }\n\n      switch (this.verticalAlignment) {\n        case Enums.VerticalAlignment.Center:\n          element.renderedElement.style.backgroundPositionY = \"center\";\n          break;\n\n        case Enums.VerticalAlignment.Bottom:\n          element.renderedElement.style.backgroundPositionY = \"bottom\";\n          break;\n      }\n    }\n  };\n\n  BackgroundImage.prototype.isValid = function () {\n    return this.url ? true : false;\n  }; //#region Schema\n\n\n  BackgroundImage.urlProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"url\");\n  BackgroundImage.fillModeProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_2, \"fillMode\", Enums.FillMode, Enums.FillMode.Cover);\n  BackgroundImage.horizontalAlignmentProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_2, \"horizontalAlignment\", Enums.HorizontalAlignment, Enums.HorizontalAlignment.Left);\n  BackgroundImage.verticalAlignmentProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_2, \"verticalAlignment\", Enums.VerticalAlignment, Enums.VerticalAlignment.Top);\n\n  __decorate([serialization_1.property(BackgroundImage.urlProperty)], BackgroundImage.prototype, \"url\", void 0);\n\n  __decorate([serialization_1.property(BackgroundImage.fillModeProperty)], BackgroundImage.prototype, \"fillMode\", void 0);\n\n  __decorate([serialization_1.property(BackgroundImage.horizontalAlignmentProperty)], BackgroundImage.prototype, \"horizontalAlignment\", void 0);\n\n  __decorate([serialization_1.property(BackgroundImage.verticalAlignmentProperty)], BackgroundImage.prototype, \"verticalAlignment\", void 0);\n\n  return BackgroundImage;\n}(serialization_1.SerializableObject);\n\nexports.BackgroundImage = BackgroundImage;\n\nvar Container =\n/** @class */\nfunction (_super) {\n  __extends(Container, _super);\n\n  function Container() {\n    //#region Schema\n    var _this = _super !== null && _super.apply(this, arguments) || this; //#endregion\n\n\n    _this._items = [];\n    _this._renderedItems = [];\n    return _this;\n  }\n\n  Object.defineProperty(Container.prototype, \"backgroundImage\", {\n    get: function () {\n      return this.getValue(Container.backgroundImageProperty);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Container.prototype.insertItemAt = function (item, index, forceInsert) {\n    if (!item.parent || forceInsert) {\n      if (item.isStandalone) {\n        if (index < 0 || index >= this._items.length) {\n          this._items.push(item);\n        } else {\n          this._items.splice(index, 0, item);\n        }\n\n        item.setParent(this);\n      } else {\n        throw new Error(strings_1.Strings.errors.elementTypeNotStandalone(item.getJsonTypeName()));\n      }\n    } else {\n      throw new Error(strings_1.Strings.errors.elementAlreadyParented());\n    }\n  };\n\n  Container.prototype.getItemsCollectionPropertyName = function () {\n    return \"items\";\n  };\n\n  Container.prototype.applyBackground = function () {\n    if (this.backgroundImage.isValid() && this.renderedElement) {\n      this.backgroundImage.apply(this);\n    }\n\n    _super.prototype.applyBackground.call(this);\n  };\n\n  Container.prototype.internalRender = function () {\n    this._renderedItems = []; // Cache hostConfig to avoid walking the parent hierarchy several times\n\n    var hostConfig = this.hostConfig;\n    var element = document.createElement(\"div\");\n\n    if (this.rtl !== undefined) {\n      element.dir = this.rtl ? \"rtl\" : \"ltr\";\n    }\n\n    element.classList.add(hostConfig.makeCssClassName(\"ac-container\"));\n    element.style.display = \"flex\";\n    element.style.flexDirection = \"column\";\n\n    if (shared_1.GlobalSettings.useAdvancedCardBottomTruncation) {\n      // Forces the container to be at least as tall as its content.\n      //\n      // Fixes a quirk in Chrome where, for nested flex elements, the\n      // inner element's height would never exceed the outer element's\n      // height. This caused overflow truncation to break -- containers\n      // would always be measured as not overflowing, since their heights\n      // were constrained by their parents as opposed to truly reflecting\n      // the height of their content.\n      //\n      // See the \"Browser Rendering Notes\" section of this answer:\n      // https://stackoverflow.com/questions/36247140/why-doesnt-flex-item-shrink-past-content-size\n      element.style.minHeight = '-webkit-min-content';\n    }\n\n    switch (this.getEffectiveVerticalContentAlignment()) {\n      case Enums.VerticalAlignment.Center:\n        element.style.justifyContent = \"center\";\n        break;\n\n      case Enums.VerticalAlignment.Bottom:\n        element.style.justifyContent = \"flex-end\";\n        break;\n\n      default:\n        element.style.justifyContent = \"flex-start\";\n        break;\n    }\n\n    if (this._items.length > 0) {\n      for (var _i = 0, _a = this._items; _i < _a.length; _i++) {\n        var item = _a[_i];\n        var renderedItem = this.isElementAllowed(item) ? item.render() : undefined;\n\n        if (renderedItem) {\n          if (this._renderedItems.length > 0 && item.separatorElement) {\n            item.separatorElement.style.flex = \"0 0 auto\";\n            Utils.appendChild(element, item.separatorElement);\n          }\n\n          Utils.appendChild(element, renderedItem);\n\n          this._renderedItems.push(item);\n        }\n      }\n    } else {\n      if (this.isDesignMode()) {\n        var placeholderElement = this.createPlaceholderElement();\n        placeholderElement.style.width = \"100%\";\n        placeholderElement.style.height = \"100%\";\n        element.appendChild(placeholderElement);\n      }\n    }\n\n    return element;\n  };\n\n  Container.prototype.truncateOverflow = function (maxHeight) {\n    if (this.renderedElement) {\n      // Add 1 to account for rounding differences between browsers\n      var boundary_1 = this.renderedElement.offsetTop + maxHeight + 1;\n\n      var handleElement_1 = function (cardElement) {\n        var elt = cardElement.renderedElement;\n\n        if (elt) {\n          switch (Utils.getFitStatus(elt, boundary_1)) {\n            case Enums.ContainerFitStatus.FullyInContainer:\n              var sizeChanged = cardElement['resetOverflow'](); // If the element's size changed after resetting content,\n              // we have to check if it still fits fully in the card\n\n              if (sizeChanged) {\n                handleElement_1(cardElement);\n              }\n\n              break;\n\n            case Enums.ContainerFitStatus.Overflowing:\n              var maxHeight_1 = boundary_1 - elt.offsetTop;\n              cardElement['handleOverflow'](maxHeight_1);\n              break;\n\n            case Enums.ContainerFitStatus.FullyOutOfContainer:\n              cardElement['handleOverflow'](0);\n              break;\n          }\n        }\n      };\n\n      for (var _i = 0, _a = this._items; _i < _a.length; _i++) {\n        var item = _a[_i];\n        handleElement_1(item);\n      }\n\n      return true;\n    }\n\n    return false;\n  };\n\n  Container.prototype.undoOverflowTruncation = function () {\n    for (var _i = 0, _a = this._items; _i < _a.length; _i++) {\n      var item = _a[_i];\n      item['resetOverflow']();\n    }\n  };\n\n  Container.prototype.getHasBackground = function () {\n    return this.backgroundImage.isValid() || _super.prototype.getHasBackground.call(this);\n  };\n\n  Container.prototype.internalParse = function (source, context) {\n    _super.prototype.internalParse.call(this, source, context);\n\n    this.clear();\n    this.setShouldFallback(false);\n    var jsonItems = source[this.getItemsCollectionPropertyName()];\n\n    if (Array.isArray(jsonItems)) {\n      for (var _i = 0, jsonItems_1 = jsonItems; _i < jsonItems_1.length; _i++) {\n        var item = jsonItems_1[_i];\n        var element = context.parseElement(this, item, !this.isDesignMode());\n\n        if (element) {\n          this.insertItemAt(element, -1, true);\n        }\n      }\n    }\n  };\n\n  Container.prototype.internalToJSON = function (target, context) {\n    _super.prototype.internalToJSON.call(this, target, context);\n\n    context.serializeArray(target, this.getItemsCollectionPropertyName(), this._items);\n  };\n\n  Object.defineProperty(Container.prototype, \"isSelectable\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Container.prototype.getEffectiveVerticalContentAlignment = function () {\n    if (this.verticalContentAlignment !== undefined) {\n      return this.verticalContentAlignment;\n    }\n\n    var parentContainer = this.getParentContainer();\n    return parentContainer ? parentContainer.getEffectiveVerticalContentAlignment() : Enums.VerticalAlignment.Top;\n  };\n\n  Container.prototype.getItemCount = function () {\n    return this._items.length;\n  };\n\n  Container.prototype.getItemAt = function (index) {\n    return this._items[index];\n  };\n\n  Container.prototype.getFirstVisibleRenderedItem = function () {\n    if (this.renderedElement && this._renderedItems && this._renderedItems.length > 0) {\n      for (var _i = 0, _a = this._renderedItems; _i < _a.length; _i++) {\n        var item = _a[_i];\n\n        if (item.isVisible) {\n          return item;\n        }\n      }\n\n      ;\n    }\n\n    return undefined;\n  };\n\n  Container.prototype.getLastVisibleRenderedItem = function () {\n    if (this.renderedElement && this._renderedItems && this._renderedItems.length > 0) {\n      for (var i = this._renderedItems.length - 1; i >= 0; i--) {\n        if (this._renderedItems[i].isVisible) {\n          return this._renderedItems[i];\n        }\n      }\n    }\n\n    return undefined;\n  };\n\n  Container.prototype.getJsonTypeName = function () {\n    return \"Container\";\n  };\n\n  Container.prototype.isFirstElement = function (element) {\n    var designMode = this.isDesignMode();\n\n    for (var _i = 0, _a = this._items; _i < _a.length; _i++) {\n      var item = _a[_i];\n\n      if (item.isVisible || designMode) {\n        return item == element;\n      }\n    }\n\n    return false;\n  };\n\n  Container.prototype.isLastElement = function (element) {\n    var designMode = this.isDesignMode();\n\n    for (var i = this._items.length - 1; i >= 0; i--) {\n      if (this._items[i].isVisible || designMode) {\n        return this._items[i] == element;\n      }\n    }\n\n    return false;\n  };\n\n  Container.prototype.isRtl = function () {\n    if (this.rtl !== undefined) {\n      return this.rtl;\n    } else {\n      var parentContainer = this.getParentContainer();\n      return parentContainer ? parentContainer.isRtl() : false;\n    }\n  };\n\n  Container.prototype.isBleedingAtTop = function () {\n    var firstRenderedItem = this.getFirstVisibleRenderedItem();\n    return this.isBleeding() || (firstRenderedItem ? firstRenderedItem.isBleedingAtTop() : false);\n  };\n\n  Container.prototype.isBleedingAtBottom = function () {\n    var lastRenderedItem = this.getLastVisibleRenderedItem();\n    return this.isBleeding() || (lastRenderedItem ? lastRenderedItem.isBleedingAtBottom() && lastRenderedItem.getEffectiveStyle() == this.getEffectiveStyle() : false);\n  };\n\n  Container.prototype.indexOf = function (cardElement) {\n    return this._items.indexOf(cardElement);\n  };\n\n  Container.prototype.addItem = function (item) {\n    this.insertItemAt(item, -1, false);\n  };\n\n  Container.prototype.insertItemBefore = function (item, insertBefore) {\n    this.insertItemAt(item, this._items.indexOf(insertBefore), false);\n  };\n\n  Container.prototype.insertItemAfter = function (item, insertAfter) {\n    this.insertItemAt(item, this._items.indexOf(insertAfter) + 1, false);\n  };\n\n  Container.prototype.removeItem = function (item) {\n    var itemIndex = this._items.indexOf(item);\n\n    if (itemIndex >= 0) {\n      this._items.splice(itemIndex, 1);\n\n      item.setParent(undefined);\n      this.updateLayout();\n      return true;\n    }\n\n    return false;\n  };\n\n  Container.prototype.clear = function () {\n    this._items = [];\n    this._renderedItems = [];\n  };\n\n  Container.prototype.getResourceInformation = function () {\n    var result = _super.prototype.getResourceInformation.call(this);\n\n    if (this.backgroundImage.isValid()) {\n      result.push({\n        url: this.backgroundImage.url,\n        mimeType: \"image\"\n      });\n    }\n\n    return result;\n  };\n\n  Container.prototype.getActionById = function (id) {\n    var result = _super.prototype.getActionById.call(this, id);\n\n    if (!result) {\n      if (this.selectAction) {\n        result = this.selectAction.getActionById(id);\n      }\n\n      if (!result) {\n        for (var _i = 0, _a = this._items; _i < _a.length; _i++) {\n          var item = _a[_i];\n          result = item.getActionById(id);\n\n          if (result) {\n            break;\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  Object.defineProperty(Container.prototype, \"padding\", {\n    get: function () {\n      return this.getPadding();\n    },\n    set: function (value) {\n      this.setPadding(value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Container.prototype, \"selectAction\", {\n    get: function () {\n      return this._selectAction;\n    },\n    set: function (value) {\n      this._selectAction = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Container.prototype, \"bleed\", {\n    get: function () {\n      return this.getBleed();\n    },\n    set: function (value) {\n      this.setBleed(value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Container.backgroundImageProperty = new serialization_1.SerializableObjectProperty(serialization_1.Versions.v1_0, \"backgroundImage\", BackgroundImage);\n  Container.verticalContentAlignmentProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_1, \"verticalContentAlignment\", Enums.VerticalAlignment);\n  Container.rtlProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_0, \"rtl\");\n\n  __decorate([serialization_1.property(Container.backgroundImageProperty)], Container.prototype, \"backgroundImage\", null);\n\n  __decorate([serialization_1.property(Container.verticalContentAlignmentProperty)], Container.prototype, \"verticalContentAlignment\", void 0);\n\n  __decorate([serialization_1.property(Container.rtlProperty)], Container.prototype, \"rtl\", void 0);\n\n  return Container;\n}(ContainerBase);\n\nexports.Container = Container;\n\nvar Column =\n/** @class */\nfunction (_super) {\n  __extends(Column, _super);\n\n  function Column(width) {\n    if (width === void 0) {\n      width = \"stretch\";\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.width = \"stretch\"; //#endregion\n\n    _this._computedWeight = 0;\n    _this.width = width;\n    return _this;\n  }\n\n  Column.prototype.adjustRenderedElementSize = function (renderedElement) {\n    var minDesignTimeColumnHeight = 20;\n\n    if (this.isDesignMode()) {\n      renderedElement.style.minWidth = \"20px\";\n      renderedElement.style.minHeight = (!this.minPixelHeight ? minDesignTimeColumnHeight : Math.max(this.minPixelHeight, minDesignTimeColumnHeight)) + \"px\";\n    } else {\n      renderedElement.style.minWidth = \"0\";\n\n      if (this.minPixelHeight) {\n        renderedElement.style.minHeight = this.minPixelHeight + \"px\";\n      }\n    }\n\n    if (this.width === \"auto\") {\n      renderedElement.style.flex = \"0 1 auto\";\n    } else if (this.width === \"stretch\") {\n      renderedElement.style.flex = \"1 1 50px\";\n    } else if (this.width instanceof shared_1.SizeAndUnit) {\n      if (this.width.unit == Enums.SizeUnit.Pixel) {\n        renderedElement.style.flex = \"0 0 auto\";\n        renderedElement.style.width = this.width.physicalSize + \"px\";\n      } else {\n        renderedElement.style.flex = \"1 1 \" + (this._computedWeight > 0 ? this._computedWeight : this.width.physicalSize) + \"%\";\n      }\n    }\n  };\n\n  Column.prototype.shouldSerialize = function (context) {\n    return true;\n  };\n\n  Object.defineProperty(Column.prototype, \"separatorOrientation\", {\n    get: function () {\n      return Enums.Orientation.Vertical;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Column.prototype.getJsonTypeName = function () {\n    return \"Column\";\n  };\n\n  Object.defineProperty(Column.prototype, \"hasVisibleSeparator\", {\n    get: function () {\n      if (this.parent && this.parent instanceof ColumnSet) {\n        return this.separatorElement !== undefined && !this.parent.isLeftMostElement(this);\n      } else {\n        return false;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Column.prototype, \"isStandalone\", {\n    get: function () {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  }); //#region Schema\n\n  Column.widthProperty = new serialization_1.CustomProperty(serialization_1.Versions.v1_0, \"width\", function (sender, property, source, context) {\n    var result = property.defaultValue;\n    var value = source[property.name];\n    var invalidWidth = false;\n\n    if (typeof value === \"number\" && !isNaN(value)) {\n      result = new shared_1.SizeAndUnit(value, Enums.SizeUnit.Weight);\n    } else if (value === \"auto\" || value === \"stretch\") {\n      result = value;\n    } else if (typeof value === \"string\") {\n      try {\n        result = shared_1.SizeAndUnit.parse(value);\n\n        if (result.unit === Enums.SizeUnit.Pixel && property.targetVersion.compareTo(context.targetVersion) > 0) {\n          invalidWidth = true;\n        }\n      } catch (e) {\n        invalidWidth = true;\n      }\n    } else {\n      invalidWidth = true;\n    }\n\n    if (invalidWidth) {\n      context.logParseEvent(sender, Enums.ValidationEvent.InvalidPropertyValue, strings_1.Strings.errors.invalidColumnWidth(value));\n      result = \"auto\";\n    }\n\n    return result;\n  }, function (sender, property, target, value, context) {\n    if (value instanceof shared_1.SizeAndUnit) {\n      if (value.unit === Enums.SizeUnit.Pixel) {\n        context.serializeValue(target, \"width\", value.physicalSize + \"px\");\n      } else {\n        context.serializeNumber(target, \"width\", value.physicalSize);\n      }\n    } else {\n      context.serializeValue(target, \"width\", value);\n    }\n  }, \"stretch\");\n\n  __decorate([serialization_1.property(Column.widthProperty)], Column.prototype, \"width\", void 0);\n\n  return Column;\n}(Container);\n\nexports.Column = Column;\n\nvar ColumnSet =\n/** @class */\nfunction (_super) {\n  __extends(ColumnSet, _super);\n\n  function ColumnSet() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._columns = [];\n    return _this;\n  }\n\n  ColumnSet.prototype.createColumnInstance = function (source, context) {\n    return context.parseCardObject(this, source, [], // Forbidden types not supported for elements for now\n    !this.isDesignMode(), function (typeName) {\n      return !typeName || typeName === \"Column\" ? new Column() : undefined;\n    }, function (typeName, errorType) {\n      context.logParseEvent(undefined, Enums.ValidationEvent.ElementTypeNotAllowed, strings_1.Strings.errors.elementTypeNotAllowed(typeName));\n    });\n  };\n\n  ColumnSet.prototype.internalRender = function () {\n    this._renderedColumns = [];\n\n    if (this._columns.length > 0) {\n      // Cache hostConfig to avoid walking the parent hierarchy several times\n      var hostConfig = this.hostConfig;\n      var element = document.createElement(\"div\");\n      element.className = hostConfig.makeCssClassName(\"ac-columnSet\");\n      element.style.display = \"flex\";\n\n      if (shared_1.GlobalSettings.useAdvancedCardBottomTruncation) {\n        // See comment in Container.internalRender()\n        element.style.minHeight = '-webkit-min-content';\n      }\n\n      switch (this.getEffectiveHorizontalAlignment()) {\n        case Enums.HorizontalAlignment.Center:\n          element.style.justifyContent = \"center\";\n          break;\n\n        case Enums.HorizontalAlignment.Right:\n          element.style.justifyContent = \"flex-end\";\n          break;\n\n        default:\n          element.style.justifyContent = \"flex-start\";\n          break;\n      }\n\n      var totalWeight = 0;\n\n      for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {\n        var column = _a[_i];\n\n        if (column.width instanceof shared_1.SizeAndUnit && column.width.unit == Enums.SizeUnit.Weight) {\n          totalWeight += column.width.physicalSize;\n        }\n      }\n\n      for (var _b = 0, _c = this._columns; _b < _c.length; _b++) {\n        var column = _c[_b];\n\n        if (column.width instanceof shared_1.SizeAndUnit && column.width.unit == Enums.SizeUnit.Weight && totalWeight > 0) {\n          var computedWeight = 100 / totalWeight * column.width.physicalSize; // Best way to emulate \"internal\" access I know of\n\n          column[\"_computedWeight\"] = computedWeight;\n        }\n\n        var renderedColumn = column.render();\n\n        if (renderedColumn) {\n          if (this._renderedColumns.length > 0 && column.separatorElement) {\n            column.separatorElement.style.flex = \"0 0 auto\";\n            Utils.appendChild(element, column.separatorElement);\n          }\n\n          Utils.appendChild(element, renderedColumn);\n\n          this._renderedColumns.push(column);\n        }\n      }\n\n      return this._renderedColumns.length > 0 ? element : undefined;\n    } else {\n      return undefined;\n    }\n  };\n\n  ColumnSet.prototype.truncateOverflow = function (maxHeight) {\n    for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {\n      var column = _a[_i];\n      column['handleOverflow'](maxHeight);\n    }\n\n    return true;\n  };\n\n  ColumnSet.prototype.undoOverflowTruncation = function () {\n    for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {\n      var column = _a[_i];\n      column['resetOverflow']();\n    }\n  };\n\n  Object.defineProperty(ColumnSet.prototype, \"isSelectable\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ColumnSet.prototype.internalParse = function (source, context) {\n    _super.prototype.internalParse.call(this, source, context);\n\n    this._columns = [];\n    this._renderedColumns = [];\n    var jsonColumns = source[\"columns\"];\n\n    if (Array.isArray(jsonColumns)) {\n      for (var _i = 0, jsonColumns_1 = jsonColumns; _i < jsonColumns_1.length; _i++) {\n        var item = jsonColumns_1[_i];\n        var column = this.createColumnInstance(item, context);\n\n        if (column) {\n          this._columns.push(column);\n        }\n      }\n    }\n  };\n\n  ColumnSet.prototype.internalToJSON = function (target, context) {\n    _super.prototype.internalToJSON.call(this, target, context);\n\n    context.serializeArray(target, \"columns\", this._columns);\n  };\n\n  ColumnSet.prototype.isFirstElement = function (element) {\n    for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {\n      var column = _a[_i];\n\n      if (column.isVisible) {\n        return column == element;\n      }\n    }\n\n    return false;\n  };\n\n  ColumnSet.prototype.isBleedingAtTop = function () {\n    if (this.isBleeding()) {\n      return true;\n    }\n\n    if (this._renderedColumns && this._renderedColumns.length > 0) {\n      for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {\n        var column = _a[_i];\n\n        if (column.isBleedingAtTop()) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  ColumnSet.prototype.isBleedingAtBottom = function () {\n    if (this.isBleeding()) {\n      return true;\n    }\n\n    if (this._renderedColumns && this._renderedColumns.length > 0) {\n      for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {\n        var column = _a[_i];\n\n        if (column.isBleedingAtBottom()) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  ColumnSet.prototype.getItemCount = function () {\n    return this._columns.length;\n  };\n\n  ColumnSet.prototype.getFirstVisibleRenderedItem = function () {\n    if (this.renderedElement && this._renderedColumns && this._renderedColumns.length > 0) {\n      return this._renderedColumns[0];\n    } else {\n      return undefined;\n    }\n  };\n\n  ColumnSet.prototype.getLastVisibleRenderedItem = function () {\n    if (this.renderedElement && this._renderedColumns && this._renderedColumns.length > 0) {\n      return this._renderedColumns[this._renderedColumns.length - 1];\n    } else {\n      return undefined;\n    }\n  };\n\n  ColumnSet.prototype.getColumnAt = function (index) {\n    return this._columns[index];\n  };\n\n  ColumnSet.prototype.getItemAt = function (index) {\n    return this.getColumnAt(index);\n  };\n\n  ColumnSet.prototype.getJsonTypeName = function () {\n    return \"ColumnSet\";\n  };\n\n  ColumnSet.prototype.internalValidateProperties = function (context) {\n    _super.prototype.internalValidateProperties.call(this, context);\n\n    var weightedColumns = 0;\n    var stretchedColumns = 0;\n\n    for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {\n      var column = _a[_i];\n\n      if (typeof column.width === \"number\") {\n        weightedColumns++;\n      } else if (column.width === \"stretch\") {\n        stretchedColumns++;\n      }\n    }\n\n    if (weightedColumns > 0 && stretchedColumns > 0) {\n      context.addFailure(this, Enums.ValidationEvent.Hint, strings_1.Strings.hints.dontUseWeightedAndStrecthedColumnsInSameSet());\n    }\n  };\n\n  ColumnSet.prototype.addColumn = function (column) {\n    if (!column.parent) {\n      this._columns.push(column);\n\n      column.setParent(this);\n    } else {\n      throw new Error(strings_1.Strings.errors.columnAlreadyBelongsToAnotherSet());\n    }\n  };\n\n  ColumnSet.prototype.removeItem = function (item) {\n    if (item instanceof Column) {\n      var itemIndex = this._columns.indexOf(item);\n\n      if (itemIndex >= 0) {\n        this._columns.splice(itemIndex, 1);\n\n        item.setParent(undefined);\n        this.updateLayout();\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  ColumnSet.prototype.indexOf = function (cardElement) {\n    return cardElement instanceof Column ? this._columns.indexOf(cardElement) : -1;\n  };\n\n  ColumnSet.prototype.isLeftMostElement = function (element) {\n    return this._columns.indexOf(element) == 0;\n  };\n\n  ColumnSet.prototype.isRightMostElement = function (element) {\n    return this._columns.indexOf(element) == this._columns.length - 1;\n  };\n\n  ColumnSet.prototype.isTopElement = function (element) {\n    return this._columns.indexOf(element) >= 0;\n  };\n\n  ColumnSet.prototype.isBottomElement = function (element) {\n    return this._columns.indexOf(element) >= 0;\n  };\n\n  ColumnSet.prototype.getActionById = function (id) {\n    var result = undefined;\n\n    for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {\n      var column = _a[_i];\n      result = column.getActionById(id);\n\n      if (result) {\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  Object.defineProperty(ColumnSet.prototype, \"bleed\", {\n    get: function () {\n      return this.getBleed();\n    },\n    set: function (value) {\n      this.setBleed(value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ColumnSet.prototype, \"padding\", {\n    get: function () {\n      return this.getPadding();\n    },\n    set: function (value) {\n      this.setPadding(value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ColumnSet.prototype, \"selectAction\", {\n    get: function () {\n      return this._selectAction;\n    },\n    set: function (value) {\n      this._selectAction = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return ColumnSet;\n}(ContainerBase);\n\nexports.ColumnSet = ColumnSet;\n\nfunction raiseImageLoadedEvent(image) {\n  var card = image.getRootElement();\n  var onImageLoadedHandler = card && card.onImageLoaded ? card.onImageLoaded : AdaptiveCard.onImageLoaded;\n\n  if (onImageLoadedHandler) {\n    onImageLoadedHandler(image);\n  }\n}\n\nfunction raiseAnchorClickedEvent(element, anchor, ev) {\n  var card = element.getRootElement();\n  var onAnchorClickedHandler = card && card.onAnchorClicked ? card.onAnchorClicked : AdaptiveCard.onAnchorClicked;\n  return onAnchorClickedHandler !== undefined ? onAnchorClickedHandler(element, anchor, ev) : false;\n}\n\nfunction raiseExecuteActionEvent(action) {\n  var card = action.parent ? action.parent.getRootElement() : undefined;\n  var onExecuteActionHandler = card && card.onExecuteAction ? card.onExecuteAction : AdaptiveCard.onExecuteAction;\n\n  if (action.prepareForExecution() && onExecuteActionHandler) {\n    onExecuteActionHandler(action);\n  }\n}\n\nfunction raiseInlineCardExpandedEvent(action, isExpanded) {\n  var card = action.parent ? action.parent.getRootElement() : undefined;\n  var onInlineCardExpandedHandler = card && card.onInlineCardExpanded ? card.onInlineCardExpanded : AdaptiveCard.onInlineCardExpanded;\n\n  if (onInlineCardExpandedHandler) {\n    onInlineCardExpandedHandler(action, isExpanded);\n  }\n}\n\nfunction raiseInputValueChangedEvent(input) {\n  var card = input.getRootElement();\n  var onInputValueChangedHandler = card && card.onInputValueChanged ? card.onInputValueChanged : AdaptiveCard.onInputValueChanged;\n\n  if (onInputValueChangedHandler) {\n    onInputValueChangedHandler(input);\n  }\n}\n\nfunction raiseElementVisibilityChangedEvent(element, shouldUpdateLayout) {\n  if (shouldUpdateLayout === void 0) {\n    shouldUpdateLayout = true;\n  }\n\n  var rootElement = element.getRootElement();\n\n  if (shouldUpdateLayout) {\n    rootElement.updateLayout();\n  }\n\n  var card = rootElement;\n  var onElementVisibilityChangedHandler = card && card.onElementVisibilityChanged ? card.onElementVisibilityChanged : AdaptiveCard.onElementVisibilityChanged;\n\n  if (onElementVisibilityChangedHandler !== undefined) {\n    onElementVisibilityChangedHandler(element);\n  }\n}\n/**\n * @returns return false to continue with default context menu; return true to skip SDK default context menu\n */\n\n\nfunction raiseDisplayOverflowActionMenuEvent(action, target) {\n  var card = action.parent ? action.parent.getRootElement() : undefined;\n  var onDisplayOverflowActionMenuHandler = card && card.onDisplayOverflowActionMenu ? card.onDisplayOverflowActionMenu : AdaptiveCard.onDisplayOverflowActionMenu;\n  return onDisplayOverflowActionMenuHandler !== undefined ? onDisplayOverflowActionMenuHandler(action.getActions(), target) : false;\n}\n/**\n * @returns return false to continue with default action button; return true to skip SDK default action button\n */\n\n\nfunction raiseRenderOverflowActionsEvent(action, isAtRootLevelActions) {\n  var card = action.parent ? action.parent.getRootElement() : undefined;\n  var onRenderOverflowActionsHandler = card && card.onRenderOverflowActions ? card.onRenderOverflowActions : AdaptiveCard.onRenderOverflowActions;\n  return onRenderOverflowActionsHandler !== undefined ? onRenderOverflowActionsHandler(action.getActions(), isAtRootLevelActions) : false;\n}\n\nvar ContainerWithActions =\n/** @class */\nfunction (_super) {\n  __extends(ContainerWithActions, _super);\n\n  function ContainerWithActions() {\n    var _this = _super.call(this) || this;\n\n    _this._actionCollection = new ActionCollection(_this);\n    return _this;\n  }\n\n  ContainerWithActions.prototype.internalParse = function (source, context) {\n    _super.prototype.internalParse.call(this, source, context);\n\n    this._actionCollection.parse(source[\"actions\"], context);\n  };\n\n  ContainerWithActions.prototype.internalToJSON = function (target, context) {\n    _super.prototype.internalToJSON.call(this, target, context);\n\n    this._actionCollection.toJSON(target, \"actions\", context);\n  };\n\n  ContainerWithActions.prototype.internalRender = function () {\n    var element = _super.prototype.internalRender.call(this);\n\n    if (element) {\n      var renderedActions = this._actionCollection.render(this.hostConfig.actions.actionsOrientation, false);\n\n      if (renderedActions) {\n        Utils.appendChild(element, renderSeparation(this.hostConfig, {\n          spacing: this.hostConfig.getEffectiveSpacing(this.hostConfig.actions.spacing)\n        }, Enums.Orientation.Horizontal));\n        Utils.appendChild(element, renderedActions);\n      }\n\n      if (this.renderIfEmpty) {\n        return element;\n      } else {\n        return element.children.length > 0 ? element : undefined;\n      }\n    } else {\n      return undefined;\n    }\n  };\n\n  ContainerWithActions.prototype.getHasExpandedAction = function () {\n    if (this.renderedActionCount == 0) {\n      return false;\n    } else if (this.renderedActionCount == 1) {\n      return this._actionCollection.expandedAction !== undefined && !this.hostConfig.actions.preExpandSingleShowCardAction;\n    } else {\n      return this._actionCollection.expandedAction !== undefined;\n    }\n  };\n\n  Object.defineProperty(ContainerWithActions.prototype, \"renderedActionCount\", {\n    get: function () {\n      return this._actionCollection.renderedActionCount;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ContainerWithActions.prototype, \"renderIfEmpty\", {\n    get: function () {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ContainerWithActions.prototype.getActionCount = function () {\n    return this._actionCollection.getActionCount();\n  };\n\n  ContainerWithActions.prototype.getActionAt = function (index) {\n    if (index >= 0 && index < this.getActionCount()) {\n      return this._actionCollection.getActionAt(index);\n    } else {\n      return _super.prototype.getActionAt.call(this, index);\n    }\n  };\n\n  ContainerWithActions.prototype.getActionById = function (id) {\n    var result = this._actionCollection.getActionById(id);\n\n    return result ? result : _super.prototype.getActionById.call(this, id);\n  };\n\n  ContainerWithActions.prototype.internalValidateProperties = function (context) {\n    _super.prototype.internalValidateProperties.call(this, context);\n\n    if (this._actionCollection) {\n      this._actionCollection.validateProperties(context);\n    }\n  };\n\n  ContainerWithActions.prototype.isLastElement = function (element) {\n    return _super.prototype.isLastElement.call(this, element) && this._actionCollection.getActionCount() == 0;\n  };\n\n  ContainerWithActions.prototype.addAction = function (action) {\n    this._actionCollection.addAction(action);\n  };\n\n  ContainerWithActions.prototype.clear = function () {\n    _super.prototype.clear.call(this);\n\n    this._actionCollection.clear();\n  };\n\n  ContainerWithActions.prototype.getAllInputs = function (processActions) {\n    if (processActions === void 0) {\n      processActions = true;\n    }\n\n    var result = _super.prototype.getAllInputs.call(this, processActions);\n\n    if (processActions) {\n      result = result.concat(this._actionCollection.getAllInputs(processActions));\n    }\n\n    return result;\n  };\n\n  ContainerWithActions.prototype.getResourceInformation = function () {\n    return _super.prototype.getResourceInformation.call(this).concat(this._actionCollection.getResourceInformation());\n  };\n\n  ContainerWithActions.prototype.isBleedingAtBottom = function () {\n    if (this._actionCollection.renderedActionCount == 0) {\n      return _super.prototype.isBleedingAtBottom.call(this);\n    } else {\n      if (this._actionCollection.getActionCount() == 1) {\n        return this._actionCollection.expandedAction !== undefined && !this.hostConfig.actions.preExpandSingleShowCardAction;\n      } else {\n        return this._actionCollection.expandedAction !== undefined;\n      }\n    }\n  };\n\n  Object.defineProperty(ContainerWithActions.prototype, \"isStandalone\", {\n    get: function () {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return ContainerWithActions;\n}(Container);\n\nexports.ContainerWithActions = ContainerWithActions;\n\nvar RefreshActionProperty =\n/** @class */\nfunction (_super) {\n  __extends(RefreshActionProperty, _super);\n\n  function RefreshActionProperty(targetVersion, name) {\n    var _this = _super.call(this, targetVersion, name, undefined) || this;\n\n    _this.targetVersion = targetVersion;\n    _this.name = name;\n    return _this;\n  }\n\n  RefreshActionProperty.prototype.parse = function (sender, source, context) {\n    var action = context.parseAction(sender.parent, source[this.name], [], false);\n\n    if (action !== undefined) {\n      if (action instanceof ExecuteAction) {\n        return action;\n      }\n\n      context.logParseEvent(sender, Enums.ValidationEvent.ActionTypeNotAllowed, strings_1.Strings.errors.actionTypeNotAllowed(action.getJsonTypeName()));\n    }\n\n    context.logParseEvent(sender, Enums.ValidationEvent.PropertyCantBeNull, strings_1.Strings.errors.propertyMustBeSet(\"action\"));\n    return undefined;\n  };\n\n  RefreshActionProperty.prototype.toJSON = function (sender, target, value, context) {\n    context.serializeValue(target, this.name, value ? value.toJSON(context) : undefined, undefined, true);\n  };\n\n  return RefreshActionProperty;\n}(serialization_1.PropertyDefinition);\n\nexports.RefreshActionProperty = RefreshActionProperty;\n\nvar RefreshDefinition =\n/** @class */\nfunction (_super) {\n  __extends(RefreshDefinition, _super);\n\n  function RefreshDefinition() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(RefreshDefinition.prototype, \"action\", {\n    get: function () {\n      return this.getValue(RefreshDefinition.actionProperty);\n    },\n    set: function (value) {\n      this.setValue(RefreshDefinition.actionProperty, value);\n\n      if (value) {\n        value.setParent(this.parent);\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  RefreshDefinition.prototype.getSchemaKey = function () {\n    return \"RefreshDefinition\";\n  }; //#region Schema\n\n\n  RefreshDefinition.actionProperty = new RefreshActionProperty(serialization_1.Versions.v1_4, \"action\");\n  RefreshDefinition.userIdsProperty = new serialization_1.StringArrayProperty(serialization_1.Versions.v1_4, \"userIds\");\n\n  __decorate([serialization_1.property(RefreshDefinition.actionProperty)], RefreshDefinition.prototype, \"action\", null);\n\n  __decorate([serialization_1.property(RefreshDefinition.userIdsProperty)], RefreshDefinition.prototype, \"userIds\", void 0);\n\n  return RefreshDefinition;\n}(serialization_1.SerializableObject);\n\nexports.RefreshDefinition = RefreshDefinition;\n\nvar AuthCardButton =\n/** @class */\nfunction (_super) {\n  __extends(AuthCardButton, _super);\n\n  function AuthCardButton() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AuthCardButton.prototype.getSchemaKey = function () {\n    return \"AuthCardButton\";\n  }; //#region Schema\n\n\n  AuthCardButton.typeProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_4, \"type\");\n  AuthCardButton.titleProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_4, \"title\");\n  AuthCardButton.imageProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_4, \"image\");\n  AuthCardButton.valueProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_4, \"value\");\n\n  __decorate([serialization_1.property(AuthCardButton.typeProperty)], AuthCardButton.prototype, \"type\", void 0);\n\n  __decorate([serialization_1.property(AuthCardButton.titleProperty)], AuthCardButton.prototype, \"title\", void 0);\n\n  __decorate([serialization_1.property(AuthCardButton.imageProperty)], AuthCardButton.prototype, \"image\", void 0);\n\n  __decorate([serialization_1.property(AuthCardButton.valueProperty)], AuthCardButton.prototype, \"value\", void 0);\n\n  return AuthCardButton;\n}(serialization_1.SerializableObject);\n\nexports.AuthCardButton = AuthCardButton;\n\nvar TokenExchangeResource =\n/** @class */\nfunction (_super) {\n  __extends(TokenExchangeResource, _super);\n\n  function TokenExchangeResource() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TokenExchangeResource.prototype.getSchemaKey = function () {\n    return \"TokenExchangeResource\";\n  }; //#region Schema\n\n\n  TokenExchangeResource.idProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_4, \"id\");\n  TokenExchangeResource.uriProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_4, \"uri\");\n  TokenExchangeResource.providerIdProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_4, \"providerId\");\n\n  __decorate([serialization_1.property(TokenExchangeResource.idProperty)], TokenExchangeResource.prototype, \"id\", void 0);\n\n  __decorate([serialization_1.property(TokenExchangeResource.uriProperty)], TokenExchangeResource.prototype, \"uri\", void 0);\n\n  __decorate([serialization_1.property(TokenExchangeResource.providerIdProperty)], TokenExchangeResource.prototype, \"providerId\", void 0);\n\n  return TokenExchangeResource;\n}(serialization_1.SerializableObject);\n\nexports.TokenExchangeResource = TokenExchangeResource;\n\nvar Authentication =\n/** @class */\nfunction (_super) {\n  __extends(Authentication, _super);\n\n  function Authentication() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Authentication.prototype.getSchemaKey = function () {\n    return \"Authentication\";\n  }; //#region Schema\n\n\n  Authentication.textProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_4, \"text\");\n  Authentication.connectionNameProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_4, \"connectionName\");\n  Authentication.buttonsProperty = new serialization_1.SerializableObjectCollectionProperty(serialization_1.Versions.v1_4, \"buttons\", AuthCardButton);\n  Authentication.tokenExchangeResourceProperty = new serialization_1.SerializableObjectProperty(serialization_1.Versions.v1_4, \"tokenExchangeResource\", TokenExchangeResource, true);\n\n  __decorate([serialization_1.property(Authentication.textProperty)], Authentication.prototype, \"text\", void 0);\n\n  __decorate([serialization_1.property(Authentication.connectionNameProperty)], Authentication.prototype, \"connectionName\", void 0);\n\n  __decorate([serialization_1.property(Authentication.buttonsProperty)], Authentication.prototype, \"buttons\", void 0);\n\n  __decorate([serialization_1.property(Authentication.tokenExchangeResourceProperty)], Authentication.prototype, \"tokenExchangeResource\", void 0);\n\n  return Authentication;\n}(serialization_1.SerializableObject);\n\nexports.Authentication = Authentication; // @dynamic\n\nvar AdaptiveCard =\n/** @class */\nfunction (_super) {\n  __extends(AdaptiveCard, _super);\n\n  function AdaptiveCard() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.designMode = false;\n    return _this;\n  }\n\n  Object.defineProperty(AdaptiveCard.prototype, \"refresh\", {\n    get: function () {\n      return this.getValue(AdaptiveCard.refreshProperty);\n    },\n    set: function (value) {\n      this.setValue(AdaptiveCard.refreshProperty, value);\n\n      if (value) {\n        value.parent = this;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AdaptiveCard, \"processMarkdown\", {\n    get: function () {\n      throw new Error(strings_1.Strings.errors.processMarkdownEventRemoved());\n    },\n    set: function (value) {\n      throw new Error(strings_1.Strings.errors.processMarkdownEventRemoved());\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  AdaptiveCard.applyMarkdown = function (text) {\n    var result = {\n      didProcess: false\n    };\n\n    if (AdaptiveCard.onProcessMarkdown) {\n      AdaptiveCard.onProcessMarkdown(text, result);\n    } else if (window.markdownit) {\n      // Check for markdownit\n      var markdownIt = window.markdownit;\n      result.outputHtml = markdownIt().render(text);\n      result.didProcess = true;\n    } else {\n      console.warn(strings_1.Strings.errors.markdownProcessingNotEnabled);\n    }\n\n    return result;\n  };\n\n  AdaptiveCard.prototype.isVersionSupported = function () {\n    if (this.bypassVersionCheck) {\n      return true;\n    } else {\n      var unsupportedVersion = !this.version || !this.version.isValid || this.maxVersion.major < this.version.major || this.maxVersion.major == this.version.major && this.maxVersion.minor < this.version.minor;\n      return !unsupportedVersion;\n    }\n  };\n\n  AdaptiveCard.prototype.getDefaultSerializationContext = function () {\n    return new SerializationContext(this.version);\n  };\n\n  AdaptiveCard.prototype.getItemsCollectionPropertyName = function () {\n    return \"body\";\n  };\n\n  AdaptiveCard.prototype.internalParse = function (source, context) {\n    this._fallbackCard = undefined;\n    var fallbackElement = context.parseElement(undefined, source[\"fallback\"], !this.isDesignMode());\n\n    if (fallbackElement) {\n      this._fallbackCard = new AdaptiveCard();\n\n      this._fallbackCard.addItem(fallbackElement);\n    }\n\n    _super.prototype.internalParse.call(this, source, context);\n  };\n\n  AdaptiveCard.prototype.internalToJSON = function (target, context) {\n    this.setValue(AdaptiveCard.versionProperty, context.targetVersion);\n\n    _super.prototype.internalToJSON.call(this, target, context);\n  };\n\n  AdaptiveCard.prototype.internalRender = function () {\n    var renderedElement = _super.prototype.internalRender.call(this);\n\n    if (shared_1.GlobalSettings.useAdvancedCardBottomTruncation && renderedElement) {\n      // Unlike containers, the root card element should be allowed to\n      // be shorter than its content (otherwise the overflow truncation\n      // logic would never get triggered)\n      renderedElement.style.removeProperty(\"minHeight\");\n    }\n\n    return renderedElement;\n  };\n\n  AdaptiveCard.prototype.getHasBackground = function () {\n    return true;\n  };\n\n  AdaptiveCard.prototype.getDefaultPadding = function () {\n    return new shared_1.PaddingDefinition(Enums.Spacing.Padding, Enums.Spacing.Padding, Enums.Spacing.Padding, Enums.Spacing.Padding);\n  };\n\n  AdaptiveCard.prototype.shouldSerialize = function (context) {\n    return true;\n  };\n\n  Object.defineProperty(AdaptiveCard.prototype, \"renderIfEmpty\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AdaptiveCard.prototype, \"bypassVersionCheck\", {\n    get: function () {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AdaptiveCard.prototype, \"allowCustomStyle\", {\n    get: function () {\n      return this.hostConfig.adaptiveCard && this.hostConfig.adaptiveCard.allowCustomStyle;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AdaptiveCard.prototype, \"hasBackground\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  AdaptiveCard.prototype.getJsonTypeName = function () {\n    return \"AdaptiveCard\";\n  };\n\n  AdaptiveCard.prototype.internalValidateProperties = function (context) {\n    _super.prototype.internalValidateProperties.call(this, context);\n\n    if (this.getValue(CardElement.typeNameProperty) !== \"AdaptiveCard\") {\n      context.addFailure(this, Enums.ValidationEvent.MissingCardType, strings_1.Strings.errors.invalidCardType());\n    }\n\n    if (!this.bypassVersionCheck && !this.version) {\n      context.addFailure(this, Enums.ValidationEvent.PropertyCantBeNull, strings_1.Strings.errors.propertyMustBeSet(\"version\"));\n    } else if (!this.isVersionSupported()) {\n      context.addFailure(this, Enums.ValidationEvent.UnsupportedCardVersion, strings_1.Strings.errors.unsupportedCardVersion(this.version.toString(), this.maxVersion.toString()));\n    }\n  };\n\n  AdaptiveCard.prototype.render = function (target) {\n    var renderedCard;\n\n    if (this.shouldFallback() && this._fallbackCard) {\n      this._fallbackCard.hostConfig = this.hostConfig;\n      renderedCard = this._fallbackCard.render();\n    } else {\n      renderedCard = _super.prototype.render.call(this);\n\n      if (renderedCard) {\n        renderedCard.classList.add(this.hostConfig.makeCssClassName(\"ac-adaptiveCard\")); // Having a tabIndex on the root container for a card can mess up accessibility in some scenarios.\n        // However, we've shipped this behavior before, and so can't just turn it off in a point release. For\n        // now, to unblock accessibility scenarios for our customers, we've got an option to turn it off. In a\n        // future release, we should strongly consider flipping the default such that we *don't* emit a tabIndex\n        // by default.\n\n        if (shared_1.GlobalSettings.setTabIndexAtCardRoot) {\n          renderedCard.tabIndex = 0;\n        }\n\n        if (this.speak) {\n          renderedCard.setAttribute(\"aria-label\", this.speak);\n        }\n      }\n    }\n\n    if (target) {\n      Utils.appendChild(target, renderedCard);\n      this.updateLayout();\n    }\n\n    return renderedCard;\n  };\n\n  AdaptiveCard.prototype.updateLayout = function (processChildren) {\n    if (processChildren === void 0) {\n      processChildren = true;\n    }\n\n    _super.prototype.updateLayout.call(this, processChildren);\n\n    if (shared_1.GlobalSettings.useAdvancedCardBottomTruncation && this.isDisplayed()) {\n      var padding = this.hostConfig.getEffectiveSpacing(Enums.Spacing.Default);\n      this['handleOverflow'](this.renderedElement.offsetHeight - padding);\n    }\n  };\n\n  AdaptiveCard.prototype.shouldFallback = function () {\n    return _super.prototype.shouldFallback.call(this) || !this.isVersionSupported();\n  };\n\n  Object.defineProperty(AdaptiveCard.prototype, \"hasVisibleSeparator\", {\n    get: function () {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  AdaptiveCard.schemaUrl = \"http://adaptivecards.io/schemas/adaptive-card.json\"; //#region Schema\n\n  AdaptiveCard.$schemaProperty = new serialization_1.CustomProperty(serialization_1.Versions.v1_0, \"$schema\", function (sender, property, source, context) {\n    return AdaptiveCard.schemaUrl;\n  }, function (sender, property, target, value, context) {\n    context.serializeValue(target, property.name, AdaptiveCard.schemaUrl);\n  });\n  AdaptiveCard.versionProperty = new serialization_1.CustomProperty(serialization_1.Versions.v1_0, \"version\", function (sender, property, source, context) {\n    var version = serialization_1.Version.parse(source[property.name], context);\n\n    if (version === undefined) {\n      version = serialization_1.Versions.latest;\n      context.logParseEvent(sender, Enums.ValidationEvent.InvalidPropertyValue, strings_1.Strings.errors.invalidCardVersion(version.toString()));\n    }\n\n    return version;\n  }, function (sender, property, target, value, context) {\n    if (value !== undefined) {\n      context.serializeValue(target, property.name, value.toString());\n    }\n  }, serialization_1.Versions.v1_0);\n  AdaptiveCard.fallbackTextProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"fallbackText\");\n  AdaptiveCard.speakProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"speak\");\n  AdaptiveCard.refreshProperty = new serialization_1.SerializableObjectProperty(serialization_1.Versions.v1_4, \"refresh\", RefreshDefinition, true);\n  AdaptiveCard.authenticationProperty = new serialization_1.SerializableObjectProperty(serialization_1.Versions.v1_4, \"authentication\", Authentication, true);\n\n  __decorate([serialization_1.property(AdaptiveCard.versionProperty)], AdaptiveCard.prototype, \"version\", void 0);\n\n  __decorate([serialization_1.property(AdaptiveCard.fallbackTextProperty)], AdaptiveCard.prototype, \"fallbackText\", void 0);\n\n  __decorate([serialization_1.property(AdaptiveCard.speakProperty)], AdaptiveCard.prototype, \"speak\", void 0);\n\n  __decorate([serialization_1.property(AdaptiveCard.refreshProperty)], AdaptiveCard.prototype, \"refresh\", null);\n\n  __decorate([serialization_1.property(AdaptiveCard.authenticationProperty)], AdaptiveCard.prototype, \"authentication\", void 0);\n\n  return AdaptiveCard;\n}(ContainerWithActions);\n\nexports.AdaptiveCard = AdaptiveCard;\n\nvar InlineAdaptiveCard =\n/** @class */\nfunction (_super) {\n  __extends(InlineAdaptiveCard, _super);\n\n  function InlineAdaptiveCard() {\n    //#region Schema\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.suppressStyle = false;\n    return _this;\n  }\n\n  InlineAdaptiveCard.prototype.getSchemaKey = function () {\n    return \"InlineAdaptiveCard\";\n  };\n\n  InlineAdaptiveCard.prototype.populateSchema = function (schema) {\n    _super.prototype.populateSchema.call(this, schema);\n\n    schema.remove(AdaptiveCard.$schemaProperty, AdaptiveCard.versionProperty);\n  }; //#endregion\n\n\n  InlineAdaptiveCard.prototype.getDefaultPadding = function () {\n    return new shared_1.PaddingDefinition(this.suppressStyle ? Enums.Spacing.None : Enums.Spacing.Padding, Enums.Spacing.Padding, this.suppressStyle ? Enums.Spacing.None : Enums.Spacing.Padding, Enums.Spacing.Padding);\n  };\n\n  Object.defineProperty(InlineAdaptiveCard.prototype, \"bypassVersionCheck\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(InlineAdaptiveCard.prototype, \"defaultStyle\", {\n    get: function () {\n      if (this.suppressStyle) {\n        return Enums.ContainerStyle.Default;\n      } else {\n        return this.hostConfig.actions.showCard.style ? this.hostConfig.actions.showCard.style : Enums.ContainerStyle.Emphasis;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  InlineAdaptiveCard.prototype.render = function (target) {\n    var renderedCard = _super.prototype.render.call(this, target);\n\n    if (renderedCard) {\n      renderedCard.setAttribute(\"aria-live\", \"polite\");\n      renderedCard.removeAttribute(\"tabindex\");\n    }\n\n    return renderedCard;\n  };\n\n  return InlineAdaptiveCard;\n}(AdaptiveCard);\n\nvar SerializationContext =\n/** @class */\nfunction (_super) {\n  __extends(SerializationContext, _super);\n\n  function SerializationContext() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SerializationContext.prototype.internalParseCardObject = function (parent, source, forbiddenTypeNames, allowFallback, createInstanceCallback, logParseEvent) {\n    var result = undefined;\n\n    if (source && typeof source === \"object\") {\n      var typeName = Utils.parseString(source[\"type\"]);\n\n      if (typeName && forbiddenTypeNames.indexOf(typeName) >= 0) {\n        logParseEvent(typeName, Enums.TypeErrorType.ForbiddenType);\n      } else {\n        var tryToFallback = false;\n        result = createInstanceCallback(typeName);\n\n        if (!result) {\n          tryToFallback = shared_1.GlobalSettings.enableFallback && allowFallback;\n          logParseEvent(typeName, Enums.TypeErrorType.UnknownType);\n        } else {\n          result.setParent(parent);\n          result.parse(source, this);\n          tryToFallback = shared_1.GlobalSettings.enableFallback && allowFallback && result.shouldFallback();\n        }\n\n        if (tryToFallback) {\n          var fallback = source[\"fallback\"];\n\n          if (!fallback && parent) {\n            parent.setShouldFallback(true);\n          }\n\n          if (typeof fallback === \"string\" && fallback.toLowerCase() === \"drop\") {\n            result = undefined;\n          } else if (typeof fallback === \"object\") {\n            result = this.internalParseCardObject(parent, fallback, forbiddenTypeNames, true, createInstanceCallback, logParseEvent);\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  SerializationContext.prototype.cardObjectParsed = function (o, source) {\n    if (o instanceof Action && this.onParseAction) {\n      this.onParseAction(o, source, this);\n    } else if (o instanceof CardElement && this.onParseElement) {\n      this.onParseElement(o, source, this);\n    }\n  };\n\n  SerializationContext.prototype.shouldSerialize = function (o) {\n    if (o instanceof Action) {\n      return this.actionRegistry.findByName(o.getJsonTypeName()) !== undefined;\n    } else if (o instanceof CardElement) {\n      return this.elementRegistry.findByName(o.getJsonTypeName()) !== undefined;\n    } else {\n      return true;\n    }\n  };\n\n  SerializationContext.prototype.parseCardObject = function (parent, source, forbiddenTypeNames, allowFallback, createInstanceCallback, logParseEvent) {\n    var result = this.internalParseCardObject(parent, source, forbiddenTypeNames, allowFallback, createInstanceCallback, logParseEvent);\n\n    if (result !== undefined) {\n      this.cardObjectParsed(result, source);\n    }\n\n    return result;\n  };\n\n  SerializationContext.prototype.parseElement = function (parent, source, allowFallback) {\n    var _this = this;\n\n    return this.parseCardObject(parent, source, [], // Forbidden types not supported for elements for now\n    allowFallback, function (typeName) {\n      return _this.elementRegistry.createInstance(typeName, _this.targetVersion);\n    }, function (typeName, errorType) {\n      if (errorType === Enums.TypeErrorType.UnknownType) {\n        _this.logParseEvent(undefined, Enums.ValidationEvent.UnknownElementType, strings_1.Strings.errors.unknownElementType(typeName));\n      } else {\n        _this.logParseEvent(undefined, Enums.ValidationEvent.ElementTypeNotAllowed, strings_1.Strings.errors.elementTypeNotAllowed(typeName));\n      }\n    });\n  };\n\n  SerializationContext.prototype.parseAction = function (parent, source, forbiddenActionTypes, allowFallback) {\n    var _this = this;\n\n    return this.parseCardObject(parent, source, forbiddenActionTypes, allowFallback, function (typeName) {\n      return _this.actionRegistry.createInstance(typeName, _this.targetVersion);\n    }, function (typeName, errorType) {\n      if (errorType == Enums.TypeErrorType.UnknownType) {\n        _this.logParseEvent(undefined, Enums.ValidationEvent.UnknownActionType, strings_1.Strings.errors.unknownActionType(typeName));\n      } else {\n        _this.logParseEvent(undefined, Enums.ValidationEvent.ActionTypeNotAllowed, strings_1.Strings.errors.actionTypeNotAllowed(typeName));\n      }\n    });\n  };\n\n  Object.defineProperty(SerializationContext.prototype, \"elementRegistry\", {\n    get: function () {\n      return this._elementRegistry ? this._elementRegistry : registry_1.GlobalRegistry.elements;\n    },\n    enumerable: false,\n    configurable: true\n  }); // Not using a property setter here because the setter should accept \"undefined\"\n  // whereas the getter should never return undefined.\n\n  SerializationContext.prototype.setElementRegistry = function (value) {\n    this._elementRegistry = value;\n  };\n\n  Object.defineProperty(SerializationContext.prototype, \"actionRegistry\", {\n    get: function () {\n      return this._actionRegistry ? this._actionRegistry : registry_1.GlobalRegistry.actions;\n    },\n    enumerable: false,\n    configurable: true\n  }); // Not using a property setter here because the setter should accept \"undefined\"\n  // whereas the getter should never return undefined.\n\n  SerializationContext.prototype.setActionRegistry = function (value) {\n    this._actionRegistry = value;\n  };\n\n  return SerializationContext;\n}(serialization_1.BaseSerializationContext);\n\nexports.SerializationContext = SerializationContext;\nregistry_1.GlobalRegistry.defaultElements.register(\"Container\", Container);\nregistry_1.GlobalRegistry.defaultElements.register(\"TextBlock\", TextBlock);\nregistry_1.GlobalRegistry.defaultElements.register(\"RichTextBlock\", RichTextBlock, serialization_1.Versions.v1_2);\nregistry_1.GlobalRegistry.defaultElements.register(\"TextRun\", TextRun, serialization_1.Versions.v1_2);\nregistry_1.GlobalRegistry.defaultElements.register(\"Image\", Image);\nregistry_1.GlobalRegistry.defaultElements.register(\"ImageSet\", ImageSet);\nregistry_1.GlobalRegistry.defaultElements.register(\"Media\", Media, serialization_1.Versions.v1_1);\nregistry_1.GlobalRegistry.defaultElements.register(\"FactSet\", FactSet);\nregistry_1.GlobalRegistry.defaultElements.register(\"ColumnSet\", ColumnSet);\nregistry_1.GlobalRegistry.defaultElements.register(\"ActionSet\", ActionSet, serialization_1.Versions.v1_2);\nregistry_1.GlobalRegistry.defaultElements.register(\"Input.Text\", TextInput);\nregistry_1.GlobalRegistry.defaultElements.register(\"Input.Date\", DateInput);\nregistry_1.GlobalRegistry.defaultElements.register(\"Input.Time\", TimeInput);\nregistry_1.GlobalRegistry.defaultElements.register(\"Input.Number\", NumberInput);\nregistry_1.GlobalRegistry.defaultElements.register(\"Input.ChoiceSet\", ChoiceSetInput);\nregistry_1.GlobalRegistry.defaultElements.register(\"Input.Toggle\", ToggleInput);\nregistry_1.GlobalRegistry.defaultActions.register(OpenUrlAction.JsonTypeName, OpenUrlAction);\nregistry_1.GlobalRegistry.defaultActions.register(SubmitAction.JsonTypeName, SubmitAction);\nregistry_1.GlobalRegistry.defaultActions.register(ShowCardAction.JsonTypeName, ShowCardAction);\nregistry_1.GlobalRegistry.defaultActions.register(ToggleVisibilityAction.JsonTypeName, ToggleVisibilityAction, serialization_1.Versions.v1_2);\nregistry_1.GlobalRegistry.defaultActions.register(ExecuteAction.JsonTypeName, ExecuteAction, serialization_1.Versions.v1_4);","map":{"version":3,"mappings":"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","names":["renderSeparation","hostConfig","separationDefinition","orientation","spacing","lineThickness","separator","document","createElement","className","makeCssClassName","Enums","Orientation","Horizontal","setAttribute","color","lineColor","Utils","stringToCssColor","style","paddingTop","marginBottom","borderBottom","height","paddingLeft","marginRight","borderRight","width","overflow","flex","undefined","exports","__extends","_this","Object","CardElement","lang","getValue","langProperty","parent","value","setValue","isVisibleProperty","shared_1","useAdvancedCardBottomTruncation","undoOverflowTruncation","isVisible","updateRenderedElementVisibility","_renderedElement","raiseElementVisibilityChangedEvent","toString","renderedSeparator","getEffectiveSpacing","separatorOrientation","alwaysBleedSeparators","parentContainer","getParentContainer","getEffectivePadding","parentPhysicalPadding","paddingDefinitionToSpacingDefinition","marginLeft","left","right","displayMode","isDesignMode","_defaultRenderedElementDisplayMode","display","removeProperty","_separatorElement","isFirstElement","visibility","maxHeight","isHiddenDueToOverflow","handled","truncateOverflow","_truncatedDueToOverflow","hideElementDueToOverflow","showElementHiddenDueToOverflow","sizeChanged","SerializationContext","styleDefinition","getEffectiveStyleDefinition","foregroundCssColor","foregroundColors","default","subtle","element","border","padding","minHeight","fontSize","innerText","getJsonTypeName","renderedElement","offsetHeight","internalRender","separatorElement","isBleeding","getImmediateSurroundingPadding","physicalPadding","_padding","context","elementRegistry","findByName","ContainerStyle","Default","source","_super","parse","call","getEffectiveStyle","defaultStyle","containerStyles","getStyleByName","getEffectiveTextStyleDefinition","textStyles","result","processTop","processRight","processBottom","processLeft","doProcessTop","isTopElement","doProcessRight","isRightMostElement","doProcessBottom","isBottomElement","doProcessLeft","isLeftMostElement","effectivePadding","top","Spacing","None","bottom","index","Error","strings_1","errors","indexOutOfRange","action","i","getActionCount","getActionAt","CardElementContainer","removeItem","overrideInternalRender","internalRenderSeparator","id","customCssSelector","classList","add","boxSizing","adjustRenderedElementSize","updateLayout","createPlaceholderElement","processChildren","applyPadding","cardElement","rootElement","getRootElement","AdaptiveCard","designMode","isAtTheVeryLeft","isAtTheVeryRight","isAtTheVeryTop","isLastElement","isAtTheVeryBottom","getRootObject","currentElement","Container","processActions","getPadding","getDefaultPadding","horizontalAlignment","getEffectiveHorizontalAlignment","HorizontalAlignment","Left","_hostConfig","host_config_1","indexOf","_parent","serialization_1","v1_1","v1_2","v1_0","__decorate","horizontalAlignmentProperty","spacingProperty","separatorProperty","heightProperty","card_object_1","targetVersion","name","forbiddenActionTypes","ActionProperty","sender","parseAction","target","serializeValue","toJSON","text","BaseTextBlock","schema","populateSchema","remove","selectActionProperty","textProperty","setText","fontType","effectiveSize","TextSize","Small","fontSizes","small","Medium","medium","Large","large","ExtraLarge","extraLarge","colorSet","TextColor","Accent","accent","Dark","dark","Light","light","Good","good","Warning","warning","Attention","attention","textDefinition","size","weight","isSubtle","targetElement","getFontTypeDefinition","effectiveFontType","fontFamily","colorDefinition","getColorDefinition","effectiveColor","effectiveIsSubtle","fontWeight","effectiveWeight","TextWeight","Lighter","fontWeights","lighter","Bolder","bolder","ariaHidden","FontType","sizeProperty","weightProperty","colorProperty","fontTypeProperty","isSubtleProperty","TextBlock","maxLines","_computedLineHeight","innerHTML","_originalInnerHtml","children","isTextOnly","length","truncationSupported","tagName","toLowerCase","truncate","_processedText","preProcessedText","preProcessPropertyValue","forElementId","labelElement","htmlFor","applyStylesTo","headingLevel","textBlock","selectAction","supportsInteractivity","onclick","e","isEnabled","preventDefault","cancelBubble","execute","setupElementForAccessibility","_treatAsPlainText","formattedText","TextFormatters","formatText","useMarkdown","allowMarkForTextHighlighting","replace","markdownProcessingResult","applyMarkdown","didProcess","outputHtml","markStyle","effectiveStyle","highlightBackgroundColor","highlightForegroundColor","firstElementChild","HTMLElement","marginTop","wrap","textOverflow","lastElementChild","anchors","getElementsByTagName","anchor","raiseAnchorClickedEvent","oncontextmenu","wordWrap","isInternetExplorer","useWebkitLineClamp","webkitBoxOrient","webkitLineClamp","whiteSpace","useAdvancedTextBlockTruncation","truncateIfSupported","restoreOriginalContent","Center","textAlign","Right","lineHeights","getFontSize","lineHeight","isDisplayed","v1_5","wrapProperty","maxLinesProperty","styleProperty","TextRun","href","getHref","appendChild","italic","fontStyle","strikethrough","textDecoration","highlight","backgroundColor","highlightColors","underline","v1_3","italicProperty","strikethroughProperty","highlightProperty","underlineProperty","RichTextBlock","inline","forceAdd","isInline","elementCannotBeUsedAsInline","doAdd","inlineAlreadyParented","setParent","_inlines","push","internalParse","Array","isArray","_i","jsonInline","textRun","parseElement","internalAddInline","internalToJSON","jsonInlines","renderedInlines","renderedInline","render","asString","splice","Fact","titleProperty","valueProperty","FactSet","facts","borderWidth","borderSpacing","borderStyle","borderCollapse","trElement","factSet","tdElement","title","maxWidth","verticalAlign","factsProperty","internalName","fallbackProperty","ImageDimensionProperty","sourceValue","defaultValue","isValid","unit","SizeUnit","Pixel","physicalSize","isValidValue","logParseEvent","ValidationEvent","InvalidPropertyValue","invalidPropertyValue","isNaN","Size","Auto","ImageStyle","Image","pixelWidth","pixelHeight","imageSizes","Stretch","url","alignItems","justifyContent","imageElement","onload","raiseImageLoadedEvent","onerror","card","errorElement","applySize","minWidth","onkeypress","code","Person","borderRadius","backgroundPosition","backgroundRepeat","src","urlProperty","altTextProperty","alt","getActionById","mimeType","backgroundColorProperty","pixelWidthProperty","pixelHeightProperty","isSelectable","isInteractive","paddingRight","paddingBottom","internalValidateProperties","getItemCount","item","getItemAt","addFailure","InteractivityNotAllowed","interactivityNotAllowed","isElementAllowed","elementTypeNotAllowed","_selectAction","allowVerticalOverflow","overflowX","overflowY","concat","getAllInputs","getResourceInformation","getElementById","node","findDOMNodeOwner","ImageSize","ImageSet","_images","flexWrap","image","imageSize","imageSet","maxImageHeight","renderedImage","margin","itemIndex","imagesProperty","imageSizeProperty","MediaSource","type","mimeTypeProperty","Media","poster","media","defaultPoster","_selectedSources","_selectedMediaType","sources","mimeComponents","split","supportedMediaTypes","event","allowInlinePlayback","mediaPlayerElement","renderMediaPlayer","play","focus","onPlay","playButtonArrowWidth","playButtonArrowHeight","posterRootElement","altText","defaults","mediaPlayerAriaLabel","position","posterUrl","getPosterUrl","posterImageElement_1","parentNode","removeChild","playButtonOuterElement","tabIndex","mediaPlayerPlayMedia","handlePlayButtonInvoke","playButtonInnerElement","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","borderTopColor","borderRightColor","borderBottomColor","transform","playButtonContainer","mediaElement","videoPlayer","autoplay","controls","isMobileOS","muted","preload","renderedSource","processSources","renderPoster","mediaSource","sourcesProperty","posterProperty","Input","labelIds","labelledBy","_renderedLabelElement","_renderedErrorMessageElement","_renderedInputControlElement","getAllLabelIds","join","removeAttribute","_inputControlContainerElement","_outerContainerElement","flexDirection","renderedInputControlId","generateUniqueId","label","labelRichTextBlock","labelInline","addInline","isRequired","init","inputs","requiredInputs","isRequiredCueInline","suffix","suffixColor","optionalInputs","inputSpacing","isNullable","updateInputControlAriaLabelledBy","resetValidationFailureCue","onValueChanged","raiseInputValueChangedEvent","renderedInputControlElement","errorMessage","displayInputValidationErrors","errorMessageTextBlock","PropertyCantBeNull","inputsMustHaveUniqueId","RequiredInputsShouldHaveLabel","RequiredInputsShouldHaveErrorMessage","isSet","showValidationErrorMessage","labelProperty","isRequiredProperty","errorMessageProperty","InputTextStyle","Text","TextInput","input","placeholder","maxLength","oninput","valueChanged","ctrlKey","inlineAction","isMultiline","Password","setupInput","renderedInputControl","button_1","iconUrl","icon_1","textContent","inlineActionTitle","inputControlContainerElement","regex","RegExp","test","Tel","Url","Email","maxLengthProperty","isMultilineProperty","placeholderProperty","inlineActionProperty","regexProperty","ToggleInput","_checkboxInputElement","joinedLabelIds","_checkboxInputLabelElement","valueOn","checked","onchange","useMarkdownInRadioButtonAndCheckbox","spacerElement","valueOff","valueOnProperty","valueOffProperty","Choice","ChoiceSetInput","uniqueCategoryName","uniqueCategoryCounter","_selectElement","options","selected","cssClassName","defaultValues","_toggleInputs","_labels","choices","choice","_uniqueCategoryName","compoundInput","isMultiSelect","getUniqueCategoryName","renderCompoundInput","choiceSetInputValueSeparator","inputContainer","_textInput","dataList","option","append","disabled","hidden","_b","option_1","internalApplyAriaCurrent","CollectionCantBeEmpty","choiceSetMustHaveAtLeastOneChoice","choiceSetChoicesMustHaveTitleAndValue","selectedIndex","toggleInput","_d","isMultiSelectProperty","choicesProperty","NumberInput","_numberInputElement","min","max","valueAsNumber","minProperty","maxProperty","DateInput","_dateInputElement","valueAsDate","Date","minDate","maxDate","property","TimeInput","timeString","_timeInputElement","convertTimeStringToDate","TimeProperty","ActionStyle","ActionMode","Primary","Action","titleElement","actions","iconPlacement","ActionIconPlacement","AboveTitle","allowTitleToWrap","iconElement","iconSize","parentContainerStyle","isFocusable","_state","Positive","apply","_a","makeCssClassNames","referencedInputs","keys","key","validateValue","actionRegistry","onExecute","raiseExecuteActionEvent","promoteTooltipToLabel","getAriaRole","HTMLButtonElement","tooltip","targetAriaAttribute","buttonElement","renderButtonContent","updateCssClasses","_actionCollection","actionExecuted","getReferencedInputs","invalidInputs","internalValidateInputs","internalPrepareForExecution","removeAction","internalGetReferencedInputs","_isFocusable","Destructive","Secondary","iconUrlProperty","modeProperty","tooltipProperty","isEnabledProperty","SubmitActionBase","associatedInputs","current","_originalData","_processedData","JSON","stringify","_isPrepared","dataProperty","associatedInputsProperty","SubmitAction","JsonTypeName","ExecuteAction","v1_4","verbProperty","OpenUrlAction","propertyMustBeSet","ToggleVisibilityAction","targetElements","elementIds","updateAriaControlsAttribute","elementId","parseBool","serializeArray","targetElementsProperty","StringWithSubstitutionProperty","set","parseString","getOriginal","HttpHeader","_value","substituteInputValues","applicationXWwwFormUrlencoded","get","newValue","nameProperty","HttpAction","allInputs","_url","headers","header","_body","contentType","applicationJson","prepareForExecution","actionHttpHeadersMustHaveNameAndValue","_ignoreInputValidation","bodyProperty","methodProperty","headersProperty","ignoreInputValidationProperty","InlineAdaptiveCard","ShowCardAction","effectiveHostConfig","state","jsonCard","showCardMustHaveCard","showCard","actionMode","ShowCardActionMode","Popup","overflowButtonText","OverflowAction","shouldDisplayPopupMenu","raiseDisplayOverflowActionMenuEvent","contextMenu_1","controls_1","menuItem","this_1","onClick","actionToExecute","closePopup","items","popup","owner","_owner","ActionCollection","forbiddenTypes","getForbiddenActionTypes","forbiddenType","constructor","_actionCardContainer","_actionCard","renderedActionCount","inlineTopMargin","suppressStyle","raiseEvent","renderedCard","_expandedAction","refreshContainer","layoutChanged","raiseInlineCardExpandedEvent","_renderedActions","previouslyExpandedAction","afterSelectedAction","renderedAction","onblur","ra","showActionCard","collapseExpandedAction","Inline","expandShowCardAction","clear","jsonAction","addAction","propertyName","_items","maxActions","TooManyActions","tooManyActions","isActionAllowed","ActionTypeNotAllowed","actionTypeNotAllowed","Math","preExpandSingleShowCardAction","buttonStrip","actionAlignment","ActionAlignment","allowedActions","filter","bind","primaryActions_1","secondaryActions_1","forEach","mode","overflowPrimaryActions","allowMoreThanMaxActionsInOverflowMenu","shouldRenderOverflowActionButton","_overflowAction","isRootAction","raiseRenderOverflowActionsEvent","actionsOrientation","buttonSpacing","spacer","buttonStripContainer","actionAlreadyParented","expandedAction","actionIndex","ActionSet","isBleedingAtBottom","validateProperties","orientationProperty","onGetInitialValue","Emphasis","StylableCardElementContainer","allowCustomStyle","bgColor","surroundingPadding","currentElementHasBackgroundImage","backgroundImage","hasExplicitStyle","getHasBackground","getHasBorder","Padding","explicitStyle","applyBackground","applyBorder","ContainerStyleProperty","ContainerBase","minPixelHeight","_bleed","alwaysAllowBleed","getBleed","bleedProperty","minHeightProperty","BackgroundImage","resetDefaultValues","fillMode","FillMode","Repeat","RepeatHorizontally","RepeatVertically","Cover","backgroundSize","backgroundPositionX","verticalAlignment","VerticalAlignment","backgroundPositionY","Bottom","Top","fillModeProperty","verticalAlignmentProperty","backgroundImageProperty","forceInsert","isStandalone","elementTypeNotStandalone","elementAlreadyParented","_renderedItems","rtl","dir","getEffectiveVerticalContentAlignment","renderedItem","placeholderElement","boundary_1","offsetTop","handleElement_1","elt","getFitStatus","ContainerFitStatus","FullyInContainer","Overflowing","maxHeight_1","FullyOutOfContainer","setShouldFallback","jsonItems","getItemsCollectionPropertyName","insertItemAt","verticalContentAlignment","isRtl","firstRenderedItem","getFirstVisibleRenderedItem","isBleedingAtTop","lastRenderedItem","getLastVisibleRenderedItem","insertBefore","insertAfter","setPadding","setBleed","verticalContentAlignmentProperty","rtlProperty","Column","minDesignTimeColumnHeight","_computedWeight","Vertical","ColumnSet","invalidWidth","Weight","compareTo","invalidColumnWidth","serializeNumber","widthProperty","parseCardObject","typeName","errorType","ElementTypeNotAllowed","_renderedColumns","_columns","totalWeight","column","computedWeight","renderedColumn","jsonColumns","createColumnInstance","getColumnAt","weightedColumns","stretchedColumns","Hint","hints","dontUseWeightedAndStrecthedColumnsInSameSet","columnAlreadyBelongsToAnotherSet","onImageLoadedHandler","onImageLoaded","ev","onAnchorClickedHandler","onAnchorClicked","onExecuteActionHandler","onExecuteAction","isExpanded","onInlineCardExpandedHandler","onInlineCardExpanded","onInputValueChangedHandler","onInputValueChanged","shouldUpdateLayout","onElementVisibilityChangedHandler","onElementVisibilityChanged","onDisplayOverflowActionMenuHandler","onDisplayOverflowActionMenu","getActions","isAtRootLevelActions","onRenderOverflowActionsHandler","onRenderOverflowActions","ContainerWithActions","renderedActions","renderIfEmpty","RefreshActionProperty","RefreshDefinition","actionProperty","userIdsProperty","AuthCardButton","typeProperty","imageProperty","TokenExchangeResource","idProperty","uriProperty","providerIdProperty","Authentication","connectionNameProperty","buttonsProperty","tokenExchangeResourceProperty","refreshProperty","processMarkdownEventRemoved","onProcessMarkdown","window","markdownit","markdownIt","console","warn","markdownProcessingNotEnabled","bypassVersionCheck","unsupportedVersion","version","maxVersion","major","minor","_fallbackCard","fallbackElement","addItem","versionProperty","adaptiveCard","typeNameProperty","MissingCardType","invalidCardType","isVersionSupported","UnsupportedCardVersion","unsupportedCardVersion","shouldFallback","setTabIndexAtCardRoot","speak","schemaUrl","latest","invalidCardVersion","fallbackTextProperty","speakProperty","authenticationProperty","$schemaProperty","forbiddenTypeNames","allowFallback","createInstanceCallback","TypeErrorType","ForbiddenType","tryToFallback","enableFallback","UnknownType","fallback","internalParseCardObject","o","onParseAction","onParseElement","cardObjectParsed","createInstance","UnknownElementType","unknownElementType","UnknownActionType","unknownActionType","_elementRegistry","registry_1","elements","_actionRegistry","defaultElements","register","defaultActions"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/adaptivecards/src/card-elements.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport * as Enums from \"./enums\";\nimport { PaddingDefinition, GlobalSettings, SizeAndUnit,SpacingDefinition, ISeparationDefinition,\n    Dictionary, StringWithSubstitutions, ContentTypes, IInput, IResourceInformation } from \"./shared\";\nimport * as Utils from \"./utils\";\nimport { HostConfig, defaultHostConfig, BaseTextDefinition, FontTypeDefinition, ColorSetDefinition, TextColorDefinition, ContainerStyleDefinition, TextStyleDefinition } from \"./host-config\";\nimport * as TextFormatters from \"./text-formatters\";\nimport { CardObject, ValidationResults } from \"./card-object\";\nimport { Versions, Version, property, BaseSerializationContext, SerializableObject, SerializableObjectSchema, StringProperty,\n    BoolProperty, ValueSetProperty, EnumProperty, SerializableObjectCollectionProperty, SerializableObjectProperty, PixelSizeProperty,\n    NumProperty, PropertyBag, CustomProperty, PropertyDefinition, StringArrayProperty } from \"./serialization\";\nimport { CardObjectRegistry, GlobalRegistry } from \"./registry\";\nimport { Strings } from \"./strings\";\nimport { MenuItem, PopupMenu } from \"./controls\";\n\nexport function renderSeparation(hostConfig: HostConfig, separationDefinition: ISeparationDefinition, orientation: Enums.Orientation): HTMLElement | undefined {\n    if (separationDefinition.spacing > 0 || (separationDefinition.lineThickness && separationDefinition.lineThickness > 0)) {\n        let separator = document.createElement(\"div\");\n        separator.className = hostConfig.makeCssClassName(\"ac-\" + (orientation == Enums.Orientation.Horizontal ? \"horizontal\" : \"vertical\") + \"-separator\");\n        separator.setAttribute(\"aria-hidden\", \"true\");\n\n        let color = separationDefinition.lineColor ? Utils.stringToCssColor(separationDefinition.lineColor) : \"\";\n\n        if (orientation == Enums.Orientation.Horizontal) {\n            if (separationDefinition.lineThickness) {\n                separator.style.paddingTop = (separationDefinition.spacing / 2) + \"px\";\n                separator.style.marginBottom = (separationDefinition.spacing / 2) + \"px\";\n                separator.style.borderBottom = separationDefinition.lineThickness + \"px solid \" + color;\n            }\n            else {\n                separator.style.height = separationDefinition.spacing + \"px\";\n            }\n        }\n        else {\n            if (separationDefinition.lineThickness) {\n                separator.style.paddingLeft = (separationDefinition.spacing / 2) + \"px\";\n                separator.style.marginRight = (separationDefinition.spacing / 2) + \"px\";\n                separator.style.borderRight = separationDefinition.lineThickness + \"px solid \" + color;\n            }\n            else {\n                separator.style.width = separationDefinition.spacing + \"px\";\n            }\n        }\n\n        separator.style.overflow = \"hidden\";\n        separator.style.flex = \"0 0 auto\";\n\n        return separator;\n    }\n    else {\n        return undefined;\n    }\n}\n\nexport type CardElementHeight = \"auto\" | \"stretch\";\n\nexport abstract class CardElement extends CardObject {\n    //#region Schema\n\n    static readonly langProperty = new StringProperty(Versions.v1_1, \"lang\", true, /^[a-z]{2,3}$/ig);\n    static readonly isVisibleProperty = new BoolProperty(Versions.v1_2, \"isVisible\", true);\n    static readonly separatorProperty = new BoolProperty(Versions.v1_0, \"separator\", false);\n    static readonly heightProperty = new ValueSetProperty(\n        Versions.v1_1,\n        \"height\",\n        [\n            { value: \"auto\" },\n            { value: \"stretch\" }\n        ],\n        \"auto\");\n    static readonly horizontalAlignmentProperty = new EnumProperty(\n        Versions.v1_0,\n        \"horizontalAlignment\",\n        Enums.HorizontalAlignment);\n    static readonly spacingProperty = new EnumProperty(\n        Versions.v1_0,\n        \"spacing\",\n        Enums.Spacing,\n        Enums.Spacing.Default);\n\n    @property(CardElement.horizontalAlignmentProperty)\n    horizontalAlignment?: Enums.HorizontalAlignment;\n\n    @property(CardElement.spacingProperty)\n    spacing: Enums.Spacing;\n\n    @property(CardElement.separatorProperty)\n    separator: boolean;\n\n    @property(CardElement.heightProperty)\n    height: CardElementHeight;\n\n    @property(CardElement.langProperty)\n    get lang(): string | undefined {\n        let lang = this.getValue(CardElement.langProperty);\n\n        if (lang) {\n            return lang;\n        }\n        else {\n            if (this.parent) {\n                return this.parent.lang;\n            }\n            else {\n                return undefined;\n            }\n        }\n    }\n\n    set lang(value: string | undefined) {\n        this.setValue(CardElement.langProperty, value);\n    }\n\n    @property(CardElement.isVisibleProperty)\n    get isVisible(): boolean {\n        return this.getValue(CardElement.isVisibleProperty);\n    }\n\n    set isVisible(value: boolean) {\n        // If the element is going to be hidden, reset any changes that were due\n        // to overflow truncation (this ensures that if the element is later\n        // un-hidden it has the right content)\n        if (GlobalSettings.useAdvancedCardBottomTruncation && !value) {\n            this.undoOverflowTruncation();\n        }\n\n        if (this.isVisible !== value) {\n            this.setValue(CardElement.isVisibleProperty, value);\n\n            this.updateRenderedElementVisibility();\n\n            if (this._renderedElement) {\n                raiseElementVisibilityChangedEvent(this);\n            }\n        }\n\n        if (this._renderedElement) {\n            this._renderedElement.setAttribute(\"aria-expanded\", value.toString());\n        }\n    }\n\n    //#endregion\n\n    private _hostConfig?: HostConfig;\n    private _separatorElement?: HTMLElement;\n    private _truncatedDueToOverflow: boolean = false;\n    private _defaultRenderedElementDisplayMode?: string;\n    private _padding?: PaddingDefinition;\n\n    private internalRenderSeparator(): HTMLElement | undefined {\n        let renderedSeparator = renderSeparation(\n            this.hostConfig,\n            {\n                spacing: this.hostConfig.getEffectiveSpacing(this.spacing),\n                lineThickness: this.separator ? this.hostConfig.separator.lineThickness : undefined,\n                lineColor: this.separator ? this.hostConfig.separator.lineColor : undefined\n            },\n            this.separatorOrientation);\n\n            if (GlobalSettings.alwaysBleedSeparators && renderedSeparator && this.separatorOrientation == Enums.Orientation.Horizontal) {\n                // Adjust separator's margins if the option to always bleed separators is turned on\n                let parentContainer = this.getParentContainer();\n\n                if (parentContainer && parentContainer.getEffectivePadding()) {\n                    let parentPhysicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(parentContainer.getEffectivePadding());\n\n                    renderedSeparator.style.marginLeft = \"-\" + parentPhysicalPadding.left + \"px\";\n                    renderedSeparator.style.marginRight = \"-\" + parentPhysicalPadding.right + \"px\";\n                }\n            }\n\n            return renderedSeparator;\n    }\n\n    private updateRenderedElementVisibility() {\n        let displayMode = this.isDesignMode() || this.isVisible ? this._defaultRenderedElementDisplayMode : \"none\";\n\n        if (this._renderedElement) {\n            if (displayMode) {\n                this._renderedElement.style.display = displayMode;\n            }\n            else {\n                this._renderedElement.style.removeProperty(\"display\");\n            }\n        }\n\n        if (this._separatorElement) {\n            if (this.parent && this.parent.isFirstElement(this)) {\n                this._separatorElement.style.display = \"none\";\n            }\n            else {\n                if (displayMode) {\n                    this._separatorElement.style.display = displayMode;\n                }\n                else {\n                    this._separatorElement.style.removeProperty(\"display\");\n                }\n            }\n        }\n    }\n\n    private hideElementDueToOverflow() {\n        if (this._renderedElement && this.isVisible) {\n            this._renderedElement.style.visibility = \"hidden\";\n\n            this.isVisible = false;\n            raiseElementVisibilityChangedEvent(this, false);\n        }\n    }\n\n    private showElementHiddenDueToOverflow() {\n        if (this._renderedElement && !this.isVisible) {\n            this._renderedElement.style.removeProperty(\"visibility\");\n\n            this.isVisible = true;\n            raiseElementVisibilityChangedEvent(this, false);\n        }\n    }\n\n    // Marked private to emulate internal access\n    private handleOverflow(maxHeight: number) {\n        if (this.isVisible || this.isHiddenDueToOverflow()) {\n            let handled = this.truncateOverflow(maxHeight);\n\n            // Even if we were unable to truncate the element to fit this time,\n            // it still could have been previously truncated\n            this._truncatedDueToOverflow = handled || this._truncatedDueToOverflow;\n\n            if (!handled) {\n                this.hideElementDueToOverflow();\n            }\n            else if (handled && !this.isVisible) {\n                this.showElementHiddenDueToOverflow();\n            }\n        }\n    }\n\n    // Marked private to emulate internal access\n    private resetOverflow(): boolean {\n        let sizeChanged = false;\n\n        if (this._truncatedDueToOverflow) {\n            this.undoOverflowTruncation();\n            this._truncatedDueToOverflow = false;\n            sizeChanged = true;\n        }\n\n        if (this.isHiddenDueToOverflow()) {\n            this.showElementHiddenDueToOverflow();\n        }\n\n        return sizeChanged;\n    }\n\n    protected getDefaultSerializationContext(): BaseSerializationContext {\n        return new SerializationContext();\n    }\n\n    protected createPlaceholderElement(): HTMLElement {\n        let styleDefinition = this.getEffectiveStyleDefinition();\n        let foregroundCssColor = Utils.stringToCssColor(styleDefinition.foregroundColors.default.subtle);\n\n        let element = document.createElement(\"div\");\n        element.style.border = \"1px dashed \" + foregroundCssColor;\n        element.style.padding = \"4px\";\n        element.style.minHeight = \"32px\";\n        element.style.fontSize = \"10px\";\n        element.style.color = <string>foregroundCssColor;\n        element.innerText = \"Empty \" + this.getJsonTypeName();\n\n        return element;\n    }\n\n    protected adjustRenderedElementSize(renderedElement: HTMLElement) {\n        if (this.height === \"auto\") {\n            renderedElement.style.flex = \"0 0 auto\";\n        }\n        else {\n            renderedElement.style.flex = \"1 1 auto\";\n        }\n    }\n\n    protected isDisplayed(): boolean {\n        return this._renderedElement !== undefined && this.isVisible && this._renderedElement.offsetHeight > 0;\n    }\n\n    protected abstract internalRender(): HTMLElement | undefined;\n\n    protected overrideInternalRender(): HTMLElement | undefined {\n        return this.internalRender();\n    }\n\n    protected applyPadding() {\n        if (this.separatorElement && this.separatorOrientation === Enums.Orientation.Horizontal) {\n            if (GlobalSettings.alwaysBleedSeparators && !this.isBleeding()) {\n                let padding = new PaddingDefinition();\n\n                this.getImmediateSurroundingPadding(padding);\n\n                let physicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(padding);\n\n                this.separatorElement.style.marginLeft = \"-\" + physicalPadding.left + \"px\";\n                this.separatorElement.style.marginRight = \"-\" + physicalPadding.right + \"px\";\n            }\n            else {\n                this.separatorElement.style.marginRight = \"0\";\n                this.separatorElement.style.marginLeft = \"0\";\n            }\n        }\n    }\n\n    /*\n     * Called when this element overflows the bottom of the card.\n     * maxHeight will be the amount of space still available on the card (0 if\n     * the element is fully off the card).\n     */\n    protected truncateOverflow(maxHeight: number): boolean {\n        // Child implementations should return true if the element handled\n        // the truncation request such that its content fits within maxHeight,\n        // false if the element should fall back to being hidden\n        return false;\n    }\n\n    /*\n     * This should reverse any changes performed in truncateOverflow().\n     */\n    protected undoOverflowTruncation() { }\n\n    protected getDefaultPadding(): PaddingDefinition {\n        return new PaddingDefinition();\n    }\n\n    protected getHasBackground(): boolean {\n        return false;\n    }\n\n    protected getHasBorder(): boolean {\n        return false;\n    }\n\n    protected getPadding(): PaddingDefinition | undefined {\n        return this._padding;\n    }\n\n    protected setPadding(value: PaddingDefinition | undefined) {\n        this._padding = value;\n    }\n\n    protected shouldSerialize(context: SerializationContext): boolean {\n        return context.elementRegistry.findByName(this.getJsonTypeName()) !== undefined;\n    }\n\n    protected get useDefaultSizing(): boolean {\n        return true;\n    }\n\n    protected get separatorOrientation(): Enums.Orientation {\n        return Enums.Orientation.Horizontal;\n    }\n\n    protected get defaultStyle(): string {\n        return Enums.ContainerStyle.Default;\n    }\n\n    customCssSelector?: string;\n\n    parse(source: any, context?: SerializationContext) {\n        super.parse(source, context ? context : new SerializationContext());\n    }\n\n    asString(): string | undefined {\n        return \"\";\n    }\n\n    isBleeding(): boolean {\n        return false;\n    }\n\n    getEffectiveStyle(): string {\n        if (this.parent) {\n            return this.parent.getEffectiveStyle();\n        }\n\n        return this.defaultStyle;\n    }\n\n    getEffectiveStyleDefinition(): ContainerStyleDefinition {\n        return this.hostConfig.containerStyles.getStyleByName(this.getEffectiveStyle());\n    }\n\n    getEffectiveTextStyleDefinition(): TextStyleDefinition {\n        if (this.parent) {\n            return this.parent.getEffectiveTextStyleDefinition();\n        }\n\n        return this.hostConfig.textStyles.default;\n    }\n\n    getForbiddenActionTypes(): ActionType[] {\n        return [];\n    }\n\n    getImmediateSurroundingPadding(\n        result: PaddingDefinition,\n        processTop: boolean = true,\n        processRight: boolean = true,\n        processBottom: boolean = true,\n        processLeft: boolean = true) {\n        if (this.parent) {\n            let doProcessTop = processTop && this.parent.isTopElement(this);\n            let doProcessRight = processRight && this.parent.isRightMostElement(this);\n            let doProcessBottom = processBottom && this.parent.isBottomElement(this);\n            let doProcessLeft = processLeft && this.parent.isLeftMostElement(this);\n\n            let effectivePadding = this.parent.getEffectivePadding();\n\n            if (effectivePadding) {\n                if (doProcessTop && effectivePadding.top != Enums.Spacing.None) {\n                    result.top = effectivePadding.top;\n\n                    doProcessTop = false;\n                }\n\n                if (doProcessRight && effectivePadding.right != Enums.Spacing.None) {\n                    result.right = effectivePadding.right;\n\n                    doProcessRight = false;\n                }\n\n                if (doProcessBottom && effectivePadding.bottom != Enums.Spacing.None) {\n                    result.bottom = effectivePadding.bottom;\n\n                    doProcessBottom = false;\n                }\n\n                if (doProcessLeft && effectivePadding.left != Enums.Spacing.None) {\n                    result.left = effectivePadding.left;\n\n                    doProcessLeft = false;\n                }\n            }\n\n            if (doProcessTop || doProcessRight || doProcessBottom || doProcessLeft) {\n                this.parent.getImmediateSurroundingPadding(\n                    result,\n                    doProcessTop,\n                    doProcessRight,\n                    doProcessBottom,\n                    doProcessLeft);\n            }\n        }\n    }\n\n    getActionCount(): number {\n        return 0;\n    }\n\n    getActionAt(index: number): Action | undefined {\n        throw new Error(Strings.errors.indexOutOfRange(index));\n    }\n\n    indexOfAction(action: Action): number {\n        for (let i = 0; i < this.getActionCount(); i++) {\n            if (this.getActionAt(i) === action) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    remove(): boolean {\n        if (this.parent && this.parent instanceof CardElementContainer) {\n            return this.parent.removeItem(this);\n        }\n\n        return false;\n    }\n\n    render(): HTMLElement | undefined {\n        this._renderedElement = this.overrideInternalRender();\n        this._separatorElement = this.internalRenderSeparator();\n\n        if (this._renderedElement) {\n            if (this.id) {\n                this._renderedElement.id = this.id;\n            }\n\n            if (this.customCssSelector) {\n                this._renderedElement.classList.add(this.customCssSelector);\n            }\n\n            this._renderedElement.style.boxSizing = \"border-box\";\n            this._defaultRenderedElementDisplayMode = this._renderedElement.style.display ? this._renderedElement.style.display : undefined;\n\n            this.adjustRenderedElementSize(this._renderedElement);\n            this.updateLayout(false);\n        }\n        else if (this.isDesignMode()) {\n            this._renderedElement = this.createPlaceholderElement();\n        }\n\n        return this._renderedElement;\n    }\n\n    updateLayout(processChildren: boolean = true) {\n        this.updateRenderedElementVisibility();\n        this.applyPadding();\n    }\n\n    indexOf(cardElement: CardElement): number {\n        return -1;\n    }\n\n    isDesignMode(): boolean {\n        let rootElement = this.getRootElement();\n\n        return rootElement instanceof AdaptiveCard && rootElement.designMode;\n    }\n\n    isFirstElement(element: CardElement): boolean {\n        return true;\n    }\n\n    isLastElement(element: CardElement): boolean {\n        return true;\n    }\n\n    isAtTheVeryLeft(): boolean {\n        return this.parent ? this.parent.isLeftMostElement(this) && this.parent.isAtTheVeryLeft() : true;\n    }\n\n    isAtTheVeryRight(): boolean {\n        return this.parent ? this.parent.isRightMostElement(this) && this.parent.isAtTheVeryRight() : true;\n    }\n\n    isAtTheVeryTop(): boolean {\n        return this.parent ? this.parent.isFirstElement(this) && this.parent.isAtTheVeryTop() : true;\n    }\n\n    isAtTheVeryBottom(): boolean {\n        return this.parent ? this.parent.isLastElement(this) && this.parent.isAtTheVeryBottom() : true;\n    }\n\n    isBleedingAtTop(): boolean {\n        return false;\n    }\n\n    isBleedingAtBottom(): boolean {\n        return false;\n    }\n\n    isLeftMostElement(element: CardElement): boolean {\n        return true;\n    }\n\n    isRightMostElement(element: CardElement): boolean {\n        return true;\n    }\n\n    isTopElement(element: CardElement): boolean {\n        return this.isFirstElement(element);\n    }\n\n    isBottomElement(element: CardElement): boolean {\n        return this.isLastElement(element);\n    }\n\n    isHiddenDueToOverflow(): boolean {\n        return this._renderedElement !== undefined && this._renderedElement.style.visibility == 'hidden';\n    }\n\n    getRootElement(): CardElement {\n        return this.getRootObject() as CardElement;\n    }\n\n    getParentContainer(): Container | undefined {\n        let currentElement = this.parent;\n\n        while (currentElement) {\n            if (currentElement instanceof Container) {\n                return <Container>currentElement;\n            }\n\n            currentElement = currentElement.parent;\n        }\n\n        return undefined;\n    }\n\n    getAllInputs(processActions: boolean = true): Input[] {\n        return [];\n    }\n\n    getResourceInformation(): IResourceInformation[] {\n        return [];\n    }\n\n    getElementById(id: string): CardElement | undefined {\n        return this.id === id ? this : undefined;\n    }\n\n    getActionById(id: string): Action | undefined {\n        return undefined;\n    }\n\n    getEffectivePadding(): PaddingDefinition {\n        let padding = this.getPadding();\n\n        return padding ? padding : this.getDefaultPadding();\n    }\n\n    getEffectiveHorizontalAlignment(): Enums.HorizontalAlignment {\n        if (this.horizontalAlignment !== undefined) {\n            return this.horizontalAlignment;\n        }\n\n        if (this.parent) {\n            return this.parent.getEffectiveHorizontalAlignment();\n        }\n\n        return Enums.HorizontalAlignment.Left;\n    }\n\n    get hostConfig(): HostConfig {\n        if (this._hostConfig) {\n            return this._hostConfig;\n        }\n        else {\n            if (this.parent) {\n                return this.parent.hostConfig;\n            }\n            else {\n                return defaultHostConfig;\n            }\n        }\n    }\n\n    set hostConfig(value: HostConfig) {\n        this._hostConfig = value;\n    }\n\n    get index(): number {\n        if (this.parent) {\n            return this.parent.indexOf(this);\n        }\n        else {\n            return 0;\n        }\n    }\n\n    get isInteractive(): boolean {\n        return false;\n    }\n\n    get isStandalone(): boolean {\n        return true;\n    }\n\n    get isInline(): boolean {\n        return false;\n    }\n\n    get hasVisibleSeparator(): boolean {\n        if (this.parent && this.separatorElement) {\n            return !this.parent.isFirstElement(this) && (this.isVisible || this.isDesignMode());\n        }\n        else {\n            return false;\n        }\n    }\n\n    get separatorElement(): HTMLElement | undefined {\n        return this._separatorElement;\n    }\n\n    get parent(): CardElement | undefined {\n        return <CardElement>this._parent;\n    }\n}\n\nexport class ActionProperty extends PropertyDefinition {\n    parse(sender: SerializableObject, source: PropertyBag, context: SerializationContext): Action | undefined {\n        let parent = <CardElement>sender;\n\n        return context.parseAction(\n            parent,\n            source[this.name],\n            this.forbiddenActionTypes,\n            parent.isDesignMode());\n    }\n\n    toJSON(sender: SerializableObject, target: PropertyBag, value: Action | undefined, context: SerializationContext) {\n        context.serializeValue(target, this.name, value ? value.toJSON(context) : undefined, undefined, true);\n    }\n\n    constructor(\n        readonly targetVersion: Version,\n        readonly name: string,\n        readonly forbiddenActionTypes: string[] = []) {\n        super(targetVersion, name, undefined);\n    }\n}\n\nexport abstract class BaseTextBlock extends CardElement {\n    //#region Schema\n\n    static readonly textProperty = new StringProperty(Versions.v1_0, \"text\", true);\n    static readonly sizeProperty = new EnumProperty(Versions.v1_0, \"size\", Enums.TextSize);\n    static readonly weightProperty = new EnumProperty(Versions.v1_0, \"weight\", Enums.TextWeight);\n    static readonly colorProperty = new EnumProperty(Versions.v1_0, \"color\", Enums.TextColor);\n    static readonly isSubtleProperty = new BoolProperty(Versions.v1_0, \"isSubtle\");\n    static readonly fontTypeProperty = new EnumProperty(Versions.v1_2, \"fontType\", Enums.FontType);\n    static readonly selectActionProperty = new ActionProperty(Versions.v1_1, \"selectAction\", [ \"Action.ShowCard\" ]);\n\n    protected populateSchema(schema: SerializableObjectSchema) {\n        super.populateSchema(schema);\n\n        // selectAction is declared on BaseTextBlock but is only exposed on TextRun,\n        // so the property is removed from the BaseTextBlock schema.\n        schema.remove(BaseTextBlock.selectActionProperty);\n    }\n\n    @property(BaseTextBlock.sizeProperty)\n    size?: Enums.TextSize;\n\n    @property(BaseTextBlock.weightProperty)\n    weight?: Enums.TextWeight;\n\n    @property(BaseTextBlock.colorProperty)\n    color?: Enums.TextColor;\n\n    @property(BaseTextBlock.fontTypeProperty)\n    fontType?: Enums.FontType;\n\n    @property(BaseTextBlock.isSubtleProperty)\n    isSubtle?: boolean;\n\n    @property(BaseTextBlock.textProperty)\n    get text(): string | undefined {\n        return this.getValue(BaseTextBlock.textProperty);\n    }\n\n    set text(value: string | undefined) {\n        this.setText(value);\n    }\n\n    @property(BaseTextBlock.selectActionProperty)\n    selectAction?: Action;\n\n    //#endregion\n\n    protected getFontSize(fontType: FontTypeDefinition): number {\n        switch (this.effectiveSize) {\n            case Enums.TextSize.Small:\n                return fontType.fontSizes.small;\n            case Enums.TextSize.Medium:\n                return fontType.fontSizes.medium;\n            case Enums.TextSize.Large:\n                return fontType.fontSizes.large;\n            case Enums.TextSize.ExtraLarge:\n                return fontType.fontSizes.extraLarge;\n            default:\n                return fontType.fontSizes.default;\n        }\n    }\n\n    protected getColorDefinition(colorSet: ColorSetDefinition, color: Enums.TextColor): TextColorDefinition {\n        switch (color) {\n            case Enums.TextColor.Accent:\n                return colorSet.accent;\n            case Enums.TextColor.Dark:\n                return colorSet.dark;\n            case Enums.TextColor.Light:\n                return colorSet.light;\n            case Enums.TextColor.Good:\n                return colorSet.good;\n            case Enums.TextColor.Warning:\n                return colorSet.warning;\n            case Enums.TextColor.Attention:\n                return colorSet.attention;\n            default:\n                return colorSet.default;\n        }\n    }\n\n    protected setText(value: string | undefined) {\n        this.setValue(BaseTextBlock.textProperty, value);\n    }\n\n    ariaHidden: boolean = false;\n\n    constructor(text?: string) {\n        super();\n\n        if (text) {\n            this.text = text;\n        }\n    }\n\n    init(textDefinition: BaseTextDefinition) {\n        this.size = textDefinition.size;\n        this.weight = textDefinition.weight;\n        this.color = textDefinition.color;\n        this.isSubtle = textDefinition.isSubtle;\n    }\n\n    asString(): string | undefined {\n        return this.text;\n    }\n\n    applyStylesTo(targetElement: HTMLElement) {\n        let fontType = this.hostConfig.getFontTypeDefinition(this.effectiveFontType);\n\n        if (fontType.fontFamily) {\n            targetElement.style.fontFamily = fontType.fontFamily;\n        }\n\n        let fontSize: number;\n\n        switch (this.effectiveSize) {\n            case Enums.TextSize.Small:\n                fontSize = fontType.fontSizes.small;\n                break;\n            case Enums.TextSize.Medium:\n                fontSize = fontType.fontSizes.medium;\n                break;\n            case Enums.TextSize.Large:\n                fontSize = fontType.fontSizes.large;\n                break;\n            case Enums.TextSize.ExtraLarge:\n                fontSize = fontType.fontSizes.extraLarge;\n                break;\n            default:\n                fontSize = fontType.fontSizes.default;\n                break;\n        }\n\n        targetElement.style.fontSize = fontSize + \"px\";\n\n        let colorDefinition = this.getColorDefinition(this.getEffectiveStyleDefinition().foregroundColors, this.effectiveColor);\n\n        targetElement.style.color = <string>Utils.stringToCssColor(this.effectiveIsSubtle ? colorDefinition.subtle : colorDefinition.default);\n\n        let fontWeight: number;\n\n        switch (this.effectiveWeight) {\n            case Enums.TextWeight.Lighter:\n                fontWeight = fontType.fontWeights.lighter;\n                break;\n            case Enums.TextWeight.Bolder:\n                fontWeight = fontType.fontWeights.bolder;\n                break;\n            default:\n                fontWeight = fontType.fontWeights.default;\n                break;\n        }\n\n        targetElement.style.fontWeight = fontWeight.toString();\n\n        if (this.ariaHidden) {\n            targetElement.setAttribute(\"aria-hidden\", \"true\");\n        }\n    }\n\n    get effectiveColor(): Enums.TextColor {\n        return this.color !== undefined ? this.color : this.getEffectiveTextStyleDefinition().color;\n    }\n\n    get effectiveFontType(): Enums.FontType {\n        return this.fontType !== undefined ? this.fontType : this.getEffectiveTextStyleDefinition().fontType;\n    }\n\n    get effectiveIsSubtle(): boolean {\n        return this.isSubtle !== undefined ? this.isSubtle : this.getEffectiveTextStyleDefinition().isSubtle;\n    }\n\n    get effectiveSize(): Enums.TextSize {\n        return this.size !== undefined ? this.size : this.getEffectiveTextStyleDefinition().size;\n    }\n\n    get effectiveWeight(): Enums.TextWeight {\n        return this.weight !== undefined ? this.weight : this.getEffectiveTextStyleDefinition().weight;\n    }\n}\n\nexport type TextBlockStyle = \"default\" | \"heading\" | \"columnHeader\";\n\nexport class TextBlock extends BaseTextBlock {\n    //#region Schema\n\n    static readonly wrapProperty = new BoolProperty(Versions.v1_0, \"wrap\", false);\n    static readonly maxLinesProperty = new NumProperty(Versions.v1_0, \"maxLines\");\n    static readonly styleProperty = new ValueSetProperty(\n        Versions.v1_5,\n        \"style\",\n        [\n            { value: \"default\" },\n            { value: \"columnHeader\" },\n            { value: \"heading\" }\n        ]);\n\n    @property(TextBlock.wrapProperty)\n    wrap: boolean = false;\n\n    @property(TextBlock.maxLinesProperty)\n    maxLines?: number;\n\n    @property(TextBlock.styleProperty)\n    style?: TextBlockStyle;\n\n    //#endregion\n\n    private _computedLineHeight: number;\n    private _originalInnerHtml: string;\n    private _processedText?: string;\n    private _treatAsPlainText: boolean = true;\n\n    private restoreOriginalContent() {\n        if (this.renderedElement !== undefined) {\n            if (this.maxLines && this.maxLines > 0) {\n                this.renderedElement.style.maxHeight = this._computedLineHeight * this.maxLines + \"px\";\n            }\n\n            this.renderedElement.innerHTML = this._originalInnerHtml;\n        }\n    }\n\n    private truncateIfSupported(maxHeight: number): boolean {\n        if (this.renderedElement !== undefined) {\n            // For now, only truncate TextBlocks that contain just a single\n            // paragraph -- since the maxLines calculation doesn't take into\n            // account Markdown lists\n            let children = this.renderedElement.children;\n            let isTextOnly = !children.length;\n            let truncationSupported = isTextOnly || children.length == 1 && (<HTMLElement>children[0]).tagName.toLowerCase() == 'p';\n\n            if (truncationSupported) {\n                let element = isTextOnly ? this.renderedElement : <HTMLElement>children[0];\n\n                Utils.truncate(element, maxHeight, this._computedLineHeight);\n\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    protected setText(value: string) {\n        super.setText(value);\n\n        this._processedText = undefined;\n    }\n\n    protected internalRender(): HTMLElement | undefined {\n        this._processedText = undefined;\n\n        if (this.text) {\n            let preProcessedText = this.preProcessPropertyValue(BaseTextBlock.textProperty);\n            let hostConfig = this.hostConfig;\n\n            let element: HTMLElement;\n\n            if (this.forElementId) {\n                let labelElement = document.createElement(\"label\");\n                labelElement.htmlFor = this.forElementId;\n\n                element = labelElement;\n            }\n            else {\n                element = document.createElement(\"div\");\n            }\n\n            element.classList.add(hostConfig.makeCssClassName(\"ac-textBlock\"));\n            element.style.overflow = \"hidden\";\n\n            this.applyStylesTo(element);\n\n            if (this.style === \"heading\") {\n                element.setAttribute(\"role\", \"heading\");\n\n                let headingLevel = this.hostConfig.textBlock.headingLevel;\n\n                if (headingLevel !== undefined && headingLevel > 0) {\n                    element.setAttribute(\"aria-level\", headingLevel.toString());\n                }\n            }\n\n            if (this.selectAction && hostConfig.supportsInteractivity) {\n                element.onclick = (e) => {\n                    if (this.selectAction && this.selectAction.isEnabled) {\n                        e.preventDefault();\n                        e.cancelBubble = true;\n\n                        this.selectAction.execute();\n                    }\n                }\n\n                this.selectAction.setupElementForAccessibility(element);\n\n                if (this.selectAction.isEnabled) {\n                    element.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\n                }\n            }\n\n            if (!this._processedText) {\n                this._treatAsPlainText = true;\n\n                let formattedText = TextFormatters.formatText(this.lang, preProcessedText);\n\n                if (this.useMarkdown && formattedText) {\n                    if (GlobalSettings.allowMarkForTextHighlighting) {\n                        formattedText = formattedText.replace(/<mark>/g, \"===\").replace(/<\\/mark>/g, \"/==/\");\n                    }\n\n                    let markdownProcessingResult = AdaptiveCard.applyMarkdown(formattedText);\n\n                    if (markdownProcessingResult.didProcess && markdownProcessingResult.outputHtml) {\n                        this._processedText = markdownProcessingResult.outputHtml;\n                        this._treatAsPlainText = false;\n\n                        // Only process <mark> tag if markdown processing was applied because\n                        // markdown processing is also responsible for sanitizing the input string\n                        if (GlobalSettings.allowMarkForTextHighlighting && this._processedText) {\n                            let markStyle: string = \"\";\n                            let effectiveStyle = this.getEffectiveStyleDefinition();\n\n                            if (effectiveStyle.highlightBackgroundColor) {\n                                markStyle += \"background-color: \" + effectiveStyle.highlightBackgroundColor + \";\";\n                            }\n\n                            if (effectiveStyle.highlightForegroundColor) {\n                                markStyle += \"color: \" + effectiveStyle.highlightForegroundColor + \";\";\n                            }\n\n                            if (markStyle) {\n                                markStyle = 'style=\"' + markStyle + '\"';\n                            }\n\n                            this._processedText = this._processedText.replace(/===/g, \"<mark \" + markStyle + \">\").replace(/\\/==\\//g, \"</mark>\");\n                        }\n                    } else {\n                        this._processedText = formattedText;\n                        this._treatAsPlainText = true;\n                    }\n                }\n                else {\n                    this._processedText = formattedText;\n                    this._treatAsPlainText = true;\n                }\n            }\n\n            if (!this._processedText) {\n                this._processedText = \"\";\n            }\n\n            if (this._treatAsPlainText) {\n                element.innerText = this._processedText;\n            }\n            else {\n                element.innerHTML = this._processedText;\n            }\n\n            if (element.firstElementChild instanceof HTMLElement) {\n                let firstElementChild = <HTMLElement>element.firstElementChild;\n                firstElementChild.style.marginTop = \"0px\";\n                firstElementChild.style.width = \"100%\";\n\n                if (!this.wrap) {\n                    firstElementChild.style.overflow = \"hidden\";\n                    firstElementChild.style.textOverflow = \"ellipsis\";\n                }\n            }\n\n            if (element.lastElementChild instanceof HTMLElement) {\n                (<HTMLElement>element.lastElementChild).style.marginBottom = \"0px\";\n            }\n\n            let anchors = element.getElementsByTagName(\"a\");\n\n            for (let i = 0; i < anchors.length; i++) {\n                let anchor = <HTMLAnchorElement>anchors[i];\n                anchor.classList.add(hostConfig.makeCssClassName(\"ac-anchor\"));\n                anchor.target = \"_blank\";\n                anchor.onclick = (e: MouseEvent) => {\n                    if (raiseAnchorClickedEvent(this, e.target as HTMLAnchorElement, e)) {\n                        e.preventDefault();\n                        e.cancelBubble = true;\n                    }\n                }\n                anchor.oncontextmenu = (e: MouseEvent) => {\n                    if (raiseAnchorClickedEvent(this, e.target as HTMLAnchorElement, e)) {\n                        e.preventDefault();\n                        e.cancelBubble = true;\n\n                        return false;\n                    }\n\n                    return true;\n                }\n            }\n\n            if (this.wrap) {\n                element.style.wordWrap = \"break-word\";\n\n                if (this.maxLines && this.maxLines > 0) {\n                    element.style.overflow = \"hidden\";\n\n                    if (Utils.isInternetExplorer() || !GlobalSettings.useWebkitLineClamp) {\n                        element.style.maxHeight = (this._computedLineHeight * this.maxLines) + \"px\";\n                    }\n                    else {\n                        // While non standard, --webkit-line-clamp works in every browser (except IE)\n                        // and is a great solution to support the maxLines feature with ellipsis\n                        // truncation. With --webkit-line-clamp there is need to use explicit line heights\n                        element.style.removeProperty(\"line-height\");\n                        element.style.display = \"-webkit-box\";\n                        element.style.webkitBoxOrient = \"vertical\";\n                        element.style.webkitLineClamp = this.maxLines.toString();\n                    }\n                }\n            }\n            else {\n                element.style.whiteSpace = \"nowrap\";\n                element.style.textOverflow = \"ellipsis\";\n            }\n\n            if (GlobalSettings.useAdvancedTextBlockTruncation || GlobalSettings.useAdvancedCardBottomTruncation) {\n                this._originalInnerHtml = element.innerHTML;\n            }\n\n            return element;\n        }\n        else {\n            return undefined;\n        }\n    }\n\n    protected truncateOverflow(maxHeight: number): boolean {\n        if (maxHeight >= this._computedLineHeight) {\n            return this.truncateIfSupported(maxHeight);\n        }\n\n        return false;\n    }\n\n    protected undoOverflowTruncation() {\n        this.restoreOriginalContent();\n\n        if (GlobalSettings.useAdvancedTextBlockTruncation && this.maxLines) {\n            let maxHeight = this._computedLineHeight * this.maxLines;\n\n            this.truncateIfSupported(maxHeight);\n        }\n    }\n\n    useMarkdown: boolean = true;\n    forElementId?: string;\n\n    applyStylesTo(targetElement: HTMLElement) {\n        super.applyStylesTo(targetElement);\n\n        switch (this.getEffectiveHorizontalAlignment()) {\n            case Enums.HorizontalAlignment.Center:\n                targetElement.style.textAlign = \"center\";\n                break;\n            case Enums.HorizontalAlignment.Right:\n                targetElement.style.textAlign = \"end\";\n                break;\n            default:\n                targetElement.style.textAlign = \"start\";\n                break;\n        }\n\n        let lineHeights = this.hostConfig.lineHeights;\n\n        if (lineHeights) {\n            switch (this.effectiveSize) {\n                case Enums.TextSize.Small:\n                    this._computedLineHeight = lineHeights.small;\n                    break;\n                case Enums.TextSize.Medium:\n                    this._computedLineHeight = lineHeights.medium;\n                    break;\n                case Enums.TextSize.Large:\n                    this._computedLineHeight = lineHeights.large;\n                    break;\n                case Enums.TextSize.ExtraLarge:\n                    this._computedLineHeight = lineHeights.extraLarge;\n                    break;\n                default:\n                    this._computedLineHeight = lineHeights.default;\n                    break;\n            }\n        }\n        else {\n            // Looks like 1.33 is the magic number to compute line-height\n            // from font size.\n            this._computedLineHeight = this.getFontSize(this.hostConfig.getFontTypeDefinition(this.effectiveFontType)) * 1.33;\n        }\n\n        targetElement.style.lineHeight = this._computedLineHeight + \"px\";\n    }\n\n    getJsonTypeName(): string {\n        return \"TextBlock\";\n    }\n\n    getEffectiveTextStyleDefinition(): TextStyleDefinition {\n        if (this.style) {\n            return this.hostConfig.textStyles.getStyleByName(this.style);\n        }\n\n        return super.getEffectiveTextStyleDefinition();\n    }\n\n    updateLayout(processChildren: boolean = false) {\n        super.updateLayout(processChildren);\n\n        if (GlobalSettings.useAdvancedTextBlockTruncation && this.maxLines && this.isDisplayed()) {\n            // Reset the element's innerHTML in case the available room for\n            // content has increased\n            this.restoreOriginalContent();\n            this.truncateIfSupported(this._computedLineHeight * this.maxLines);\n        }\n    }\n}\n\nexport class TextRun extends BaseTextBlock {\n    //#region Schema\n\n    static readonly italicProperty = new BoolProperty(Versions.v1_2, \"italic\", false);\n    static readonly strikethroughProperty = new BoolProperty(Versions.v1_2, \"strikethrough\", false);\n    static readonly highlightProperty = new BoolProperty(Versions.v1_2, \"highlight\", false);\n    static readonly underlineProperty = new BoolProperty(Versions.v1_3, \"underline\", false);\n\n    protected populateSchema(schema: SerializableObjectSchema) {\n        super.populateSchema(schema);\n\n        schema.add(BaseTextBlock.selectActionProperty);\n    }\n\n    @property(TextRun.italicProperty)\n    italic: boolean = false;\n\n    @property(TextRun.strikethroughProperty)\n    strikethrough: boolean = false;\n\n    @property(TextRun.highlightProperty)\n    highlight: boolean = false;\n\n    @property(TextRun.underlineProperty)\n    underline: boolean = false;\n\n    //#endregion\n\n    protected internalRender(): HTMLElement | undefined {\n        if (this.text) {\n            let preProcessedText = this.preProcessPropertyValue(BaseTextBlock.textProperty);\n            let hostConfig = this.hostConfig;\n\n            let formattedText = TextFormatters.formatText(this.lang, preProcessedText);\n\n            if (!formattedText) {\n                formattedText = \"\";\n            }\n\n            let element = document.createElement(\"span\");\n            element.classList.add(hostConfig.makeCssClassName(\"ac-textRun\"));\n\n            this.applyStylesTo(element);\n\n            if (this.selectAction && hostConfig.supportsInteractivity) {\n                let anchor = document.createElement(\"a\");\n                anchor.classList.add(hostConfig.makeCssClassName(\"ac-anchor\"));\n\n                let href = this.selectAction.getHref();\n\n                anchor.href = href ? href : \"\";\n                anchor.target = \"_blank\";\n                anchor.onclick = (e) => {\n                    if (this.selectAction && this.selectAction.isEnabled) {\n                        e.preventDefault();\n                        e.cancelBubble = true;\n\n                        this.selectAction.execute();\n                    }\n                }\n\n                this.selectAction.setupElementForAccessibility(anchor);\n\n                anchor.innerText = formattedText;\n\n                element.appendChild(anchor);\n            }\n            else {\n                element.innerText = formattedText;\n            }\n\n            return element;\n        }\n        else {\n            return undefined;\n        }\n    }\n\n    applyStylesTo(targetElement: HTMLElement) {\n        super.applyStylesTo(targetElement);\n\n        if (this.italic) {\n            targetElement.style.fontStyle = \"italic\";\n        }\n\n        if (this.strikethrough) {\n            targetElement.style.textDecoration = \"line-through\";\n        }\n\n        if (this.highlight) {\n            let colorDefinition = this.getColorDefinition(this.getEffectiveStyleDefinition().foregroundColors, this.effectiveColor);\n\n            targetElement.style.backgroundColor = <string>Utils.stringToCssColor(this.effectiveIsSubtle ? colorDefinition.highlightColors.subtle : colorDefinition.highlightColors.default);\n        }\n\n        if (this.underline) {\n            targetElement.style.textDecoration = \"underline\";\n        }\n    }\n\n    getJsonTypeName(): string {\n        return \"TextRun\";\n    }\n\n    get isStandalone(): boolean {\n        return false;\n    }\n\n    get isInline(): boolean {\n        return true;\n    }\n}\n\nexport class RichTextBlock extends CardElement {\n    private _inlines: CardElement[] = [];\n\n    private internalAddInline(inline: CardElement, forceAdd: boolean = false) {\n        if (!inline.isInline) {\n            throw new Error(Strings.errors.elementCannotBeUsedAsInline());\n        }\n\n        let doAdd: boolean = inline.parent === undefined || forceAdd;\n\n        if (!doAdd && inline.parent != this) {\n            throw new Error(Strings.errors.inlineAlreadyParented());\n        }\n        else {\n            inline.setParent(this);\n\n            this._inlines.push(inline);\n        }\n    }\n\n    protected internalParse(source: any, context: SerializationContext) {\n        super.internalParse(source, context);\n\n        this._inlines = [];\n\n        if (Array.isArray(source[\"inlines\"])) {\n            for (let jsonInline of source[\"inlines\"]) {\n                let inline: CardElement | undefined;\n\n                if (typeof jsonInline === \"string\") {\n                    let textRun = new TextRun();\n                    textRun.text = jsonInline;\n\n                    inline = textRun;\n                }\n                else {\n                    // No fallback for inlines in 1.2\n                    inline = context.parseElement(this, jsonInline, false);\n                }\n\n                if (inline) {\n                    this.internalAddInline(inline, true);\n                }\n            }\n        }\n    }\n\n    protected internalToJSON(target: PropertyBag, context: SerializationContext) {\n        super.internalToJSON(target, context);\n\n        if (this._inlines.length > 0) {\n            let jsonInlines: any[] = [];\n\n            for (let inline of this._inlines) {\n                jsonInlines.push(inline.toJSON(context));\n            }\n\n            context.serializeValue(target, \"inlines\", jsonInlines);\n        }\n    }\n\n    protected internalRender(): HTMLElement | undefined {\n        if (this._inlines.length > 0) {\n            let element: HTMLElement;\n\n            if (this.forElementId) {\n                let labelElement = document.createElement(\"label\");\n                labelElement.htmlFor = this.forElementId;\n\n                element = labelElement;\n            }\n            else {\n                element = document.createElement(\"div\");\n            }\n\n            element.className = this.hostConfig.makeCssClassName(\"ac-richTextBlock\");\n\n            switch (this.getEffectiveHorizontalAlignment()) {\n                case Enums.HorizontalAlignment.Center:\n                    element.style.textAlign = \"center\";\n                    break;\n                case Enums.HorizontalAlignment.Right:\n                    element.style.textAlign = \"end\";\n                    break;\n                default:\n                    element.style.textAlign = \"start\";\n                    break;\n            }\n\n            let renderedInlines: number = 0;\n\n            for (let inline of this._inlines) {\n                let renderedInline = inline.render();\n\n                if (renderedInline) {\n                    element.appendChild(renderedInline);\n\n                    renderedInlines++;\n                }\n            }\n\n            if (renderedInlines > 0) {\n                return element;\n            }\n        }\n\n        return undefined;\n    }\n\n    forElementId?: string;\n\n    asString(): string | undefined {\n        let result = \"\";\n\n        for (let inline of this._inlines) {\n            result += inline.asString();\n        }\n\n        return result;\n    }\n\n    getJsonTypeName(): string {\n        return \"RichTextBlock\";\n    }\n\n    getInlineCount(): number {\n        return this._inlines.length;\n    }\n\n    getInlineAt(index: number): CardElement {\n        if (index >= 0 && index < this._inlines.length) {\n            return this._inlines[index];\n        }\n        else {\n            throw new Error(Strings.errors.indexOutOfRange(index));\n        }\n    }\n\n    addInline(inline: CardElement | string) {\n        if (typeof inline === \"string\") {\n            this.internalAddInline(new TextRun(inline));\n        }\n        else {\n            this.internalAddInline(inline);\n        }\n    }\n\n    removeInline(inline: CardElement): boolean {\n        let index = this._inlines.indexOf(inline);\n\n        if (index >= 0) {\n            this._inlines[index].setParent(undefined);\n            this._inlines.splice(index, 1);\n\n            return true;\n        }\n\n        return false;\n    }\n}\n\nexport class Fact extends SerializableObject {\n    //#region Schema\n\n    static readonly titleProperty = new StringProperty(Versions.v1_0, \"title\");\n    static readonly valueProperty = new StringProperty(Versions.v1_0, \"value\");\n\n    // For historic reasons, the \"title\" schema property is exposed as \"name\" in the OM.\n    @property(Fact.titleProperty)\n    name?: string;\n\n    @property(Fact.valueProperty)\n    value?: string;\n\n    //#endregion\n\n    protected getSchemaKey(): string {\n        return \"Fact\";\n    }\n\n    constructor(name?: string, value?: string) {\n        super();\n\n        this.name = name;\n        this.value = value;\n    }\n}\n\nexport class FactSet extends CardElement {\n    //#region Schema\n\n    static readonly factsProperty = new SerializableObjectCollectionProperty(Versions.v1_0, \"facts\", Fact);\n\n    @property(FactSet.factsProperty)\n    facts: Fact[];\n\n    //#endregion\n\n    protected get useDefaultSizing(): boolean {\n        return false;\n    }\n\n    protected internalRender(): HTMLElement | undefined {\n        let element: HTMLElement | undefined = undefined;\n        let hostConfig = this.hostConfig;\n\n        if (this.facts.length > 0) {\n            element = document.createElement(\"table\");\n            element.style.borderWidth = \"0px\";\n            element.style.borderSpacing = \"0px\";\n            element.style.borderStyle = \"none\";\n            element.style.borderCollapse = \"collapse\";\n            element.style.display = \"block\";\n            element.style.overflow = \"hidden\";\n            element.classList.add(hostConfig.makeCssClassName(\"ac-factset\"));\n            element.setAttribute(\"role\", \"presentation\");\n\n            for (let i = 0; i < this.facts.length; i++) {\n                let trElement = document.createElement(\"tr\");\n\n                if (i > 0) {\n                    trElement.style.marginTop = hostConfig.factSet.spacing + \"px\";\n                }\n\n                // Title column\n                let tdElement = document.createElement(\"td\");\n                tdElement.style.padding = \"0\";\n                tdElement.classList.add(hostConfig.makeCssClassName(\"ac-fact-title\"));\n\n                if (hostConfig.factSet.title.maxWidth) {\n                    tdElement.style.maxWidth = hostConfig.factSet.title.maxWidth + \"px\";\n                }\n\n                tdElement.style.verticalAlign = \"top\";\n\n                let textBlock = new TextBlock();\n                textBlock.setParent(this);\n                textBlock.text = (!this.facts[i].name && this.isDesignMode()) ? \"Title\" : this.facts[i].name;\n                textBlock.size = hostConfig.factSet.title.size;\n                textBlock.color = hostConfig.factSet.title.color;\n                textBlock.isSubtle = hostConfig.factSet.title.isSubtle;\n                textBlock.weight = hostConfig.factSet.title.weight;\n                textBlock.wrap = hostConfig.factSet.title.wrap;\n                textBlock.spacing = Enums.Spacing.None;\n\n                Utils.appendChild(tdElement, textBlock.render());\n                Utils.appendChild(trElement, tdElement);\n\n                // Spacer column\n                tdElement = document.createElement(\"td\");\n                tdElement.style.width = \"10px\";\n\n                Utils.appendChild(trElement, tdElement);\n\n                // Value column\n                tdElement = document.createElement(\"td\");\n                tdElement.style.padding = \"0\";\n                tdElement.style.verticalAlign = \"top\";\n                tdElement.classList.add(hostConfig.makeCssClassName(\"ac-fact-value\"));\n\n                textBlock = new TextBlock();\n                textBlock.setParent(this);\n                textBlock.text = this.facts[i].value;\n                textBlock.size = hostConfig.factSet.value.size;\n                textBlock.color = hostConfig.factSet.value.color;\n                textBlock.isSubtle = hostConfig.factSet.value.isSubtle;\n                textBlock.weight = hostConfig.factSet.value.weight;\n                textBlock.wrap = hostConfig.factSet.value.wrap;\n                textBlock.spacing = Enums.Spacing.None;\n\n                Utils.appendChild(tdElement, textBlock.render());\n                Utils.appendChild(trElement, tdElement);\n                Utils.appendChild(element, trElement);\n            }\n        }\n\n        return element;\n    }\n\n    getJsonTypeName(): string {\n        return \"FactSet\";\n    }\n}\n\nclass ImageDimensionProperty extends PropertyDefinition {\n    getInternalName(): string {\n        return this.internalName;\n    }\n\n    parse(sender: SerializableObject, source: PropertyBag, context: BaseSerializationContext): number | undefined {\n        let result: number | undefined = undefined;\n        let sourceValue = source[this.name];\n\n        if (sourceValue === undefined) {\n            return this.defaultValue;\n        }\n\n        let isValid = false;\n\n        if (typeof sourceValue === \"string\") {\n            try {\n                let size = SizeAndUnit.parse(sourceValue, true);\n\n                if (size.unit == Enums.SizeUnit.Pixel) {\n                    result = size.physicalSize;\n\n                    isValid = true;\n                }\n            }\n            catch {\n                // Swallow the exception\n            }\n\n            // If the source value isn't valid per this property definition,\n            // check its validity per the fallback property, if specified\n            if (!isValid && this.fallbackProperty) {\n                isValid = this.fallbackProperty.isValidValue(sourceValue, context);\n            }\n        }\n\n        if (!isValid) {\n            context.logParseEvent(\n                sender,\n                Enums.ValidationEvent.InvalidPropertyValue,\n                Strings.errors.invalidPropertyValue(sourceValue, this.name));\n        }\n\n        return result;\n    }\n\n    toJSON(sender: SerializableObject, target: PropertyBag, value: number | undefined, context: BaseSerializationContext) {\n        context.serializeValue(\n            target,\n            this.name,\n            typeof value === \"number\" && !isNaN(value) ? value + \"px\" : undefined);\n    }\n\n    constructor(\n        readonly targetVersion: Version,\n        readonly name: string,\n        readonly internalName: string,\n        readonly fallbackProperty?: ValueSetProperty) {\n        super(targetVersion, name);\n    }\n}\n\nexport class Image extends CardElement {\n    //#region Schema\n\n    static readonly urlProperty = new StringProperty(Versions.v1_0, \"url\");\n    static readonly altTextProperty = new StringProperty(Versions.v1_0, \"altText\");\n    static readonly backgroundColorProperty = new StringProperty(Versions.v1_1, \"backgroundColor\");\n    static readonly styleProperty = new EnumProperty(\n        Versions.v1_0,\n        \"style\",\n        Enums.ImageStyle,\n        Enums.ImageStyle.Default);\n    static readonly sizeProperty = new EnumProperty(\n        Versions.v1_0,\n        \"size\",\n        Enums.Size,\n        Enums.Size.Auto);\n    static readonly pixelWidthProperty = new ImageDimensionProperty(Versions.v1_1, \"width\", \"pixelWidth\");\n    static readonly pixelHeightProperty = new ImageDimensionProperty(Versions.v1_1, \"height\", \"pixelHeight\", CardElement.heightProperty);\n    static readonly selectActionProperty = new ActionProperty(Versions.v1_1, \"selectAction\", [ \"Action.ShowCard\" ]);\n\n    protected populateSchema(schema: SerializableObjectSchema) {\n        super.populateSchema(schema);\n\n        schema.remove(CardElement.heightProperty);\n    }\n\n    @property(Image.urlProperty)\n    url?: string;\n\n    @property(Image.altTextProperty)\n    altText?: string;\n\n    @property(Image.backgroundColorProperty)\n    backgroundColor?: string;\n\n    @property(Image.sizeProperty)\n    size: Enums.Size = Enums.Size.Auto;\n\n    @property(Image.styleProperty)\n    style: Enums.ImageStyle = Enums.ImageStyle.Default;\n\n    @property(Image.pixelWidthProperty)\n    pixelWidth?: number;\n\n    @property(Image.pixelHeightProperty)\n    pixelHeight?: number;\n\n    @property(Image.selectActionProperty)\n    selectAction?: Action;\n\n    //#endregion\n\n    private applySize(element: HTMLElement) {\n        if (this.pixelWidth || this.pixelHeight) {\n            if (this.pixelWidth) {\n                element.style.width = this.pixelWidth + \"px\";\n            }\n\n            if (this.pixelHeight) {\n                element.style.height = this.pixelHeight + \"px\";\n            }\n        }\n        else {\n            if (this.maxHeight) {\n                // If the image is constrained in height, we set its height property and\n                // auto and stretch are ignored (default to medium). THis is necessary for\n                // ImageSet which uses a maximum image height as opposed to the cards width\n                // as a constraining dimension\n                switch (this.size) {\n                    case Enums.Size.Small:\n                        element.style.height = this.hostConfig.imageSizes.small + \"px\";\n                        break;\n                    case Enums.Size.Large:\n                        element.style.height = this.hostConfig.imageSizes.large + \"px\";\n                        break;\n                    default:\n                        element.style.height = this.hostConfig.imageSizes.medium + \"px\";\n                        break;\n                }\n\n                element.style.maxHeight = this.maxHeight + \"px\";\n            }\n            else {\n                switch (this.size) {\n                    case Enums.Size.Stretch:\n                        element.style.width = \"100%\";\n                        break;\n                    case Enums.Size.Auto:\n                        element.style.maxWidth = \"100%\";\n                        break;\n                    case Enums.Size.Small:\n                        element.style.width = this.hostConfig.imageSizes.small + \"px\";\n                        break;\n                    case Enums.Size.Large:\n                        element.style.width = this.hostConfig.imageSizes.large + \"px\";\n                        break;\n                    case Enums.Size.Medium:\n                        element.style.width = this.hostConfig.imageSizes.medium + \"px\";\n                        break;\n                }\n\n                element.style.maxHeight = \"100%\";\n            }\n        }\n    }\n\n    protected get useDefaultSizing() {\n        return false;\n    }\n\n    protected internalRender(): HTMLElement | undefined {\n        let element: HTMLElement | undefined = undefined;\n\n        if (this.url) {\n            element = document.createElement(\"div\");\n            element.style.display = \"flex\";\n            element.style.alignItems = \"flex-start\";\n\n            // Cache hostConfig to avoid walking the parent hierarchy multiple times\n            let hostConfig = this.hostConfig;\n\n            switch (this.getEffectiveHorizontalAlignment()) {\n                case Enums.HorizontalAlignment.Center:\n                    element.style.justifyContent = \"center\";\n                    break;\n                case Enums.HorizontalAlignment.Right:\n                    element.style.justifyContent = \"flex-end\";\n                    break;\n                default:\n                    element.style.justifyContent = \"flex-start\";\n                    break;\n            }\n\n            let imageElement = document.createElement(\"img\");\n            imageElement.onload = (e: Event) => {\n                raiseImageLoadedEvent(this);\n            }\n            imageElement.onerror = (e: Event) => {\n                if (this.renderedElement) {\n                    let card = this.getRootElement() as AdaptiveCard;\n\n                    this.renderedElement.innerHTML = \"\";\n\n                    if (card && card.designMode) {\n                        let errorElement = document.createElement(\"div\");\n                        errorElement.style.display = \"flex\";\n                        errorElement.style.alignItems = \"center\";\n                        errorElement.style.justifyContent = \"center\";\n                        errorElement.style.backgroundColor = \"#EEEEEE\";\n                        errorElement.style.color = \"black\";\n                        errorElement.innerText = \":-(\";\n                        errorElement.style.padding = \"10px\";\n\n                        this.applySize(errorElement);\n\n                        this.renderedElement.appendChild(errorElement);\n                    }\n                }\n\n                raiseImageLoadedEvent(this);\n            }\n            imageElement.style.minWidth = \"0\";\n            imageElement.classList.add(hostConfig.makeCssClassName(\"ac-image\"));\n\n            if (this.selectAction && hostConfig.supportsInteractivity) {\n                imageElement.onkeypress = (e) => {\n                    if (this.selectAction && this.selectAction.isEnabled && (e.code == \"Enter\" || e.code == \"Space\")) { // enter or space pressed\n                        e.preventDefault();\n                        e.cancelBubble = true;\n\n                        this.selectAction.execute();\n                    }\n                }\n\n                imageElement.onclick = (e) => {\n                    if (this.selectAction && this.selectAction.isEnabled) {\n                        e.preventDefault();\n                        e.cancelBubble = true;\n\n                        this.selectAction.execute();\n                    }\n                }\n\n                this.selectAction.setupElementForAccessibility(imageElement);\n\n                if (this.selectAction.isEnabled) {\n                    imageElement.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\n                }\n            }\n\n            this.applySize(imageElement);\n\n            if (this.style === Enums.ImageStyle.Person) {\n                imageElement.style.borderRadius = \"50%\";\n                imageElement.style.backgroundPosition = \"50% 50%\";\n                imageElement.style.backgroundRepeat = \"no-repeat\";\n            }\n\n            imageElement.style.backgroundColor = <string>Utils.stringToCssColor(this.backgroundColor);\n            imageElement.src = <string>this.preProcessPropertyValue(Image.urlProperty);\n\n            const altTextProperty = this.preProcessPropertyValue(Image.altTextProperty);\n            if (altTextProperty) {\n                imageElement.alt = <string>altTextProperty;\n            }\n\n            element.appendChild(imageElement);\n        }\n\n        return element;\n    }\n\n    maxHeight?: number;\n\n    getJsonTypeName(): string {\n        return \"Image\";\n    }\n\n    getActionById(id: string) {\n        let result = super.getActionById(id);\n\n        if (!result && this.selectAction) {\n            result = this.selectAction.getActionById(id);\n        }\n\n        return result;\n    }\n\n    getResourceInformation(): IResourceInformation[] {\n        return this.url ? [{ url: this.url, mimeType: \"image\" }] : [];\n    }\n}\n\nexport abstract class CardElementContainer extends CardElement {\n    //#region Schema\n\n    static readonly selectActionProperty = new ActionProperty(Versions.v1_1, \"selectAction\", [ \"Action.ShowCard\" ]);\n\n    protected populateSchema(schema: SerializableObjectSchema) {\n        super.populateSchema(schema);\n\n        if (!this.isSelectable) {\n            schema.remove(CardElementContainer.selectActionProperty);\n        }\n    }\n\n    @property(CardElementContainer.selectActionProperty)\n    protected _selectAction?: Action;\n\n    //#endregion\n\n    protected isElementAllowed(element: CardElement) {\n        return this.hostConfig.supportsInteractivity || !element.isInteractive;\n    }\n\n    protected applyPadding() {\n        super.applyPadding();\n\n        if (!this.renderedElement) {\n            return;\n        }\n\n        let physicalPadding = new SpacingDefinition();\n\n        if (this.getEffectivePadding()) {\n            physicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(this.getEffectivePadding());\n        }\n\n        this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\n        this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\n        this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\n        this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\n\n        this.renderedElement.style.marginRight = \"0\";\n        this.renderedElement.style.marginLeft = \"0\";\n    }\n\n    protected get isSelectable(): boolean {\n        return false;\n    }\n\n    abstract getItemCount(): number;\n    abstract getItemAt(index: number): CardElement;\n    abstract getFirstVisibleRenderedItem(): CardElement | undefined;\n    abstract getLastVisibleRenderedItem(): CardElement | undefined;\n    abstract removeItem(item: CardElement): boolean;\n\n    allowVerticalOverflow: boolean = false;\n\n    internalValidateProperties(context: ValidationResults) {\n        super.internalValidateProperties(context);\n\n        for (let i = 0; i < this.getItemCount(); i++) {\n            let item = this.getItemAt(i);\n\n            if (!this.hostConfig.supportsInteractivity && item.isInteractive) {\n                context.addFailure(\n                    this,\n                    Enums.ValidationEvent.InteractivityNotAllowed,\n                    Strings.errors.interactivityNotAllowed());\n            }\n\n            if (!this.isElementAllowed(item)) {\n                context.addFailure(\n                    this,\n                    Enums.ValidationEvent.InteractivityNotAllowed,\n                    Strings.errors.elementTypeNotAllowed(item.getJsonTypeName()));\n            }\n\n            item.internalValidateProperties(context);\n        }\n\n        if (this._selectAction) {\n            this._selectAction.internalValidateProperties(context);\n        }\n    }\n\n    render(): HTMLElement | undefined {\n        let element = super.render();\n\n        if (element) {\n            let hostConfig = this.hostConfig;\n\n            if (this.allowVerticalOverflow) {\n                element.style.overflowX = \"hidden\";\n                element.style.overflowY = \"auto\";\n            }\n\n            if (element && this.isSelectable && this._selectAction && hostConfig.supportsInteractivity) {\n                element.onclick = (e) => {\n                    if (this._selectAction && this._selectAction.isEnabled) {\n                        e.preventDefault();\n                        e.cancelBubble = true;\n\n                        this._selectAction.execute();\n                    }\n                }\n\n                element.onkeypress = (e) => {\n                    if (this._selectAction && this._selectAction.isEnabled && (e.code == \"Enter\" || e.code == \"Space\")) {\n                        // Enter or space pressed\n                        e.preventDefault();\n                        e.cancelBubble = true;\n\n                        this._selectAction.execute();\n                    }\n                }\n\n                this._selectAction.setupElementForAccessibility(element);\n\n                if (this._selectAction.isEnabled) {\n                    element.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\n                }\n\n            }\n        }\n\n        return element;\n    }\n\n    updateLayout(processChildren: boolean = true) {\n        super.updateLayout(processChildren);\n\n        if (processChildren) {\n            for (let i = 0; i < this.getItemCount(); i++) {\n                this.getItemAt(i).updateLayout();\n            }\n        }\n    }\n\n    getAllInputs(processActions: boolean = true): Input[] {\n        let result: Input[] = [];\n\n        for (let i = 0; i < this.getItemCount(); i++) {\n            result = result.concat(this.getItemAt(i).getAllInputs(processActions));\n        }\n\n        return result;\n    }\n\n    getResourceInformation(): IResourceInformation[] {\n        let result: IResourceInformation[] = [];\n\n        for (let i = 0; i < this.getItemCount(); i++) {\n            result = result.concat(this.getItemAt(i).getResourceInformation());\n        }\n\n        return result;\n    }\n\n    getElementById(id: string): CardElement | undefined {\n        let result = super.getElementById(id);\n\n        if (!result) {\n            for (let i = 0; i < this.getItemCount(); i++) {\n                result = this.getItemAt(i).getElementById(id);\n\n                if (result) {\n                    break;\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    findDOMNodeOwner(node: Node): CardObject | undefined {\n        let target: CardObject | undefined = undefined;\n\n        for (let i = 0; i < this.getItemCount(); i++) {\n            // recur through child elements\n            target = this.getItemAt(i).findDOMNodeOwner(node);\n\n            if (target) {\n                return target;\n            }\n        }\n\n        // if not found in children, defer to parent implementation\n        return super.findDOMNodeOwner(node);\n    }\n}\n\nexport class ImageSet extends CardElementContainer {\n    //#region Schema\n\n    static readonly imagesProperty = new SerializableObjectCollectionProperty(\n        Versions.v1_0,\n        \"images\",\n        Image,\n        (sender: SerializableObject, item: Image) => { item.setParent(<CardElement>sender); });\n    static readonly imageSizeProperty = new EnumProperty(\n        Versions.v1_0,\n        \"imageSize\",\n        Enums.ImageSize,\n        Enums.ImageSize.Medium);\n\n    @property(ImageSet.imagesProperty)\n    private _images: Image[] = [];\n\n    @property(ImageSet.imageSizeProperty)\n    imageSize: Enums.ImageSize = Enums.ImageSize.Medium;\n\n    //#endregion\n\n    protected internalRender(): HTMLElement | undefined {\n        let element: HTMLElement | undefined = undefined;\n\n        if (this._images.length > 0) {\n            element = document.createElement(\"div\");\n            element.style.display = \"flex\";\n            element.style.flexWrap = \"wrap\";\n\n            for (let image of this._images) {\n                switch (this.imageSize) {\n                    case Enums.ImageSize.Small:\n                        image.size = Enums.Size.Small;\n                        break;\n                    case Enums.ImageSize.Large:\n                        image.size = Enums.Size.Large;\n                        break;\n                    default:\n                        image.size = Enums.Size.Medium;\n                        break;\n                }\n\n                image.maxHeight = this.hostConfig.imageSet.maxImageHeight;\n\n                let renderedImage = image.render();\n\n                if (renderedImage) {\n                    renderedImage.style.display = \"inline-flex\";\n                    renderedImage.style.margin = \"0px\";\n                    renderedImage.style.marginRight = \"10px\";\n\n                    Utils.appendChild(element, renderedImage);\n                }\n            }\n        }\n\n        return element;\n    }\n\n    getItemCount(): number {\n        return this._images.length;\n    }\n\n    getItemAt(index: number): CardElement {\n        return this._images[index];\n    }\n\n    getFirstVisibleRenderedItem(): CardElement | undefined {\n        return this._images && this._images.length > 0 ? this._images[0] : undefined;\n    }\n\n    getLastVisibleRenderedItem(): CardElement | undefined {\n        return this._images && this._images.length > 0 ? this._images[this._images.length - 1] : undefined;\n    }\n\n    removeItem(item: CardElement): boolean {\n        if (item instanceof Image) {\n            let itemIndex = this._images.indexOf(item);\n\n            if (itemIndex >= 0) {\n                this._images.splice(itemIndex, 1);\n\n                item.setParent(undefined);\n\n                this.updateLayout();\n\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    getJsonTypeName(): string {\n        return \"ImageSet\";\n    }\n\n    addImage(image: Image) {\n        if (!image.parent) {\n            this._images.push(image);\n\n            image.setParent(this);\n        }\n        else {\n            throw new Error(\"This image already belongs to another ImageSet\");\n        }\n    }\n\n    indexOf(cardElement: CardElement): number {\n        return cardElement instanceof Image ? this._images.indexOf(cardElement) : -1;\n    }\n}\n\nexport class MediaSource extends SerializableObject {\n    //#region Schema\n\n    static readonly mimeTypeProperty = new StringProperty(Versions.v1_1, \"mimeType\");\n    static readonly urlProperty = new StringProperty(Versions.v1_1, \"url\");\n\n    @property(MediaSource.mimeTypeProperty)\n    mimeType?: string;\n\n    @property(MediaSource.urlProperty)\n    url?: string;\n\n    //#endregion\n\n    protected getSchemaKey(): string {\n        return \"MediaSource\";\n    }\n\n    constructor(url?: string, mimeType?: string) {\n        super();\n\n        this.url = url;\n        this.mimeType = mimeType;\n    }\n\n    isValid(): boolean {\n        return this.mimeType && this.url ? true : false;\n    }\n\n    render(): HTMLElement | undefined {\n        let result: HTMLSourceElement | undefined = undefined;\n\n        if (this.isValid()) {\n            result = document.createElement(\"source\");\n            result.src = <string>this.url;\n            result.type = <string>this.mimeType;\n        }\n\n        return result;\n    }\n}\n\nexport class Media extends CardElement {\n    //#region Schema\n\n    static readonly sourcesProperty = new SerializableObjectCollectionProperty(Versions.v1_1, \"sources\", MediaSource);\n    static readonly posterProperty = new StringProperty(Versions.v1_1, \"poster\");\n    static readonly altTextProperty = new StringProperty(Versions.v1_1, \"altText\");\n\n    @property(Media.sourcesProperty)\n    sources: MediaSource[] = [];\n\n    @property(Media.posterProperty)\n    poster?: string;\n\n    @property(Media.altTextProperty)\n    altText?: string;\n\n    //#endregion\n\n    static readonly supportedMediaTypes = [\"audio\", \"video\"];\n\n    private _selectedMediaType?: string;\n    private _selectedSources: MediaSource[];\n\n    private getPosterUrl(): string | undefined {\n        return this.poster ? this.poster : this.hostConfig.media.defaultPoster;\n    }\n\n    private processSources() {\n        this._selectedSources = [];\n        this._selectedMediaType = undefined;\n\n        for (let source of this.sources) {\n            let mimeComponents = source.mimeType ? source.mimeType.split('/') : [];\n\n            if (mimeComponents.length == 2) {\n                if (!this._selectedMediaType) {\n                    let index = Media.supportedMediaTypes.indexOf(mimeComponents[0]);\n\n                    if (index >= 0) {\n                        this._selectedMediaType = Media.supportedMediaTypes[index];\n                    }\n                }\n                if (mimeComponents[0] == this._selectedMediaType) {\n                    this._selectedSources.push(source);\n                }\n            }\n        }\n    }\n\n    private handlePlayButtonInvoke(event: UIEvent) : void\n    {\n        if (this.hostConfig.media.allowInlinePlayback) {\n            event.preventDefault();\n            event.cancelBubble = true;\n\n            if (this.renderedElement) {\n                let mediaPlayerElement = this.renderMediaPlayer();\n\n                this.renderedElement.innerHTML = \"\";\n                this.renderedElement.appendChild(mediaPlayerElement);\n\n                mediaPlayerElement.play();\n                mediaPlayerElement.focus();\n            }\n        }\n        else {\n            if (Media.onPlay) {\n                event.preventDefault();\n                event.cancelBubble = true;\n\n                Media.onPlay(this);\n            }\n        }\n    }\n\n    private renderPoster(): HTMLElement {\n        const playButtonArrowWidth = 12;\n        const playButtonArrowHeight = 15;\n\n        let posterRootElement = document.createElement(\"div\");\n        posterRootElement.className = this.hostConfig.makeCssClassName(\"ac-media-poster\");\n        posterRootElement.setAttribute(\"role\", \"contentinfo\");\n        posterRootElement.setAttribute(\"aria-label\", this.altText ? this.altText : Strings.defaults.mediaPlayerAriaLabel());\n        posterRootElement.style.position = \"relative\";\n        posterRootElement.style.display = \"flex\";\n\n        let posterUrl = this.getPosterUrl();\n\n        if (posterUrl) {\n            let posterImageElement = document.createElement(\"img\");\n            posterImageElement.style.width = \"100%\";\n            posterImageElement.style.height = \"100%\";\n            posterImageElement.setAttribute(\"role\", \"presentation\");\n\n            posterImageElement.onerror = (e: Event) => {\n                if (posterImageElement.parentNode) {\n                    posterImageElement.parentNode.removeChild(posterImageElement);\n                }\n\n                posterRootElement.classList.add(\"empty\");\n                posterRootElement.style.minHeight = \"150px\";\n            }\n\n            posterImageElement.src = posterUrl;\n\n            posterRootElement.appendChild(posterImageElement);\n        }\n        else {\n            posterRootElement.classList.add(\"empty\");\n            posterRootElement.style.minHeight = \"150px\";\n        }\n\n        if (this.hostConfig.supportsInteractivity && this._selectedSources.length > 0) {\n            let playButtonOuterElement = document.createElement(\"div\");\n            playButtonOuterElement.tabIndex = 0;\n            playButtonOuterElement.setAttribute(\"role\", \"button\");\n            playButtonOuterElement.setAttribute(\"aria-label\", Strings.defaults.mediaPlayerPlayMedia());\n            playButtonOuterElement.className = this.hostConfig.makeCssClassName(\"ac-media-playButton\");\n            playButtonOuterElement.style.display = \"flex\";\n            playButtonOuterElement.style.alignItems = \"center\";\n            playButtonOuterElement.style.justifyContent = \"center\";\n            playButtonOuterElement.onclick = (e) => {\n                this.handlePlayButtonInvoke(e);\n            }\n\n            playButtonOuterElement.onkeypress = (e: KeyboardEvent) => {\n                if (e.code == \"Enter\" || e.code == \"Space\") { // space or enter\n                    this.handlePlayButtonInvoke(e);\n                }\n            }\n\n            let playButtonInnerElement = document.createElement(\"div\");\n            playButtonInnerElement.className = this.hostConfig.makeCssClassName(\"ac-media-playButton-arrow\");\n            playButtonInnerElement.style.width = playButtonArrowWidth + \"px\";\n            playButtonInnerElement.style.height = playButtonArrowHeight + \"px\";\n            playButtonInnerElement.style.borderTopWidth = (playButtonArrowHeight / 2) + \"px\";\n            playButtonInnerElement.style.borderBottomWidth = (playButtonArrowHeight / 2) + \"px\";\n            playButtonInnerElement.style.borderLeftWidth = playButtonArrowWidth + \"px\";\n            playButtonInnerElement.style.borderRightWidth = \"0\";\n            playButtonInnerElement.style.borderStyle = \"solid\";\n            playButtonInnerElement.style.borderTopColor = \"transparent\";\n            playButtonInnerElement.style.borderRightColor = \"transparent\";\n            playButtonInnerElement.style.borderBottomColor = \"transparent\";\n            playButtonInnerElement.style.transform = \"translate(\" + (playButtonArrowWidth / 10) + \"px,0px)\";\n\n            playButtonOuterElement.appendChild(playButtonInnerElement);\n\n            let playButtonContainer = document.createElement(\"div\");\n            playButtonContainer.style.position = \"absolute\";\n            playButtonContainer.style.left = \"0\";\n            playButtonContainer.style.top = \"0\";\n            playButtonContainer.style.width = \"100%\";\n            playButtonContainer.style.height = \"100%\";\n            playButtonContainer.style.display = \"flex\";\n            playButtonContainer.style.justifyContent = \"center\";\n            playButtonContainer.style.alignItems = \"center\";\n\n            playButtonContainer.appendChild(playButtonOuterElement);\n            posterRootElement.appendChild(playButtonContainer);\n        }\n\n        return posterRootElement;\n    }\n\n    private renderMediaPlayer(): HTMLMediaElement {\n        let mediaElement: HTMLMediaElement;\n\n        if (this._selectedMediaType == \"video\") {\n            let videoPlayer = document.createElement(\"video\");\n\n            let posterUrl = this.getPosterUrl();\n\n            if (posterUrl) {\n                videoPlayer.poster = posterUrl;\n            }\n\n            mediaElement = videoPlayer;\n        }\n        else {\n            mediaElement = document.createElement(\"audio\");\n        }\n\n        mediaElement.setAttribute(\"aria-label\", this.altText ? this.altText : Strings.defaults.mediaPlayerAriaLabel());\n        mediaElement.setAttribute(\"webkit-playsinline\", \"\");\n        mediaElement.setAttribute(\"playsinline\", \"\");\n        mediaElement.autoplay = true;\n        mediaElement.controls = true;\n\n        if (Utils.isMobileOS()) {\n            mediaElement.muted = true;\n        }\n\n        mediaElement.preload = \"none\";\n        mediaElement.style.width = \"100%\";\n\n        for (let source of this.sources) {\n            let renderedSource = source.render();\n\n            Utils.appendChild(mediaElement, renderedSource);\n        }\n\n        return mediaElement;\n    }\n\n    protected internalRender(): HTMLElement | undefined {\n        let element = <HTMLElement>document.createElement(\"div\");\n        element.className = this.hostConfig.makeCssClassName(\"ac-media\");\n\n        this.processSources();\n\n        element.appendChild(this.renderPoster());\n\n        return element;\n    }\n\n    static onPlay?: (sender: Media) => void;\n\n    getJsonTypeName(): string {\n        return \"Media\";\n    }\n\n    getResourceInformation(): IResourceInformation[] {\n        let result: IResourceInformation[] = [];\n\n        let posterUrl = this.getPosterUrl();\n\n        if (posterUrl) {\n            result.push({ url: posterUrl, mimeType: \"image\" });\n        }\n\n        for (let mediaSource of this.sources) {\n            if (mediaSource.isValid()) {\n                result.push(\n                    {\n                        url: <string>mediaSource.url,\n                        mimeType: <string>mediaSource.mimeType\n                    }\n                );\n            }\n        }\n\n        return result;\n    }\n\n    get selectedMediaType(): string | undefined {\n        return this._selectedMediaType;\n    }\n}\n\nexport abstract class Input extends CardElement implements IInput {\n    //#region Schema\n\n    static readonly labelProperty = new StringProperty(Versions.v1_3, \"label\", true);\n    static readonly isRequiredProperty = new BoolProperty(Versions.v1_3, \"isRequired\", false);\n    static readonly errorMessageProperty = new StringProperty(Versions.v1_3, \"errorMessage\", true);\n\n    @property(Input.labelProperty)\n    label?: string;\n\n    @property(Input.isRequiredProperty)\n    isRequired: boolean;\n\n    @property(Input.errorMessageProperty)\n    errorMessage?: string;\n\n    //#endregion\n\n    private _outerContainerElement: HTMLElement;\n    private _inputControlContainerElement: HTMLElement;\n    private _renderedErrorMessageElement?: HTMLElement;\n    private _renderedLabelElement?: HTMLElement;\n    private _renderedInputControlElement?: HTMLElement;\n\n    protected getAllLabelIds(): string[] {\n        let labelIds: string[] = [];\n\n        if (this.labelledBy) {\n            labelIds.push(this.labelledBy);\n        }\n\n        if (this._renderedLabelElement) {\n            labelIds.push(this._renderedLabelElement.id);\n        }\n\n        if (this._renderedErrorMessageElement) {\n            labelIds.push(this._renderedErrorMessageElement.id);\n        }\n\n        return labelIds;\n    }\n\n    protected updateInputControlAriaLabelledBy() {\n        if (this._renderedInputControlElement) {\n            let labelIds: string[] = this.getAllLabelIds();\n\n            if (labelIds.length > 0) {\n                this._renderedInputControlElement.setAttribute(\"aria-labelledby\", labelIds.join(\" \"));\n            }\n            else {\n                this._renderedInputControlElement.removeAttribute(\"aria-labelledby\");\n            }\n        }\n    }\n\n    protected get isNullable(): boolean {\n        return true;\n    }\n\n    protected get renderedInputControlElement(): HTMLElement | undefined {\n        return this._renderedInputControlElement;\n    }\n\n    protected get inputControlContainerElement(): HTMLElement {\n        return this._inputControlContainerElement;\n    }\n\n    protected overrideInternalRender(): HTMLElement | undefined {\n        let hostConfig = this.hostConfig;\n\n        this._outerContainerElement = document.createElement(\"div\");\n        this._outerContainerElement.style.display = \"flex\";\n        this._outerContainerElement.style.flexDirection = \"column\";\n\n        let renderedInputControlId = Utils.generateUniqueId();\n\n        if (this.label) {\n            let labelRichTextBlock = new RichTextBlock();\n            labelRichTextBlock.setParent(this);\n            labelRichTextBlock.forElementId = renderedInputControlId;\n\n            let labelInline = new TextRun(this.label);\n            labelRichTextBlock.addInline(labelInline);\n\n            if (this.isRequired) {\n                labelInline.init(hostConfig.inputs.label.requiredInputs);\n\n                let isRequiredCueInline = new TextRun(hostConfig.inputs.label.requiredInputs.suffix);\n                isRequiredCueInline.color = hostConfig.inputs.label.requiredInputs.suffixColor;\n                isRequiredCueInline.ariaHidden = true;\n\n                labelRichTextBlock.addInline(isRequiredCueInline);\n            }\n            else {\n                labelInline.init(hostConfig.inputs.label.optionalInputs);\n            }\n\n            this._renderedLabelElement = labelRichTextBlock.render();\n\n            if (this._renderedLabelElement) {\n                this._renderedLabelElement.id = Utils.generateUniqueId();\n                this._renderedLabelElement.style.marginBottom = hostConfig.getEffectiveSpacing(hostConfig.inputs.label.inputSpacing) + \"px\";\n\n                this._outerContainerElement.appendChild(this._renderedLabelElement);\n            }\n        }\n\n        this._inputControlContainerElement = document.createElement(\"div\");\n        this._inputControlContainerElement.className = hostConfig.makeCssClassName(\"ac-input-container\");\n        this._inputControlContainerElement.style.display = \"flex\";\n\n        if (this.height === \"stretch\") {\n            this._inputControlContainerElement.style.alignItems = \"stretch\";\n            this._inputControlContainerElement.style.flex = \"1 1 auto\";\n        }\n\n        this._renderedInputControlElement = this.internalRender();\n\n        if (this._renderedInputControlElement) {\n            this._renderedInputControlElement.id = renderedInputControlId;\n            this._renderedInputControlElement.style.minWidth = \"0px\";\n\n            if (this.isNullable && this.isRequired) {\n                this._renderedInputControlElement.setAttribute(\"aria-required\", \"true\");\n                this._renderedInputControlElement.classList.add(hostConfig.makeCssClassName(\"ac-input-required\"));\n            }\n\n            this._inputControlContainerElement.appendChild(this._renderedInputControlElement);\n            this._outerContainerElement.appendChild(this._inputControlContainerElement);\n\n            this.updateInputControlAriaLabelledBy();\n\n            return this._outerContainerElement;\n        }\n\n        return undefined;\n    }\n\n    protected valueChanged() {\n        if (this.isValid()) {\n            this.resetValidationFailureCue();\n        }\n\n        if (this.onValueChanged) {\n            this.onValueChanged(this);\n        }\n\n        raiseInputValueChangedEvent(this);\n    }\n\n    protected resetValidationFailureCue() {\n        if (this.renderedInputControlElement) {\n            this.renderedInputControlElement.classList.remove(this.hostConfig.makeCssClassName(\"ac-input-validation-failed\"));\n\n            this.updateInputControlAriaLabelledBy();\n\n            if (this._renderedErrorMessageElement) {\n                this._outerContainerElement.removeChild(this._renderedErrorMessageElement);\n\n                this._renderedErrorMessageElement = undefined;\n            }\n        }\n    }\n\n    protected showValidationErrorMessage() {\n        if (this.renderedElement && this.errorMessage && GlobalSettings.displayInputValidationErrors) {\n            let errorMessageTextBlock = new TextBlock();\n            errorMessageTextBlock.setParent(this);\n            errorMessageTextBlock.text = this.errorMessage;\n            errorMessageTextBlock.wrap = true;\n            errorMessageTextBlock.init(this.hostConfig.inputs.errorMessage);\n\n            this._renderedErrorMessageElement = errorMessageTextBlock.render();\n\n            if (this._renderedErrorMessageElement) {\n                this._renderedErrorMessageElement.id = Utils.generateUniqueId();\n                this._outerContainerElement.appendChild(this._renderedErrorMessageElement);\n\n                this.updateInputControlAriaLabelledBy();\n            }\n        }\n    }\n\n    onValueChanged: (sender: Input) => void;\n\n    labelledBy?: string;\n\n    abstract isSet(): boolean;\n\n    focus() {\n        if (this._renderedInputControlElement) {\n            this._renderedInputControlElement.focus();\n        }\n    }\n\n    isValid(): boolean {\n        return true;\n    }\n\n    internalValidateProperties(context: ValidationResults) {\n        super.internalValidateProperties(context);\n\n        if (!this.id) {\n            context.addFailure(\n                this,\n                Enums.ValidationEvent.PropertyCantBeNull,\n                Strings.errors.inputsMustHaveUniqueId());\n        }\n\n        if (this.isRequired) {\n            if (!this.label) {\n                context.addFailure(\n                    this,\n                    Enums.ValidationEvent.RequiredInputsShouldHaveLabel,\n                    \"Required inputs should have a label\");\n            }\n\n            if (!this.errorMessage) {\n                context.addFailure(\n                    this,\n                    Enums.ValidationEvent.RequiredInputsShouldHaveErrorMessage,\n                    \"Required inputs should have an error message\");\n            }\n        }\n    }\n\n    validateValue(): boolean {\n        this.resetValidationFailureCue();\n\n        let result = this.isRequired ? this.isSet() && this.isValid() : this.isValid();\n\n        if (!result && this.renderedInputControlElement) {\n            this.renderedInputControlElement.classList.add(this.hostConfig.makeCssClassName(\"ac-input-validation-failed\"));\n\n            this.showValidationErrorMessage();\n        }\n\n        return result;\n    }\n\n    getAllInputs(processActions: boolean = true): Input[] {\n        return [ this ];\n    }\n\n    abstract get value(): any;\n\n    get isInteractive(): boolean {\n        return true;\n    }\n}\n\nexport class TextInput extends Input {\n    //#region Schema\n\n    static readonly valueProperty = new StringProperty(Versions.v1_0, \"value\");\n    static readonly maxLengthProperty = new NumProperty(Versions.v1_0, \"maxLength\");\n    static readonly isMultilineProperty = new BoolProperty(Versions.v1_0, \"isMultiline\", false);\n    static readonly placeholderProperty = new StringProperty(Versions.v1_0, \"placeholder\");\n    static readonly styleProperty = new EnumProperty(\n        Versions.v1_0,\n        \"style\",\n        Enums.InputTextStyle,\n        Enums.InputTextStyle.Text,\n        [\n            { value: Enums.InputTextStyle.Text },\n            { value: Enums.InputTextStyle.Tel },\n            { value: Enums.InputTextStyle.Url },\n            { value: Enums.InputTextStyle.Email },\n            { value: Enums.InputTextStyle.Password, targetVersion: Versions.v1_5}\n        ]\n    );\n    static readonly inlineActionProperty = new ActionProperty(Versions.v1_0, \"inlineAction\", [ \"Action.ShowCard\" ]);\n    static readonly regexProperty = new StringProperty(Versions.v1_3, \"regex\", true);\n\n    @property(TextInput.valueProperty)\n    defaultValue?: string;\n\n    @property(TextInput.maxLengthProperty)\n    maxLength?: number;\n\n    @property(TextInput.isMultilineProperty)\n    isMultiline: boolean = false;\n\n    @property(TextInput.placeholderProperty)\n    placeholder?: string;\n\n    @property(TextInput.styleProperty)\n    style: Enums.InputTextStyle = Enums.InputTextStyle.Text;\n\n    @property(TextInput.inlineActionProperty)\n    inlineAction?: Action;\n\n    @property(TextInput.regexProperty)\n    regex?: string;\n\n    //#endregion\n\n    private setupInput(input: HTMLInputElement | HTMLTextAreaElement) {\n        input.style.flex = \"1 1 auto\";\n        input.tabIndex = 0;\n\n        if (this.placeholder) {\n            input.placeholder = this.placeholder;\n            input.setAttribute(\"aria-label\", this.placeholder)\n        }\n\n        if (this.defaultValue) {\n            input.value = this.defaultValue;\n        }\n\n        if (this.maxLength && this.maxLength > 0) {\n            input.maxLength = this.maxLength;\n        }\n\n        input.oninput = () => { this.valueChanged(); }\n        input.onkeypress = (e: KeyboardEvent) => {\n            // Ctrl+Enter pressed\n            if (e.ctrlKey && e.code === \"Enter\" && this.inlineAction && this.inlineAction.isEnabled) {\n                this.inlineAction.execute();\n            }\n        }\n    }\n\n    protected internalRender(): HTMLElement | undefined {\n        let result: HTMLInputElement | HTMLTextAreaElement;\n\n        if (this.isMultiline && this.style !== Enums.InputTextStyle.Password) {\n            result = document.createElement(\"textarea\");\n            result.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-textInput\", \"ac-multiline\");\n\n            if (this.height === \"stretch\") {\n                result.style.height = \"initial\";\n            }\n        }\n        else {\n            result = document.createElement(\"input\");\n            result.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-textInput\");\n            result.type = Enums.InputTextStyle[this.style].toLowerCase();\n        }\n\n        this.setupInput(result);\n\n        return result;\n    }\n\n    protected overrideInternalRender(): HTMLElement | undefined {\n        let renderedInputControl = super.overrideInternalRender();\n\n        if (this.inlineAction) {\n            let button = document.createElement(\"button\");\n            button.className = this.hostConfig.makeCssClassName(this.inlineAction.isEnabled ? \"ac-inlineActionButton\" : \"ac-inlineActionButton-disabled\");\n\n            button.onclick = (e) => {\n                if (this.inlineAction && this.inlineAction.isEnabled) {\n                    e.preventDefault();\n                    e.cancelBubble = true;\n\n                    this.inlineAction.execute();\n                }\n            };\n\n            if (this.inlineAction.iconUrl) {\n                button.classList.add(\"iconOnly\");\n\n                let icon = document.createElement(\"img\");\n                icon.style.height = \"100%\";\n                icon.setAttribute(\"role\", \"presentation\");\n\n                // The below trick is necessary as a workaround in Chrome where the icon is initially displayed\n                // at its native size then resized to 100% of the button's height. This cfreates an unpleasant\n                // flicker. On top of that, Chrome's flex implementation fails to prperly re-layout the button\n                // after the image has loaded and been gicven its final size. The below trick also fixes that.\n                icon.style.display = \"none\";\n                icon.onload = () => {\n                    icon.style.removeProperty(\"display\");\n                };\n                icon.onerror = () => {\n                    button.removeChild(icon);\n                    button.classList.remove(\"iconOnly\");\n                    button.classList.add(\"textOnly\");\n                    button.textContent = this.inlineAction && this.inlineAction.title ? this.inlineAction.title : Strings.defaults.inlineActionTitle();\n                }\n\n                icon.src = this.inlineAction.iconUrl;\n\n                button.appendChild(icon);\n                button.title = this.inlineAction.title ? this.inlineAction.title : Strings.defaults.inlineActionTitle();\n            }\n            else {\n                button.classList.add(\"textOnly\");\n                button.textContent = this.inlineAction.title ? this.inlineAction.title : Strings.defaults.inlineActionTitle();\n            }\n\n            this.inlineAction.setupElementForAccessibility(button, true);\n\n            button.style.marginLeft = \"8px\";\n\n            this.inputControlContainerElement.appendChild(button);\n        }\n\n        return renderedInputControl;\n    }\n\n    getJsonTypeName(): string {\n        return \"Input.Text\";\n    }\n\n    getActionById(id: string) {\n        let result = super.getActionById(id);\n\n        if (!result && this.inlineAction) {\n            result = this.inlineAction.getActionById(id);\n        }\n\n        return result;\n    }\n\n    isSet(): boolean {\n        return this.value ? true : false;\n    }\n\n    isValid(): boolean {\n        if (!this.value) {\n            return true;\n        }\n\n        if (this.regex) {\n            return new RegExp(this.regex, \"g\").test(this.value);\n        }\n\n        return true;\n    }\n\n    get value(): string | undefined {\n        if (this.renderedInputControlElement) {\n            if (this.isMultiline) {\n                return (<HTMLTextAreaElement>this.renderedInputControlElement).value;\n            }\n            else {\n                return (<HTMLInputElement>this.renderedInputControlElement).value;\n            }\n        }\n        else {\n            return undefined;\n        }\n    }\n}\n\nexport class ToggleInput extends Input {\n    //#region Schema\n\n    static readonly valueProperty = new StringProperty(Versions.v1_0, \"value\");\n    static readonly titleProperty = new StringProperty(Versions.v1_0, \"title\");\n    static readonly valueOnProperty = new StringProperty(Versions.v1_0, \"valueOn\", true, undefined, \"true\", (sender: SerializableObject) => { return \"true\"; });\n    static readonly valueOffProperty = new StringProperty(Versions.v1_0, \"valueOff\", true, undefined, \"false\", (sender: SerializableObject) => { return \"false\"; });\n    static readonly wrapProperty = new BoolProperty(Versions.v1_2, \"wrap\", false);\n\n    @property(ToggleInput.valueProperty)\n    defaultValue?: string;\n\n    @property(ToggleInput.titleProperty)\n    title?: string;\n\n    @property(ToggleInput.valueOnProperty)\n    valueOn: string = \"true\";\n\n    @property(ToggleInput.valueOffProperty)\n    valueOff: string = \"false\";\n\n    @property(ToggleInput.wrapProperty)\n    wrap: boolean = false;\n\n    //#endregion\n\n    private _checkboxInputElement: HTMLInputElement;\n    private _checkboxInputLabelElement: HTMLElement | undefined;\n\n    protected updateInputControlAriaLabelledBy() {\n        if (this._checkboxInputElement) {\n            let joinedLabelIds = this.getAllLabelIds().join(\" \");\n\n            if (this._checkboxInputLabelElement && this._checkboxInputLabelElement.id) {\n                joinedLabelIds += \" \" + this._checkboxInputLabelElement.id;\n            }\n\n            if (joinedLabelIds) {\n                this._checkboxInputElement.setAttribute(\"aria-labelledby\", joinedLabelIds);\n            }\n            else {\n                this._checkboxInputElement.removeAttribute(\"aria-labelledby\");\n            }\n        }\n    }\n\n    protected internalRender(): HTMLElement | undefined {\n        let element = document.createElement(\"div\");\n        element.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-toggleInput\");\n        element.style.width = \"100%\";\n        element.style.display = \"flex\";\n        element.style.alignItems = \"center\";\n\n        this._checkboxInputElement = document.createElement(\"input\");\n        this._checkboxInputElement.id = Utils.generateUniqueId();\n        this._checkboxInputElement.type = \"checkbox\";\n        this._checkboxInputElement.style.display = \"inline-block\";\n        this._checkboxInputElement.style.verticalAlign = \"middle\";\n        this._checkboxInputElement.style.margin = \"0\";\n        this._checkboxInputElement.style.flex = \"0 0 auto\";\n\n        if (this.title) {\n            this._checkboxInputElement.setAttribute(\"aria-label\", this.title);\n        }\n\n        if (this.isRequired) {\n            this._checkboxInputElement.setAttribute(\"aria-required\", \"true\");\n        }\n\n        this._checkboxInputElement.tabIndex = 0;\n\n        if (this.defaultValue == this.valueOn) {\n            this._checkboxInputElement.checked = true;\n        }\n\n        this._checkboxInputElement.onchange = () => { this.valueChanged(); }\n\n        Utils.appendChild(element, this._checkboxInputElement);\n\n        if (this.title || this.isDesignMode()) {\n            let label = new TextBlock();\n            label.setParent(this);\n            label.forElementId = this._checkboxInputElement.id;\n            label.hostConfig = this.hostConfig;\n            label.text = !this.title ? this.getJsonTypeName() : this.title;\n            label.useMarkdown = GlobalSettings.useMarkdownInRadioButtonAndCheckbox;\n            label.wrap = this.wrap;\n\n            this._checkboxInputLabelElement = label.render();\n\n            if (this._checkboxInputLabelElement) {\n                this._checkboxInputLabelElement.id = Utils.generateUniqueId();\n                this._checkboxInputLabelElement.style.display = \"inline-block\";\n                this._checkboxInputLabelElement.style.flex = \"1 1 auto\";\n                this._checkboxInputLabelElement.style.marginLeft = \"6px\";\n                this._checkboxInputLabelElement.style.verticalAlign = \"middle\";\n\n                let spacerElement = document.createElement(\"div\");\n                spacerElement.style.width = \"6px\";\n\n                Utils.appendChild(element, spacerElement);\n                Utils.appendChild(element, this._checkboxInputLabelElement);\n            }\n        }\n\n        return element;\n    }\n\n    protected get isNullable(): boolean {\n        return false;\n    }\n\n    getJsonTypeName(): string {\n        return \"Input.Toggle\";\n    }\n\n    focus() {\n        if (this._checkboxInputElement) {\n            this._checkboxInputElement.focus();\n        }\n    }\n\n    isSet(): boolean {\n        if (this.isRequired) {\n            return this.value === this.valueOn;\n        }\n\n        return this.value ? true : false;\n    }\n\n    get value(): string | undefined {\n        if (this._checkboxInputElement) {\n            return this._checkboxInputElement.checked ? this.valueOn : this.valueOff;\n        }\n        else {\n            return undefined;\n        }\n    }\n}\n\nexport class Choice extends SerializableObject {\n    //#region Schema\n\n    static readonly titleProperty = new StringProperty(Versions.v1_0, \"title\");\n    static readonly valueProperty = new StringProperty(Versions.v1_0, \"value\");\n\n    @property(Choice.titleProperty)\n    title?: string;\n\n    @property(Choice.valueProperty)\n    value?: string;\n\n    //#endregion\n\n    protected getSchemaKey(): string {\n        return \"Choice\";\n    }\n\n    constructor(title?: string, value?: string) {\n        super();\n\n        this.title = title;\n        this.value = value;\n    }\n}\n\nexport class ChoiceSetInput extends Input {\n    //#region Schema\n\n    static readonly valueProperty = new StringProperty(Versions.v1_0, \"value\");\n    static readonly choicesProperty = new SerializableObjectCollectionProperty(Versions.v1_0, \"choices\", Choice);\n    static readonly styleProperty = new ValueSetProperty(\n        Versions.v1_0,\n        \"style\",\n        [\n            { value: \"compact\" },\n            { value: \"expanded\" },\n            { value: \"filtered\", targetVersion: Versions.v1_5 }\n        ],\n        \"compact\");\n    static readonly isMultiSelectProperty = new BoolProperty(Versions.v1_0, \"isMultiSelect\", false);\n    static readonly placeholderProperty = new StringProperty(Versions.v1_0, \"placeholder\");\n    static readonly wrapProperty = new BoolProperty(Versions.v1_2, \"wrap\", false);\n\n    @property(ChoiceSetInput.valueProperty)\n    defaultValue?: string;\n\n    @property(ChoiceSetInput.styleProperty)\n    style?: \"compact\" | \"expanded\" | \"filtered\";\n\n    get isCompact(): boolean {\n        return !this.style || this.style === \"compact\";\n    }\n\n    set isCompact(value: boolean) {\n        this.style = value ? undefined : \"expanded\";\n    }\n\n    @property(ChoiceSetInput.isMultiSelectProperty)\n    isMultiSelect: boolean = false;\n\n    @property(ChoiceSetInput.placeholderProperty)\n    placeholder?: string;\n\n    @property(ChoiceSetInput.wrapProperty)\n    wrap: boolean = false;\n\n    @property(ChoiceSetInput.choicesProperty)\n    choices: Choice[] = [];\n\n    //#endregion\n\n    private static uniqueCategoryCounter = 0;\n\n    private static getUniqueCategoryName(): string {\n        let uniqueCategoryName = \"__ac-category\" + ChoiceSetInput.uniqueCategoryCounter;\n\n        ChoiceSetInput.uniqueCategoryCounter++;\n\n        return uniqueCategoryName;\n    }\n\n    private _uniqueCategoryName: string;\n    private _selectElement: HTMLSelectElement | undefined;\n    private _textInput: HTMLInputElement | undefined;\n    private _toggleInputs: HTMLInputElement[] | undefined;\n    private _labels: Array<HTMLElement | undefined>;\n\n    // Make sure `aria-current` is applied to the currently-selected item\n    private internalApplyAriaCurrent(): void {\n        if (this._selectElement) {\n            const options = this._selectElement.options;\n\n            if (options) {\n                for (let i = 0; i < options.length; i++) {\n                    if (options[i].selected) {\n                        options[i].setAttribute(\"aria-current\", \"true\");\n                    }\n                    else {\n                        options[i].removeAttribute(\"aria-current\");\n                    }\n                }\n            }\n        }\n    }\n\n    private renderCompoundInput(cssClassName: string, type: \"checkbox\" | \"radio\", defaultValues: string[] | undefined): HTMLElement {\n        let element = document.createElement(\"div\");\n        element.className = this.hostConfig.makeCssClassName(\"ac-input\", cssClassName);\n        element.style.width = \"100%\";\n\n        this._toggleInputs = [];\n        this._labels = [];\n\n        for (let choice of this.choices) {\n            let input = document.createElement(\"input\");\n            input.id = Utils.generateUniqueId();\n            input.type = type;\n            input.style.margin = \"0\";\n            input.style.display = \"inline-block\";\n            input.style.verticalAlign = \"middle\";\n            input.style.flex = \"0 0 auto\";\n            input.name = this.id ? this.id : this._uniqueCategoryName;\n\n            if (this.isRequired) {\n                input.setAttribute(\"aria-required\", \"true\");\n            }\n\n            if (choice.value) {\n                input.value = choice.value;\n            }\n\n            if (choice.title) {\n                input.setAttribute(\"aria-label\", choice.title);\n            }\n\n            if (defaultValues && choice.value) {\n                if (defaultValues.indexOf(choice.value) >= 0) {\n                    input.checked = true;\n                }\n            }\n\n            input.onchange = () => { this.valueChanged(); }\n\n            this._toggleInputs.push(input);\n\n            let compoundInput = document.createElement(\"div\");\n            compoundInput.style.display = \"flex\";\n            compoundInput.style.alignItems = \"center\";\n\n            Utils.appendChild(compoundInput, input);\n\n            let label = new TextBlock();\n            label.setParent(this);\n            label.forElementId = input.id;\n            label.hostConfig = this.hostConfig;\n            label.text = choice.title ? choice.title : \"Choice \" + this._toggleInputs.length;\n            label.useMarkdown = GlobalSettings.useMarkdownInRadioButtonAndCheckbox;\n            label.wrap = this.wrap;\n\n            let labelElement = label.render();\n\n            this._labels.push(labelElement);\n\n            if (labelElement) {\n                labelElement.id = Utils.generateUniqueId();\n                labelElement.style.display = \"inline-block\";\n                labelElement.style.flex = \"1 1 auto\";\n                labelElement.style.marginLeft = \"6px\";\n                labelElement.style.verticalAlign = \"middle\";\n\n                let spacerElement = document.createElement(\"div\");\n                spacerElement.style.width = \"6px\";\n\n                Utils.appendChild(compoundInput, spacerElement);\n                Utils.appendChild(compoundInput, labelElement);\n            }\n\n            Utils.appendChild(element, compoundInput);\n        }\n\n        return element;\n    }\n\n    protected updateInputControlAriaLabelledBy() {\n        if ((this.isMultiSelect || this.style === \"expanded\") && this._toggleInputs && this._labels) {\n            let labelIds: string[] = this.getAllLabelIds();\n\n            for (let i = 0; i < this._toggleInputs.length; i++) {\n                let joinedLabelIds = labelIds.join(\" \");\n                let label = this._labels[i];\n\n                if (label && label.id) {\n                    joinedLabelIds += \" \" + label.id;\n                }\n\n                if (joinedLabelIds) {\n                    this._toggleInputs[i].setAttribute(\"aria-labelledby\", joinedLabelIds);\n                }\n                else {\n                    this._toggleInputs[i].removeAttribute(\"aria-labelledby\");\n                }\n            }\n        }\n        else {\n            super.updateInputControlAriaLabelledBy();\n        }\n    }\n\n    protected internalRender(): HTMLElement | undefined {\n        this._uniqueCategoryName = ChoiceSetInput.getUniqueCategoryName();\n\n        if (this.isMultiSelect) {\n            // Render as a list of toggle inputs\n            return this.renderCompoundInput(\n                \"ac-choiceSetInput-multiSelect\",\n                \"checkbox\",\n                this.defaultValue ? this.defaultValue.split(this.hostConfig.choiceSetInputValueSeparator) : undefined);\n        }\n        else {\n            if (this.style === \"expanded\") {\n                // Render as a series of radio buttons\n                return this.renderCompoundInput(\n                    \"ac-choiceSetInput-expanded\",\n                    \"radio\",\n                    this.defaultValue ? [ this.defaultValue ] : undefined);\n            }\n            else if (this.style === \"filtered\") {\n                // Render as a text input coupled with a datalist\n                let inputContainer = document.createElement(\"div\");\n                inputContainer.style.width = \"100%\";\n\n                this._textInput = document.createElement(\"input\");\n                this._textInput.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-multichoiceInput\", \"ac-choiceSetInput-filtered\");\n                this._textInput.type = \"text\";\n                this._textInput.style.width = \"100%\";\n                this._textInput.oninput = () => {\n                    this.valueChanged();\n\n                    if (this._textInput) {\n                        // Remove aria-label when value is not empty so narration software doesn't\n                        // read the placeholder\n                        if (this.value) {\n                            this._textInput.removeAttribute(\"placeholder\");\n                            this._textInput.removeAttribute(\"aria-label\");\n                        }\n                        else if (this.placeholder) {\n                            this._textInput.placeholder = this.placeholder;\n                            this._textInput.setAttribute(\"aria-label\", this.placeholder);\n                        }\n                    }\n                }\n\n                if (this.defaultValue) {\n                    this._textInput.value = this.defaultValue;\n                }\n\n                if (this.placeholder && !this._textInput.value) {\n                    this._textInput.placeholder = this.placeholder;\n                    this._textInput.setAttribute(\"aria-label\", this.placeholder);\n                }\n\n                let dataList = document.createElement(\"datalist\");\n                dataList.id = Utils.generateUniqueId();\n\n                for (let choice of this.choices) {\n                    let option = document.createElement(\"option\");\n                    // To fix https://stackoverflow.com/questions/29882361/show-datalist-labels-but-submit-the-actual-value\n                    // value is mapped to choice.title other than choice.value\n                    option.value = <string>choice.title;\n                    option.setAttribute(\"aria-label\", <string>choice.title);\n\n                    dataList.appendChild(option);\n                }\n\n                this._textInput.setAttribute(\"list\", dataList.id);\n\n                inputContainer.append(this._textInput, dataList);\n\n                return inputContainer;\n            }\n            else {\n                // Render as a combo box\n                this._selectElement = document.createElement(\"select\");\n                this._selectElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-multichoiceInput\", \"ac-choiceSetInput-compact\");\n                this._selectElement.style.width = \"100%\";\n\n                let option = document.createElement(\"option\");\n                option.selected = true;\n                option.disabled = true;\n                option.hidden = true;\n                option.value = \"\";\n\n                if (this.placeholder) {\n                    option.text = this.placeholder;\n                }\n\n                Utils.appendChild(this._selectElement, option);\n\n                for (let choice of this.choices) {\n                    let option = document.createElement(\"option\");\n                    option.value = <string>choice.value;\n                    option.text = <string>choice.title;\n                    option.setAttribute(\"aria-label\", <string>choice.title);\n\n                    if (choice.value == this.defaultValue) {\n                        option.selected = true;\n                    }\n\n                    Utils.appendChild(this._selectElement, option);\n                }\n\n                this._selectElement.onchange = () => {\n                    this.internalApplyAriaCurrent();\n                    this.valueChanged();\n                }\n\n                this.internalApplyAriaCurrent();\n\n                return this._selectElement;\n            }\n        }\n    }\n\n    getJsonTypeName(): string {\n        return \"Input.ChoiceSet\";\n    }\n\n    focus() {\n        if (this._toggleInputs && (this.isMultiSelect || this.style === \"expanded\")) {\n            if (this._toggleInputs.length > 0) {\n                this._toggleInputs[0].focus();\n            }\n        }\n        else if (this._textInput) {\n            this._textInput.focus();\n        }\n        else {\n            super.focus();\n        }\n    }\n\n    internalValidateProperties(context: ValidationResults) {\n        super.internalValidateProperties(context);\n\n        if (this.choices.length == 0) {\n            context.addFailure(\n                this,\n                Enums.ValidationEvent.CollectionCantBeEmpty,\n                Strings.errors.choiceSetMustHaveAtLeastOneChoice());\n        }\n\n        for (let choice of this.choices) {\n            if (!choice.title || !choice.value) {\n                context.addFailure(\n                    this,\n                    Enums.ValidationEvent.PropertyCantBeNull,\n                    Strings.errors.choiceSetChoicesMustHaveTitleAndValue());\n            }\n        }\n    }\n\n    isSet(): boolean {\n        return this.value ? true : false;\n    }\n\n    isValid(): boolean {\n        if (this._textInput) {\n            if (this.value === \"\" || this.value === this.placeholder) {\n                return true;\n            }\n            for (let choice of this.choices) {\n                if (this.value === choice.value) {\n                    return true;\n                }\n            }\n\n            return false;\n        }\n\n        return super.isValid();\n    }\n\n    get value(): string | undefined {\n        if (!this.isMultiSelect) {\n            if (this._selectElement) {\n                return this._selectElement.selectedIndex > 0 ? this._selectElement.value : undefined;\n            }\n            else if (this._textInput) {\n                for (let choice of this.choices)\n                {\n                    if (choice.title && this._textInput.value === choice.title)\n                    {\n                        return choice.value;\n                    }\n                }\n                return this._textInput.value;\n            }\n            else if (this._toggleInputs && this._toggleInputs.length > 0) {\n                for (let toggleInput of this._toggleInputs) {\n                    if (toggleInput.checked) {\n                        return toggleInput.value;\n                    }\n                }\n            }\n\n            return undefined;\n        }\n        else {\n            if (!this._toggleInputs || this._toggleInputs.length == 0) {\n                return undefined;\n            }\n\n            let result: string = \"\";\n\n            for (let toggleInput of this._toggleInputs) {\n                if (toggleInput.checked) {\n                    if (result != \"\") {\n                        result += this.hostConfig.choiceSetInputValueSeparator;\n                    }\n\n                    result += toggleInput.value;\n                }\n            }\n\n            return result ? result : undefined;\n        }\n    }\n}\n\nexport class NumberInput extends Input {\n    //#region Schema\n\n    static readonly valueProperty = new NumProperty(Versions.v1_0, \"value\");\n    static readonly placeholderProperty = new StringProperty(Versions.v1_0, \"placeholder\");\n    static readonly minProperty = new NumProperty(Versions.v1_0, \"min\");\n    static readonly maxProperty = new NumProperty(Versions.v1_0, \"max\");\n\n    @property(NumberInput.valueProperty)\n    defaultValue?: number;\n\n    @property(NumberInput.minProperty)\n    min?: number;\n\n    @property(NumberInput.maxProperty)\n    max?: number;\n\n    @property(NumberInput.placeholderProperty)\n    placeholder?: string;\n\n    //#endregion\n\n    private _numberInputElement: HTMLInputElement;\n\n    protected internalRender(): HTMLElement | undefined {\n        this._numberInputElement = document.createElement(\"input\");\n        this._numberInputElement.setAttribute(\"type\", \"number\");\n\n        if (this.min !== undefined) {\n            this._numberInputElement.setAttribute(\"min\", this.min.toString());\n        }\n\n        if (this.max !== undefined) {\n            this._numberInputElement.setAttribute(\"max\", this.max.toString());\n        }\n\n        this._numberInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-numberInput\");\n        this._numberInputElement.style.width = \"100%\";\n        this._numberInputElement.tabIndex = 0;\n\n        if (this.defaultValue !== undefined) {\n            this._numberInputElement.valueAsNumber = this.defaultValue;\n        }\n\n        if (this.placeholder) {\n            this._numberInputElement.placeholder = this.placeholder;\n            this._numberInputElement.setAttribute(\"aria-label\", this.placeholder);\n        }\n\n        this._numberInputElement.oninput = () => { this.valueChanged(); }\n\n        return this._numberInputElement;\n    }\n\n    getJsonTypeName(): string {\n        return \"Input.Number\";\n    }\n\n    isSet(): boolean {\n        return this.value !== undefined && !isNaN(this.value);\n    }\n\n    isValid(): boolean {\n        if (this.value === undefined) {\n            return !this.isRequired;\n        }\n\n        let result = true;\n\n        if (this.min !== undefined) {\n            result = result && (this.value >= this.min);\n        }\n\n        if (this.max !== undefined) {\n            result = result && (this.value <= this.max);\n        }\n\n        return result;\n    }\n\n    get value(): number | undefined {\n        return this._numberInputElement ? this._numberInputElement.valueAsNumber : undefined;\n    }\n}\n\nexport class DateInput extends Input {\n    //#region Schema\n\n    static readonly valueProperty = new StringProperty(Versions.v1_0, \"value\");\n    static readonly placeholderProperty = new StringProperty(Versions.v1_0, \"placeholder\");\n    static readonly minProperty = new StringProperty(Versions.v1_0, \"min\");\n    static readonly maxProperty = new StringProperty(Versions.v1_0, \"max\");\n\n    @property(DateInput.valueProperty)\n    defaultValue?: string;\n\n    @property(DateInput.minProperty)\n    min?: string;\n\n    @property(DateInput.maxProperty)\n    max?: string;\n\n    @property(DateInput.placeholderProperty)\n    placeholder?: string;\n\n    //#endregion\n\n    private _dateInputElement: HTMLInputElement;\n\n    protected internalRender(): HTMLElement | undefined {\n        this._dateInputElement = document.createElement(\"input\");\n        this._dateInputElement.setAttribute(\"type\", \"date\");\n\n        if (this.min) {\n            this._dateInputElement.setAttribute(\"min\", this.min);\n        }\n\n        if (this.max) {\n            this._dateInputElement.setAttribute(\"max\", this.max);\n        }\n\n        if (this.placeholder) {\n            this._dateInputElement.placeholder = this.placeholder;\n            this._dateInputElement.setAttribute(\"aria-label\", this.placeholder);\n        }\n\n        this._dateInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-dateInput\");\n        this._dateInputElement.style.width = \"100%\";\n\n        this._dateInputElement.oninput = () => { this.valueChanged(); }\n\n        if (this.defaultValue) {\n            this._dateInputElement.value = this.defaultValue;\n        }\n\n        return this._dateInputElement;\n    }\n\n    getJsonTypeName(): string {\n        return \"Input.Date\";\n    }\n\n    isSet(): boolean {\n        return this.value ? true : false;\n    }\n\n    isValid(): boolean {\n        if (!this.value) {\n            return !this.isRequired;\n        }\n\n        let valueAsDate = new Date(this.value);\n\n        let result = true;\n\n        if (this.min) {\n            let minDate = new Date(this.min);\n\n            result = result && (valueAsDate >= minDate);\n        }\n\n        if (this.max) {\n            let maxDate = new Date(this.max);\n\n            result = result && (valueAsDate <= maxDate);\n        }\n\n        return result;\n    }\n\n    get value(): string | undefined {\n        return this._dateInputElement ? this._dateInputElement.value : undefined;\n    }\n}\n\nexport class TimeProperty extends CustomProperty<string | undefined> {\n    constructor(readonly targetVersion: Version, readonly name: string) {\n        super(\n            targetVersion,\n            name,\n            (sender: SerializableObject, property: PropertyDefinition, source: PropertyBag, context: BaseSerializationContext) => {\n                let value = source[property.name];\n\n                if (typeof value === \"string\" && value && /^[0-9]{2}:[0-9]{2}$/.test(value)) {\n                    return value;\n                }\n\n                return undefined;\n            },\n            (sender: SerializableObject, property: PropertyDefinition, target: PropertyBag, value: string | undefined, context: BaseSerializationContext) => {\n                context.serializeValue(target, property.name, value);\n            });\n    }\n}\n\nexport class TimeInput extends Input {\n    private static convertTimeStringToDate(timeString: string): Date {\n        return new Date(\"1973-09-04T\" + timeString + \":00Z\");\n    }\n\n    //#region Schema\n\n    static readonly valueProperty = new TimeProperty(Versions.v1_0, \"value\");\n    static readonly placeholderProperty = new StringProperty(Versions.v1_0, \"placeholder\");\n    static readonly minProperty = new TimeProperty(Versions.v1_0, \"min\");\n    static readonly maxProperty = new TimeProperty(Versions.v1_0, \"max\");\n\n    @property(TimeInput.valueProperty)\n    defaultValue?: string;\n\n    @property(TimeInput.minProperty)\n    min?: string;\n\n    @property(TimeInput.maxProperty)\n    max?: string;\n\n    @property(TimeInput.placeholderProperty)\n    placeholder?: string;\n\n    //#endregion\n\n    private _timeInputElement: HTMLInputElement;\n\n    protected internalRender(): HTMLElement | undefined {\n        this._timeInputElement = document.createElement(\"input\");\n        this._timeInputElement.setAttribute(\"type\", \"time\");\n        this._timeInputElement.setAttribute(\"min\", <string>this.min);\n        this._timeInputElement.setAttribute(\"max\", <string>this.max);\n        this._timeInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-timeInput\");\n        this._timeInputElement.style.width = \"100%\";\n        this._timeInputElement.oninput = () => { this.valueChanged(); }\n\n        if (this.placeholder) {\n            this._timeInputElement.placeholder = this.placeholder;\n            this._timeInputElement.setAttribute(\"aria-label\", this.placeholder);\n        }\n\n        if (this.defaultValue) {\n            this._timeInputElement.value = this.defaultValue;\n        }\n\n        return this._timeInputElement;\n    }\n\n    getJsonTypeName(): string {\n        return \"Input.Time\";\n    }\n\n    isSet(): boolean {\n        return this.value ? true : false;\n    }\n\n    isValid(): boolean {\n        if (!this.value) {\n            return !this.isRequired;\n        }\n\n        let valueAsDate = TimeInput.convertTimeStringToDate(this.value);\n\n        let result = true;\n\n        if (this.min) {\n            let minDate = TimeInput.convertTimeStringToDate(this.min);\n\n            result = result && (valueAsDate >= minDate);\n        }\n\n        if (this.max) {\n            let maxDate = TimeInput.convertTimeStringToDate(this.max);\n\n            result = result && (valueAsDate <= maxDate);\n        }\n\n        return result;\n    }\n\n    get value(): string | undefined {\n        return this._timeInputElement ? this._timeInputElement.value : undefined;\n    }\n}\n\nexport const enum ActionButtonState {\n    Normal,\n    Expanded,\n    Subdued\n}\n\nexport type ActionType = { new(): Action };\n\nexport abstract class Action extends CardObject {\n    //#region Schema\n\n    static readonly titleProperty = new StringProperty(Versions.v1_0, \"title\");\n    static readonly iconUrlProperty = new StringProperty(Versions.v1_1, \"iconUrl\");\n    static readonly styleProperty = new ValueSetProperty(\n        Versions.v1_2,\n        \"style\",\n        [\n            { value: Enums.ActionStyle.Default },\n            { value: Enums.ActionStyle.Positive },\n            { value: Enums.ActionStyle.Destructive }\n        ],\n        Enums.ActionStyle.Default);\n    static readonly modeProperty = new ValueSetProperty(\n        Versions.v1_5,\n        \"mode\",\n        [\n            { value: Enums.ActionMode.Primary },\n            { value: Enums.ActionMode.Secondary }\n        ],\n        Enums.ActionMode.Primary);\n    static readonly tooltipProperty = new StringProperty(Versions.v1_5, \"tooltip\");\n    static readonly isEnabledProperty = new BoolProperty(Versions.v1_5, \"isEnabled\", true);\n\n    @property(Action.titleProperty)\n    title?: string;\n\n    @property(Action.iconUrlProperty)\n    iconUrl?: string;\n\n    @property(Action.styleProperty)\n    style: string = Enums.ActionStyle.Default;\n\n    @property(Action.modeProperty)\n    mode: string = Enums.ActionMode.Primary;\n\n    @property(Action.tooltipProperty)\n    tooltip?: string;\n\n    @property(Action.isEnabledProperty)\n    isEnabled: boolean;\n\n    //#endregion\n\n    private renderButtonContent() {\n        if (this.renderedElement) {\n            // Cache hostConfig for perf\n            let hostConfig = this.hostConfig;\n\n            let titleElement = document.createElement(\"div\");\n            titleElement.style.overflow = \"hidden\";\n            titleElement.style.textOverflow = \"ellipsis\";\n\n            if (!(hostConfig.actions.iconPlacement == Enums.ActionIconPlacement.AboveTitle || hostConfig.actions.allowTitleToWrap)) {\n                titleElement.style.whiteSpace = \"nowrap\";\n            }\n\n            if (this.title) {\n                titleElement.innerText = this.title;\n            }\n\n            if (!this.iconUrl) {\n                this.renderedElement.classList.add(\"noIcon\");\n                this.renderedElement.appendChild(titleElement);\n            }\n            else {\n                let iconElement = document.createElement(\"img\");\n                iconElement.src = this.iconUrl;\n                iconElement.style.width = hostConfig.actions.iconSize + \"px\";\n                iconElement.style.height = hostConfig.actions.iconSize + \"px\";\n                iconElement.style.flex = \"0 0 auto\";\n\n                if (hostConfig.actions.iconPlacement == Enums.ActionIconPlacement.AboveTitle) {\n                    this.renderedElement.classList.add(\"iconAbove\");\n                    this.renderedElement.style.flexDirection = \"column\";\n\n                    if (this.title) {\n                        iconElement.style.marginBottom = \"6px\";\n                    }\n                }\n                else {\n                    this.renderedElement.classList.add(\"iconLeft\");\n\n                    iconElement.style.maxHeight = \"100%\";\n\n                    if (this.title) {\n                        iconElement.style.marginRight = \"6px\";\n                    }\n                }\n\n                this.renderedElement.appendChild(iconElement);\n                this.renderedElement.appendChild(titleElement);\n            }\n        }\n    }\n\n    private getParentContainer(): Container | undefined {\n        if (this.parent instanceof Container) {\n            return this.parent;\n        }\n\n        return this.parent ? this.parent.getParentContainer() : undefined;\n    }\n\n    private _state: ActionButtonState = ActionButtonState.Normal;\n    private _actionCollection?: ActionCollection; // hold the reference to its action collection\n    private _isFocusable: boolean = true;\n\n    protected updateCssClasses() {\n        if (this.parent && this.renderedElement) {\n            let hostConfig = this.parent.hostConfig;\n\n            this.renderedElement.className = hostConfig.makeCssClassName(this.isEnabled ? \"ac-pushButton\" : \"ac-pushButton-disabled\");\n\n            let parentContainer = this.getParentContainer();\n\n            if (parentContainer) {\n                let parentContainerStyle = parentContainer.getEffectiveStyle();\n\n                if (parentContainerStyle) {\n                    this.renderedElement.classList.add(\"style-\" + parentContainerStyle);\n                }\n            }\n\n            this.renderedElement.tabIndex = this.isFocusable ? 0 : -1;\n\n            switch (this._state) {\n                case ActionButtonState.Expanded:\n                    this.renderedElement.classList.add(hostConfig.makeCssClassName(\"expanded\"));\n                    break;\n                case ActionButtonState.Subdued:\n                    this.renderedElement.classList.add(hostConfig.makeCssClassName(\"subdued\"));\n                    break;\n            }\n\n            if (this.style && this.isEnabled) {\n                if (this.style === Enums.ActionStyle.Positive) {\n                    this.renderedElement.classList.add(...hostConfig.makeCssClassNames(\"primary\", \"style-positive\"));\n                }\n                else {\n                    this.renderedElement.classList.add(...hostConfig.makeCssClassNames(\"style-\" + this.style.toLowerCase()));\n                }\n            }\n        }\n    }\n\n    protected getDefaultSerializationContext(): BaseSerializationContext {\n        return new SerializationContext();\n    }\n\n    protected internalGetReferencedInputs(): Dictionary<Input> {\n        return {};\n    }\n\n    protected internalPrepareForExecution(inputs: Dictionary<Input> | undefined) {\n        // Do nothing in base implementation\n    }\n\n    protected internalValidateInputs(referencedInputs: Dictionary<Input> | undefined): Input[] {\n        let result: Input[] = [];\n\n        if (referencedInputs) {\n            for (let key of Object.keys(referencedInputs)) {\n                let input = referencedInputs[key];\n\n                if (!input.validateValue()) {\n                    result.push(input);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    protected shouldSerialize(context: SerializationContext): boolean {\n        return context.actionRegistry.findByName(this.getJsonTypeName()) !== undefined;\n    }\n\n    protected raiseExecuteActionEvent() {\n        if (this.onExecute) {\n            this.onExecute(this);\n        }\n\n        raiseExecuteActionEvent(this);\n    }\n\n    onExecute: (sender: Action) => void;\n\n    getHref(): string | undefined {\n        return \"\";\n    }\n\n    getAriaRole(): string {\n        return \"button\";\n    }\n\n    setupElementForAccessibility(element: HTMLElement, promoteTooltipToLabel: boolean = false) {\n        element.tabIndex = this.isEnabled ? 0 : -1;\n\n        element.setAttribute(\"role\", this.getAriaRole());\n\n        if (element instanceof HTMLButtonElement) {\n            element.disabled = !this.isEnabled;\n        }\n\n        if (!this.isEnabled) {\n            element.setAttribute(\"aria-disabled\", \"true\");\n        }\n        else {\n            element.classList.add(this.hostConfig.makeCssClassName(\"ac-selectable\"));\n        }\n\n        if (this.title) {\n            element.setAttribute(\"aria-label\", this.title);\n            element.title = this.title;\n        }\n\n        if (this.tooltip) {\n            let targetAriaAttribute = promoteTooltipToLabel ? (this.title ? \"aria-description\" : \"aria-label\") : \"aria-description\";\n\n            element.setAttribute(targetAriaAttribute, this.tooltip);\n            element.title = this.tooltip;\n        }\n    }\n\n    parse(source: any, context?: SerializationContext) {\n        return super.parse(source, context ? context : new SerializationContext());\n    }\n\n    render() {\n        let buttonElement = document.createElement(\"button\");\n        buttonElement.type = \"button\";\n        buttonElement.style.display = \"flex\";\n        buttonElement.style.alignItems = \"center\";\n        buttonElement.style.justifyContent = \"center\";\n        buttonElement.onclick = (e) => {\n            if (this.isEnabled) {\n                e.preventDefault();\n                e.cancelBubble = true;\n\n                this.execute();\n            }\n        };\n\n        this._renderedElement = buttonElement;\n\n        this.renderButtonContent();\n        this.updateCssClasses();\n        this.setupElementForAccessibility(buttonElement);\n    }\n\n    execute() {\n        if (this._actionCollection) {\n            this._actionCollection.actionExecuted(this);\n        }\n\n        this.raiseExecuteActionEvent();\n    }\n\n    prepareForExecution(): boolean {\n        let referencedInputs = this.getReferencedInputs();\n        let invalidInputs = this.internalValidateInputs(referencedInputs);\n\n        if (invalidInputs.length > 0) {\n            invalidInputs[0].focus();\n\n            return false;\n        }\n\n        this.internalPrepareForExecution(referencedInputs);\n\n        return true;\n    };\n\n    remove(): boolean {\n        if (this._actionCollection) {\n            return this._actionCollection.removeAction(this);\n        }\n\n        return false;\n    }\n\n    getAllInputs(processActions: boolean = true): Input[] {\n        return [];\n    }\n\n    getResourceInformation(): IResourceInformation[] {\n        return this.iconUrl ? [{ url: this.iconUrl, mimeType: \"image\" }] : [];\n    }\n\n    getActionById(id: string): Action | undefined {\n        return this.id === id ? this : undefined;\n    }\n\n    getReferencedInputs(): Dictionary<Input> | undefined {\n        return this.internalGetReferencedInputs();\n    }\n\n    /**\n     * Validates the inputs associated with this action.\n     *\n     * @returns A list of inputs that failed validation, or an empty array if no input failed validation.\n     */\n    validateInputs(): Input[] {\n        return this.internalValidateInputs(this.getReferencedInputs());\n    }\n\n    get isPrimary(): boolean {\n        return this.style == Enums.ActionStyle.Positive;\n    }\n\n    set isPrimary(value: boolean) {\n        if (value) {\n            this.style = Enums.ActionStyle.Positive;\n        }\n        else {\n            if (this.style == Enums.ActionStyle.Positive) {\n                this.style = Enums.ActionStyle.Default;\n            }\n        }\n    }\n\n    get hostConfig(): HostConfig {\n        return this.parent ? this.parent.hostConfig : defaultHostConfig;\n    }\n\n    get parent(): CardElement | undefined {\n        return <CardElement>this._parent;\n    }\n\n    get state(): ActionButtonState {\n        return this._state;\n    }\n\n    set state(value: ActionButtonState) {\n        if (this._state !== value) {\n            this._state = value;\n\n            this.updateCssClasses();\n        }\n    }\n\n    get isFocusable(): boolean {\n        return this._isFocusable;\n    }\n\n    set isFocusable(value: boolean) {\n        if (this._isFocusable !== value) {\n            this._isFocusable = value;\n\n            this.updateCssClasses();\n        }\n    }\n}\n\nexport abstract class SubmitActionBase extends Action {\n    //#region Schema\n\n    static readonly dataProperty = new PropertyDefinition(Versions.v1_0, \"data\");\n    static readonly associatedInputsProperty = new CustomProperty(\n        Versions.v1_3,\n        \"associatedInputs\",\n        (sender: SerializableObject, property: PropertyDefinition, source: PropertyBag, context: BaseSerializationContext) => {\n            let value = source[property.name];\n\n            if (value !== undefined && typeof value === \"string\") {\n                return value.toLowerCase() === \"none\" ? \"none\" : \"auto\";\n            }\n\n            return undefined;\n        },\n        (sender: SerializableObject, property: PropertyDefinition, target: PropertyBag, value: string | undefined, context: BaseSerializationContext) => {\n            context.serializeValue(target, property.name, value);\n        });\n\n    @property(SubmitActionBase.dataProperty)\n    private _originalData?: PropertyBag;\n\n    @property(SubmitActionBase.associatedInputsProperty)\n    associatedInputs?: \"auto\" | \"none\";\n\n    //#endregion\n\n    private _isPrepared: boolean = false;\n    private _processedData?: PropertyBag;\n\n    protected internalGetReferencedInputs(): Dictionary<Input> {\n        let result: Dictionary<Input> = {};\n\n        if (this.associatedInputs !== \"none\") {\n            let current: CardElement | undefined = this.parent;\n            let inputs: Input[] = [];\n\n            while (current) {\n                inputs = inputs.concat(current.getAllInputs(false));\n\n                current = current.parent;\n            }\n\n            for (let input of inputs) {\n                if (input.id) {\n                    result[input.id] = input;\n                }\n            }\n        }\n\n        return result;\n    }\n\n    protected internalPrepareForExecution(inputs: Dictionary<Input> | undefined) {\n        if (this._originalData) {\n            this._processedData = JSON.parse(JSON.stringify(this._originalData));\n        }\n        else {\n            this._processedData = {};\n        }\n\n        if (this._processedData && inputs) {\n            for (let key of Object.keys(inputs)) {\n                let input = inputs[key];\n\n                if (input.id && input.isSet()) {\n                    this._processedData[input.id] = typeof input.value === \"string\" ? input.value : input.value.toString();\n                }\n            }\n        }\n\n        this._isPrepared = true;\n    }\n\n    get data(): object | undefined {\n        return this._isPrepared ? this._processedData : this._originalData;\n    }\n\n    set data(value: object | undefined) {\n        this._originalData = value;\n        this._isPrepared = false;\n    }\n}\n\nexport class SubmitAction extends SubmitActionBase {\n    // Note the \"weird\" way this field is declared is to work around a breaking\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\n    static readonly JsonTypeName: \"Action.Submit\" = \"Action.Submit\";\n\n    getJsonTypeName(): string {\n        return SubmitAction.JsonTypeName;\n    }\n}\n\nexport class ExecuteAction extends SubmitActionBase {\n    // Note the \"weird\" way this field is declared is to work around a breaking\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\n    static readonly JsonTypeName: \"Action.Execute\" = \"Action.Execute\";\n\n    //#region Schema\n\n    static readonly verbProperty = new StringProperty(Versions.v1_4, \"verb\");\n\n    @property(ExecuteAction.verbProperty)\n    verb: string;\n\n    //#endregion\n\n    getJsonTypeName(): string {\n        return ExecuteAction.JsonTypeName;\n    }\n}\n\nexport class OpenUrlAction extends Action {\n    //#region Schema\n\n    static readonly urlProperty = new StringProperty(Versions.v1_0, \"url\");\n\n    @property(OpenUrlAction.urlProperty)\n    url?: string;\n\n    //#endregion\n\n    // Note the \"weird\" way this field is declared is to work around a breaking\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\n    static readonly JsonTypeName: \"Action.OpenUrl\" = \"Action.OpenUrl\";\n\n    getJsonTypeName(): string {\n        return OpenUrlAction.JsonTypeName;\n    }\n\n    getAriaRole() : string {\n        return \"link\";\n    }\n\n    internalValidateProperties(context: ValidationResults) {\n        super.internalValidateProperties(context);\n\n        if (!this.url) {\n            context.addFailure(\n                this,\n                Enums.ValidationEvent.PropertyCantBeNull,\n                Strings.errors.propertyMustBeSet(\"url\"));\n        }\n    }\n\n    getHref(): string | undefined {\n        return this.url;\n    }\n}\n\nexport class ToggleVisibilityAction extends Action {\n    //#region Schema\n\n    static readonly targetElementsProperty = new CustomProperty<PropertyBag>(\n        Versions.v1_2,\n        \"targetElements\",\n        (sender: SerializableObject, property: PropertyDefinition, source: PropertyBag, context: BaseSerializationContext) => {\n            let result: PropertyBag = {}\n\n            if (Array.isArray(source[property.name])) {\n                for (let item of source[property.name]) {\n                    if (typeof item === \"string\") {\n                        result[item] = undefined;\n                    }\n                    else if (typeof item === \"object\") {\n                        let elementId = item[\"elementId\"];\n\n                        if (typeof elementId === \"string\") {\n                            result[elementId] = Utils.parseBool(item[\"isVisible\"]);\n                        }\n                    }\n                }\n            }\n\n            return result;\n        },\n        (sender: SerializableObject, property: PropertyDefinition, target: PropertyBag, value: PropertyBag, context: BaseSerializationContext) => {\n            let targetElements: any[] = [];\n\n            for (let id of Object.keys(value)) {\n                if (typeof value[id] === \"boolean\") {\n                    targetElements.push(\n                        {\n                            elementId: id,\n                            isVisible: value[id]\n                        }\n                    );\n                }\n                else {\n                    targetElements.push(id);\n                }\n            }\n\n            context.serializeArray(target, property.name, targetElements);\n        },\n        {},\n        (sender: SerializableObject) => { return {}; });\n\n    @property(ToggleVisibilityAction.targetElementsProperty)\n    targetElements: { [key: string]: any } = {};\n\n    //#endregion\n\n    // Note the \"weird\" way this field is declared is to work around a breaking\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\n    static readonly JsonTypeName: \"Action.ToggleVisibility\" = \"Action.ToggleVisibility\";\n\n    private updateAriaControlsAttribute() {\n        // apply aria labels to make it clear which elements this action will toggle\n        if (this.targetElements) {\n            const elementIds = Object.keys(this.targetElements);\n\n            if (this._renderedElement) {\n                if (elementIds.length > 0) {\n                    this._renderedElement.setAttribute(\"aria-controls\", elementIds.join(\" \"));\n                }\n                else {\n                    this._renderedElement.removeAttribute(\"aria-controls\");\n                }\n            }\n        }\n    }\n\n    internalValidateProperties(context: ValidationResults) {\n        super.internalValidateProperties(context);\n\n        if (!this.targetElements) {\n            context.addFailure(\n                this,\n                Enums.ValidationEvent.PropertyCantBeNull,\n                Strings.errors.propertyMustBeSet(\"targetElements\"));\n        }\n    }\n\n    getJsonTypeName(): string {\n        return ToggleVisibilityAction.JsonTypeName;\n    }\n\n    render() {\n        super.render();\n\n        this.updateAriaControlsAttribute();\n    }\n\n    execute() {\n        if (this.parent) {\n            for (let elementId of Object.keys(this.targetElements)) {\n                let targetElement = this.parent.getRootElement().getElementById(elementId);\n\n                if (targetElement) {\n                    if (typeof this.targetElements[elementId] === \"boolean\") {\n                        targetElement.isVisible = this.targetElements[elementId];\n                    }\n                    else {\n                        targetElement.isVisible = !targetElement.isVisible;\n                    }\n                }\n            }\n        }\n    }\n\n    addTargetElement(elementId: string, isVisible: boolean | undefined = undefined) {\n        this.targetElements[elementId] = isVisible;\n        this.updateAriaControlsAttribute();\n    }\n\n    removeTargetElement(elementId: string) {\n        delete this.targetElements[elementId];\n        this.updateAriaControlsAttribute();\n    }\n}\n\nclass StringWithSubstitutionProperty extends PropertyDefinition  {\n    parse(sender: SerializableObject, source: PropertyBag, context: BaseSerializationContext): StringWithSubstitutions {\n        let result = new StringWithSubstitutions();\n        result.set(Utils.parseString(source[this.name]));\n\n        return result;\n    }\n\n    toJSON(sender: SerializableObject, target: PropertyBag, value: StringWithSubstitutions, context: BaseSerializationContext): void {\n        context.serializeValue(target, this.name, value.getOriginal());\n    }\n\n    constructor(\n        readonly targetVersion: Version,\n        readonly name: string) {\n        super(targetVersion, name, undefined, () => { return new StringWithSubstitutions(); });\n    }\n}\n\nexport class HttpHeader extends SerializableObject {\n    //#region Schema\n\n    static readonly nameProperty = new StringProperty(Versions.v1_0, \"name\");\n    static readonly valueProperty = new StringWithSubstitutionProperty(Versions.v1_0, \"value\");\n\n    protected getSchemaKey(): string {\n        return \"HttpHeader\";\n    }\n\n    @property(HttpHeader.nameProperty)\n    name: string;\n\n    @property(HttpHeader.valueProperty)\n    private _value: StringWithSubstitutions;\n\n    //#endregion\n\n    constructor(name: string = \"\", value: string = \"\") {\n        super();\n\n        this.name = name;\n        this.value = value;\n    }\n\n    getReferencedInputs(inputs: Input[], referencedInputs: Dictionary<Input>) {\n        this._value.getReferencedInputs(inputs, referencedInputs);\n    }\n\n    prepareForExecution(inputs: Dictionary<Input>) {\n        this._value.substituteInputValues(inputs, ContentTypes.applicationXWwwFormUrlencoded);\n    }\n\n    get value(): string | undefined {\n        return this._value.get();\n    }\n\n    set value(newValue: string | undefined) {\n        this._value.set(newValue);\n    }\n}\n\nexport class HttpAction extends Action {\n    //#region Schema\n\n    static readonly urlProperty = new StringWithSubstitutionProperty(Versions.v1_0, \"url\");\n    static readonly bodyProperty = new StringWithSubstitutionProperty(Versions.v1_0, \"body\");\n    static readonly methodProperty = new StringProperty(Versions.v1_0, \"method\");\n    static readonly headersProperty = new SerializableObjectCollectionProperty(Versions.v1_0, \"headers\", HttpHeader);\n    static readonly ignoreInputValidationProperty = new BoolProperty(Versions.v1_3, \"ignoreInputValidation\", false);\n\n    @property(HttpAction.urlProperty)\n    private _url: StringWithSubstitutions;\n\n    @property(HttpAction.bodyProperty)\n    private _body: StringWithSubstitutions;\n\n    @property(HttpAction.methodProperty)\n    method?: string;\n\n    @property(HttpAction.headersProperty)\n    headers: HttpHeader[];\n\n    @property(HttpAction.ignoreInputValidationProperty)\n    private _ignoreInputValidation: boolean = false;\n\n    //#endregion\n\n    // Note the \"weird\" way this field is declared is to work around a breaking\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\n    static readonly JsonTypeName: \"Action.Http\" = \"Action.Http\";\n\n    protected internalGetReferencedInputs(): Dictionary<Input> {\n        let allInputs = this.parent ? this.parent.getRootElement().getAllInputs() : [];\n        let result: Dictionary<Input> = {};\n\n        this._url.getReferencedInputs(allInputs, result);\n\n        for (let header of this.headers) {\n            header.getReferencedInputs(allInputs, result);\n        }\n\n        this._body.getReferencedInputs(allInputs, result);\n\n        return result;\n    }\n\n    protected internalPrepareForExecution(inputs: Dictionary<Input> | undefined) {\n        if (inputs) {\n            this._url.substituteInputValues(inputs, ContentTypes.applicationXWwwFormUrlencoded);\n\n            let contentType = ContentTypes.applicationJson;\n\n            for (let header of this.headers) {\n                header.prepareForExecution(inputs);\n\n                if (header.name && header.name.toLowerCase() == \"content-type\") {\n                    contentType = <string>header.value;\n                }\n            }\n\n            this._body.substituteInputValues(inputs, contentType);\n        }\n    };\n\n    getJsonTypeName(): string {\n        return HttpAction.JsonTypeName;\n    }\n\n    internalValidateProperties(context: ValidationResults) {\n        super.internalValidateProperties(context);\n\n        if (!this.url) {\n            context.addFailure(\n                this,\n                Enums.ValidationEvent.PropertyCantBeNull,\n                Strings.errors.propertyMustBeSet(\"url\"));\n        }\n\n        if (this.headers.length > 0) {\n            for (let header of this.headers) {\n                if (!header.name) {\n                    context.addFailure(\n                        this,\n                        Enums.ValidationEvent.PropertyCantBeNull,\n                        Strings.errors.actionHttpHeadersMustHaveNameAndValue());\n                }\n            }\n        }\n    }\n\n    get ignoreInputValidation(): boolean {\n        return this._ignoreInputValidation;\n    }\n\n    set ignoreInputValidation(value: boolean) {\n        this._ignoreInputValidation = value;\n    }\n\n    get url(): string | undefined {\n        return this._url.get();\n    }\n\n    set url(value: string | undefined) {\n        this._url.set(value);\n    }\n\n    get body(): string | undefined {\n        return this._body.get();\n    }\n\n    set body(value: string | undefined) {\n        this._body.set(value);\n    }\n}\n\nexport class ShowCardAction extends Action {\n    // Note the \"weird\" way this field is declared is to work around a breaking\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\n    static readonly JsonTypeName: \"Action.ShowCard\" = \"Action.ShowCard\";\n\n    protected updateCssClasses() {\n        super.updateCssClasses();\n\n        if (this.renderedElement) {\n            let effectiveHostConfig = this.parent ? this.parent.hostConfig : defaultHostConfig;\n\n            this.renderedElement.classList.add(effectiveHostConfig.makeCssClassName(\"expandable\"));\n            this.renderedElement.setAttribute(\"aria-expanded\", (this.state === ActionButtonState.Expanded).toString());\n        }\n    }\n\n    protected internalParse(source: any, context: SerializationContext) {\n        super.internalParse(source, context);\n\n        let jsonCard = source[\"card\"];\n\n        if (jsonCard) {\n            this.card.parse(jsonCard, context);\n        }\n        else {\n            context.logParseEvent(\n                this,\n                Enums.ValidationEvent.PropertyCantBeNull,\n                Strings.errors.showCardMustHaveCard());\n        }\n    }\n\n    protected internalToJSON(target: PropertyBag, context: SerializationContext) {\n        super.internalToJSON(target, context);\n\n        if (this.card) {\n            context.serializeValue(target, \"card\", this.card.toJSON(context));\n        }\n    }\n\n    protected raiseExecuteActionEvent() {\n        if (this.hostConfig.actions.showCard.actionMode === Enums.ShowCardActionMode.Popup) {\n            // Only raise the event in Popup mode.\n            super.raiseExecuteActionEvent();\n        }\n    }\n\n    readonly card: AdaptiveCard = new InlineAdaptiveCard();\n\n    getJsonTypeName(): string {\n        return ShowCardAction.JsonTypeName;\n    }\n\n    internalValidateProperties(context: ValidationResults) {\n        super.internalValidateProperties(context);\n\n        this.card.internalValidateProperties(context);\n    }\n\n    setParent(value: CardElement) {\n        super.setParent(value);\n\n        this.card.setParent(value);\n    }\n\n    getAllInputs(processActions: boolean = true): Input[] {\n        return this.card.getAllInputs(processActions);\n    }\n\n    getResourceInformation(): IResourceInformation[] {\n        return super.getResourceInformation().concat(this.card.getResourceInformation());\n    }\n\n    getActionById(id: string): Action | undefined {\n        let result = super.getActionById(id);\n\n        if (!result) {\n            result = this.card.getActionById(id);\n        }\n\n        return result;\n    }\n}\n\nclass OverflowAction extends Action {\n    static readonly JsonTypeName: \"Action.Overflow\" = \"Action.Overflow\";\n\n    constructor(private actions: Action[]) {\n        super();\n\n        this.title = Strings.defaults.overflowButtonText();\n    }\n\n    getActions(): readonly Action[] {\n        return this.actions;\n    }\n\n    getJsonTypeName(): string {\n        return ShowCardAction.JsonTypeName;\n    }\n\n    execute() {\n        const shouldDisplayPopupMenu = !raiseDisplayOverflowActionMenuEvent(this, this.renderedElement);\n\n        if (shouldDisplayPopupMenu && this.renderedElement) {\n            let contextMenu = new PopupMenu();\n            contextMenu.hostConfig = this.hostConfig;\n\n            for (let i = 0; i < this.actions.length; i++) {\n                const menuItem = new MenuItem(i.toString(), this.actions[i].title ?? \"\");\n                menuItem.isEnabled = this.actions[i].isEnabled;\n                menuItem.onClick = () => {\n                    let actionToExecute = this.actions[i];\n\n                    contextMenu.closePopup(false);\n\n                    if (actionToExecute.isEnabled) {\n                        actionToExecute.execute();\n                    }\n                };\n\n                contextMenu.items.add(menuItem);\n            };\n\n            contextMenu.popup(this.renderedElement);\n        }\n\t}\n}\n\nclass ActionCollection {\n    private _owner: CardElement;\n    private _actionCardContainer: HTMLDivElement;\n    private _expandedAction?: ShowCardAction;\n    private _actionCard?: HTMLElement;\n\n    private isActionAllowed(action: Action): boolean {\n        let forbiddenTypes = this._owner.getForbiddenActionTypes();\n\n        if (forbiddenTypes) {\n            for (let forbiddenType of forbiddenTypes) {\n                if (action.constructor === forbiddenType) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    private refreshContainer() {\n        this._actionCardContainer.innerHTML = \"\";\n\n        if (!this._actionCard) {\n            this._actionCardContainer.style.marginTop = \"0px\";\n\n            return;\n        }\n\n        this._actionCardContainer.style.marginTop = this.renderedActionCount > 0 ? this._owner.hostConfig.actions.showCard.inlineTopMargin + \"px\" : \"0px\";\n\n        let padding = this._owner.getEffectivePadding();\n\n        this._owner.getImmediateSurroundingPadding(padding);\n\n        let physicalPadding = this._owner.hostConfig.paddingDefinitionToSpacingDefinition(padding);\n\n        if (this._actionCard) {\n            this._actionCard.style.paddingLeft = physicalPadding.left + \"px\";\n            this._actionCard.style.paddingRight = physicalPadding.right + \"px\";\n\n            this._actionCard.style.marginLeft = \"-\" + physicalPadding.left + \"px\";\n            this._actionCard.style.marginRight = \"-\" + physicalPadding.right + \"px\";\n\n            if (physicalPadding.bottom != 0 && !this._owner.isDesignMode()) {\n                this._actionCard.style.paddingBottom = physicalPadding.bottom + \"px\";\n                this._actionCard.style.marginBottom = \"-\" + physicalPadding.bottom + \"px\";\n            }\n\n            Utils.appendChild(this._actionCardContainer, this._actionCard);\n        }\n    }\n\n    private layoutChanged() {\n        this._owner.getRootElement().updateLayout();\n    }\n\n    private showActionCard(action: ShowCardAction, suppressStyle: boolean = false, raiseEvent: boolean = true) {\n        (<InlineAdaptiveCard>action.card).suppressStyle = suppressStyle;\n\n        // Always re-render a ShowCard action in design mode; reuse already rendered ShowCard (if available) otherwise\n        let renderedCard = action.card.renderedElement && !this._owner.isDesignMode() ? action.card.renderedElement : action.card.render();\n\n        this._actionCard = renderedCard;\n        this._expandedAction = action;\n\n        this.refreshContainer();\n\n        if (raiseEvent) {\n            this.layoutChanged();\n\n            raiseInlineCardExpandedEvent(action, true);\n        }\n    }\n\n    private collapseExpandedAction() {\n        for (let action of this._renderedActions) {\n            action.state = ActionButtonState.Normal;\n        }\n\n        let previouslyExpandedAction = this._expandedAction;\n\n        this._expandedAction = undefined;\n        this._actionCard = undefined;\n\n        this.refreshContainer();\n\n        if (previouslyExpandedAction) {\n            this.layoutChanged();\n\n            raiseInlineCardExpandedEvent(previouslyExpandedAction, false);\n        }\n    }\n\n    private expandShowCardAction(action: ShowCardAction, raiseEvent: boolean) {\n        let afterSelectedAction = false;\n\n        for (let renderedAction of this._renderedActions) {\n            // Remove actions after selected action from tabOrder, to skip focus directly to expanded card\n            if (afterSelectedAction) {\n                renderedAction.isFocusable = false;\n            }\n\n            if (renderedAction !== action) {\n                renderedAction.state = ActionButtonState.Subdued;\n            }\n            else {\n                renderedAction.state = ActionButtonState.Expanded;\n\n                afterSelectedAction = true;\n\n                if (renderedAction.renderedElement) {\n                    renderedAction.renderedElement.onblur = (e) => {\n                        for (let ra of this._renderedActions) {\n                            ra.isFocusable = true;\n                        }\n                    }\n                }\n            }\n        }\n\n        this.showActionCard(\n            action,\n            !(this._owner.isAtTheVeryLeft() && this._owner.isAtTheVeryRight()),\n            raiseEvent);\n    }\n\n    private _items: Action[] = [];\n    private _overflowAction?: OverflowAction;\n    private _renderedActions: Action[] = [];\n\n    constructor(owner: CardElement) {\n        this._owner = owner;\n    }\n\n    actionExecuted(action: Action) {\n        if (!(action instanceof ShowCardAction)) {\n            this.collapseExpandedAction();\n        }\n        else {\n            if (action === this._expandedAction) {\n                this.collapseExpandedAction();\n            }\n            else if (this._owner.hostConfig.actions.showCard.actionMode === Enums.ShowCardActionMode.Inline) {\n                this.expandShowCardAction(action, true);\n            }\n        }\n    }\n\n    parse(source: any, context: SerializationContext) {\n        this.clear();\n\n        if (Array.isArray(source)) {\n            for (let jsonAction of source) {\n                let action = context.parseAction(\n                    this._owner,\n                    jsonAction,\n                    [],\n                    !this._owner.isDesignMode());\n\n                if (action) {\n                    this.addAction(action);\n                }\n            }\n        }\n    }\n\n    toJSON(target: PropertyBag, propertyName: string, context: SerializationContext): any {\n        context.serializeArray(target, propertyName, this._items);\n    }\n\n    getActionAt(id: number): Action | undefined {\n        return this._items[id];\n    }\n\n    getActionCount(): number {\n        return this._items.length;\n    }\n\n    getActionById(id: string): Action | undefined {\n        let result: Action | undefined = undefined;\n\n        for (let item of this._items) {\n            result = item.getActionById(id);\n\n            if (result) {\n                break;\n            }\n        }\n\n        return result;\n    }\n\n    validateProperties(context: ValidationResults) {\n        if (this._owner.hostConfig.actions.maxActions && this._items.length > this._owner.hostConfig.actions.maxActions) {\n            context.addFailure(\n                this._owner,\n                Enums.ValidationEvent.TooManyActions,\n                Strings.errors.tooManyActions(this._owner.hostConfig.actions.maxActions));\n        }\n\n        if (this._items.length > 0 && !this._owner.hostConfig.supportsInteractivity) {\n            context.addFailure(\n                this._owner,\n                Enums.ValidationEvent.InteractivityNotAllowed,\n                Strings.errors.interactivityNotAllowed());\n        }\n\n        for (let item of this._items) {\n            if (!this.isActionAllowed(item)) {\n                context.addFailure(\n                    this._owner,\n                    Enums.ValidationEvent.ActionTypeNotAllowed,\n                    Strings.errors.actionTypeNotAllowed(item.getJsonTypeName()));\n            }\n\n            item.internalValidateProperties(context);\n        }\n    }\n\n    render(orientation: Enums.Orientation, isDesignMode: boolean): HTMLElement | undefined {\n        // Cache hostConfig for better perf\n        let hostConfig = this._owner.hostConfig;\n\n        if (!hostConfig.supportsInteractivity) {\n            return undefined;\n        }\n\n        let element = document.createElement(\"div\");\n        let maxActions = hostConfig.actions.maxActions ? Math.min(hostConfig.actions.maxActions, this._items.length) : this._items.length;\n\n        this._actionCardContainer = document.createElement(\"div\");\n        this._renderedActions = [];\n\n        if (hostConfig.actions.preExpandSingleShowCardAction && maxActions == 1 && this._items[0] instanceof ShowCardAction && this.isActionAllowed(this._items[0])) {\n            this.showActionCard(<ShowCardAction>this._items[0], true);\n            this._renderedActions.push(this._items[0]);\n        }\n        else {\n            let buttonStrip = document.createElement(\"div\");\n            buttonStrip.className = hostConfig.makeCssClassName(\"ac-actionSet\");\n            buttonStrip.style.display = \"flex\";\n            buttonStrip.setAttribute(\"role\", \"menubar\");\n\n            if (orientation == Enums.Orientation.Horizontal) {\n                buttonStrip.style.flexDirection = \"row\";\n\n                if (this._owner.horizontalAlignment && hostConfig.actions.actionAlignment != Enums.ActionAlignment.Stretch) {\n                    switch (this._owner.horizontalAlignment) {\n                        case Enums.HorizontalAlignment.Center:\n                            buttonStrip.style.justifyContent = \"center\";\n                            break;\n                        case Enums.HorizontalAlignment.Right:\n                            buttonStrip.style.justifyContent = \"flex-end\";\n                            break;\n                        default:\n                            buttonStrip.style.justifyContent = \"flex-start\";\n                            break;\n                    }\n                }\n                else {\n                    switch (hostConfig.actions.actionAlignment) {\n                        case Enums.ActionAlignment.Center:\n                            buttonStrip.style.justifyContent = \"center\";\n                            break;\n                        case Enums.ActionAlignment.Right:\n                            buttonStrip.style.justifyContent = \"flex-end\";\n                            break;\n                        default:\n                            buttonStrip.style.justifyContent = \"flex-start\";\n                            break;\n                    }\n                }\n            }\n            else {\n                buttonStrip.style.flexDirection = \"column\";\n\n                if (this._owner.horizontalAlignment && hostConfig.actions.actionAlignment != Enums.ActionAlignment.Stretch) {\n                    switch (this._owner.horizontalAlignment) {\n                        case Enums.HorizontalAlignment.Center:\n                            buttonStrip.style.alignItems = \"center\";\n                            break;\n                        case Enums.HorizontalAlignment.Right:\n                            buttonStrip.style.alignItems = \"flex-end\";\n                            break;\n                        default:\n                            buttonStrip.style.alignItems = \"flex-start\";\n                            break;\n                    }\n                }\n                else {\n                    switch (hostConfig.actions.actionAlignment) {\n                        case Enums.ActionAlignment.Center:\n                            buttonStrip.style.alignItems = \"center\";\n                            break;\n                        case Enums.ActionAlignment.Right:\n                            buttonStrip.style.alignItems = \"flex-end\";\n                            break;\n                        case Enums.ActionAlignment.Stretch:\n                            buttonStrip.style.alignItems = \"stretch\";\n                            break;\n                        default:\n                            buttonStrip.style.alignItems = \"flex-start\";\n                            break;\n                    }\n                }\n            }\n\n            const allowedActions = this._items.filter(this.isActionAllowed.bind(this));\n\n            let primaryActions: Action[] = [];\n            let secondaryActions: Action[] = [];\n\n            if (!this._owner.isDesignMode()) {\n                allowedActions.forEach(action => action.mode === Enums.ActionMode.Secondary ? secondaryActions.push(action) : primaryActions.push(action));\n\n                // If primaryActions.length > maxActions, extra actions are moved to overflow\n                const overflowPrimaryActions = primaryActions.splice(hostConfig.actions.maxActions);\n\n                if (GlobalSettings.allowMoreThanMaxActionsInOverflowMenu) {\n                    secondaryActions.push(...overflowPrimaryActions);\n                }\n\n                let shouldRenderOverflowActionButton = true;\n\n                if (secondaryActions.length > 0) {\n                    if (!this._overflowAction) {\n                        this._overflowAction = new OverflowAction(secondaryActions);\n                        this._overflowAction.setParent(this._owner);\n                        this._overflowAction[\"_actionCollection\"] = this;\n                    }\n\n                    let isRootAction = this._owner instanceof AdaptiveCard && !this._owner.parent;\n                    shouldRenderOverflowActionButton = !raiseRenderOverflowActionsEvent(this._overflowAction, isRootAction);\n                }\n\n                if (this._overflowAction && shouldRenderOverflowActionButton) {\n                    primaryActions.push(this._overflowAction);\n                }\n            }\n            else {\n                primaryActions = allowedActions;\n            }\n\n            for (let i = 0; i < primaryActions.length; i++) {\n                let action = primaryActions[i];\n                action.render();\n\n                if (action.renderedElement) {\n                    if (primaryActions.length > 1) {\n                        action.renderedElement.setAttribute(\"aria-posinset\", (i + 1).toString());\n                        action.renderedElement.setAttribute(\"aria-setsize\", primaryActions.length.toString());\n                        action.renderedElement.setAttribute(\"role\", \"menuitem\");\n                    }\n\n                    if (hostConfig.actions.actionsOrientation == Enums.Orientation.Horizontal && hostConfig.actions.actionAlignment == Enums.ActionAlignment.Stretch) {\n                        action.renderedElement.style.flex = \"0 1 100%\";\n                    }\n                    else {\n                        action.renderedElement.style.flex = \"0 1 auto\";\n                    }\n\n                    buttonStrip.appendChild(action.renderedElement);\n\n                    this._renderedActions.push(action);\n\n                    if (i < primaryActions.length - 1 && hostConfig.actions.buttonSpacing > 0) {\n                        let spacer = document.createElement(\"div\");\n\n                        if (orientation === Enums.Orientation.Horizontal) {\n                            spacer.style.flex = \"0 0 auto\";\n                            spacer.style.width = hostConfig.actions.buttonSpacing + \"px\";\n                        }\n                        else {\n                            spacer.style.height = hostConfig.actions.buttonSpacing + \"px\";\n                        }\n\n                        Utils.appendChild(buttonStrip, spacer);\n                    }\n                }\n            }\n\n            let buttonStripContainer = document.createElement(\"div\");\n            buttonStripContainer.style.overflow = \"hidden\";\n            buttonStripContainer.appendChild(buttonStrip);\n\n            Utils.appendChild(element, buttonStripContainer);\n        }\n\n        Utils.appendChild(element, this._actionCardContainer);\n\n        for (let renderedAction of this._renderedActions) {\n            if (renderedAction.state == ActionButtonState.Expanded) {\n                this.expandShowCardAction(<ShowCardAction>renderedAction, false);\n\n                break;\n            }\n        }\n\n        return this._renderedActions.length > 0 ? element : undefined;\n    }\n\n    addAction(action: Action) {\n        if (!action) {\n            throw new Error(\"The action parameter cannot be null.\");\n        }\n\n        if ((!action.parent || action.parent === this._owner) && this._items.indexOf(action) < 0) {\n            this._items.push(action);\n\n            if (!action.parent) {\n                action.setParent(this._owner);\n            }\n\n            action[\"_actionCollection\"] = this;\n        }\n        else {\n            throw new Error(Strings.errors.actionAlreadyParented());\n        }\n    }\n\n    removeAction(action: Action): boolean {\n        if (this.expandedAction && this._expandedAction == action) {\n            this.collapseExpandedAction();\n        }\n\n        let actionIndex = this._items.indexOf(action);\n\n        if (actionIndex >= 0) {\n            this._items.splice(actionIndex, 1);\n\n            action.setParent(undefined);\n\n            action[\"_actionCollection\"] = undefined;\n\n            for (let i = 0; i < this._renderedActions.length; i++) {\n                if (this._renderedActions[i] == action) {\n                    this._renderedActions.splice(i, 1);\n\n                    break;\n                }\n            }\n\n            return true;\n        }\n\n        return false;\n    }\n\n    clear() {\n        this._items = [];\n        this._renderedActions = [];\n        this._expandedAction = undefined;\n    }\n\n    getAllInputs(processActions: boolean = true): Input[] {\n        let result: Input[] = [];\n\n        if (processActions) {\n            for (let action of this._items) {\n                result = result.concat(action.getAllInputs());\n            }\n        }\n\n        return result;\n    }\n\n    getResourceInformation(): IResourceInformation[] {\n        let result: IResourceInformation[] = [];\n\n        for (let action of this._items) {\n            result = result.concat(action.getResourceInformation());\n        }\n\n        return result;\n    }\n\n    get renderedActionCount(): number {\n        return this._renderedActions.length;\n    }\n\n    get expandedAction(): ShowCardAction | undefined {\n        return this._expandedAction;\n    }\n}\n\nexport class ActionSet extends CardElement {\n    //#region Schema\n\n    static readonly orientationProperty = new EnumProperty(Versions.v1_1, \"orientation\", Enums.Orientation);\n\n    @property(ActionSet.orientationProperty)\n    orientation?: Enums.Orientation;\n\n    //#endregion\n\n    private _actionCollection: ActionCollection;\n\n    protected internalParse(source: any, context: SerializationContext) {\n        super.internalParse(source, context);\n\n        this._actionCollection.parse(source[\"actions\"], context);\n    }\n\n    protected internalToJSON(target: PropertyBag, context: SerializationContext) {\n        super.internalToJSON(target, context);\n\n        this._actionCollection.toJSON(target, \"actions\", context);\n    }\n\n    protected internalRender(): HTMLElement | undefined {\n        return this._actionCollection.render(this.orientation !== undefined ? this.orientation : this.hostConfig.actions.actionsOrientation, this.isDesignMode());\n    }\n\n    constructor() {\n        super();\n\n        this._actionCollection = new ActionCollection(this);\n    }\n\n    isBleedingAtBottom(): boolean {\n        if (this._actionCollection.renderedActionCount == 0) {\n            return super.isBleedingAtBottom();\n        }\n        else {\n            if (this._actionCollection.getActionCount() == 1) {\n                return this._actionCollection.expandedAction !== undefined && !this.hostConfig.actions.preExpandSingleShowCardAction;\n            }\n            else {\n                return this._actionCollection.expandedAction !== undefined;\n            }\n        }\n    }\n\n    getJsonTypeName(): string {\n        return \"ActionSet\";\n    }\n\n    getActionCount(): number {\n        return this._actionCollection.getActionCount();\n    }\n\n    getActionAt(index: number): Action | undefined {\n        if (index >= 0 && index < this.getActionCount()) {\n            return this._actionCollection.getActionAt(index);\n        }\n        else {\n            return super.getActionAt(index);\n        }\n    }\n\n    getActionById(id: string): Action | undefined {\n        let result: Action | undefined = this._actionCollection.getActionById(id);\n\n        return result ? result : super.getActionById(id);\n    }\n\n    internalValidateProperties(context: ValidationResults) {\n        super.internalValidateProperties(context);\n\n        this._actionCollection.validateProperties(context);\n    }\n\n    addAction(action: Action) {\n        this._actionCollection.addAction(action);\n    }\n\n    getAllInputs(processActions: boolean = true): Input[] {\n        return processActions ? this._actionCollection.getAllInputs() : [];\n    }\n\n    getResourceInformation(): IResourceInformation[] {\n        return this._actionCollection.getResourceInformation();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    findDOMNodeOwner(node: Node): CardObject | undefined {\n        let target: CardObject | undefined = undefined;\n\n        for (let i = 0; i < this.getActionCount(); i++) {\n            let action = this.getActionAt(i);\n\n            if (action) {\n                // recur through each Action\n                target = action.findDOMNodeOwner(node);\n\n                if (target) {\n                    return target;\n                }\n            }\n        }\n\n        // if not found in any Action, defer to parent implementation\n        return super.findDOMNodeOwner(node);\n    }\n\n    get isInteractive(): boolean {\n        return true;\n    }\n}\n\nexport class ContainerStyleProperty extends ValueSetProperty {\n    constructor(\n        readonly targetVersion: Version,\n        readonly name: string,\n        readonly defaultValue?: string,\n        readonly onGetInitialValue?: (sender: SerializableObject) => string) {\n        super(\n            targetVersion,\n            name,\n            [\n                { value: Enums.ContainerStyle.Default },\n                { value: Enums.ContainerStyle.Emphasis },\n                { targetVersion: Versions.v1_2, value: Enums.ContainerStyle.Accent },\n                { targetVersion: Versions.v1_2, value: Enums.ContainerStyle.Good },\n                { targetVersion: Versions.v1_2, value: Enums.ContainerStyle.Attention },\n                { targetVersion: Versions.v1_2, value: Enums.ContainerStyle.Warning }\n            ],\n            defaultValue,\n            onGetInitialValue);\n    }\n}\n\nexport abstract class StylableCardElementContainer extends CardElementContainer {\n    //#region Schema\n\n    static readonly styleProperty = new ContainerStyleProperty(Versions.v1_0, \"style\");\n\n    @property(StylableCardElementContainer.styleProperty)\n    get style(): string | undefined {\n        if (this.allowCustomStyle) {\n            let style = this.getValue(StylableCardElementContainer.styleProperty);\n\n            if (style && this.hostConfig.containerStyles.getStyleByName(style)) {\n                return style;\n            }\n        }\n\n        return undefined;\n    }\n\n    set style(value: string | undefined) {\n        this.setValue(StylableCardElementContainer.styleProperty, value);\n    }\n\n    //#endregion\n\n    protected get allowCustomStyle(): boolean {\n        return true;\n    }\n\n    protected get hasExplicitStyle(): boolean {\n        return this.getValue(StylableCardElementContainer.styleProperty) !== undefined;\n    }\n\n    protected applyBorder() {\n        // No border in base implementation\n    }\n\n    protected applyBackground() {\n        if (this.renderedElement) {\n            let styleDefinition = this.hostConfig.containerStyles.getStyleByName(this.style, this.hostConfig.containerStyles.getStyleByName(this.defaultStyle));\n\n            if (styleDefinition.backgroundColor) {\n                const bgColor = <string>Utils.stringToCssColor(styleDefinition.backgroundColor);\n                this.renderedElement.style.backgroundColor = bgColor;\n            }\n        }\n    }\n\n    protected applyPadding() {\n        super.applyPadding();\n\n        if (!this.renderedElement) {\n            return;\n        }\n\n        let physicalPadding = new SpacingDefinition();\n\n        if (this.getEffectivePadding()) {\n            physicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(this.getEffectivePadding());\n        }\n\n        this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\n        this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\n        this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\n        this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\n\n        if (this.isBleeding()) {\n            // Bleed into the first parent that does have padding\n            let padding = new PaddingDefinition();\n\n            this.getImmediateSurroundingPadding(padding);\n\n            let surroundingPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(padding);\n\n            this.renderedElement.style.marginRight = \"-\" + surroundingPadding.right + \"px\";\n            this.renderedElement.style.marginLeft = \"-\" + surroundingPadding.left + \"px\";\n\n            if (!this.isDesignMode()) {\n                this.renderedElement.style.marginTop = \"-\" + surroundingPadding.top + \"px\";\n                this.renderedElement.style.marginBottom = \"-\" + surroundingPadding.bottom + \"px\";\n            }\n\n            if (this.separatorElement && this.separatorOrientation == Enums.Orientation.Horizontal) {\n                this.separatorElement.style.marginLeft = \"-\" + surroundingPadding.left + \"px\";\n                this.separatorElement.style.marginRight = \"-\" + surroundingPadding.right + \"px\";\n            }\n        }\n        else {\n            this.renderedElement.style.marginRight = \"0\";\n            this.renderedElement.style.marginLeft = \"0\";\n            this.renderedElement.style.marginTop = \"0\";\n            this.renderedElement.style.marginBottom = \"0\";\n\n            if (this.separatorElement && this.separatorOrientation === Enums.Orientation.Horizontal) {\n                this.separatorElement.style.marginRight = \"0\";\n                this.separatorElement.style.marginLeft = \"0\";\n            }\n        }\n    }\n\n    protected getHasBackground(): boolean {\n        let currentElement: CardElement | undefined = this.parent;\n\n        while (currentElement) {\n            let currentElementHasBackgroundImage = currentElement instanceof Container ? currentElement.backgroundImage.isValid() : false;\n\n            if (currentElement instanceof StylableCardElementContainer) {\n                if (this.hasExplicitStyle && (currentElement.getEffectiveStyle() != this.getEffectiveStyle() || currentElementHasBackgroundImage)) {\n                    return true;\n                }\n            }\n\n            currentElement = currentElement.parent;\n        }\n\n        return false;\n    }\n\n    protected getDefaultPadding(): PaddingDefinition {\n        return this.getHasBackground() || this.getHasBorder() ?\n            new PaddingDefinition(\n                Enums.Spacing.Padding,\n                Enums.Spacing.Padding,\n                Enums.Spacing.Padding,\n                Enums.Spacing.Padding) : super.getDefaultPadding();\n    }\n\n    internalValidateProperties(context: ValidationResults) {\n        super.internalValidateProperties(context);\n\n        let explicitStyle = this.getValue(StylableCardElementContainer.styleProperty);\n\n        if (explicitStyle !== undefined) {\n            let styleDefinition = this.hostConfig.containerStyles.getStyleByName(explicitStyle);\n\n            if (!styleDefinition) {\n                context.addFailure(\n                    this,\n                    Enums.ValidationEvent.InvalidPropertyValue,\n                    Strings.errors.invalidPropertyValue(explicitStyle, \"style\"));\n            }\n        }\n    }\n\n    render(): HTMLElement | undefined {\n        let renderedElement = super.render();\n\n        if (renderedElement && this.getHasBackground()) {\n            this.applyBackground();\n        }\n\n        this.applyBorder();\n\n        return renderedElement;\n    }\n\n    getEffectiveStyle(): string {\n        let effectiveStyle = this.style;\n\n        return effectiveStyle ? effectiveStyle : super.getEffectiveStyle();\n    }\n}\n\nexport abstract class ContainerBase extends StylableCardElementContainer {\n    //#region Schema\n\n    static readonly bleedProperty = new BoolProperty(Versions.v1_2, \"bleed\", false);\n    static readonly minHeightProperty = new PixelSizeProperty(Versions.v1_2, \"minHeight\");\n\n    @property(ContainerBase.bleedProperty)\n    private _bleed: boolean = false;\n\n    @property(ContainerBase.minHeightProperty)\n    minPixelHeight?: number;\n\n    //#endregion\n\n    protected adjustRenderedElementSize(renderedElement: HTMLElement) {\n        super.adjustRenderedElementSize(renderedElement);\n\n        if (this.minPixelHeight) {\n            renderedElement.style.minHeight = this.minPixelHeight + \"px\";\n        }\n    }\n\n    protected getHasExpandedAction(): boolean {\n        return false;\n    }\n\n    protected getBleed(): boolean {\n        return this._bleed;\n    }\n\n    protected setBleed(value: boolean) {\n        this._bleed = value;\n    }\n\n    protected get renderedActionCount(): number {\n        return 0;\n    }\n\n    isBleeding(): boolean {\n\t\treturn (this.getHasBackground() || this.hostConfig.alwaysAllowBleed) && this.getBleed();\n    }\n}\n\nexport class BackgroundImage extends SerializableObject {\n    //#region Schema\n\n    static readonly urlProperty = new StringProperty(Versions.v1_0, \"url\");\n    static readonly fillModeProperty = new EnumProperty(Versions.v1_2, \"fillMode\", Enums.FillMode, Enums.FillMode.Cover);\n    static readonly horizontalAlignmentProperty = new EnumProperty(Versions.v1_2, \"horizontalAlignment\", Enums.HorizontalAlignment, Enums.HorizontalAlignment.Left);\n    static readonly verticalAlignmentProperty = new EnumProperty(Versions.v1_2, \"verticalAlignment\", Enums.VerticalAlignment, Enums.VerticalAlignment.Top);\n\n    @property(BackgroundImage.urlProperty)\n    url?: string;\n\n    @property(BackgroundImage.fillModeProperty)\n    fillMode: Enums.FillMode;\n\n    @property(BackgroundImage.horizontalAlignmentProperty)\n    horizontalAlignment: Enums.HorizontalAlignment;\n\n    @property(BackgroundImage.verticalAlignmentProperty)\n    verticalAlignment: Enums.VerticalAlignment;\n\n    //#endregion\n\n    protected getSchemaKey(): string {\n        return \"BackgroundImage\";\n    }\n\n    protected internalParse(source: any, context: BaseSerializationContext) {\n        if (typeof source === \"string\") {\n            this.resetDefaultValues();\n            this.url = source;\n        }\n        else {\n            return super.internalParse(source, context);\n        }\n    }\n\n    apply(element: CardElement) {\n        if (this.url && element.renderedElement) {\n            element.renderedElement.style.backgroundImage = \"url('\" + element.preProcessPropertyValue(BackgroundImage.urlProperty, this.url) + \"')\";\n\n            switch (this.fillMode) {\n                case Enums.FillMode.Repeat:\n                    element.renderedElement.style.backgroundRepeat = \"repeat\";\n                    break;\n                case Enums.FillMode.RepeatHorizontally:\n                    element.renderedElement.style.backgroundRepeat = \"repeat-x\";\n                    break;\n                case Enums.FillMode.RepeatVertically:\n                    element.renderedElement.style.backgroundRepeat = \"repeat-y\";\n                    break;\n                case Enums.FillMode.Cover:\n                default:\n                    element.renderedElement.style.backgroundRepeat = \"no-repeat\";\n                    element.renderedElement.style.backgroundSize = \"cover\";\n                    break;\n            }\n\n            switch (this.horizontalAlignment) {\n                case Enums.HorizontalAlignment.Center:\n                    element.renderedElement.style.backgroundPositionX = \"center\";\n                    break;\n                case Enums.HorizontalAlignment.Right:\n                    element.renderedElement.style.backgroundPositionX = \"right\";\n                    break;\n            }\n\n            switch (this.verticalAlignment) {\n                case Enums.VerticalAlignment.Center:\n                    element.renderedElement.style.backgroundPositionY = \"center\";\n                    break;\n                case Enums.VerticalAlignment.Bottom:\n                    element.renderedElement.style.backgroundPositionY = \"bottom\";\n                    break;\n            }\n        }\n    }\n\n    isValid(): boolean {\n        return this.url ? true : false;\n    }\n}\n\nexport class Container extends ContainerBase {\n    //#region Schema\n\n    static readonly backgroundImageProperty = new SerializableObjectProperty(\n        Versions.v1_0,\n        \"backgroundImage\",\n        BackgroundImage);\n    static readonly verticalContentAlignmentProperty = new EnumProperty(\n        Versions.v1_1,\n        \"verticalContentAlignment\",\n        Enums.VerticalAlignment);\n    static readonly rtlProperty = new BoolProperty(Versions.v1_0, \"rtl\");\n\n    @property(Container.backgroundImageProperty)\n    get backgroundImage(): BackgroundImage {\n        return this.getValue(Container.backgroundImageProperty);\n    }\n\n    @property(Container.verticalContentAlignmentProperty)\n    verticalContentAlignment?: Enums.VerticalAlignment;\n\n    @property(Container.rtlProperty)\n    rtl?: boolean;\n\n    //#endregion\n\n    private _items: CardElement[] = [];\n    private _renderedItems: CardElement[] = [];\n\n    private insertItemAt(\n        item: CardElement,\n        index: number,\n        forceInsert: boolean) {\n        if (!item.parent || forceInsert) {\n            if (item.isStandalone) {\n                if (index < 0 || index >= this._items.length) {\n                    this._items.push(item);\n                }\n                else {\n                    this._items.splice(index, 0, item);\n                }\n\n                item.setParent(this);\n            }\n            else {\n                throw new Error(Strings.errors.elementTypeNotStandalone(item.getJsonTypeName()));\n            }\n        }\n        else {\n            throw new Error(Strings.errors.elementAlreadyParented());\n        }\n    }\n\n    protected getItemsCollectionPropertyName(): string {\n        return \"items\";\n    }\n\n    protected applyBackground() {\n        if (this.backgroundImage.isValid() && this.renderedElement) {\n            this.backgroundImage.apply(this);\n        }\n\n        super.applyBackground();\n    }\n\n    protected internalRender(): HTMLElement | undefined {\n        this._renderedItems = [];\n\n        // Cache hostConfig to avoid walking the parent hierarchy several times\n        let hostConfig = this.hostConfig;\n\n        let element = document.createElement(\"div\");\n\n        if (this.rtl !== undefined) {\n            element.dir = this.rtl ? \"rtl\" : \"ltr\";\n        }\n\n        element.classList.add(hostConfig.makeCssClassName(\"ac-container\"));\n        element.style.display = \"flex\";\n        element.style.flexDirection = \"column\";\n\n        if (GlobalSettings.useAdvancedCardBottomTruncation) {\n            // Forces the container to be at least as tall as its content.\n            //\n            // Fixes a quirk in Chrome where, for nested flex elements, the\n            // inner element's height would never exceed the outer element's\n            // height. This caused overflow truncation to break -- containers\n            // would always be measured as not overflowing, since their heights\n            // were constrained by their parents as opposed to truly reflecting\n            // the height of their content.\n            //\n            // See the \"Browser Rendering Notes\" section of this answer:\n            // https://stackoverflow.com/questions/36247140/why-doesnt-flex-item-shrink-past-content-size\n            element.style.minHeight = '-webkit-min-content';\n        }\n\n        switch (this.getEffectiveVerticalContentAlignment()) {\n            case Enums.VerticalAlignment.Center:\n                element.style.justifyContent = \"center\";\n                break;\n            case Enums.VerticalAlignment.Bottom:\n                element.style.justifyContent = \"flex-end\";\n                break;\n            default:\n                element.style.justifyContent = \"flex-start\";\n                break;\n        }\n\n        if (this._items.length > 0) {\n            for (let item of this._items) {\n                let renderedItem = this.isElementAllowed(item) ? item.render() : undefined;\n\n                if (renderedItem) {\n                    if (this._renderedItems.length > 0 && item.separatorElement) {\n                        item.separatorElement.style.flex = \"0 0 auto\";\n\n                        Utils.appendChild(element, item.separatorElement);\n                    }\n\n                    Utils.appendChild(element, renderedItem);\n\n                    this._renderedItems.push(item);\n                }\n            }\n        }\n        else {\n            if (this.isDesignMode()) {\n                let placeholderElement = this.createPlaceholderElement();\n                placeholderElement.style.width = \"100%\";\n                placeholderElement.style.height = \"100%\";\n\n                element.appendChild(placeholderElement);\n            }\n        }\n\n        return element;\n    }\n\n    protected truncateOverflow(maxHeight: number): boolean {\n        if (this.renderedElement) {\n            // Add 1 to account for rounding differences between browsers\n            let boundary = this.renderedElement.offsetTop + maxHeight + 1;\n\n            let handleElement = (cardElement: CardElement) => {\n                let elt = cardElement.renderedElement;\n\n                if (elt) {\n                    switch (Utils.getFitStatus(elt, boundary)) {\n                        case Enums.ContainerFitStatus.FullyInContainer:\n                            let sizeChanged = cardElement['resetOverflow']();\n                            // If the element's size changed after resetting content,\n                            // we have to check if it still fits fully in the card\n                            if (sizeChanged) {\n                                handleElement(cardElement);\n                            }\n                            break;\n                        case Enums.ContainerFitStatus.Overflowing:\n                            let maxHeight = boundary - elt.offsetTop;\n                            cardElement['handleOverflow'](maxHeight);\n                            break;\n                        case Enums.ContainerFitStatus.FullyOutOfContainer:\n                            cardElement['handleOverflow'](0);\n                            break;\n                    }\n                }\n            };\n\n            for (let item of this._items) {\n                handleElement(item);\n            }\n\n            return true;\n        }\n\n        return false;\n    }\n\n    protected undoOverflowTruncation() {\n        for (let item of this._items) {\n            item['resetOverflow']();\n        }\n    }\n\n    protected getHasBackground(): boolean {\n        return this.backgroundImage.isValid() || super.getHasBackground();\n    }\n\n    protected internalParse(source: any, context: SerializationContext) {\n        super.internalParse(source, context);\n\n        this.clear();\n        this.setShouldFallback(false);\n\n        let jsonItems = source[this.getItemsCollectionPropertyName()];\n\n        if (Array.isArray(jsonItems)) {\n            for (let item of jsonItems) {\n                let element = context.parseElement(this, item, !this.isDesignMode());\n\n                if (element) {\n                    this.insertItemAt(element, -1, true);\n                }\n            }\n        }\n    }\n\n    protected internalToJSON(target: PropertyBag, context: SerializationContext) {\n        super.internalToJSON(target, context);\n\n        context.serializeArray(target, this.getItemsCollectionPropertyName(), this._items);\n    }\n\n    protected get isSelectable(): boolean {\n        return true;\n    }\n\n    getEffectiveVerticalContentAlignment(): Enums.VerticalAlignment {\n        if (this.verticalContentAlignment !== undefined) {\n            return this.verticalContentAlignment;\n        }\n\n        let parentContainer = this.getParentContainer();\n\n        return parentContainer ? parentContainer.getEffectiveVerticalContentAlignment() : Enums.VerticalAlignment.Top;\n    }\n\n    getItemCount(): number {\n        return this._items.length;\n    }\n\n    getItemAt(index: number): CardElement {\n        return this._items[index];\n    }\n\n    getFirstVisibleRenderedItem(): CardElement | undefined {\n        if (this.renderedElement && this._renderedItems && this._renderedItems.length > 0) {\n            for (let item of this._renderedItems) {\n                if (item.isVisible) {\n                    return item;\n                }\n            };\n        }\n\n        return undefined;\n    }\n\n    getLastVisibleRenderedItem(): CardElement | undefined {\n        if (this.renderedElement && this._renderedItems && this._renderedItems.length > 0) {\n            for (let i = this._renderedItems.length - 1; i >= 0; i--) {\n                if (this._renderedItems[i].isVisible) {\n                    return this._renderedItems[i];\n                }\n            }\n        }\n\n        return undefined;\n    }\n\n    getJsonTypeName(): string {\n        return \"Container\";\n    }\n\n    isFirstElement(element: CardElement): boolean {\n        let designMode = this.isDesignMode();\n\n        for (let item of this._items) {\n            if (item.isVisible || designMode) {\n                return item == element;\n            }\n        }\n\n        return false;\n    }\n\n    isLastElement(element: CardElement): boolean {\n        let designMode = this.isDesignMode();\n\n        for (let i = this._items.length - 1; i >= 0; i--) {\n            if (this._items[i].isVisible || designMode) {\n                return this._items[i] == element;\n            }\n        }\n\n        return false;\n    }\n\n    isRtl(): boolean {\n        if (this.rtl !== undefined) {\n            return this.rtl;\n        }\n        else {\n            let parentContainer = this.getParentContainer();\n\n            return parentContainer ? parentContainer.isRtl() : false;\n        }\n    }\n\n    isBleedingAtTop(): boolean {\n        let firstRenderedItem = this.getFirstVisibleRenderedItem();\n\n        return this.isBleeding() || (firstRenderedItem ? firstRenderedItem.isBleedingAtTop() : false);\n    }\n\n    isBleedingAtBottom(): boolean {\n        let lastRenderedItem = this.getLastVisibleRenderedItem();\n\n        return this.isBleeding() || (lastRenderedItem ? lastRenderedItem.isBleedingAtBottom() && lastRenderedItem.getEffectiveStyle() == this.getEffectiveStyle() : false);\n    }\n\n    indexOf(cardElement: CardElement): number {\n        return this._items.indexOf(cardElement);\n    }\n\n    addItem(item: CardElement) {\n        this.insertItemAt(item, -1, false);\n    }\n\n    insertItemBefore(item: CardElement, insertBefore: CardElement) {\n        this.insertItemAt(item, this._items.indexOf(insertBefore), false);\n    }\n\n    insertItemAfter(item: CardElement, insertAfter: CardElement) {\n        this.insertItemAt(item, this._items.indexOf(insertAfter) + 1, false);\n    }\n\n    removeItem(item: CardElement): boolean {\n        let itemIndex = this._items.indexOf(item);\n\n        if (itemIndex >= 0) {\n            this._items.splice(itemIndex, 1);\n\n            item.setParent(undefined);\n\n            this.updateLayout();\n\n            return true;\n        }\n\n        return false;\n    }\n\n    clear() {\n        this._items = [];\n        this._renderedItems = [];\n    }\n\n    getResourceInformation(): IResourceInformation[] {\n        let result = super.getResourceInformation();\n\n        if (this.backgroundImage.isValid()) {\n            result.push(\n                {\n                    url: <string>this.backgroundImage.url,\n                    mimeType: \"image\"\n                }\n            );\n        }\n\n        return result;\n    }\n\n    getActionById(id: string): Action | undefined {\n        let result: Action | undefined = super.getActionById(id);\n\n        if (!result) {\n            if (this.selectAction) {\n                result = this.selectAction.getActionById(id);\n            }\n\n            if (!result) {\n                for (let item of this._items) {\n                    result = item.getActionById(id);\n\n                    if (result) {\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    }\n\n    get padding(): PaddingDefinition | undefined {\n        return this.getPadding();\n    }\n\n    set padding(value: PaddingDefinition | undefined) {\n        this.setPadding(value);\n    }\n\n    get selectAction(): Action | undefined {\n        return this._selectAction;\n    }\n\n    set selectAction(value: Action | undefined) {\n        this._selectAction = value;\n    }\n\n    get bleed(): boolean {\n        return this.getBleed();\n    }\n\n    set bleed(value: boolean) {\n        this.setBleed(value);\n    }\n}\n\nexport type ColumnWidth = SizeAndUnit | \"auto\" | \"stretch\";\n\nexport class Column extends Container {\n    //#region Schema\n\n    static readonly widthProperty = new CustomProperty<ColumnWidth>(\n        Versions.v1_0,\n        \"width\",\n        (sender: SerializableObject, property: PropertyDefinition, source: PropertyBag, context: BaseSerializationContext) => {\n            let result: ColumnWidth = property.defaultValue;\n            let value = source[property.name];\n            let invalidWidth = false;\n\n            if (typeof value === \"number\" && !isNaN(value)) {\n                result = new SizeAndUnit(value, Enums.SizeUnit.Weight);\n            }\n            else if (value === \"auto\" || value === \"stretch\") {\n                result = value;\n            }\n            else if (typeof value === \"string\") {\n                try {\n                    result = SizeAndUnit.parse(value);\n\n                    if (result.unit === Enums.SizeUnit.Pixel && property.targetVersion.compareTo(context.targetVersion) > 0) {\n                        invalidWidth = true;\n                    }\n                }\n                catch (e) {\n                    invalidWidth = true;\n                }\n            }\n            else {\n                invalidWidth = true;\n            }\n\n            if (invalidWidth) {\n                context.logParseEvent(\n                    sender,\n                    Enums.ValidationEvent.InvalidPropertyValue,\n                    Strings.errors.invalidColumnWidth(value));\n\n                result = \"auto\";\n            }\n\n            return result;\n        },\n        (sender: SerializableObject, property: PropertyDefinition, target: PropertyBag, value: ColumnWidth, context: BaseSerializationContext) => {\n            if (value instanceof SizeAndUnit) {\n                if (value.unit === Enums.SizeUnit.Pixel) {\n                    context.serializeValue(target, \"width\", value.physicalSize + \"px\");\n                }\n                else {\n                    context.serializeNumber(target, \"width\", value.physicalSize);\n                }\n            }\n            else {\n                context.serializeValue(target, \"width\", value);\n            }\n        },\n        \"stretch\");\n\n    @property(Column.widthProperty)\n    width: ColumnWidth = \"stretch\";\n\n    //#endregion\n\n    private _computedWeight: number = 0;\n\n    protected adjustRenderedElementSize(renderedElement: HTMLElement) {\n        const minDesignTimeColumnHeight = 20;\n\n        if (this.isDesignMode()) {\n            renderedElement.style.minWidth = \"20px\";\n            renderedElement.style.minHeight = (!this.minPixelHeight ? minDesignTimeColumnHeight : Math.max(this.minPixelHeight, minDesignTimeColumnHeight)) + \"px\";\n        }\n        else {\n            renderedElement.style.minWidth = \"0\";\n\n            if (this.minPixelHeight) {\n                renderedElement.style.minHeight = this.minPixelHeight + \"px\";\n            }\n        }\n\n        if (this.width === \"auto\") {\n            renderedElement.style.flex = \"0 1 auto\";\n        }\n        else if (this.width === \"stretch\") {\n            renderedElement.style.flex = \"1 1 50px\";\n        }\n        else if (this.width instanceof SizeAndUnit) {\n            if (this.width.unit == Enums.SizeUnit.Pixel) {\n                renderedElement.style.flex = \"0 0 auto\";\n                renderedElement.style.width = this.width.physicalSize + \"px\";\n            }\n            else {\n                renderedElement.style.flex = \"1 1 \" + (this._computedWeight > 0 ? this._computedWeight : this.width.physicalSize) + \"%\";\n            }\n        }\n    }\n\n    protected shouldSerialize(context: SerializationContext): boolean {\n        return true;\n    }\n\n    protected get separatorOrientation(): Enums.Orientation {\n        return Enums.Orientation.Vertical;\n    }\n\n    constructor(width: ColumnWidth = \"stretch\") {\n        super();\n\n        this.width = width;\n    }\n\n    getJsonTypeName(): string {\n        return \"Column\";\n    }\n\n    get hasVisibleSeparator(): boolean {\n        if (this.parent && this.parent instanceof ColumnSet) {\n            return this.separatorElement !== undefined && !this.parent.isLeftMostElement(this);\n        }\n        else {\n            return false;\n        }\n    }\n\n    get isStandalone(): boolean {\n        return false;\n    }\n}\n\nexport class ColumnSet extends ContainerBase {\n    private _columns: Column[] = [];\n    private _renderedColumns: Column[];\n\n    private createColumnInstance(source: any, context: SerializationContext): Column | undefined {\n        return context.parseCardObject<Column>(\n            this,\n            source,\n            [], // Forbidden types not supported for elements for now\n            !this.isDesignMode(),\n            (typeName: string) => {\n                return !typeName || typeName === \"Column\" ? new Column() : undefined;\n            },\n            (typeName: string, errorType: Enums.TypeErrorType) => {\n                context.logParseEvent(\n                    undefined,\n                    Enums.ValidationEvent.ElementTypeNotAllowed,\n                    Strings.errors.elementTypeNotAllowed(typeName));\n            });\n    }\n\n    protected internalRender(): HTMLElement | undefined {\n        this._renderedColumns = [];\n\n        if (this._columns.length > 0) {\n            // Cache hostConfig to avoid walking the parent hierarchy several times\n            let hostConfig = this.hostConfig;\n\n            let element = document.createElement(\"div\");\n            element.className = hostConfig.makeCssClassName(\"ac-columnSet\");\n            element.style.display = \"flex\";\n\n            if (GlobalSettings.useAdvancedCardBottomTruncation) {\n                // See comment in Container.internalRender()\n                element.style.minHeight = '-webkit-min-content';\n            }\n\n            switch (this.getEffectiveHorizontalAlignment()) {\n                case Enums.HorizontalAlignment.Center:\n                    element.style.justifyContent = \"center\";\n                    break;\n                case Enums.HorizontalAlignment.Right:\n                    element.style.justifyContent = \"flex-end\";\n                    break;\n                default:\n                    element.style.justifyContent = \"flex-start\";\n                    break;\n            }\n\n            let totalWeight: number = 0;\n\n            for (let column of this._columns) {\n                if (column.width instanceof SizeAndUnit && (column.width.unit == Enums.SizeUnit.Weight)) {\n                    totalWeight += column.width.physicalSize;\n                }\n            }\n\n            for (let column of this._columns) {\n                if (column.width instanceof SizeAndUnit && column.width.unit == Enums.SizeUnit.Weight && totalWeight > 0) {\n                    let computedWeight = 100 / totalWeight * column.width.physicalSize;\n\n                    // Best way to emulate \"internal\" access I know of\n                    column[\"_computedWeight\"] = computedWeight;\n                }\n\n                let renderedColumn = column.render();\n\n                if (renderedColumn) {\n                    if (this._renderedColumns.length > 0 && column.separatorElement) {\n                        column.separatorElement.style.flex = \"0 0 auto\";\n\n                        Utils.appendChild(element, column.separatorElement);\n                    }\n\n                    Utils.appendChild(element, renderedColumn);\n\n                    this._renderedColumns.push(column);\n                }\n            }\n\n            return this._renderedColumns.length > 0 ? element : undefined;\n        }\n        else {\n            return undefined;\n        }\n    }\n\n    protected truncateOverflow(maxHeight: number): boolean {\n        for (let column of this._columns) {\n            column['handleOverflow'](maxHeight);\n        }\n\n        return true;\n    }\n\n    protected undoOverflowTruncation() {\n        for (let column of this._columns) {\n            column['resetOverflow']();\n        }\n    }\n\n    protected get isSelectable(): boolean {\n        return true;\n    }\n\n    protected internalParse(source: any, context: SerializationContext) {\n        super.internalParse(source, context);\n\n        this._columns = [];\n        this._renderedColumns = [];\n\n        let jsonColumns = source[\"columns\"];\n\n        if (Array.isArray(jsonColumns)) {\n            for (let item of jsonColumns) {\n                let column = this.createColumnInstance(item, context);\n\n                if (column) {\n                    this._columns.push(column);\n                }\n            }\n        }\n    }\n\n    protected internalToJSON(target: PropertyBag, context: SerializationContext) {\n        super.internalToJSON(target, context);\n\n        context.serializeArray(target, \"columns\", this._columns);\n    }\n\n    isFirstElement(element: CardElement): boolean {\n        for (let column of this._columns) {\n            if (column.isVisible) {\n                return column == element;\n            }\n        }\n\n        return false;\n    }\n\n    isBleedingAtTop(): boolean {\n        if (this.isBleeding()) {\n            return true;\n        }\n\n        if (this._renderedColumns && this._renderedColumns.length > 0) {\n            for (let column of this._columns) {\n                if (column.isBleedingAtTop()) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    isBleedingAtBottom(): boolean {\n        if (this.isBleeding()) {\n            return true;\n        }\n\n        if (this._renderedColumns && this._renderedColumns.length > 0) {\n            for (let column of this._columns) {\n                if (column.isBleedingAtBottom()) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    getItemCount(): number {\n        return this._columns.length;\n    }\n\n    getFirstVisibleRenderedItem(): CardElement | undefined {\n        if (this.renderedElement && this._renderedColumns && this._renderedColumns.length > 0) {\n            return this._renderedColumns[0];\n        }\n        else {\n            return undefined;\n        }\n    }\n\n    getLastVisibleRenderedItem(): CardElement | undefined {\n        if (this.renderedElement && this._renderedColumns && this._renderedColumns.length > 0) {\n            return this._renderedColumns[this._renderedColumns.length - 1];\n        }\n        else {\n            return undefined;\n        }\n    }\n\n    getColumnAt(index: number): Column {\n        return this._columns[index];\n    }\n\n    getItemAt(index: number): CardElement {\n        return this.getColumnAt(index);\n    }\n\n    getJsonTypeName(): string {\n        return \"ColumnSet\";\n    }\n\n    internalValidateProperties(context: ValidationResults) {\n        super.internalValidateProperties(context);\n\n        let weightedColumns: number = 0;\n        let stretchedColumns: number = 0;\n\n        for (let column of this._columns) {\n            if (typeof column.width === \"number\") {\n                weightedColumns++;\n            }\n            else if (column.width === \"stretch\") {\n                stretchedColumns++;\n            }\n        }\n\n        if (weightedColumns > 0 && stretchedColumns > 0) {\n            context.addFailure(\n                this,\n                Enums.ValidationEvent.Hint,\n                Strings.hints.dontUseWeightedAndStrecthedColumnsInSameSet());\n        }\n    }\n\n    addColumn(column: Column) {\n        if (!column.parent) {\n            this._columns.push(column);\n\n            column.setParent(this);\n        }\n        else {\n            throw new Error(Strings.errors.columnAlreadyBelongsToAnotherSet());\n        }\n    }\n\n    removeItem(item: CardElement): boolean {\n        if (item instanceof Column) {\n            let itemIndex = this._columns.indexOf(item);\n\n            if (itemIndex >= 0) {\n                this._columns.splice(itemIndex, 1);\n\n                item.setParent(undefined);\n\n                this.updateLayout();\n\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    indexOf(cardElement: CardElement): number {\n        return cardElement instanceof Column ? this._columns.indexOf(cardElement) : -1;\n    }\n\n    isLeftMostElement(element: CardElement): boolean {\n        return this._columns.indexOf(<Column>element) == 0;\n    }\n\n    isRightMostElement(element: CardElement): boolean {\n        return this._columns.indexOf(<Column>element) == this._columns.length - 1;\n    }\n\n    isTopElement(element: CardElement): boolean {\n        return this._columns.indexOf(<Column>element) >= 0;\n    }\n\n    isBottomElement(element: CardElement): boolean {\n        return this._columns.indexOf(<Column>element) >= 0;\n    }\n\n    getActionById(id: string): Action | undefined {\n        let result: Action | undefined = undefined;\n\n        for (let column of this._columns) {\n            result = column.getActionById(id);\n\n            if (result) {\n                break;\n            }\n        }\n\n        return result;\n    }\n\n    get bleed(): boolean {\n        return this.getBleed();\n    }\n\n    set bleed(value: boolean) {\n        this.setBleed(value);\n    }\n\n    get padding(): PaddingDefinition | undefined {\n        return this.getPadding();\n    }\n\n    set padding(value: PaddingDefinition | undefined) {\n        this.setPadding(value);\n    }\n\n    get selectAction(): Action | undefined {\n        return this._selectAction;\n    }\n\n    set selectAction(value: Action | undefined) {\n        this._selectAction = value;\n    }\n}\n\nfunction raiseImageLoadedEvent(image: Image) {\n    let card = image.getRootElement() as AdaptiveCard;\n    let onImageLoadedHandler = (card && card.onImageLoaded) ? card.onImageLoaded : AdaptiveCard.onImageLoaded;\n\n    if (onImageLoadedHandler) {\n        onImageLoadedHandler(image);\n    }\n}\n\nfunction raiseAnchorClickedEvent(element: CardElement, anchor: HTMLAnchorElement, ev?: MouseEvent): boolean {\n    let card = element.getRootElement() as AdaptiveCard;\n    let onAnchorClickedHandler = (card && card.onAnchorClicked) ? card.onAnchorClicked : AdaptiveCard.onAnchorClicked;\n\n    return onAnchorClickedHandler !== undefined ? onAnchorClickedHandler(element, anchor, ev) : false;\n}\n\nfunction raiseExecuteActionEvent(action: Action) {\n    let card = action.parent ? action.parent.getRootElement() as AdaptiveCard : undefined;\n    let onExecuteActionHandler = (card && card.onExecuteAction) ? card.onExecuteAction : AdaptiveCard.onExecuteAction;\n\n    if (action.prepareForExecution() && onExecuteActionHandler) {\n        onExecuteActionHandler(action);\n    }\n}\n\nfunction raiseInlineCardExpandedEvent(action: ShowCardAction, isExpanded: boolean) {\n    let card = action.parent ? action.parent.getRootElement() as AdaptiveCard : undefined;\n    let onInlineCardExpandedHandler = (card && card.onInlineCardExpanded) ? card.onInlineCardExpanded : AdaptiveCard.onInlineCardExpanded;\n\n    if (onInlineCardExpandedHandler) {\n        onInlineCardExpandedHandler(action, isExpanded);\n    }\n}\n\nfunction raiseInputValueChangedEvent(input: Input) {\n    let card = input.getRootElement() as AdaptiveCard;\n    let onInputValueChangedHandler = (card && card.onInputValueChanged) ? card.onInputValueChanged : AdaptiveCard.onInputValueChanged;\n\n    if (onInputValueChangedHandler) {\n        onInputValueChangedHandler(input);\n    }\n}\n\nfunction raiseElementVisibilityChangedEvent(element: CardElement, shouldUpdateLayout: boolean = true) {\n    let rootElement = element.getRootElement();\n\n    if (shouldUpdateLayout) {\n        rootElement.updateLayout();\n    }\n\n    let card = rootElement as AdaptiveCard;\n    let onElementVisibilityChangedHandler = (card && card.onElementVisibilityChanged) ? card.onElementVisibilityChanged : AdaptiveCard.onElementVisibilityChanged;\n\n    if (onElementVisibilityChangedHandler !== undefined) {\n        onElementVisibilityChangedHandler(element);\n    }\n}\n\n/**\n * @returns return false to continue with default context menu; return true to skip SDK default context menu\n */\nfunction raiseDisplayOverflowActionMenuEvent(action: OverflowAction, target?: HTMLElement): boolean {\n    let card = action.parent ? action.parent.getRootElement() as AdaptiveCard : undefined;\n    let onDisplayOverflowActionMenuHandler = (card && card.onDisplayOverflowActionMenu) ? card.onDisplayOverflowActionMenu : AdaptiveCard.onDisplayOverflowActionMenu;\n\n    return onDisplayOverflowActionMenuHandler !== undefined ? onDisplayOverflowActionMenuHandler(action.getActions(), target) : false;\n}\n\n/**\n * @returns return false to continue with default action button; return true to skip SDK default action button\n */\nfunction raiseRenderOverflowActionsEvent(action: OverflowAction, isAtRootLevelActions: boolean): boolean {\n    let card = action.parent ? action.parent.getRootElement() as AdaptiveCard : undefined;\n    let onRenderOverflowActionsHandler = (card && card.onRenderOverflowActions) ? card.onRenderOverflowActions : AdaptiveCard.onRenderOverflowActions;\n\n    return onRenderOverflowActionsHandler !== undefined ? onRenderOverflowActionsHandler(action.getActions(), isAtRootLevelActions) : false;\n}\n\nexport abstract class ContainerWithActions extends Container {\n    private _actionCollection: ActionCollection;\n\n    protected internalParse(source: any, context: SerializationContext) {\n        super.internalParse(source, context);\n\n        this._actionCollection.parse(source[\"actions\"], context);\n    }\n\n    protected internalToJSON(target: PropertyBag, context: SerializationContext) {\n        super.internalToJSON(target, context);\n\n        this._actionCollection.toJSON(target, \"actions\", context);\n    }\n\n    protected internalRender(): HTMLElement | undefined {\n        let element = super.internalRender();\n\n        if (element) {\n            let renderedActions = this._actionCollection.render(this.hostConfig.actions.actionsOrientation, false);\n\n            if (renderedActions) {\n                Utils.appendChild(\n                    element,\n                    renderSeparation(\n                        this.hostConfig,\n                        {\n                            spacing: this.hostConfig.getEffectiveSpacing(this.hostConfig.actions.spacing)\n                        },\n                        Enums.Orientation.Horizontal));\n                Utils.appendChild(element, renderedActions);\n            }\n\n            if (this.renderIfEmpty) {\n                return element;\n            }\n            else {\n                return element.children.length > 0 ? element : undefined;\n            }\n        }\n        else {\n            return undefined;\n        }\n    }\n\n    protected getHasExpandedAction(): boolean {\n        if (this.renderedActionCount == 0) {\n            return false;\n        }\n        else if (this.renderedActionCount == 1) {\n            return this._actionCollection.expandedAction !== undefined && !this.hostConfig.actions.preExpandSingleShowCardAction;\n        }\n        else {\n            return this._actionCollection.expandedAction !== undefined;\n        }\n    }\n\n    protected get renderedActionCount(): number {\n        return this._actionCollection.renderedActionCount;\n    }\n\n    protected get renderIfEmpty(): boolean {\n        return false;\n    }\n\n    constructor() {\n        super();\n\n        this._actionCollection = new ActionCollection(this);\n    }\n\n    getActionCount(): number {\n        return this._actionCollection.getActionCount();\n    }\n\n    getActionAt(index: number): Action | undefined {\n        if (index >= 0 && index < this.getActionCount()) {\n            return this._actionCollection.getActionAt(index);\n        }\n        else {\n            return super.getActionAt(index);\n        }\n    }\n\n    getActionById(id: string): Action | undefined {\n        let result: Action | undefined = this._actionCollection.getActionById(id);\n\n        return result ? result : super.getActionById(id);\n    }\n\n    internalValidateProperties(context: ValidationResults) {\n        super.internalValidateProperties(context);\n\n        if (this._actionCollection) {\n            this._actionCollection.validateProperties(context);\n        }\n    }\n\n    isLastElement(element: CardElement): boolean {\n        return super.isLastElement(element) && this._actionCollection.getActionCount() == 0;\n    }\n\n    addAction(action: Action) {\n        this._actionCollection.addAction(action);\n    }\n\n    clear() {\n        super.clear();\n\n        this._actionCollection.clear();\n    }\n\n    getAllInputs(processActions: boolean = true): Input[] {\n        let result = super.getAllInputs(processActions);\n\n        if (processActions) {\n            result = result.concat(this._actionCollection.getAllInputs(processActions));\n        }\n\n        return result;\n    }\n\n    getResourceInformation(): IResourceInformation[] {\n        return super.getResourceInformation().concat(this._actionCollection.getResourceInformation());\n    }\n\n    isBleedingAtBottom(): boolean {\n        if (this._actionCollection.renderedActionCount == 0) {\n            return super.isBleedingAtBottom();\n        }\n        else {\n            if (this._actionCollection.getActionCount() == 1) {\n                return this._actionCollection.expandedAction !== undefined && !this.hostConfig.actions.preExpandSingleShowCardAction;\n            }\n            else {\n                return this._actionCollection.expandedAction !== undefined;\n            }\n        }\n    }\n\n    get isStandalone(): boolean {\n        return false;\n    }\n}\n\nexport interface IMarkdownProcessingResult {\n    didProcess: boolean;\n    outputHtml?: any;\n}\n\nexport class RefreshActionProperty extends PropertyDefinition {\n    parse(sender: RefreshDefinition, source: PropertyBag, context: SerializationContext): ExecuteAction | undefined {\n        let action = context.parseAction(\n            sender.parent,\n            source[this.name],\n            [],\n            false);\n\n        if (action !== undefined) {\n            if (action instanceof ExecuteAction) {\n                return action;\n            }\n\n            context.logParseEvent(\n                sender,\n                Enums.ValidationEvent.ActionTypeNotAllowed,\n                Strings.errors.actionTypeNotAllowed(action.getJsonTypeName()));\n        }\n\n        context.logParseEvent(\n            sender,\n            Enums.ValidationEvent.PropertyCantBeNull,\n            Strings.errors.propertyMustBeSet(\"action\"));\n\n        return undefined;\n    }\n\n    toJSON(sender: SerializableObject, target: PropertyBag, value: ExecuteAction | undefined, context: SerializationContext) {\n        context.serializeValue(target, this.name, value ? value.toJSON(context) : undefined, undefined, true);\n    }\n\n    constructor(readonly targetVersion: Version, readonly name: string) {\n        super(targetVersion, name, undefined);\n    }\n}\n\nexport class RefreshDefinition extends SerializableObject {\n    //#region Schema\n\n    static readonly actionProperty = new RefreshActionProperty(Versions.v1_4, \"action\");\n    static readonly userIdsProperty = new StringArrayProperty(Versions.v1_4, \"userIds\");\n\n    @property(RefreshDefinition.actionProperty)\n    get action(): ExecuteAction {\n        return this.getValue(RefreshDefinition.actionProperty);\n    }\n\n    set action(value: ExecuteAction) {\n        this.setValue(RefreshDefinition.actionProperty, value);\n\n        if (value) {\n            value.setParent(this.parent);\n        }\n    }\n\n    @property(RefreshDefinition.userIdsProperty)\n    userIds?: string[];\n\n    protected getSchemaKey(): string {\n        return \"RefreshDefinition\";\n    }\n\n    //#endregion\n\n    parent: CardElement;\n}\n\nexport class AuthCardButton extends SerializableObject {\n    //#region Schema\n\n    static readonly typeProperty = new StringProperty(Versions.v1_4, \"type\");\n    static readonly titleProperty = new StringProperty(Versions.v1_4, \"title\");\n    static readonly imageProperty = new StringProperty(Versions.v1_4, \"image\");\n    static readonly valueProperty = new StringProperty(Versions.v1_4, \"value\");\n\n    protected getSchemaKey(): string {\n        return \"AuthCardButton\";\n    }\n\n    //#endregion\n\n    @property(AuthCardButton.typeProperty)\n    type: string;\n\n    @property(AuthCardButton.titleProperty)\n    title?: string;\n\n    @property(AuthCardButton.imageProperty)\n    image?: string;\n\n    @property(AuthCardButton.valueProperty)\n    value: string;\n}\n\nexport class TokenExchangeResource extends SerializableObject {\n    //#region Schema\n\n    static readonly idProperty = new StringProperty(Versions.v1_4, \"id\");\n    static readonly uriProperty = new StringProperty(Versions.v1_4, \"uri\");\n    static readonly providerIdProperty = new StringProperty(Versions.v1_4, \"providerId\");\n\n    protected getSchemaKey(): string {\n        return \"TokenExchangeResource\";\n    }\n\n    //#endregion\n\n    @property(TokenExchangeResource.idProperty)\n    id?: string;\n\n    @property(TokenExchangeResource.uriProperty)\n    uri?: string;\n\n    @property(TokenExchangeResource.providerIdProperty)\n    providerId?: string;\n}\n\nexport class Authentication extends SerializableObject {\n    //#region Schema\n\n    static readonly textProperty = new StringProperty(Versions.v1_4, \"text\");\n    static readonly connectionNameProperty = new StringProperty(Versions.v1_4, \"connectionName\");\n    static readonly buttonsProperty = new SerializableObjectCollectionProperty(Versions.v1_4, \"buttons\", AuthCardButton);\n    static readonly tokenExchangeResourceProperty = new SerializableObjectProperty(Versions.v1_4, \"tokenExchangeResource\", TokenExchangeResource, true);\n\n    protected getSchemaKey(): string {\n        return \"Authentication\";\n    }\n\n    //#endregion\n\n    @property(Authentication.textProperty)\n    text?: string;\n\n    @property(Authentication.connectionNameProperty)\n    connectionName?: string;\n\n    @property(Authentication.buttonsProperty)\n    buttons: AuthCardButton[];\n\n    @property(Authentication.tokenExchangeResourceProperty)\n    tokenExchangeResource?: TokenExchangeResource;\n}\n\n// @dynamic\nexport class AdaptiveCard extends ContainerWithActions {\n    static readonly schemaUrl = \"http://adaptivecards.io/schemas/adaptive-card.json\";\n\n    //#region Schema\n\n    protected static readonly $schemaProperty = new CustomProperty<string>(\n        Versions.v1_0,\n        \"$schema\",\n        (sender: SerializableObject, property: PropertyDefinition, source: PropertyBag, context: BaseSerializationContext) => {\n            return AdaptiveCard.schemaUrl;\n        },\n        (sender: SerializableObject, property: PropertyDefinition, target: PropertyBag, value: Versions | undefined, context: BaseSerializationContext) => {\n            context.serializeValue(target, property.name, AdaptiveCard.schemaUrl);\n        });\n\n    static readonly versionProperty = new CustomProperty<Version | undefined>(\n        Versions.v1_0,\n        \"version\",\n        (sender: SerializableObject, property: PropertyDefinition, source: PropertyBag, context: BaseSerializationContext) => {\n            let version = Version.parse(source[property.name], context);\n\n            if (version === undefined) {\n                version = Versions.latest;\n\n                context.logParseEvent(\n                    sender,\n                    Enums.ValidationEvent.InvalidPropertyValue,\n                    Strings.errors.invalidCardVersion(version.toString()));\n            }\n\n            return version;\n        },\n        (sender: SerializableObject, property: PropertyDefinition, target: PropertyBag, value: Versions | undefined, context: BaseSerializationContext) => {\n            if (value !== undefined) {\n                context.serializeValue(target, property.name, value.toString());\n            }\n        },\n        Versions.v1_0);\n    static readonly fallbackTextProperty = new StringProperty(Versions.v1_0, \"fallbackText\");\n    static readonly speakProperty = new StringProperty(Versions.v1_0, \"speak\");\n    static readonly refreshProperty = new SerializableObjectProperty(Versions.v1_4, \"refresh\", RefreshDefinition, true);\n    static readonly authenticationProperty = new SerializableObjectProperty(Versions.v1_4, \"authentication\", Authentication, true);\n\n    @property(AdaptiveCard.versionProperty)\n    version: Version;\n\n    @property(AdaptiveCard.fallbackTextProperty)\n    fallbackText?: string;\n\n    @property(AdaptiveCard.speakProperty)\n    speak?: string;\n\n    @property(AdaptiveCard.refreshProperty)\n    get refresh(): RefreshDefinition | undefined {\n        return this.getValue(AdaptiveCard.refreshProperty);\n    }\n\n    set refresh(value: RefreshDefinition | undefined) {\n        this.setValue(AdaptiveCard.refreshProperty, value);\n\n        if (value) {\n            value.parent = this;\n        }\n    }\n\n    @property(AdaptiveCard.authenticationProperty)\n    authentication?: Authentication;\n\n    //#endregion\n\n    static onAnchorClicked?: (element: CardElement, anchor: HTMLAnchorElement, ev?: MouseEvent) => boolean;\n    static onExecuteAction?: (action: Action) => void;\n    static onElementVisibilityChanged?: (element: CardElement) => void;\n    static onImageLoaded?: (image: Image) => void;\n    static onInlineCardExpanded?: (action: ShowCardAction, isExpanded: boolean) => void;\n    static onInputValueChanged?: (input: Input) => void;\n    static onProcessMarkdown?: (text: string, result: IMarkdownProcessingResult) => void;\n    static onDisplayOverflowActionMenu?: (actions: readonly Action[], target?: HTMLElement) => boolean;\n    static onRenderOverflowActions?: (actions: readonly Action[], isRootLevelActions: boolean) => boolean;\n\n    static get processMarkdown(): (text: string) => string {\n        throw new Error(Strings.errors.processMarkdownEventRemoved());\n    }\n\n    static set processMarkdown(value: (text: string) => string) {\n        throw new Error(Strings.errors.processMarkdownEventRemoved());\n    }\n\n    static applyMarkdown(text: string): IMarkdownProcessingResult {\n        let result: IMarkdownProcessingResult = {\n            didProcess: false\n        };\n\n        if (AdaptiveCard.onProcessMarkdown) {\n            AdaptiveCard.onProcessMarkdown(text, result);\n        }\n        else if ((<any>window).markdownit) {\n            // Check for markdownit\n            let markdownIt: any = (<any>window).markdownit;\n            result.outputHtml = markdownIt().render(text);\n            result.didProcess = true;\n        }\n        else {\n            console.warn(Strings.errors.markdownProcessingNotEnabled)\n        }\n\n        return result;\n    }\n\n    private _fallbackCard?: AdaptiveCard;\n\n    private isVersionSupported(): boolean {\n        if (this.bypassVersionCheck) {\n            return true;\n        }\n        else {\n            let unsupportedVersion: boolean =\n                !this.version ||\n                !this.version.isValid ||\n                (this.maxVersion.major < this.version.major) ||\n                (this.maxVersion.major == this.version.major && this.maxVersion.minor < this.version.minor);\n\n            return !unsupportedVersion;\n        }\n    }\n\n    protected getDefaultSerializationContext(): BaseSerializationContext {\n        return new SerializationContext(this.version);\n    }\n\n    protected getItemsCollectionPropertyName(): string {\n        return \"body\";\n    }\n\n    protected internalParse(source: any, context: SerializationContext) {\n        this._fallbackCard = undefined;\n\n        let fallbackElement = context.parseElement(undefined, source[\"fallback\"], !this.isDesignMode());\n\n        if (fallbackElement) {\n            this._fallbackCard = new AdaptiveCard();\n            this._fallbackCard.addItem(fallbackElement);\n        }\n\n        super.internalParse(source, context);\n    }\n\n    protected internalToJSON(target: PropertyBag, context: SerializationContext) {\n        this.setValue(AdaptiveCard.versionProperty, context.targetVersion);\n\n        super.internalToJSON(target, context);\n    }\n\n    protected internalRender(): HTMLElement | undefined {\n        let renderedElement = super.internalRender();\n\n        if (GlobalSettings.useAdvancedCardBottomTruncation && renderedElement) {\n            // Unlike containers, the root card element should be allowed to\n            // be shorter than its content (otherwise the overflow truncation\n            // logic would never get triggered)\n            renderedElement.style.removeProperty(\"minHeight\");\n        }\n\n        return renderedElement;\n    }\n\n    protected getHasBackground(): boolean {\n        return true;\n    }\n\n    protected getDefaultPadding(): PaddingDefinition {\n        return new PaddingDefinition(\n            Enums.Spacing.Padding,\n            Enums.Spacing.Padding,\n            Enums.Spacing.Padding,\n            Enums.Spacing.Padding);\n    }\n\n    protected shouldSerialize(context: SerializationContext): boolean {\n        return true;\n    }\n\n    protected get renderIfEmpty(): boolean {\n        return true;\n    }\n\n    protected get bypassVersionCheck(): boolean {\n        return false;\n    }\n\n    protected get allowCustomStyle() {\n        return this.hostConfig.adaptiveCard && this.hostConfig.adaptiveCard.allowCustomStyle;\n    }\n\n    protected get hasBackground(): boolean {\n        return true;\n    }\n\n    onAnchorClicked?: (element: CardElement, anchor: HTMLAnchorElement, ev?: MouseEvent) => boolean;\n    onExecuteAction?: (action: Action) => void;\n    onElementVisibilityChanged?: (element: CardElement) => void;\n    onImageLoaded?: (image: Image) => void;\n    onInlineCardExpanded?: (action: ShowCardAction, isExpanded: boolean) => void;\n    onInputValueChanged?: (input: Input) => void;\n    onDisplayOverflowActionMenu?: (actions: readonly Action[], target?: HTMLElement) => boolean;\n    onRenderOverflowActions?: (actions: readonly Action[], isRootLevelActions: boolean) => boolean;\n\n    designMode: boolean = false;\n\n    getJsonTypeName(): string {\n        return \"AdaptiveCard\";\n    }\n\n    internalValidateProperties(context: ValidationResults) {\n        super.internalValidateProperties(context);\n\n        if (this.getValue(CardElement.typeNameProperty) !== \"AdaptiveCard\") {\n            context.addFailure(\n                this,\n                Enums.ValidationEvent.MissingCardType,\n                Strings.errors.invalidCardType());\n        }\n\n        if (!this.bypassVersionCheck && !this.version) {\n            context.addFailure(\n                this,\n                Enums.ValidationEvent.PropertyCantBeNull,\n                Strings.errors.propertyMustBeSet(\"version\"));\n        }\n        else if (!this.isVersionSupported()) {\n            context.addFailure(\n                this,\n                Enums.ValidationEvent.UnsupportedCardVersion,\n                Strings.errors.unsupportedCardVersion(this.version.toString(), this.maxVersion.toString()));\n        }\n    }\n\n    render(target?: HTMLElement): HTMLElement | undefined {\n        let renderedCard: HTMLElement | undefined;\n\n        if (this.shouldFallback() && this._fallbackCard) {\n            this._fallbackCard.hostConfig = this.hostConfig;\n\n            renderedCard = this._fallbackCard.render();\n        }\n        else {\n            renderedCard = super.render();\n\n            if (renderedCard) {\n                renderedCard.classList.add(this.hostConfig.makeCssClassName(\"ac-adaptiveCard\"));\n\n                // Having a tabIndex on the root container for a card can mess up accessibility in some scenarios.\n                // However, we've shipped this behavior before, and so can't just turn it off in a point release. For\n                // now, to unblock accessibility scenarios for our customers, we've got an option to turn it off. In a\n                // future release, we should strongly consider flipping the default such that we *don't* emit a tabIndex\n                // by default.\n                if (GlobalSettings.setTabIndexAtCardRoot) {\n                    renderedCard.tabIndex = 0;\n                }\n\n                if (this.speak) {\n                    renderedCard.setAttribute(\"aria-label\", this.speak);\n                }\n            }\n        }\n\n        if (target) {\n            Utils.appendChild(target, renderedCard);\n\n            this.updateLayout();\n        }\n\n        return renderedCard;\n    }\n\n    updateLayout(processChildren: boolean = true) {\n        super.updateLayout(processChildren);\n\n        if (GlobalSettings.useAdvancedCardBottomTruncation && this.isDisplayed()) {\n            let padding = this.hostConfig.getEffectiveSpacing(Enums.Spacing.Default);\n\n            this['handleOverflow']((<HTMLElement>this.renderedElement).offsetHeight - padding);\n        }\n    }\n\n    shouldFallback(): boolean {\n        return super.shouldFallback() || !this.isVersionSupported();\n    }\n\n    get hasVisibleSeparator(): boolean {\n        return false;\n    }\n}\n\nclass InlineAdaptiveCard extends AdaptiveCard {\n    //#region Schema\n\n    protected getSchemaKey(): string {\n        return \"InlineAdaptiveCard\";\n    }\n\n    protected populateSchema(schema: SerializableObjectSchema) {\n        super.populateSchema(schema);\n\n        schema.remove(\n            AdaptiveCard.$schemaProperty,\n            AdaptiveCard.versionProperty);\n    }\n\n    //#endregion\n\n    protected getDefaultPadding(): PaddingDefinition {\n        return new PaddingDefinition(\n            this.suppressStyle ? Enums.Spacing.None : Enums.Spacing.Padding,\n            Enums.Spacing.Padding,\n            this.suppressStyle ? Enums.Spacing.None : Enums.Spacing.Padding,\n            Enums.Spacing.Padding);\n    }\n\n    protected get bypassVersionCheck(): boolean {\n        return true;\n    }\n\n    protected get defaultStyle(): string {\n        if (this.suppressStyle) {\n            return Enums.ContainerStyle.Default;\n        }\n        else {\n            return this.hostConfig.actions.showCard.style ? this.hostConfig.actions.showCard.style : Enums.ContainerStyle.Emphasis;\n        }\n    }\n\n    suppressStyle: boolean = false;\n\n    render(target?: HTMLElement): HTMLElement | undefined {\n        let renderedCard = super.render(target);\n\n        if (renderedCard) {\n            renderedCard.setAttribute(\"aria-live\", \"polite\");\n            renderedCard.removeAttribute(\"tabindex\");\n        }\n\n        return renderedCard;\n    }\n}\n\nexport class SerializationContext extends BaseSerializationContext {\n    private _elementRegistry?: CardObjectRegistry<CardElement>;\n    private _actionRegistry?: CardObjectRegistry<Action>;\n\n    private internalParseCardObject<T extends CardObject>(\n        parent: CardElement | undefined,\n        source: any,\n        forbiddenTypeNames: string[],\n        allowFallback: boolean,\n        createInstanceCallback: (typeName: string | undefined) => T | undefined,\n        logParseEvent: (typeName: string | undefined, errorType: Enums.TypeErrorType) => void): T | undefined {\n        let result: T | undefined = undefined;\n\n        if (source && typeof source === \"object\") {\n            let typeName = Utils.parseString(source[\"type\"]);\n\n            if (typeName && forbiddenTypeNames.indexOf(typeName) >= 0) {\n                logParseEvent(typeName, Enums.TypeErrorType.ForbiddenType);\n            }\n            else {\n                let tryToFallback = false;\n\n                result = createInstanceCallback(typeName);\n\n                if (!result) {\n                    tryToFallback = GlobalSettings.enableFallback && allowFallback;\n\n                    logParseEvent(typeName, Enums.TypeErrorType.UnknownType);\n                }\n                else {\n                    result.setParent(parent);\n                    result.parse(source, this);\n\n                    tryToFallback = GlobalSettings.enableFallback && allowFallback && result.shouldFallback();\n                }\n\n                if (tryToFallback) {\n                    let fallback = source[\"fallback\"];\n\n                    if (!fallback && parent) {\n                        parent.setShouldFallback(true);\n                    }\n                    if (typeof fallback === \"string\" && fallback.toLowerCase() === \"drop\") {\n                        result = undefined;\n                    }\n                    else if (typeof fallback === \"object\") {\n                        result = this.internalParseCardObject<T>(\n                            parent,\n                            fallback,\n                            forbiddenTypeNames,\n                            true,\n                            createInstanceCallback,\n                            logParseEvent);\n                    }\n                }\n            }\n        }\n\n        return result;\n    }\n\n    protected cardObjectParsed(o: SerializableObject, source: any) {\n        if (o instanceof Action && this.onParseAction) {\n            this.onParseAction(o, source, this);\n        }\n        else if (o instanceof CardElement && this.onParseElement) {\n            this.onParseElement(o, source, this);\n        }\n    }\n\n    onParseAction?: (action: Action, source: any, context: SerializationContext) => void;\n    onParseElement?: (element: CardElement, source: any, context: SerializationContext) => void;\n\n    shouldSerialize(o: SerializableObject): boolean {\n        if (o instanceof Action) {\n            return this.actionRegistry.findByName(o.getJsonTypeName()) !== undefined;\n        }\n        else if (o instanceof CardElement) {\n            return this.elementRegistry.findByName(o.getJsonTypeName()) !== undefined;\n        }\n        else {\n            return true;\n        }\n    }\n\n    parseCardObject<T extends CardObject>(\n        parent: CardElement | undefined,\n        source: any,\n        forbiddenTypeNames: string[],\n        allowFallback: boolean,\n        createInstanceCallback: (typeName: string) => T | undefined,\n        logParseEvent: (typeName: string, errorType: Enums.TypeErrorType) => void): T | undefined {\n        let result = this.internalParseCardObject(\n            parent,\n            source,\n            forbiddenTypeNames,\n            allowFallback,\n            createInstanceCallback,\n            logParseEvent);\n\n        if (result !== undefined) {\n            this.cardObjectParsed(result, source);\n        }\n\n        return result;\n    }\n\n    parseElement(parent: CardElement | undefined, source: any, allowFallback: boolean): CardElement | undefined {\n        return this.parseCardObject<CardElement>(\n            parent,\n            source,\n            [], // Forbidden types not supported for elements for now\n            allowFallback,\n            (typeName: string) => {\n                return this.elementRegistry.createInstance(typeName, this.targetVersion);\n            },\n            (typeName: string, errorType: Enums.TypeErrorType) => {\n                if (errorType === Enums.TypeErrorType.UnknownType) {\n                    this.logParseEvent(\n                        undefined,\n                        Enums.ValidationEvent.UnknownElementType,\n                        Strings.errors.unknownElementType(typeName));\n                }\n                else {\n                    this.logParseEvent(\n                        undefined,\n                        Enums.ValidationEvent.ElementTypeNotAllowed,\n                        Strings.errors.elementTypeNotAllowed(typeName));\n                }\n            });\n    }\n\n    parseAction(\n        parent: CardElement,\n        source: any,\n        forbiddenActionTypes: string[],\n        allowFallback: boolean): Action | undefined {\n        return this.parseCardObject<Action>(\n            parent,\n            source,\n            forbiddenActionTypes,\n            allowFallback,\n            (typeName: string) => {\n                return this.actionRegistry.createInstance(typeName, this.targetVersion);\n            },\n            (typeName: string, errorType: Enums.TypeErrorType) => {\n                if (errorType == Enums.TypeErrorType.UnknownType) {\n                    this.logParseEvent(\n                        undefined,\n                        Enums.ValidationEvent.UnknownActionType,\n                        Strings.errors.unknownActionType(typeName));\n                }\n                else {\n                    this.logParseEvent(\n                        undefined,\n                        Enums.ValidationEvent.ActionTypeNotAllowed,\n                        Strings.errors.actionTypeNotAllowed(typeName));\n                }\n            });\n    }\n\n    get elementRegistry(): CardObjectRegistry<CardElement> {\n        return this._elementRegistry ? this._elementRegistry : GlobalRegistry.elements;\n    }\n\n    // Not using a property setter here because the setter should accept \"undefined\"\n    // whereas the getter should never return undefined.\n    setElementRegistry(value: CardObjectRegistry<CardElement> | undefined) {\n        this._elementRegistry = value;\n    }\n\n    get actionRegistry(): CardObjectRegistry<Action> {\n        return this._actionRegistry ? this._actionRegistry : GlobalRegistry.actions;\n    }\n\n    // Not using a property setter here because the setter should accept \"undefined\"\n    // whereas the getter should never return undefined.\n    setActionRegistry(value: CardObjectRegistry<Action> | undefined) {\n        this._actionRegistry = value;\n    }\n}\n\nGlobalRegistry.defaultElements.register(\"Container\", Container);\nGlobalRegistry.defaultElements.register(\"TextBlock\", TextBlock);\nGlobalRegistry.defaultElements.register(\"RichTextBlock\", RichTextBlock, Versions.v1_2);\nGlobalRegistry.defaultElements.register(\"TextRun\", TextRun, Versions.v1_2);\nGlobalRegistry.defaultElements.register(\"Image\", Image);\nGlobalRegistry.defaultElements.register(\"ImageSet\", ImageSet);\nGlobalRegistry.defaultElements.register(\"Media\", Media, Versions.v1_1);\nGlobalRegistry.defaultElements.register(\"FactSet\", FactSet);\nGlobalRegistry.defaultElements.register(\"ColumnSet\", ColumnSet);\nGlobalRegistry.defaultElements.register(\"ActionSet\", ActionSet, Versions.v1_2);\nGlobalRegistry.defaultElements.register(\"Input.Text\", TextInput);\nGlobalRegistry.defaultElements.register(\"Input.Date\", DateInput);\nGlobalRegistry.defaultElements.register(\"Input.Time\", TimeInput);\nGlobalRegistry.defaultElements.register(\"Input.Number\", NumberInput);\nGlobalRegistry.defaultElements.register(\"Input.ChoiceSet\", ChoiceSetInput);\nGlobalRegistry.defaultElements.register(\"Input.Toggle\", ToggleInput);\n\nGlobalRegistry.defaultActions.register(OpenUrlAction.JsonTypeName, OpenUrlAction);\nGlobalRegistry.defaultActions.register(SubmitAction.JsonTypeName, SubmitAction);\nGlobalRegistry.defaultActions.register(ShowCardAction.JsonTypeName, ShowCardAction);\nGlobalRegistry.defaultActions.register(ToggleVisibilityAction.JsonTypeName, ToggleVisibilityAction, Versions.v1_2);\nGlobalRegistry.defaultActions.register(ExecuteAction.JsonTypeName, ExecuteAction, Versions.v1_4);\n"]},"metadata":{},"sourceType":"script"}