{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createCustomEvent;\n\nvar _botframeworkWebchatCore = require(\"botframework-webchat-core\");\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction createCustomEvent(name, eventInitDict) {\n  var event;\n\n  if (typeof CustomEvent === 'function') {\n    event = new CustomEvent(name);\n  } else {\n    event = document.createEvent('Event');\n    event.initEvent(name, true, true);\n  }\n\n  Object.entries(eventInitDict).forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    if (!(0, _botframeworkWebchatCore.isForbiddenPropertyName)(key)) {\n      // Mitigation through denylisting.\n      // eslint-disable-next-line security/detect-object-injection\n      event[key] = value;\n    }\n  });\n  return event;\n}","map":{"version":3,"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEe,SAASA,iBAAT,CACbC,IADa,EAEbC,aAFa,EAKT;AACJ,MAAIC,KAAJ;;AAEA,MAAI,OAAOC,WAAP,KAAuB,UAA3B,EAAuC;AACrCD,SAAK,GAAG,IAAIC,WAAJ,CAAgBH,IAAhB,CAARE;AADF,SAEO;AACLA,SAAK,GAAGE,QAAQ,CAACC,WAATD,CAAqB,OAArBA,CAARF;AAEAA,SAAK,CAACI,SAANJ,CAAgBF,IAAhBE,EAAsB,IAAtBA,EAA4B,IAA5BA;AACD;;AAEDK,QAAM,CAACC,OAAPD,CAAeN,aAAfM,EAA8BE,OAA9BF,CAAsC,gBAAkB;AAAA;AAAA,QAAhBG,GAAgB;AAAA,QAAXC,KAAW;;AACtD,QAAI,CAAC,sDAAwBD,GAAxB,CAAL,EAAmC;AACjC;AACA;AACAR,WAAK,CAACQ,GAAD,CAALR,GAAaS,KAAbT;AACD;AALH;AAQA,SAAOA,KAAP;AACD","names":["createCustomEvent","name","eventInitDict","event","CustomEvent","document","createEvent","initEvent","Object","entries","forEach","key","value"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-api/lib/src/utils/createCustomEvent.ts"],"sourcesContent":["import { isForbiddenPropertyName } from 'botframework-webchat-core';\n\nexport default function createCustomEvent<T>(\n  name: string,\n  eventInitDict: T\n): {\n  type: string;\n} & T {\n  let event: Event;\n\n  if (typeof CustomEvent === 'function') {\n    event = new CustomEvent(name);\n  } else {\n    event = document.createEvent('Event');\n\n    event.initEvent(name, true, true);\n  }\n\n  Object.entries(eventInitDict).forEach(([key, value]) => {\n    if (!isForbiddenPropertyName(key)) {\n      // Mitigation through denylisting.\n      // eslint-disable-next-line security/detect-object-injection\n      event[key] = value;\n    }\n  });\n\n  return event as any;\n}\n"]},"metadata":{},"sourceType":"script"}