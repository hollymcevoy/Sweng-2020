{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useRegisterFocusTranscript;\n\nvar _react = require(\"react\");\n\nvar _removeInline = _interopRequireDefault(require(\"../../Utils/removeInline\"));\n\nvar _useWebChatUIContext2 = _interopRequireDefault(require(\"./useWebChatUIContext\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // This hook is for registering and unregister a callback, used by <BasicTranscript>.\n// When called, the callback should focus on the transcript.\n\n\nfunction useRegisterFocusTranscript(callback) {\n  var _useWebChatUIContext = (0, _useWebChatUIContext2.default)(),\n      focusTranscriptCallbacksRef = _useWebChatUIContext.focusTranscriptCallbacksRef;\n\n  (0, _react.useEffect)(function () {\n    if (callback) {\n      var focusTranscriptCallbacks = focusTranscriptCallbacksRef.current;\n      focusTranscriptCallbacks.push(callback);\n      return function () {\n        return (0, _removeInline.default)(focusTranscriptCallbacks, callback);\n      };\n    }\n  }, [callback, focusTranscriptCallbacksRef]);\n}","map":{"version":3,"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;;;EAEA;AACA;;;AAEe,SAASA,0BAAT,CAAoCC,QAApC,EAA8C;AAC3D,6BAAwC,oCAAxC;AAAA,MAAQC,2BAAR,wBAAQA,2BAAR;;AAEA,wBAAU,YAAM;AACd,QAAID,QAAJ,EAAc;AACZ,UAAiBE,wBAAjB,GAA8CD,2BAA9C,CAAQE,OAAR;AAEAD,8BAAwB,CAACE,IAAzBF,CAA8BF,QAA9BE;AAEA,aAAO;AAAA,eAAM,2BAAaA,wBAAb,EAAuCF,QAAvC,CAAN;AAAP;AACD;AAPH,KAQG,CAACA,QAAD,EAAWC,2BAAX,CARH;AASD","names":["useRegisterFocusTranscript","callback","focusTranscriptCallbacksRef","focusTranscriptCallbacks","current","push"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-component/lib/src/hooks/internal/useRegisterFocusTranscript.js"],"sourcesContent":["import { useEffect } from 'react';\n\nimport removeInline from '../../Utils/removeInline';\nimport useWebChatUIContext from './useWebChatUIContext';\n\n// This hook is for registering and unregister a callback, used by <BasicTranscript>.\n// When called, the callback should focus on the transcript.\n\nexport default function useRegisterFocusTranscript(callback) {\n  const { focusTranscriptCallbacksRef } = useWebChatUIContext();\n\n  useEffect(() => {\n    if (callback) {\n      const { current: focusTranscriptCallbacks } = focusTranscriptCallbacksRef;\n\n      focusTranscriptCallbacks.push(callback);\n\n      return () => removeInline(focusTranscriptCallbacks, callback);\n    }\n  }, [callback, focusTranscriptCallbacksRef]);\n}\n"]},"metadata":{},"sourceType":"script"}