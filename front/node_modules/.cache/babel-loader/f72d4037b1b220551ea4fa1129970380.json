{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useRef } from 'react';\nimport useDir from './hooks/useDir';\nimport useScrollBarPercentage from './hooks/useScrollBarPercentage';\nimport useScrollOneLeft from './hooks/useScrollOneLeft';\nimport useScrollOneRight from './hooks/useScrollOneRight';\n\nvar Flipper = function Flipper(_ref) {\n  var ariaLabel = _ref['aria-label'],\n      blurFocusOnClick = _ref.blurFocusOnClick,\n      children = _ref.children,\n      mode = _ref.mode;\n\n  var _useDir = useDir(),\n      _useDir2 = _slicedToArray(_useDir, 1),\n      dir = _useDir2[0];\n\n  var _useScrollBarPercenta = useScrollBarPercentage(),\n      _useScrollBarPercenta2 = _slicedToArray(_useScrollBarPercenta, 1),\n      scrollBarPercentage = _useScrollBarPercenta2[0];\n\n  var buttonRef = useRef();\n  var left = mode === 'left';\n  var scrollOneLeft = useScrollOneLeft();\n  var scrollOneRight = useScrollOneRight();\n  var handleClick = useCallback(function () {\n    left ? scrollOneLeft() : scrollOneRight();\n    blurFocusOnClick && buttonRef.current && buttonRef.current.blur();\n  }, [blurFocusOnClick, buttonRef, left, scrollOneLeft, scrollOneRight]);\n  var handleKeyDown = useCallback(function (event) {\n    var key = event.key;\n\n    if (key === 'Enter' || key === ' ') {\n      event.preventDefault();\n      left ? scrollOneLeft() : scrollOneRight();\n    }\n  }, [left, scrollOneLeft, scrollOneRight]);\n  var hide;\n\n  if (dir === 'rtl') {\n    if (left) {\n      hide = scrollBarPercentage === '100%' || scrollBarPercentage === '-100%';\n    } else {\n      hide = scrollBarPercentage === '0%';\n    }\n  } else {\n    if (left) {\n      hide = scrollBarPercentage === '0%';\n    } else {\n      hide = scrollBarPercentage === '100%';\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    \"aria-label\": ariaLabel || (left ? 'left' : 'right'),\n    className: classNames('react-film__flipper', 'react-film__main__overlay', {\n      'react-film__flipper--left': left,\n      'react-film__flipper--right': !left\n    }),\n    onClick: handleClick,\n    onKeyDown: handleKeyDown,\n    ref: buttonRef,\n    type: \"button\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames('react-film__flipper__slider', 'react-film__main__slider', {\n      'react-film__main__slider--hide': hide,\n      'react-film__main__slider--left': left,\n      'react-film__main__slider--right': !left\n    })\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"react-film__flipper__body\"\n  }, children)));\n};\n\nFlipper.defaultProps = {\n  'aria-label': undefined,\n  blurFocusOnClick: false,\n  children: undefined,\n  mode: 'left'\n};\nFlipper.propTypes = {\n  'aria-label': PropTypes.string,\n  blurFocusOnClick: PropTypes.bool,\n  children: PropTypes.any,\n  mode: PropTypes.oneOf(['left', 'right'])\n};\nexport default Flipper;","map":{"version":3,"mappings":"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","names":["classNames","PropTypes","React","useCallback","useRef","useDir","useScrollBarPercentage","useScrollOneLeft","useScrollOneRight","Flipper","ariaLabel","blurFocusOnClick","children","mode","dir","scrollBarPercentage","buttonRef","left","scrollOneLeft","scrollOneRight","handleClick","current","blur","handleKeyDown","key","event","preventDefault","hide","className","onClick","onKeyDown","ref","type","defaultProps","undefined","propTypes","string","bool","any","oneOf"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/react-film/src/Flipper.js"],"sourcesContent":["import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useRef } from 'react';\n\nimport useDir from './hooks/useDir';\nimport useScrollBarPercentage from './hooks/useScrollBarPercentage';\nimport useScrollOneLeft from './hooks/useScrollOneLeft';\nimport useScrollOneRight from './hooks/useScrollOneRight';\n\nconst Flipper = ({ 'aria-label': ariaLabel, blurFocusOnClick, children, mode }) => {\n  const [dir] = useDir();\n  const [scrollBarPercentage] = useScrollBarPercentage();\n  const buttonRef = useRef();\n  const left = mode === 'left';\n  const scrollOneLeft = useScrollOneLeft();\n  const scrollOneRight = useScrollOneRight();\n\n  const handleClick = useCallback(() => {\n    left ? scrollOneLeft() : scrollOneRight();\n    blurFocusOnClick && buttonRef.current && buttonRef.current.blur();\n  }, [blurFocusOnClick, buttonRef, left, scrollOneLeft, scrollOneRight]);\n\n  const handleKeyDown = useCallback(\n    event => {\n      const { key } = event;\n\n      if (key === 'Enter' || key === ' ') {\n        event.preventDefault();\n        left ? scrollOneLeft() : scrollOneRight();\n      }\n    },\n    [left, scrollOneLeft, scrollOneRight]\n  );\n\n  let hide;\n\n  if (dir === 'rtl') {\n    if (left) {\n      hide = scrollBarPercentage === '100%' || scrollBarPercentage === '-100%';\n    } else {\n      hide = scrollBarPercentage === '0%';\n    }\n  } else {\n    if (left) {\n      hide = scrollBarPercentage === '0%';\n    } else {\n      hide = scrollBarPercentage === '100%';\n    }\n  }\n\n  return (\n    <button\n      aria-label={ariaLabel || (left ? 'left' : 'right')}\n      className={classNames('react-film__flipper', 'react-film__main__overlay', {\n        'react-film__flipper--left': left,\n        'react-film__flipper--right': !left\n      })}\n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n      ref={buttonRef}\n      type=\"button\"\n    >\n      <div\n        className={classNames('react-film__flipper__slider', 'react-film__main__slider', {\n          'react-film__main__slider--hide': hide,\n          'react-film__main__slider--left': left,\n          'react-film__main__slider--right': !left\n        })}\n      >\n        <div className=\"react-film__flipper__body\">{children}</div>\n      </div>\n    </button>\n  );\n};\n\nFlipper.defaultProps = {\n  'aria-label': undefined,\n  blurFocusOnClick: false,\n  children: undefined,\n  mode: 'left'\n};\n\nFlipper.propTypes = {\n  'aria-label': PropTypes.string,\n  blurFocusOnClick: PropTypes.bool,\n  children: PropTypes.any,\n  mode: PropTypes.oneOf(['left', 'right'])\n};\n\nexport default Flipper;\n"]},"metadata":{},"sourceType":"module"}