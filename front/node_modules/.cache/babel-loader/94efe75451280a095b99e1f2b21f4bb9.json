{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = observeOnceEffect;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _effects = require(\"redux-saga/effects\");\n\nfunction observeOnceEffect(observable) {\n  return (0, _effects.call)( /*#__PURE__*/_regenerator[\"default\"].mark(function observeOnce() {\n    var subscription;\n    return _regenerator[\"default\"].wrap(function observeOnce$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return (0, _effects.call)(function () {\n              return new Promise(function (resolve, reject) {\n                subscription = observable.subscribe({\n                  complete: resolve,\n                  error: reject,\n                  next: resolve\n                });\n              });\n            });\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 4:\n            _context.prev = 4;\n            subscription && subscription.unsubscribe();\n            return _context.finish(4);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, observeOnce, null, [[0,, 4, 7]]);\n  }));\n}","map":{"version":3,"mappings":";;;;;;;;;;;AAAA;;AAEe,SAASA,iBAAT,CAA2BC,UAA3B,EAAuC;AACpD,SAAO,8DAAK,SAAUC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAAC;AAAAA;AAID,mBAAM,mBACX;AAAA,qBACE,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC/BC,4BAAY,GAAGN,UAAU,CAACO,SAAXP,CAAqB;AAClCQ,0BAAQ,EAAEJ,OADwB;AAElCK,uBAAK,EAAEJ,MAF2B;AAGlCK,sBAAI,EAAEN;AAH4B,iBAArBJ,CAAfM;AADF,gBADF;AADW,cAAN;;AAJC;AAAA;;AAAA;AAAAJ;AAeRI,wBAAY,IAAIA,YAAY,CAACK,WAAbL,EAAhBA;AAfQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAUL,WAAV;AAAL,KAAP;AAkBD","names":["observeOnceEffect","observable","observeOnce","_context","Promise","resolve","reject","subscription","subscribe","complete","error","next","unsubscribe"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-core/lib/src/sagas/effects/observeOnce.js"],"sourcesContent":["import { call } from 'redux-saga/effects';\n\nexport default function observeOnceEffect(observable) {\n  return call(function* observeOnce() {\n    let subscription;\n\n    try {\n      return yield call(\n        () =>\n          new Promise((resolve, reject) => {\n            subscription = observable.subscribe({\n              complete: resolve,\n              error: reject,\n              next: resolve\n            });\n          })\n      );\n    } finally {\n      subscription && subscription.unsubscribe();\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"script"}