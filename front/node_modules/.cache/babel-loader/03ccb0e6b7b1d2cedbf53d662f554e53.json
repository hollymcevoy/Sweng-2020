{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = tabbableElements;\n\nfunction tabbableElements(element) {\n  // This is an incomplete list, due to the complexity of testing for every scenario.\n  // For full-list, please refer to https://allyjs.io/data-tables/focusable.html\n  var candidates = (element === null || element === void 0 ? void 0 : element.querySelectorAll('a[href], area[href], audio[controls], button:not(:disabled), iframe, input:not(:disabled), keygen, select:not(:disabled), summary, textarea:not(:disabled), video[controls], [contenteditable], [tabindex]')) || [];\n  return [].filter.call(candidates, function (element) {\n    var tabIndexAttribute = element.attributes.getNamedItem('tabindex');\n\n    if (tabIndexAttribute && tabIndexAttribute.specified) {\n      var value = parseInt(tabIndexAttribute.value, 10);\n      return value >= 0 || isNaN(value) && element.nodeName.toLowerCase() === 'input';\n    }\n\n    return true;\n  });\n}","map":{"version":3,"mappings":";;;;;;;AAAe,SAASA,gBAAT,CAA0BC,OAA1B,EAAgE;AAC7E;AACA;AACA,MAAMC,UAAkC,GACtC,QAAO,SAAPD,WAAO,WAAPA,mBAAO,CAAEE,gBAATF,CACE,4MADFA,MAEK,EAHP;AAKA,SAAQ,GAAqBG,MAArB,CAA4BC,IAA5B,CAAiCH,UAAjC,EAA6C,UAACD,OAAD,EAA0B;AAC7E,QAAMK,iBAAiB,GAAGL,OAAO,CAACM,UAARN,CAAmBO,YAAnBP,CAAgC,UAAhCA,CAA1B;;AAEA,QAAIK,iBAAiB,IAAIA,iBAAiB,CAACG,SAA3C,EAAsD;AACpD,UAAMC,KAAK,GAAGC,QAAQ,CAACL,iBAAiB,CAACI,KAAnB,EAA0B,EAA1B,CAAtB;AAEA,aAAOA,KAAK,IAAI,CAATA,IAAeE,KAAK,CAACF,KAAD,CAALE,IAAgBX,OAAO,CAACY,QAARZ,CAAiBa,WAAjBb,OAAmC,OAAzE;AACD;;AAED,WAAO,IAAP;AATK,GAAC,CAAR;AAWD","names":["tabbableElements","element","candidates","querySelectorAll","filter","call","tabIndexAttribute","attributes","getNamedItem","specified","value","parseInt","isNaN","nodeName","toLowerCase"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-component/lib/src/Utils/tabbableElements.ts"],"sourcesContent":["export default function tabbableElements(element?: HTMLElement): HTMLElement[] {\n  // This is an incomplete list, due to the complexity of testing for every scenario.\n  // For full-list, please refer to https://allyjs.io/data-tables/focusable.html\n  const candidates: ArrayLike<HTMLElement> =\n    element?.querySelectorAll(\n      'a[href], area[href], audio[controls], button:not(:disabled), iframe, input:not(:disabled), keygen, select:not(:disabled), summary, textarea:not(:disabled), video[controls], [contenteditable], [tabindex]'\n    ) || [];\n\n  return ([] as HTMLElement[]).filter.call(candidates, (element: HTMLElement) => {\n    const tabIndexAttribute = element.attributes.getNamedItem('tabindex');\n\n    if (tabIndexAttribute && tabIndexAttribute.specified) {\n      const value = parseInt(tabIndexAttribute.value, 10);\n\n      return value >= 0 || (isNaN(value) && element.nodeName.toLowerCase() === 'input');\n    }\n\n    return true;\n  });\n}\n"]},"metadata":{},"sourceType":"script"}