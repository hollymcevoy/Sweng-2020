{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = sagas;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _effects = require(\"redux-saga/effects\");\n\nvar _clearSuggestedActionsOnPostActivitySaga = _interopRequireDefault(require(\"./sagas/clearSuggestedActionsOnPostActivitySaga\"));\n\nvar _connectionStatusToNotificationSaga = _interopRequireDefault(require(\"./sagas/connectionStatusToNotificationSaga\"));\n\nvar _connectionStatusUpdateSaga = _interopRequireDefault(require(\"./sagas/connectionStatusUpdateSaga\"));\n\nvar _connectSaga = _interopRequireDefault(require(\"./sagas/connectSaga\"));\n\nvar _detectSlowConnectionSaga = _interopRequireDefault(require(\"./sagas/detectSlowConnectionSaga\"));\n\nvar _emitTypingIndicatorToPostActivitySaga = _interopRequireDefault(require(\"./sagas/emitTypingIndicatorToPostActivitySaga\"));\n\nvar _markAllAsSpokenOnStopSpeakActivitySaga = _interopRequireDefault(require(\"./sagas/markAllAsSpokenOnStopSpeakActivitySaga\"));\n\nvar _observeActivitySaga = _interopRequireDefault(require(\"./sagas/observeActivitySaga\"));\n\nvar _postActivitySaga = _interopRequireDefault(require(\"./sagas/postActivitySaga\"));\n\nvar _queueIncomingActivitySaga = _interopRequireDefault(require(\"./sagas/queueIncomingActivitySaga\"));\n\nvar _sendEventToPostActivitySaga = _interopRequireDefault(require(\"./sagas/sendEventToPostActivitySaga\"));\n\nvar _sendFilesToPostActivitySaga = _interopRequireDefault(require(\"./sagas/sendFilesToPostActivitySaga\"));\n\nvar _sendMessageBackToPostActivitySaga = _interopRequireDefault(require(\"./sagas/sendMessageBackToPostActivitySaga\"));\n\nvar _sendMessageToPostActivitySaga = _interopRequireDefault(require(\"./sagas/sendMessageToPostActivitySaga\"));\n\nvar _sendPostBackToPostActivitySaga = _interopRequireDefault(require(\"./sagas/sendPostBackToPostActivitySaga\"));\n\nvar _sendTypingIndicatorOnSetSendBoxSaga = _interopRequireDefault(require(\"./sagas/sendTypingIndicatorOnSetSendBoxSaga\"));\n\nvar _speakActivityAndStartDictateOnIncomingActivityFromOthersSaga = _interopRequireDefault(require(\"./sagas/speakActivityAndStartDictateOnIncomingActivityFromOthersSaga\"));\n\nvar _startDictateOnSpeakCompleteSaga = _interopRequireDefault(require(\"./sagas/startDictateOnSpeakCompleteSaga\"));\n\nvar _startSpeakActivityOnPostActivitySaga = _interopRequireDefault(require(\"./sagas/startSpeakActivityOnPostActivitySaga\"));\n\nvar _stopDictateOnCardActionSaga = _interopRequireDefault(require(\"./sagas/stopDictateOnCardActionSaga\"));\n\nvar _stopSpeakingActivityOnInputSaga = _interopRequireDefault(require(\"./sagas/stopSpeakingActivityOnInputSaga\"));\n\nvar _submitSendBoxSaga = _interopRequireDefault(require(\"./sagas/submitSendBoxSaga\"));\n\nvar _marked = /*#__PURE__*/_regenerator[\"default\"].mark(sagas);\n\nfunction sagas() {\n  return _regenerator[\"default\"].wrap(function sagas$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return (0, _effects.fork)(_clearSuggestedActionsOnPostActivitySaga[\"default\"]);\n\n        case 2:\n          _context.next = 4;\n          return (0, _effects.fork)(_connectionStatusToNotificationSaga[\"default\"]);\n\n        case 4:\n          _context.next = 6;\n          return (0, _effects.fork)(_connectionStatusUpdateSaga[\"default\"]);\n\n        case 6:\n          _context.next = 8;\n          return (0, _effects.fork)(_connectSaga[\"default\"]);\n\n        case 8:\n          _context.next = 10;\n          return (0, _effects.fork)(_detectSlowConnectionSaga[\"default\"]);\n\n        case 10:\n          _context.next = 12;\n          return (0, _effects.fork)(_emitTypingIndicatorToPostActivitySaga[\"default\"]);\n\n        case 12:\n          _context.next = 14;\n          return (0, _effects.fork)(_markAllAsSpokenOnStopSpeakActivitySaga[\"default\"]);\n\n        case 14:\n          _context.next = 16;\n          return (0, _effects.fork)(_observeActivitySaga[\"default\"]);\n\n        case 16:\n          _context.next = 18;\n          return (0, _effects.fork)(_postActivitySaga[\"default\"]);\n\n        case 18:\n          _context.next = 20;\n          return (0, _effects.fork)(_queueIncomingActivitySaga[\"default\"]);\n\n        case 20:\n          _context.next = 22;\n          return (0, _effects.fork)(_sendEventToPostActivitySaga[\"default\"]);\n\n        case 22:\n          _context.next = 24;\n          return (0, _effects.fork)(_sendFilesToPostActivitySaga[\"default\"]);\n\n        case 24:\n          _context.next = 26;\n          return (0, _effects.fork)(_sendMessageBackToPostActivitySaga[\"default\"]);\n\n        case 26:\n          _context.next = 28;\n          return (0, _effects.fork)(_sendMessageToPostActivitySaga[\"default\"]);\n\n        case 28:\n          _context.next = 30;\n          return (0, _effects.fork)(_sendPostBackToPostActivitySaga[\"default\"]);\n\n        case 30:\n          _context.next = 32;\n          return (0, _effects.fork)(_sendTypingIndicatorOnSetSendBoxSaga[\"default\"]);\n\n        case 32:\n          _context.next = 34;\n          return (0, _effects.fork)(_speakActivityAndStartDictateOnIncomingActivityFromOthersSaga[\"default\"]);\n\n        case 34:\n          _context.next = 36;\n          return (0, _effects.fork)(_startDictateOnSpeakCompleteSaga[\"default\"]);\n\n        case 36:\n          _context.next = 38;\n          return (0, _effects.fork)(_startSpeakActivityOnPostActivitySaga[\"default\"]);\n\n        case 38:\n          _context.next = 40;\n          return (0, _effects.fork)(_stopDictateOnCardActionSaga[\"default\"]);\n\n        case 40:\n          _context.next = 42;\n          return (0, _effects.fork)(_stopSpeakingActivityOnInputSaga[\"default\"]);\n\n        case 42:\n          _context.next = 44;\n          return (0, _effects.fork)(_submitSendBoxSaga[\"default\"]);\n\n        case 44:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"mappings":";;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;wDAEyBA;;AAAV,SAAUA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAAC;AAGb,iBAAM,mBAAKC,mDAAL,CAAN;;AAHa;AAAAD;AAIb,iBAAM,mBAAKE,8CAAL,CAAN;;AAJa;AAAAF;AAKb,iBAAM,mBAAKG,sCAAL,CAAN;;AALa;AAAAH;AAMb,iBAAM,mBAAKI,uBAAL,CAAN;;AANa;AAAAJ;AAOb,iBAAM,mBAAKK,oCAAL,CAAN;;AAPa;AAAAL;AAQb,iBAAM,mBAAKM,iDAAL,CAAN;;AARa;AAAAN;AASb,iBAAM,mBAAKO,kDAAL,CAAN;;AATa;AAAAP;AAUb,iBAAM,mBAAKQ,+BAAL,CAAN;;AAVa;AAAAR;AAWb,iBAAM,mBAAKS,4BAAL,CAAN;;AAXa;AAAAT;AAYb,iBAAM,mBAAKU,qCAAL,CAAN;;AAZa;AAAAV;AAab,iBAAM,mBAAKW,uCAAL,CAAN;;AAba;AAAAX;AAcb,iBAAM,mBAAKY,uCAAL,CAAN;;AAda;AAAAZ;AAeb,iBAAM,mBAAKa,6CAAL,CAAN;;AAfa;AAAAb;AAgBb,iBAAM,mBAAKc,yCAAL,CAAN;;AAhBa;AAAAd;AAiBb,iBAAM,mBAAKe,0CAAL,CAAN;;AAjBa;AAAAf;AAkBb,iBAAM,mBAAKgB,+CAAL,CAAN;;AAlBa;AAAAhB;AAmBb,iBAAM,mBAAKiB,wEAAL,CAAN;;AAnBa;AAAAjB;AAoBb,iBAAM,mBAAKkB,2CAAL,CAAN;;AApBa;AAAAlB;AAqBb,iBAAM,mBAAKmB,gDAAL,CAAN;;AArBa;AAAAnB;AAsBb,iBAAM,mBAAKoB,uCAAL,CAAN;;AAtBa;AAAApB;AAuBb,iBAAM,mBAAKqB,2CAAL,CAAN;;AAvBa;AAAArB;AAwBb,iBAAM,mBAAKsB,6BAAL,CAAN;;AAxBa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","names":["sagas","_context","clearSuggestedActionsOnPostActivitySaga","connectionStatusToNotificationSaga","connectionStatusUpdateSaga","connectSaga","detectSlowConnectionSaga","emitTypingIndicatorToPostActivitySaga","markAllAsSpokenOnStopSpeakActivitySaga","observeActivitySaga","postActivitySaga","queueIncomingActivitySaga","sendEventToPostActivitySaga","sendFilesToPostActivitySaga","sendMessageBackToPostActivitySaga","sendMessageToPostActivitySaga","sendPostBackToPostActivitySaga","sendTypingIndicatorOnSetSendBoxSaga","speakActivityAndStartDictateOnIncomingActivityFromOthersSaga","startDictateOnSpeakCompleteSaga","startSpeakActivityOnPostActivitySaga","stopDictateOnCardActionSaga","stopSpeakingActivityOnInputSaga","submitSendBoxSaga"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-core/lib/src/sagas.js"],"sourcesContent":["import { fork } from 'redux-saga/effects';\n\nimport clearSuggestedActionsOnPostActivitySaga from './sagas/clearSuggestedActionsOnPostActivitySaga';\nimport connectionStatusToNotificationSaga from './sagas/connectionStatusToNotificationSaga';\nimport connectionStatusUpdateSaga from './sagas/connectionStatusUpdateSaga';\nimport connectSaga from './sagas/connectSaga';\nimport detectSlowConnectionSaga from './sagas/detectSlowConnectionSaga';\nimport emitTypingIndicatorToPostActivitySaga from './sagas/emitTypingIndicatorToPostActivitySaga';\nimport markAllAsSpokenOnStopSpeakActivitySaga from './sagas/markAllAsSpokenOnStopSpeakActivitySaga';\nimport observeActivitySaga from './sagas/observeActivitySaga';\nimport postActivitySaga from './sagas/postActivitySaga';\nimport queueIncomingActivitySaga from './sagas/queueIncomingActivitySaga';\nimport sendEventToPostActivitySaga from './sagas/sendEventToPostActivitySaga';\nimport sendFilesToPostActivitySaga from './sagas/sendFilesToPostActivitySaga';\nimport sendMessageBackToPostActivitySaga from './sagas/sendMessageBackToPostActivitySaga';\nimport sendMessageToPostActivitySaga from './sagas/sendMessageToPostActivitySaga';\nimport sendPostBackToPostActivitySaga from './sagas/sendPostBackToPostActivitySaga';\nimport sendTypingIndicatorOnSetSendBoxSaga from './sagas/sendTypingIndicatorOnSetSendBoxSaga';\nimport speakActivityAndStartDictateOnIncomingActivityFromOthersSaga from './sagas/speakActivityAndStartDictateOnIncomingActivityFromOthersSaga';\nimport startDictateOnSpeakCompleteSaga from './sagas/startDictateOnSpeakCompleteSaga';\nimport startSpeakActivityOnPostActivitySaga from './sagas/startSpeakActivityOnPostActivitySaga';\nimport stopDictateOnCardActionSaga from './sagas/stopDictateOnCardActionSaga';\nimport stopSpeakingActivityOnInputSaga from './sagas/stopSpeakingActivityOnInputSaga';\nimport submitSendBoxSaga from './sagas/submitSendBoxSaga';\n\nexport default function* sagas() {\n  // TODO: [P2] Since fork() silently catches all exceptions, we need to find a way to console.error them out.\n\n  yield fork(clearSuggestedActionsOnPostActivitySaga);\n  yield fork(connectionStatusToNotificationSaga);\n  yield fork(connectionStatusUpdateSaga);\n  yield fork(connectSaga);\n  yield fork(detectSlowConnectionSaga);\n  yield fork(emitTypingIndicatorToPostActivitySaga);\n  yield fork(markAllAsSpokenOnStopSpeakActivitySaga);\n  yield fork(observeActivitySaga);\n  yield fork(postActivitySaga);\n  yield fork(queueIncomingActivitySaga);\n  yield fork(sendEventToPostActivitySaga);\n  yield fork(sendFilesToPostActivitySaga);\n  yield fork(sendMessageBackToPostActivitySaga);\n  yield fork(sendMessageToPostActivitySaga);\n  yield fork(sendPostBackToPostActivitySaga);\n  yield fork(sendTypingIndicatorOnSetSendBoxSaga);\n  yield fork(speakActivityAndStartDictateOnIncomingActivityFromOthersSaga);\n  yield fork(startDictateOnSpeakCompleteSaga);\n  yield fork(startSpeakActivityOnPostActivitySaga);\n  yield fork(stopDictateOnCardActionSaga);\n  yield fork(stopSpeakingActivityOnInputSaga);\n  yield fork(submitSendBoxSaga);\n}\n"]},"metadata":{},"sourceType":"script"}