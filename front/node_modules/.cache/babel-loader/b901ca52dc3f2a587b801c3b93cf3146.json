{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = require(\"react\");\n\nvar ActivityAcknowledgementContext = /*#__PURE__*/(0, _react.createContext)(undefined);\nvar _default = ActivityAcknowledgementContext;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAaA,IAAMA,8BAA8B,gBAAG,0BAAkDC,SAAlD,CAAvC;eAEeD","names":["ActivityAcknowledgementContext","undefined"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-api/lib/src/providers/ActivityAcknowledgement/private/Context.ts"],"sourcesContent":["import { createContext } from 'react';\n\n// TODO: [P1] It seems acknowledgement is only for transcript scrolling and not very beneficial to everyone.\n//            We should move acknowledgement logic to transcript.\ntype ActivityAcknowledgementContextType = {\n  activityKeysByReadState: readonly [readonly string[], readonly string[]];\n  getHasAcknowledgedByActivityKey: (activityKey: string) => boolean | undefined;\n  lastAcknowledgedActivityKeyState: readonly [string];\n  lastReadActivityKeyState: readonly [string];\n  markActivityKeyAsRead: (activityKey: string) => void;\n  markAllAsAcknowledged: () => void;\n};\n\nconst ActivityAcknowledgementContext = createContext<ActivityAcknowledgementContextType>(undefined);\n\nexport default ActivityAcknowledgementContext;\n\nexport type { ActivityAcknowledgementContextType };\n"]},"metadata":{},"sourceType":"script"}