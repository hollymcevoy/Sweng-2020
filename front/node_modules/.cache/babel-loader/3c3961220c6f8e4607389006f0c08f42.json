{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _excluded = [\"aria-hidden\", \"children\", \"disabled\", \"onClick\", \"tabIndex\"];\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar PREVENT_DEFAULT_HANDLER = function PREVENT_DEFAULT_HANDLER(event) {\n  return event.preventDefault();\n}; // Differences between <button> and <AccessibleButton>:\n// - Disable behavior\n//   - When the widget is disabled\n//     - Set \"aria-disabled\" attribute to \"true\"\n//     - Set \"readonly\" attribute\n//     - Set \"tabIndex\" to -1\n//     - Remove \"onClick\" handler\n//   - Why this is needed\n//     - Browser compatibility: when the widget is disabled, different browser send focus to different places\n//     - When the widget become disabled, it's reasonable to keep the focus on the same widget for an extended period of time\n//       - When the user presses TAB after the current widget is disabled, it should jump to the next non-disabled widget\n// Developers using this accessible widget will need to:\n// - Style the disabled widget themselves, using CSS query `:disabled, [aria-disabled=\"true\"] {}`\n// - Modify all code that check disabled through \"disabled\" attribute to use aria-disabled=\"true\" instead\n//   - aria-disabled=\"true\" is the source of truth\n// - If the widget is contained by a <form>, the developer need to filter out some `onSubmit` event caused by this widget\n\n\nvar AccessibleButton = /*#__PURE__*/(0, _react.forwardRef)(function (_ref, forwardedRef) {\n  var ariaHidden = _ref['aria-hidden'],\n      children = _ref.children,\n      disabled = _ref.disabled,\n      onClick = _ref.onClick,\n      tabIndex = _ref.tabIndex,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var targetRef = (0, _react.useRef)();\n  var ref = forwardedRef || targetRef;\n  return /*#__PURE__*/_react.default.createElement(\"button\", _extends({\n    \"aria-disabled\": disabled || undefined,\n    \"aria-hidden\": ariaHidden,\n    onClick: disabled ? PREVENT_DEFAULT_HANDLER : onClick,\n    ref: ref,\n    tabIndex: disabled ? -1 : tabIndex\n  }, props, {\n    type: \"button\"\n  }), children);\n});\nAccessibleButton.defaultProps = {\n  'aria-hidden': undefined,\n  children: undefined,\n  disabled: undefined,\n  onClick: undefined,\n  tabIndex: undefined\n};\nAccessibleButton.displayName = 'AccessibleButton';\nAccessibleButton.propTypes = {\n  'aria-hidden': _propTypes.default.bool,\n  children: _propTypes.default.any,\n  disabled: _propTypes.default.bool,\n  onClick: _propTypes.default.func,\n  tabIndex: _propTypes.default.number,\n  // TypeScript class is not mappable to PropTypes.oneOf(['button'])\n  // @ts-ignore\n  type: _propTypes.default.oneOf(['button']).isRequired\n};\nvar _default = AccessibleButton;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,uBAAuB,GAAG,SAA1BA,uBAA0B,QAAK;AAAA,SAAIC,KAAK,CAACC,cAAND,EAAJ;AAArC,E,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,IAAME,gBAAgB,gBAAG,uBACvB,gBAAiFC,YAAjF,EAAkG;AAAA,MAAhFC,UAAgF,QAA/F,aAA+F;AAAA,MAApEC,QAAoE,QAApEA,QAAoE;AAAA,MAA1DC,QAA0D,QAA1DA,QAA0D;AAAA,MAAhDC,OAAgD,QAAhDA,OAAgD;AAAA,MAAvCC,QAAuC,QAAvCA,QAAuC;AAAA,MAA1BC,KAA0B;;AAChG,MAAMC,SAAS,GAAG,oBAAlB;AAEA,MAAMC,GAAG,GAAGR,YAAY,IAAIO,SAA5B;AAEA,sBACEE;AACE,qBAAeN,QAAQ,IAAIO,SAD7B;AAEE,mBAAaT,UAFf;AAGEG,WAAO,EAAED,QAAQ,GAAGP,uBAAH,GAA6BQ,OAHhD;AAIEI,OAAG,EAAEA,GAJP;AAKEH,YAAQ,EAAEF,QAAQ,GAAG,CAAC,CAAJ,GAAQE;AAL5B,KAMMC,KANN;AAOEK,QAAI,EAAC;AAPP,MASGT,QATH,CADF;AANqB,EAAzB;AAsBAH,gBAAgB,CAACa,YAAjBb,GAAgC;AAC9B,iBAAeW,SADe;AAE9BR,UAAQ,EAAEQ,SAFoB;AAG9BP,UAAQ,EAAEO,SAHoB;AAI9BN,SAAO,EAAEM,SAJqB;AAK9BL,UAAQ,EAAEK;AALoB,CAAhCX;AAQAA,gBAAgB,CAACc,WAAjBd,GAA+B,kBAA/BA;AAEAA,gBAAgB,CAACe,SAAjBf,GAA6B;AAC3B,iBAAegB,mBAAUC,IADE;AAE3Bd,UAAQ,EAAEa,mBAAUE,GAFO;AAG3Bd,UAAQ,EAAEY,mBAAUC,IAHO;AAI3BZ,SAAO,EAAEW,mBAAUG,IAJQ;AAK3Bb,UAAQ,EAAEU,mBAAUI,MALO;AAM3B;AACA;AACAR,MAAI,EAAEI,mBAAUK,KAAVL,CAAgB,CAAC,QAAD,CAAhBA,EAA4BM;AARP,CAA7BtB;eAWeA","names":["PREVENT_DEFAULT_HANDLER","event","preventDefault","AccessibleButton","forwardedRef","ariaHidden","children","disabled","onClick","tabIndex","props","targetRef","ref","_react","undefined","type","defaultProps","displayName","propTypes","PropTypes","bool","any","func","number","oneOf","isRequired"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-component/lib/src/Utils/AccessibleButton.tsx"],"sourcesContent":["/* eslint no-magic-numbers: [\"error\", { \"ignore\": [-1] }] */\n\nimport PropTypes from 'prop-types';\nimport React, { forwardRef, MouseEventHandler, ReactNode, useRef } from 'react';\n\nconst PREVENT_DEFAULT_HANDLER = event => event.preventDefault();\n\ntype AccessibleButtonProps = {\n  'aria-hidden'?: boolean;\n  children?: ReactNode;\n  disabled?: boolean;\n  onClick?: MouseEventHandler<HTMLButtonElement>;\n  tabIndex?: number;\n  type: 'button';\n} & React.ButtonHTMLAttributes<HTMLButtonElement>;\n\n// Differences between <button> and <AccessibleButton>:\n// - Disable behavior\n//   - When the widget is disabled\n//     - Set \"aria-disabled\" attribute to \"true\"\n//     - Set \"readonly\" attribute\n//     - Set \"tabIndex\" to -1\n//     - Remove \"onClick\" handler\n//   - Why this is needed\n//     - Browser compatibility: when the widget is disabled, different browser send focus to different places\n//     - When the widget become disabled, it's reasonable to keep the focus on the same widget for an extended period of time\n//       - When the user presses TAB after the current widget is disabled, it should jump to the next non-disabled widget\n\n// Developers using this accessible widget will need to:\n// - Style the disabled widget themselves, using CSS query `:disabled, [aria-disabled=\"true\"] {}`\n// - Modify all code that check disabled through \"disabled\" attribute to use aria-disabled=\"true\" instead\n//   - aria-disabled=\"true\" is the source of truth\n// - If the widget is contained by a <form>, the developer need to filter out some `onSubmit` event caused by this widget\n\nconst AccessibleButton = forwardRef<HTMLButtonElement, AccessibleButtonProps>(\n  ({ 'aria-hidden': ariaHidden, children, disabled, onClick, tabIndex, ...props }, forwardedRef) => {\n    const targetRef = useRef();\n\n    const ref = forwardedRef || targetRef;\n\n    return (\n      <button\n        aria-disabled={disabled || undefined}\n        aria-hidden={ariaHidden}\n        onClick={disabled ? PREVENT_DEFAULT_HANDLER : onClick}\n        ref={ref}\n        tabIndex={disabled ? -1 : tabIndex}\n        {...props}\n        type=\"button\"\n      >\n        {children}\n      </button>\n    );\n  }\n);\n\nAccessibleButton.defaultProps = {\n  'aria-hidden': undefined,\n  children: undefined,\n  disabled: undefined,\n  onClick: undefined,\n  tabIndex: undefined\n};\n\nAccessibleButton.displayName = 'AccessibleButton';\n\nAccessibleButton.propTypes = {\n  'aria-hidden': PropTypes.bool,\n  children: PropTypes.any,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  tabIndex: PropTypes.number,\n  // TypeScript class is not mappable to PropTypes.oneOf(['button'])\n  // @ts-ignore\n  type: PropTypes.oneOf(['button']).isRequired\n};\n\nexport default AccessibleButton;\n"]},"metadata":{},"sourceType":"script"}