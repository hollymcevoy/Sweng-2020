{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = require(\"react\");\n\nvar _WebChatReduxContext = require(\"./internal/WebChatReduxContext\");\n\nvar _useForceRender = _interopRequireDefault(require(\"./internal/useForceRender\"));\n\nvar _useStyleOptions3 = _interopRequireDefault(require(\"./useStyleOptions\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction useActiveTyping(expireAfter) {\n  var now = Date.now();\n\n  var _useStyleOptions = (0, _useStyleOptions3.default)(),\n      _useStyleOptions2 = _slicedToArray(_useStyleOptions, 1),\n      typingAnimationDuration = _useStyleOptions2[0].typingAnimationDuration;\n\n  var forceRender = (0, _useForceRender.default)();\n  var typing = (0, _WebChatReduxContext.useSelector)(function (_ref) {\n    var typing = _ref.typing;\n    return typing;\n  });\n\n  if (typeof expireAfter !== 'number') {\n    expireAfter = typingAnimationDuration;\n  }\n\n  var activeTyping = Object.entries(typing).reduce(function (activeTyping, _ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        id = _ref3[0],\n        _ref3$ = _ref3[1],\n        at = _ref3$.at,\n        name = _ref3$.name,\n        role = _ref3$.role;\n\n    var until = at + expireAfter;\n\n    if (until > now) {\n      return _objectSpread(_objectSpread({}, activeTyping), {}, _defineProperty({}, id, {\n        at: at,\n        expireAt: until,\n        name: name,\n        role: role\n      }));\n    }\n\n    return activeTyping;\n  }, {});\n  var earliestExpireAt = Math.min.apply(Math, _toConsumableArray(Object.values(activeTyping).map(function (_ref4) {\n    var expireAt = _ref4.expireAt;\n    return expireAt;\n  })));\n  var timeToRender = earliestExpireAt && earliestExpireAt - now;\n  (0, _react.useEffect)(function () {\n    if (timeToRender && isFinite(timeToRender)) {\n      var timeout = setTimeout(forceRender, Math.max(0, timeToRender));\n      return function () {\n        return clearTimeout(timeout);\n      };\n    }\n  }, [forceRender, timeToRender]);\n  return [activeTyping];\n}\n\nvar _default = useActiveTyping;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAEA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,SAASA,eAAT,CAAyBC,WAAzB,EAA+E;AAC7E,MAAMC,GAAG,GAAGC,IAAI,CAACD,GAALC,EAAZ;;AAEA,yBAAsC,gCAAtC;AAAA;AAAA,MAASC,uBAAT,wBAASA,uBAAT;;AACA,MAAMC,WAAW,GAAG,8BAApB;AACA,MAAMC,MAAwE,GAAG,sCAAY;AAAA,QAAGA,MAAH,QAAGA,MAAH;AAAA,WAAgBA,MAAhB;AAAZ,IAAjF;;AAEA,MAAI,OAAOL,WAAP,KAAuB,QAA3B,EAAqC;AACnCA,eAAW,GAAGG,uBAAdH;AACD;;AAED,MAAMM,YAA0C,GAAGC,MAAM,CAACC,OAAPD,CAAeF,MAAfE,EAAuBE,MAAvBF,CACjD,UAACD,YAAD,SAA4C;AAAA;AAAA,QAA5BI,EAA4B;AAAA;AAAA,QAAtBC,EAAsB,UAAtBA,EAAsB;AAAA,QAAlBC,IAAkB,UAAlBA,IAAkB;AAAA,QAAZC,IAAY,UAAZA,IAAY;;AAC1C,QAAMC,KAAK,GAAGH,EAAE,GAAGX,WAAnB;;AAEA,QAAIc,KAAK,GAAGb,GAAZ,EAAiB;AACf,6CAAYK,YAAZ,2BAA2BI,EAA3B,EAAgC;AAAEC,UAAE,EAAFA,EAAF;AAAMI,gBAAQ,EAAED,KAAhB;AAAuBF,YAAI,EAAJA,IAAvB;AAA6BC,YAAI,EAAJA;AAA7B,OAAhC;AACD;;AAED,WAAOP,YAAP;AAR+C,KAUjD,EAViDC,CAAnD;AAaA,MAAMS,gBAAgB,GAAGC,IAAI,CAACC,GAALD,aAAIE,mBAAQZ,MAAM,CAACa,MAAPb,CAAcD,YAAdC,EAA4Bc,GAA5Bd,CAAgC;AAAA,QAAGQ,QAAH,SAAGA,QAAH;AAAA,WAAkBA,QAAlB;AAAhC,IAAR,CAAJE,CAAzB;AACA,MAAMK,YAAY,GAAGN,gBAAgB,IAAIA,gBAAgB,GAAGf,GAA5D;AAEA,wBAAU,YAAM;AACd,QAAIqB,YAAY,IAAIC,QAAQ,CAACD,YAAD,CAA5B,EAA4C;AAC1C,UAAME,OAAO,GAAGC,UAAU,CAACrB,WAAD,EAAca,IAAI,CAACS,GAALT,CAAS,CAATA,EAAYK,YAAZL,CAAd,CAA1B;AAEA,aAAO;AAAA,eAAMU,YAAY,CAACH,OAAD,CAAlB;AAAP;AACD;AALH,KAMG,CAACpB,WAAD,EAAckB,YAAd,CANH;AAQA,SAAO,CAAChB,YAAD,CAAP;AACD;;eAEcP","names":["useActiveTyping","expireAfter","now","Date","typingAnimationDuration","forceRender","typing","activeTyping","Object","entries","reduce","id","at","name","role","until","expireAt","earliestExpireAt","Math","min","_toConsumableArray","values","map","timeToRender","isFinite","timeout","setTimeout","max","clearTimeout"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-api/lib/src/hooks/useActiveTyping.ts"],"sourcesContent":["import { useEffect } from 'react';\n\nimport { useSelector } from './internal/WebChatReduxContext';\nimport Typing from '../types/Typing';\nimport useForceRender from './internal/useForceRender';\nimport useStyleOptions from './useStyleOptions';\n\nfunction useActiveTyping(expireAfter?: number): [{ [userId: string]: Typing }] {\n  const now = Date.now();\n\n  const [{ typingAnimationDuration }] = useStyleOptions();\n  const forceRender = useForceRender();\n  const typing: { [userId: string]: { at: number; name: string; role: string } } = useSelector(({ typing }) => typing);\n\n  if (typeof expireAfter !== 'number') {\n    expireAfter = typingAnimationDuration;\n  }\n\n  const activeTyping: { [userId: string]: Typing } = Object.entries(typing).reduce(\n    (activeTyping, [id, { at, name, role }]) => {\n      const until = at + expireAfter;\n\n      if (until > now) {\n        return { ...activeTyping, [id]: { at, expireAt: until, name, role } };\n      }\n\n      return activeTyping;\n    },\n    {}\n  );\n\n  const earliestExpireAt = Math.min(...Object.values(activeTyping).map(({ expireAt }) => expireAt));\n  const timeToRender = earliestExpireAt && earliestExpireAt - now;\n\n  useEffect(() => {\n    if (timeToRender && isFinite(timeToRender)) {\n      const timeout = setTimeout(forceRender, Math.max(0, timeToRender));\n\n      return () => clearTimeout(timeout);\n    }\n  }, [forceRender, timeToRender]);\n\n  return [activeTyping];\n}\n\nexport default useActiveTyping;\n"]},"metadata":{},"sourceType":"script"}