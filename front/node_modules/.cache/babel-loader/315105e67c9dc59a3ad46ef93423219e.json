{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar Subscription_1 = require('./Subscription');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nvar SubjectSubscription = function (_super) {\n  __extends(SubjectSubscription, _super);\n\n  function SubjectSubscription(subject, subscriber) {\n    _super.call(this);\n\n    this.subject = subject;\n    this.subscriber = subscriber;\n    this.closed = false;\n  }\n\n  SubjectSubscription.prototype.unsubscribe = function () {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n    var subject = this.subject;\n    var observers = subject.observers;\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    var subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  };\n\n  return SubjectSubscription;\n}(Subscription_1.Subscription);\n\nexports.SubjectSubscription = SubjectSubscription;","map":{"version":3,"mappings":";;;;;;;;;;;;AAEA,6BAA6B,gBAA7B;AAEA;;;;;;;AAKA;AAA4CA;;AAG1C,+BAAmBC,OAAnB,EAA+CC,UAA/C,EAAsE;AACpEC;;AADiB;AAA4B;AAF/C,kBAAkB,KAAlB;AAIC;;AAEDC;AACE,QAAI,KAAKC,MAAT,EAAiB;AACf;AACD;;AAED,SAAKA,MAAL,GAAc,IAAd;AAEA,QAAMJ,OAAO,GAAG,KAAKA,OAArB;AACA,QAAMK,SAAS,GAAGL,OAAO,CAACK,SAA1B;AAEA,SAAKL,OAAL,GAAe,IAAf;;AAEA,QAAI,CAACK,SAAD,IAAcA,SAAS,CAACC,MAAV,KAAqB,CAAnC,IAAwCN,OAAO,CAACO,SAAhD,IAA6DP,OAAO,CAACI,MAAzE,EAAiF;AAC/E;AACD;;AAED,QAAMI,eAAe,GAAGH,SAAS,CAACI,OAAV,CAAkB,KAAKR,UAAvB,CAAxB;;AAEA,QAAIO,eAAe,KAAK,CAAC,CAAzB,EAA4B;AAC1BH,eAAS,CAACK,MAAV,CAAiBF,eAAjB,EAAkC,CAAlC;AACD;AACF,GArBD;;AAsBF;AA7BA,EAA4CG,2BAA5C;;AAAaC,8BAAmBT,mBAAnB","names":["__extends","subject","subscriber","_super","SubjectSubscription","closed","observers","length","isStopped","subscriberIndex","indexOf","splice","Subscription_1","exports"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/src/SubjectSubscription.ts"],"sourcesContent":["import { Subject } from './Subject';\nimport { Observer } from './Observer';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}