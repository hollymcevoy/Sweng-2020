{"ast":null,"code":"\"use strict\"; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SpeechContext = void 0;\n/**\n * Represents the JSON used in the speech.context message sent to the speech service.\n * The dynamic grammar is always refreshed from the encapsulated dynamic grammar object.\n */\n\nvar SpeechContext =\n/** @class */\nfunction () {\n  function SpeechContext(dynamicGrammar) {\n    this.privContext = {};\n    this.privDynamicGrammar = dynamicGrammar;\n  }\n  /**\n   * Adds a section to the speech.context object.\n   * @param sectionName Name of the section to add.\n   * @param value JSON serializable object that represents the value.\n   */\n\n\n  SpeechContext.prototype.setSection = function (sectionName, value) {\n    this.privContext[sectionName] = value;\n  };\n  /**\n   * @Internal\n   * This is only used by pronunciation assessment config.\n   * Do not use externally, object returned will change without warning or notice.\n   */\n\n\n  SpeechContext.prototype.setPronunciationAssessmentParams = function (params) {\n    if (this.privContext.phraseDetection === undefined) {\n      this.privContext.phraseDetection = {\n        enrichment: {\n          pronunciationAssessment: {}\n        }\n      };\n    }\n\n    this.privContext.phraseDetection.enrichment.pronunciationAssessment = JSON.parse(params);\n\n    if (this.privContext.phraseOutput === undefined) {\n      this.privContext.phraseOutput = {\n        detailed: {\n          options: []\n        },\n        format: {}\n      };\n    }\n\n    this.privContext.phraseOutput.format = \"Detailed\";\n    this.privContext.phraseOutput.detailed.options.push(\"PronunciationAssessment\");\n\n    if (this.privContext.phraseOutput.detailed.options.indexOf(\"WordTimings\") === -1) {\n      this.privContext.phraseOutput.detailed.options.push(\"WordTimings\");\n    }\n  };\n\n  SpeechContext.prototype.toJSON = function () {\n    var dgi = this.privDynamicGrammar.generateGrammarObject();\n    this.setSection(\"dgi\", dgi);\n    var ret = JSON.stringify(this.privContext);\n    return ret;\n  };\n\n  return SpeechContext;\n}();\n\nexports.SpeechContext = SpeechContext;","map":{"version":3,"mappings":"cAAA;AACA;;;;;;AAOA;;;;;AAIA;AAAA;AAAA;AAII,yBAAYA,cAAZ,EAAiD;AAHzC,uBAA0C,EAA1C;AAIJ,SAAKC,kBAAL,GAA0BD,cAA1B;AACH;AAED;;;;;;;AAKOE,uCAAP,UAAkBC,WAAlB,EAAuCC,KAAvC,EAAiD;AAC7C,SAAKC,WAAL,CAAiBF,WAAjB,IAAgCC,KAAhC;AACH,GAFM;AAIP;;;;;;;AAKOF,6DAAP,UAAwCI,MAAxC,EAAsD;AAClD,QAAI,KAAKD,WAAL,CAAiBE,eAAjB,KAAqCC,SAAzC,EAAoD;AAChD,WAAKH,WAAL,CAAiBE,eAAjB,GAAmC;AAC/BE,kBAAU,EAAE;AACRC,iCAAuB,EAAE;AADjB;AADmB,OAAnC;AAKH;;AACD,SAAKL,WAAL,CAAiBE,eAAjB,CAAiCE,UAAjC,CAA4CC,uBAA5C,GAAsEC,IAAI,CAACC,KAAL,CAAWN,MAAX,CAAtE;;AACA,QAAI,KAAKD,WAAL,CAAiBQ,YAAjB,KAAkCL,SAAtC,EAAiD;AAC7C,WAAKH,WAAL,CAAiBQ,YAAjB,GAAgC;AAC5BC,gBAAQ,EAAE;AACNC,iBAAO,EAAE;AADH,SADkB;AAI5BC,cAAM,EAAE;AAJoB,OAAhC;AAMH;;AACD,SAAKX,WAAL,CAAiBQ,YAAjB,CAA8BG,MAA9B,GAAuC,UAAvC;AACA,SAAKX,WAAL,CAAiBQ,YAAjB,CAA8BC,QAA9B,CAAuCC,OAAvC,CAA+CE,IAA/C,CAAoD,yBAApD;;AACA,QAAI,KAAKZ,WAAL,CAAiBQ,YAAjB,CAA8BC,QAA9B,CAAuCC,OAAvC,CAA+CG,OAA/C,CAAuD,aAAvD,MAA0E,CAAC,CAA/E,EAAkF;AAC9E,WAAKb,WAAL,CAAiBQ,YAAjB,CAA8BC,QAA9B,CAAuCC,OAAvC,CAA+CE,IAA/C,CAAoD,aAApD;AACH;AACJ,GAtBM;;AAwBAf,mCAAP;AAEI,QAAMiB,GAAG,GAAoB,KAAKlB,kBAAL,CAAwBmB,qBAAxB,EAA7B;AACA,SAAKC,UAAL,CAAgB,KAAhB,EAAuBF,GAAvB;AAEA,QAAMG,GAAG,GAAWX,IAAI,CAACY,SAAL,CAAe,KAAKlB,WAApB,CAApB;AACA,WAAOiB,GAAP;AACH,GAPM;;AAQX;AAtDA;;AAAaE","names":["dynamicGrammar","privDynamicGrammar","SpeechContext","sectionName","value","privContext","params","phraseDetection","undefined","enrichment","pronunciationAssessment","JSON","parse","phraseOutput","detailed","options","format","push","indexOf","dgi","generateGrammarObject","setSection","ret","stringify","exports"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/SpeechContext.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    DynamicGrammarBuilder,\r\n    IDynamicGrammar,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Represents the JSON used in the speech.context message sent to the speech service.\r\n * The dynamic grammar is always refreshed from the encapsulated dynamic grammar object.\r\n */\r\nexport class SpeechContext {\r\n    private privContext: { [section: string]: any } = {};\r\n    private privDynamicGrammar: DynamicGrammarBuilder;\r\n\r\n    constructor(dynamicGrammar: DynamicGrammarBuilder) {\r\n        this.privDynamicGrammar = dynamicGrammar;\r\n    }\r\n\r\n    /**\r\n     * Adds a section to the speech.context object.\r\n     * @param sectionName Name of the section to add.\r\n     * @param value JSON serializable object that represents the value.\r\n     */\r\n    public setSection(sectionName: string, value: any): void {\r\n        this.privContext[sectionName] = value;\r\n    }\r\n\r\n    /**\r\n     * @Internal\r\n     * This is only used by pronunciation assessment config.\r\n     * Do not use externally, object returned will change without warning or notice.\r\n     */\r\n    public setPronunciationAssessmentParams(params: string): void {\r\n        if (this.privContext.phraseDetection === undefined) {\r\n            this.privContext.phraseDetection = {\r\n                enrichment: {\r\n                    pronunciationAssessment: {}\r\n                }\r\n            };\r\n        }\r\n        this.privContext.phraseDetection.enrichment.pronunciationAssessment = JSON.parse(params);\r\n        if (this.privContext.phraseOutput === undefined) {\r\n            this.privContext.phraseOutput = {\r\n                detailed: {\r\n                    options: []\r\n                },\r\n                format: {}\r\n            };\r\n        }\r\n        this.privContext.phraseOutput.format = \"Detailed\";\r\n        this.privContext.phraseOutput.detailed.options.push(\"PronunciationAssessment\");\r\n        if (this.privContext.phraseOutput.detailed.options.indexOf(\"WordTimings\") === -1) {\r\n            this.privContext.phraseOutput.detailed.options.push(\"WordTimings\");\r\n        }\r\n    }\r\n\r\n    public toJSON(): string {\r\n\r\n        const dgi: IDynamicGrammar = this.privDynamicGrammar.generateGrammarObject();\r\n        this.setSection(\"dgi\", dgi);\r\n\r\n        const ret: string = JSON.stringify(this.privContext);\r\n        return ret;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}