{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _exportNames = {\n  createDirectLine: true,\n  createDirectLineAppServiceExtension: true,\n  Components: true,\n  hooks: true,\n  renderWebChat: true,\n  createAdaptiveCardsAttachmentMiddleware: true,\n  createAdaptiveCardsAttachmentForScreenReaderMiddleware: true,\n  createCognitiveServicesSpeechServicesPonyfillFactory: true,\n  createDirectLineSpeechAdapters: true,\n  createStyleSet: true,\n  renderMarkdown: true\n};\nexports.Components = void 0;\nObject.defineProperty(exports, \"createAdaptiveCardsAttachmentForScreenReaderMiddleware\", {\n  enumerable: true,\n  get: function get() {\n    return _createAdaptiveCardsAttachmentForScreenReaderMiddleware.default;\n  }\n});\nObject.defineProperty(exports, \"createAdaptiveCardsAttachmentMiddleware\", {\n  enumerable: true,\n  get: function get() {\n    return _createAdaptiveCardsAttachmentMiddleware.default;\n  }\n});\nObject.defineProperty(exports, \"createCognitiveServicesSpeechServicesPonyfillFactory\", {\n  enumerable: true,\n  get: function get() {\n    return _createCognitiveServicesSpeechServicesPonyfillFactory.default;\n  }\n});\nexports.createDirectLineAppServiceExtension = exports.createDirectLine = void 0;\nObject.defineProperty(exports, \"createDirectLineSpeechAdapters\", {\n  enumerable: true,\n  get: function get() {\n    return _createDirectLineSpeechAdapters.default;\n  }\n});\nObject.defineProperty(exports, \"createStyleSet\", {\n  enumerable: true,\n  get: function get() {\n    return _createFullStyleSet.default;\n  }\n});\nexports.hooks = exports.default = void 0;\nObject.defineProperty(exports, \"renderMarkdown\", {\n  enumerable: true,\n  get: function get() {\n    return _renderMarkdown.default;\n  }\n});\nexports.renderWebChat = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _indexMinimal = require(\"./index-minimal\");\n\nObject.keys(_indexMinimal).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _indexMinimal[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _indexMinimal[key];\n    }\n  });\n});\n\nvar _AdaptiveCardContent = _interopRequireDefault(require(\"./adaptiveCards/Attachment/AdaptiveCardContent\"));\n\nvar _addVersion = _interopRequireDefault(require(\"./addVersion\"));\n\nvar _AnimationCardContent = _interopRequireDefault(require(\"./adaptiveCards/Attachment/AnimationCardContent\"));\n\nvar _AudioCardContent = _interopRequireDefault(require(\"./adaptiveCards/Attachment/AudioCardContent\"));\n\nvar _renderWebChat = _interopRequireDefault(require(\"./renderWebChat\"));\n\nvar _createAdaptiveCardsAttachmentMiddleware = _interopRequireDefault(require(\"./adaptiveCards/createAdaptiveCardsAttachmentMiddleware\"));\n\nvar _createAdaptiveCardsAttachmentForScreenReaderMiddleware = _interopRequireDefault(require(\"./adaptiveCards/createAdaptiveCardsAttachmentForScreenReaderMiddleware\"));\n\nvar _createCognitiveServicesSpeechServicesPonyfillFactory = _interopRequireDefault(require(\"./createCognitiveServicesSpeechServicesPonyfillFactory\"));\n\nvar _createDirectLineSpeechAdapters = _interopRequireDefault(require(\"./createDirectLineSpeechAdapters\"));\n\nvar _createFullStyleSet = _interopRequireDefault(require(\"./createFullStyleSet\"));\n\nvar _createDirectLine = _interopRequireDefault(require(\"./createDirectLine\"));\n\nvar _createDirectLineAppServiceExtension = _interopRequireDefault(require(\"./createDirectLineAppServiceExtension\"));\n\nvar _FullComposer = _interopRequireDefault(require(\"./FullComposer\"));\n\nvar _HeroCardContent = _interopRequireDefault(require(\"./adaptiveCards/Attachment/HeroCardContent\"));\n\nvar _OAuthCardContent = _interopRequireDefault(require(\"./adaptiveCards/Attachment/OAuthCardContent\"));\n\nvar _FullReactWebChat = _interopRequireDefault(require(\"./FullReactWebChat\"));\n\nvar _ReceiptCardContent = _interopRequireDefault(require(\"./adaptiveCards/Attachment/ReceiptCardContent\"));\n\nvar _renderMarkdown = _interopRequireDefault(require(\"./renderMarkdown\"));\n\nvar _SignInCardContent = _interopRequireDefault(require(\"./adaptiveCards/Attachment/SignInCardContent\"));\n\nvar _ThumbnailCardContent = _interopRequireDefault(require(\"./adaptiveCards/Attachment/ThumbnailCardContent\"));\n\nvar _useAdaptiveCardsHostConfig = _interopRequireDefault(require(\"./adaptiveCards/hooks/useAdaptiveCardsHostConfig\"));\n\nvar _useAdaptiveCardsPackage = _interopRequireDefault(require(\"./adaptiveCards/hooks/useAdaptiveCardsPackage\"));\n\nvar _useStyleOptions = _interopRequireDefault(require(\"./hooks/useStyleOptions\"));\n\nvar _VideoCardContent = _interopRequireDefault(require(\"./adaptiveCards/Attachment/VideoCardContent\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar renderWebChat = _renderWebChat.default.bind(null, _FullReactWebChat.default);\n\nexports.renderWebChat = renderWebChat;\n\nvar createDirectLine = function createDirectLine(options) {\n  options.botAgent && console.warn('Web Chat: Developers are not currently allowed to set botAgent. See https://github.com/microsoft/BotFramework-WebChat/issues/2119 for more details.');\n  return (0, _createDirectLine.default)(_objectSpread(_objectSpread({}, options), {}, {\n    botAgent: \"WebChat/\".concat(_indexMinimal.version, \" (Full)\")\n  }));\n};\n\nexports.createDirectLine = createDirectLine;\n\nvar createDirectLineAppServiceExtension = function createDirectLineAppServiceExtension(options) {\n  options.botAgent && console.warn('Web Chat: Developers are not currently allowed to set botAgent. See https://github.com/microsoft/BotFramework-WebChat/issues/2119 for more details.');\n  return (0, _createDirectLineAppServiceExtension.default)(_objectSpread(_objectSpread({}, options), {}, {\n    botAgent: \"WebChat/\".concat(_indexMinimal.version, \" (Full)\")\n  }));\n};\n\nexports.createDirectLineAppServiceExtension = createDirectLineAppServiceExtension;\n\nvar patchedHooks = _objectSpread(_objectSpread({}, _indexMinimal.hooks), {}, {\n  useAdaptiveCardsHostConfig: _useAdaptiveCardsHostConfig.default,\n  useAdaptiveCardsPackage: _useAdaptiveCardsPackage.default,\n  useStyleOptions: _useStyleOptions.default\n});\n\nexports.hooks = patchedHooks;\nvar AdditionalComponents = {\n  AdaptiveCardContent: _AdaptiveCardContent.default,\n  AnimationCardContent: _AnimationCardContent.default,\n  AudioCardContent: _AudioCardContent.default,\n  Composer: _FullComposer.default,\n  HeroCardContent: _HeroCardContent.default,\n  OAuthCardContent: _OAuthCardContent.default,\n  ReceiptCardContent: _ReceiptCardContent.default,\n  SignInCardContent: _SignInCardContent.default,\n  ThumbnailCardContent: _ThumbnailCardContent.default,\n  VideoCardContent: _VideoCardContent.default\n};\n\nvar Components = _objectSpread(_objectSpread({}, _indexMinimal.Components), AdditionalComponents);\n\nexports.Components = Components;\nvar _default = _FullReactWebChat.default;\nexports.default = _default;\nwindow['WebChat'] = _objectSpread(_objectSpread({}, window['WebChat']), {}, {\n  Components: Components,\n  createAdaptiveCardsAttachmentMiddleware: _createAdaptiveCardsAttachmentMiddleware.default,\n  createAdaptiveCardsAttachmentForScreenReaderMiddleware: _createAdaptiveCardsAttachmentForScreenReaderMiddleware.default,\n  createCognitiveServicesSpeechServicesPonyfillFactory: _createCognitiveServicesSpeechServicesPonyfillFactory.default,\n  createDirectLine: createDirectLine,\n  createDirectLineAppServiceExtension: createDirectLineAppServiceExtension,\n  createDirectLineSpeechAdapters: _createDirectLineSpeechAdapters.default,\n  createStyleSet: _createFullStyleSet.default,\n  hooks: patchedHooks,\n  ReactWebChat: _FullReactWebChat.default,\n  renderMarkdown: _renderMarkdown.default,\n  renderWebChat: renderWebChat\n});\n(0, _addVersion.default)('full');","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;AAAAA;AAAA;AAAA;AAAA;AAAAA;AAAAC;AAAAC;AAAA;AAAA;AAAA;AAAA;;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMC,aAAa,GAAGC,uBAAkBC,IAAlBD,CAAuB,IAAvBA,EAA6BE,yBAA7BF,CAAtB;;;;AAEO,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,OAAD,EAA8E;AAC3GA,SAAD,CAAiBC,QAAhBD,IACCE,OAAO,CAACC,IAARD,CACE,qJADFA,CADDF;AAKD,SAAO,+DAA6BA,OAA7B;AAAsCC,YAAQ,oBAAaG,qBAAb;AAA9C,KAAP;AANK;;;;AASA,IAAMC,mCAAmC,GAAG,SAAtCA,mCAAsC,CACjDL,OADiD,EAE9C;AACFA,SAAD,CAAiBC,QAAhBD,IACCE,OAAO,CAACC,IAARD,CACE,qJADFA,CADDF;AAKD,SAAO,kFAAgDA,OAAhD;AAAyDC,YAAQ,oBAAaG,qBAAb;AAAjE,KAAP;AARK;;;;AAWP,IAAME,YAAY,mCACbC,mBADa;AAEhBC,4BAA0B,EAA1BA,mCAFgB;AAGhBC,yBAAuB,EAAvBA,gCAHgB;AAIhBC,iBAAe,EAAfA;AAJgB,EAAlB;;;AAOA,IAAMC,oBAAoB,GAAG;AAC3BC,qBAAmB,EAAnBA,4BAD2B;AAE3BC,sBAAoB,EAApBA,6BAF2B;AAG3BC,kBAAgB,EAAhBA,yBAH2B;AAI3BC,UAAQ,EAAEC,qBAJiB;AAK3BC,iBAAe,EAAfA,wBAL2B;AAM3BC,kBAAgB,EAAhBA,yBAN2B;AAO3BC,oBAAkB,EAAlBA,2BAP2B;AAQ3BC,mBAAiB,EAAjBA,0BAR2B;AAS3BC,sBAAoB,EAApBA,6BAT2B;AAU3BC,kBAAgB,EAAhBA;AAV2B,CAA7B;;AAaA,IAAMC,UAAkE,mCACnEC,wBADmE,GAEnEb,oBAFmE,CAAxE;;;eAQeb;;AAgBf2B,MAAM,CAAC,SAAD,CAANA,mCACKA,MAAM,CAAC,SAAD,CADX;AAEEF,YAAU,EAAVA,UAFF;AAGEG,yCAAuC,EAAvCA,gDAHF;AAIEC,wDAAsD,EAAtDA,+DAJF;AAKEC,sDAAoD,EAApDA,6DALF;AAME7B,kBAAgB,EAAhBA,gBANF;AAOEM,qCAAmC,EAAnCA,mCAPF;AAQEwB,gCAA8B,EAA9BA,uCARF;AASEC,gBAAc,EAAdA,2BATF;AAUEvB,OAAK,EAAED,YAVT;AAWER,cAAY,EAAZA,yBAXF;AAYEiC,gBAAc,EAAdA,uBAZF;AAaEpC,eAAa,EAAbA;AAbF;AAgBA,yBAAW,MAAX","names":["Object","enumerable","get","renderWebChat","coreRenderWebChat","bind","ReactWebChat","createDirectLine","options","botAgent","console","warn","version","createDirectLineAppServiceExtension","patchedHooks","hooks","useAdaptiveCardsHostConfig","useAdaptiveCardsPackage","useStyleOptions","AdditionalComponents","AdaptiveCardContent","AnimationCardContent","AudioCardContent","Composer","FullComposer","HeroCardContent","OAuthCardContent","ReceiptCardContent","SignInCardContent","ThumbnailCardContent","VideoCardContent","Components","MinimalComponents","window","createAdaptiveCardsAttachmentMiddleware","createAdaptiveCardsAttachmentForScreenReaderMiddleware","createCognitiveServicesSpeechServicesPonyfillFactory","createDirectLineSpeechAdapters","createStyleSet","renderMarkdown"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat/lib/src/index.ts"],"sourcesContent":["/* eslint dot-notation: [\"error\", { \"allowPattern\": \"^WebChat$\" }] */\n// window['WebChat'] is required for TypeScript\n\nexport * from './index-minimal';\n\nimport { Components as MinimalComponents, hooks, version } from './index-minimal';\nimport AdaptiveCardContent from './adaptiveCards/Attachment/AdaptiveCardContent';\nimport addVersion from './addVersion';\nimport AnimationCardContent from './adaptiveCards/Attachment/AnimationCardContent';\nimport AudioCardContent from './adaptiveCards/Attachment/AudioCardContent';\nimport coreRenderWebChat from './renderWebChat';\nimport createAdaptiveCardsAttachmentMiddleware from './adaptiveCards/createAdaptiveCardsAttachmentMiddleware';\nimport createAdaptiveCardsAttachmentForScreenReaderMiddleware from './adaptiveCards/createAdaptiveCardsAttachmentForScreenReaderMiddleware';\nimport createCognitiveServicesSpeechServicesPonyfillFactory from './createCognitiveServicesSpeechServicesPonyfillFactory';\nimport createDirectLineSpeechAdapters from './createDirectLineSpeechAdapters';\nimport createStyleSet from './createFullStyleSet';\nimport defaultCreateDirectLine from './createDirectLine';\nimport defaultCreateDirectLineAppServiceExtension from './createDirectLineAppServiceExtension';\nimport FullBundleStyleOptions, { StrictFullBundleStyleOptions } from './types/FullBundleStyleOptions';\nimport FullComposer from './FullComposer';\nimport HeroCardContent from './adaptiveCards/Attachment/HeroCardContent';\nimport OAuthCardContent from './adaptiveCards/Attachment/OAuthCardContent';\nimport ReactWebChat from './FullReactWebChat';\nimport ReceiptCardContent from './adaptiveCards/Attachment/ReceiptCardContent';\nimport renderMarkdown from './renderMarkdown';\nimport SignInCardContent from './adaptiveCards/Attachment/SignInCardContent';\nimport ThumbnailCardContent from './adaptiveCards/Attachment/ThumbnailCardContent';\nimport useAdaptiveCardsHostConfig from './adaptiveCards/hooks/useAdaptiveCardsHostConfig';\nimport useAdaptiveCardsPackage from './adaptiveCards/hooks/useAdaptiveCardsPackage';\nimport useStyleOptions from './hooks/useStyleOptions';\nimport VideoCardContent from './adaptiveCards/Attachment/VideoCardContent';\n\nconst renderWebChat = coreRenderWebChat.bind(null, ReactWebChat);\n\nexport const createDirectLine = (options: Omit<Parameters<typeof defaultCreateDirectLine>[0], 'botAgent'>) => {\n  (options as any).botAgent &&\n    console.warn(\n      'Web Chat: Developers are not currently allowed to set botAgent. See https://github.com/microsoft/BotFramework-WebChat/issues/2119 for more details.'\n    );\n\n  return defaultCreateDirectLine({ ...options, botAgent: `WebChat/${version} (Full)` });\n};\n\nexport const createDirectLineAppServiceExtension = (\n  options: Omit<Parameters<typeof defaultCreateDirectLineAppServiceExtension>[0], 'botAgent'>\n) => {\n  (options as any).botAgent &&\n    console.warn(\n      'Web Chat: Developers are not currently allowed to set botAgent. See https://github.com/microsoft/BotFramework-WebChat/issues/2119 for more details.'\n    );\n\n  return defaultCreateDirectLineAppServiceExtension({ ...options, botAgent: `WebChat/${version} (Full)` });\n};\n\nconst patchedHooks = {\n  ...hooks,\n  useAdaptiveCardsHostConfig,\n  useAdaptiveCardsPackage,\n  useStyleOptions\n};\n\nconst AdditionalComponents = {\n  AdaptiveCardContent,\n  AnimationCardContent,\n  AudioCardContent,\n  Composer: FullComposer,\n  HeroCardContent,\n  OAuthCardContent,\n  ReceiptCardContent,\n  SignInCardContent,\n  ThumbnailCardContent,\n  VideoCardContent\n};\n\nconst Components: typeof MinimalComponents & typeof AdditionalComponents = {\n  ...MinimalComponents,\n  ...AdditionalComponents\n};\n\ntype StyleOptions = FullBundleStyleOptions;\ntype StrictStyleOptions = StrictFullBundleStyleOptions;\n\nexport default ReactWebChat;\n\nexport {\n  Components,\n  createAdaptiveCardsAttachmentMiddleware,\n  createAdaptiveCardsAttachmentForScreenReaderMiddleware,\n  createCognitiveServicesSpeechServicesPonyfillFactory,\n  createDirectLineSpeechAdapters,\n  createStyleSet,\n  patchedHooks as hooks,\n  renderMarkdown,\n  renderWebChat\n};\n\nexport type { StyleOptions, StrictStyleOptions };\n\nwindow['WebChat'] = {\n  ...window['WebChat'],\n  Components,\n  createAdaptiveCardsAttachmentMiddleware,\n  createAdaptiveCardsAttachmentForScreenReaderMiddleware,\n  createCognitiveServicesSpeechServicesPonyfillFactory,\n  createDirectLine,\n  createDirectLineAppServiceExtension,\n  createDirectLineSpeechAdapters,\n  createStyleSet,\n  hooks: patchedHooks,\n  ReactWebChat,\n  renderMarkdown,\n  renderWebChat\n};\n\naddVersion('full');\n"]},"metadata":{},"sourceType":"script"}