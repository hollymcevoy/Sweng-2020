{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs3/helpers/slicedToArray\";\n/* eslint no-magic-numbers: [\"error\", { \"ignore\": [0, 1, 2, 3] }] */\n\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useState } from 'react';\nimport Composer from './Composer';\nimport useReadyState from './hooks/useReadyState';\nimport useRefFrom from './useRefFrom';\nimport useSupported from './hooks/useSupported';\n\nvar DictateButtonCore = function DictateButtonCore(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      disabled = _ref.disabled,\n      onClick = _ref.onClick;\n\n  var _useReadyState = useReadyState(),\n      _useReadyState2 = _slicedToArray(_useReadyState, 1),\n      readyState = _useReadyState2[0];\n\n  var _useSupported = useSupported(),\n      _useSupported2 = _slicedToArray(_useSupported, 1),\n      supported = _useSupported2[0];\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: className,\n    disabled: readyState === 1 || readyState === 3 || !supported || disabled,\n    onClick: onClick,\n    type: \"button\"\n  }, typeof children === 'function' ? children({\n    readyState: readyState\n  }) : children);\n};\n\nDictateButtonCore.defaultProps = {\n  children: undefined,\n  className: undefined,\n  disabled: undefined\n};\nDictateButtonCore.propTypes = {\n  children: PropTypes.any,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func.isRequired\n};\n\nvar DictateButton = function DictateButton(_ref2) {\n  var children = _ref2.children,\n      className = _ref2.className,\n      disabled = _ref2.disabled,\n      extra = _ref2.extra,\n      grammar = _ref2.grammar,\n      lang = _ref2.lang,\n      onClick = _ref2.onClick,\n      onDictate = _ref2.onDictate,\n      onError = _ref2.onError,\n      onProgress = _ref2.onProgress,\n      onRawEvent = _ref2.onRawEvent,\n      speechGrammarList = _ref2.speechGrammarList,\n      speechRecognition = _ref2.speechRecognition;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      started = _useState2[0],\n      setStarted = _useState2[1];\n\n  var onClickRef = useRefFrom(onClick);\n  var onDictateRef = useRefFrom(onDictate);\n  var onErrorRef = useRefFrom(onError);\n  var handleClick = useCallback(function (event) {\n    onClickRef.current && onClickRef.current(event);\n    !event.isDefaultPrevented() && setStarted(function (started) {\n      return !started;\n    });\n  }, [onClickRef, setStarted]);\n  var handleDictate = useCallback(function (event) {\n    setStarted(false);\n    onDictateRef.current && onDictateRef.current(event);\n  }, [onDictateRef, setStarted]);\n  var handleError = useCallback(function (event) {\n    setStarted(false);\n    onErrorRef.current && onErrorRef.current(event);\n  }, [onErrorRef, setStarted]);\n  return /*#__PURE__*/React.createElement(Composer, {\n    extra: extra,\n    grammar: grammar,\n    lang: lang,\n    onDictate: handleDictate,\n    onError: handleError,\n    onProgress: onProgress,\n    onRawEvent: onRawEvent,\n    speechGrammarList: speechGrammarList,\n    speechRecognition: speechRecognition,\n    started: started && !disabled\n  }, /*#__PURE__*/React.createElement(DictateButtonCore, {\n    className: className,\n    disabled: disabled,\n    onClick: handleClick\n  }, children));\n};\n\nDictateButton.defaultProps = {\n  children: undefined,\n  className: undefined,\n  disabled: undefined,\n  extra: undefined,\n  grammar: undefined,\n  lang: undefined,\n  onClick: undefined,\n  onDictate: undefined,\n  onError: undefined,\n  onProgress: undefined,\n  onRawEvent: undefined,\n  speechGrammarList: undefined,\n  speechRecognition: undefined\n};\nDictateButton.propTypes = {\n  children: PropTypes.any,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  extra: PropTypes.any,\n  grammar: PropTypes.string,\n  lang: PropTypes.string,\n  onClick: PropTypes.func,\n  onDictate: PropTypes.func,\n  onError: PropTypes.func,\n  onProgress: PropTypes.func,\n  onRawEvent: PropTypes.func,\n  speechGrammarList: PropTypes.any,\n  speechRecognition: PropTypes.any\n};\nexport default DictateButton;","map":{"version":3,"mappings":"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","names":["PropTypes","React","useCallback","useState","Composer","useReadyState","useRefFrom","useSupported","DictateButtonCore","children","className","disabled","onClick","readyState","supported","type","defaultProps","undefined","propTypes","any","string","bool","func","isRequired","DictateButton","extra","grammar","lang","onDictate","onError","onProgress","onRawEvent","speechGrammarList","speechRecognition","started","setStarted","onClickRef","onDictateRef","onErrorRef","handleClick","current","event","isDefaultPrevented","handleDictate","handleError"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/react-dictate-button/src/DictateButton.js"],"sourcesContent":["/* eslint no-magic-numbers: [\"error\", { \"ignore\": [0, 1, 2, 3] }] */\n\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useState } from 'react';\n\nimport Composer from './Composer';\nimport useReadyState from './hooks/useReadyState';\nimport useRefFrom from './useRefFrom';\nimport useSupported from './hooks/useSupported';\n\nconst DictateButtonCore = ({ children, className, disabled, onClick }) => {\n  const [readyState] = useReadyState();\n  const [supported] = useSupported();\n\n  return (\n    <button\n      className={className}\n      disabled={readyState === 1 || readyState === 3 || !supported || disabled}\n      onClick={onClick}\n      type=\"button\"\n    >\n      {typeof children === 'function' ? children({ readyState }) : children}\n    </button>\n  );\n};\n\nDictateButtonCore.defaultProps = {\n  children: undefined,\n  className: undefined,\n  disabled: undefined\n};\n\nDictateButtonCore.propTypes = {\n  children: PropTypes.any,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func.isRequired\n};\n\nconst DictateButton = ({\n  children,\n  className,\n  disabled,\n  extra,\n  grammar,\n  lang,\n  onClick,\n  onDictate,\n  onError,\n  onProgress,\n  onRawEvent,\n  speechGrammarList,\n  speechRecognition\n}) => {\n  const [started, setStarted] = useState();\n  const onClickRef = useRefFrom(onClick);\n  const onDictateRef = useRefFrom(onDictate);\n  const onErrorRef = useRefFrom(onError);\n\n  const handleClick = useCallback(\n    event => {\n      onClickRef.current && onClickRef.current(event);\n\n      !event.isDefaultPrevented() && setStarted(started => !started);\n    },\n    [onClickRef, setStarted]\n  );\n\n  const handleDictate = useCallback(\n    event => {\n      setStarted(false);\n\n      onDictateRef.current && onDictateRef.current(event);\n    },\n    [onDictateRef, setStarted]\n  );\n\n  const handleError = useCallback(\n    event => {\n      setStarted(false);\n\n      onErrorRef.current && onErrorRef.current(event);\n    },\n    [onErrorRef, setStarted]\n  );\n\n  return (\n    <Composer\n      extra={extra}\n      grammar={grammar}\n      lang={lang}\n      onDictate={handleDictate}\n      onError={handleError}\n      onProgress={onProgress}\n      onRawEvent={onRawEvent}\n      speechGrammarList={speechGrammarList}\n      speechRecognition={speechRecognition}\n      started={started && !disabled}\n    >\n      <DictateButtonCore className={className} disabled={disabled} onClick={handleClick}>\n        {children}\n      </DictateButtonCore>\n    </Composer>\n  );\n};\n\nDictateButton.defaultProps = {\n  children: undefined,\n  className: undefined,\n  disabled: undefined,\n  extra: undefined,\n  grammar: undefined,\n  lang: undefined,\n  onClick: undefined,\n  onDictate: undefined,\n  onError: undefined,\n  onProgress: undefined,\n  onRawEvent: undefined,\n  speechGrammarList: undefined,\n  speechRecognition: undefined\n};\n\nDictateButton.propTypes = {\n  children: PropTypes.any,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  extra: PropTypes.any,\n  grammar: PropTypes.string,\n  lang: PropTypes.string,\n  onClick: PropTypes.func,\n  onDictate: PropTypes.func,\n  onError: PropTypes.func,\n  onProgress: PropTypes.func,\n  onRawEvent: PropTypes.func,\n  speechGrammarList: PropTypes.any,\n  speechRecognition: PropTypes.any\n};\n\nexport default DictateButton;\n"]},"metadata":{},"sourceType":"module"}