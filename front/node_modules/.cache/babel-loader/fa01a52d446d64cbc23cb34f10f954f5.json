{"ast":null,"code":"\"use strict\"; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IntentRecognitionEventArgs = void 0;\n\nvar Exports_1 = require(\"./Exports\");\n/**\n * Intent recognition result event arguments.\n * @class\n */\n\n\nvar IntentRecognitionEventArgs =\n/** @class */\nfunction (_super) {\n  __extends(IntentRecognitionEventArgs, _super);\n  /**\n   * Creates and initializes an instance of this class.\n   * @constructor\n   * @param result - The result of the intent recognition.\n   * @param offset - The offset.\n   * @param sessionId - The session id.\n   */\n\n\n  function IntentRecognitionEventArgs(result, offset, sessionId) {\n    var _this = _super.call(this, offset, sessionId) || this;\n\n    _this.privResult = result;\n    return _this;\n  }\n\n  Object.defineProperty(IntentRecognitionEventArgs.prototype, \"result\", {\n    /**\n     * Represents the intent recognition result.\n     * @member IntentRecognitionEventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {IntentRecognitionResult} Represents the intent recognition result.\n     */\n    get: function () {\n      return this.privResult;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IntentRecognitionEventArgs;\n}(Exports_1.RecognitionEventArgs);\n\nexports.IntentRecognitionEventArgs = IntentRecognitionEventArgs;","map":{"version":3,"mappings":"cAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AAEA;;;;;;AAIA;AAAA;AAAA;AAAgDA;AAG5C;;;;;;;;;AAOA,sCAAmBC,MAAnB,EAAoDC,MAApD,EAAqEC,SAArE,EAAuF;AAAvF,gBACIC,kBAAMF,MAAN,EAAcC,SAAd,KAAwB,IAD5B;;AAGIE,SAAI,CAACC,UAAL,GAAkBL,MAAlB;;AACH;;AASDM,wBAAWC,oCAAX,EAAW,QAAX,EAAiB;AAPjB;;;;;;;SAOA;AACI,aAAO,KAAKF,UAAZ;AACH,KAFgB;qBAAA;;AAAA,GAAjB;AAGJ;AAAC,CA1BD,CAAgDG,8BAAhD;;AAAaC","names":["__extends","result","offset","sessionId","_super","_this","privResult","Object","IntentRecognitionEventArgs","Exports_1","exports"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/IntentRecognitionEventArgs.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IntentRecognitionResult, RecognitionEventArgs } from \"./Exports\";\r\n\r\n/**\r\n * Intent recognition result event arguments.\r\n * @class\r\n */\r\nexport class IntentRecognitionEventArgs extends RecognitionEventArgs {\r\n    private privResult: IntentRecognitionResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param result - The result of the intent recognition.\r\n     * @param offset - The offset.\r\n     * @param sessionId - The session id.\r\n     */\r\n    public constructor(result: IntentRecognitionResult, offset?: number, sessionId?: string) {\r\n        super(offset, sessionId);\r\n\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Represents the intent recognition result.\r\n     * @member IntentRecognitionEventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {IntentRecognitionResult} Represents the intent recognition result.\r\n     */\r\n    public get result(): IntentRecognitionResult {\r\n        return this.privResult;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}