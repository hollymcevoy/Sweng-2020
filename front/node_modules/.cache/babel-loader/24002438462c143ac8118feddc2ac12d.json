{"ast":null,"code":"\"use strict\"; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DialogServiceTurnStateManager = void 0;\n\nvar Error_1 = require(\"../common/Error\");\n\nvar DialogServiceTurnState_1 = require(\"./DialogServiceTurnState\");\n\nvar DialogServiceTurnStateManager =\n/** @class */\nfunction () {\n  function DialogServiceTurnStateManager() {\n    this.privTurnMap = new Map();\n    return;\n  }\n\n  DialogServiceTurnStateManager.prototype.StartTurn = function (id) {\n    if (this.privTurnMap.has(id)) {\n      throw new Error_1.InvalidOperationError(\"Service error: There is already a turn with id:\" + id);\n    }\n\n    var turnState = new DialogServiceTurnState_1.DialogServiceTurnState(this, id);\n    this.privTurnMap.set(id, turnState);\n    return this.privTurnMap.get(id);\n  };\n\n  DialogServiceTurnStateManager.prototype.GetTurn = function (id) {\n    return this.privTurnMap.get(id);\n  };\n\n  DialogServiceTurnStateManager.prototype.CompleteTurn = function (id) {\n    if (!this.privTurnMap.has(id)) {\n      throw new Error_1.InvalidOperationError(\"Service error: Received turn end for an unknown turn id:\" + id);\n    }\n\n    var turnState = this.privTurnMap.get(id);\n    turnState.complete();\n    this.privTurnMap.delete(id);\n    return turnState;\n  };\n\n  return DialogServiceTurnStateManager;\n}();\n\nexports.DialogServiceTurnStateManager = DialogServiceTurnStateManager;","map":{"version":3,"mappings":"cAAA;AACA;;;;;;;AAEA;;AAEA;;AAGA;AAAA;AAAA;AAGI;AACI,SAAKA,WAAL,GAAmB,IAAIC,GAAJ,EAAnB;AACA;AACH;;AAEMC,sDAAP,UAAiBC,EAAjB,EAA2B;AACvB,QAAI,KAAKH,WAAL,CAAiBI,GAAjB,CAAqBD,EAArB,CAAJ,EAA8B;AAC1B,YAAM,IAAIE,6BAAJ,CAA0B,oDAAoDF,EAA9E,CAAN;AACH;;AACD,QAAMG,SAAS,GAA2B,IAAIC,+CAAJ,CAA2B,IAA3B,EAAiCJ,EAAjC,CAA1C;AACA,SAAKH,WAAL,CAAiBQ,GAAjB,CAAqBL,EAArB,EAAyBG,SAAzB;AACA,WAAO,KAAKN,WAAL,CAAiBS,GAAjB,CAAqBN,EAArB,CAAP;AACH,GAPM;;AASAD,oDAAP,UAAeC,EAAf,EAAyB;AACrB,WAAO,KAAKH,WAAL,CAAiBS,GAAjB,CAAqBN,EAArB,CAAP;AACH,GAFM;;AAIAD,yDAAP,UAAoBC,EAApB,EAA8B;AAC1B,QAAI,CAAC,KAAKH,WAAL,CAAiBI,GAAjB,CAAqBD,EAArB,CAAL,EAA+B;AAC3B,YAAM,IAAIE,6BAAJ,CAA0B,6DAA6DF,EAAvF,CAAN;AACH;;AACD,QAAMG,SAAS,GAAG,KAAKN,WAAL,CAAiBS,GAAjB,CAAqBN,EAArB,CAAlB;AACAG,aAAS,CAACI,QAAV;AACA,SAAKV,WAAL,CAAiBW,MAAjB,CAAwBR,EAAxB;AACA,WAAOG,SAAP;AACH,GARM;;AASX;AA9BA;;AAAaM","names":["privTurnMap","Map","DialogServiceTurnStateManager","id","has","Error_1","turnState","DialogServiceTurnState_1","set","get","complete","delete","exports"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/DialogServiceTurnStateManager.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { InvalidOperationError } from \"../common/Error\";\r\nimport { AudioOutputStream, PullAudioOutputStreamImpl } from \"../sdk/Audio/AudioOutputStream\";\r\nimport { DialogServiceTurnState } from \"./DialogServiceTurnState\";\r\nimport { ActivityPayloadResponse } from \"./ServiceMessages/ActivityResponsePayload\";\r\n\r\nexport class DialogServiceTurnStateManager {\r\n    private privTurnMap: Map<string, DialogServiceTurnState>;\r\n\r\n    constructor() {\r\n        this.privTurnMap = new Map<string, DialogServiceTurnState>();\r\n        return;\r\n    }\r\n\r\n    public StartTurn(id: string): DialogServiceTurnState {\r\n        if (this.privTurnMap.has(id)) {\r\n            throw new InvalidOperationError(\"Service error: There is already a turn with id:\" + id);\r\n        }\r\n        const turnState: DialogServiceTurnState = new DialogServiceTurnState(this, id);\r\n        this.privTurnMap.set(id, turnState);\r\n        return this.privTurnMap.get(id);\r\n    }\r\n\r\n    public GetTurn(id: string): DialogServiceTurnState {\r\n        return this.privTurnMap.get(id);\r\n    }\r\n\r\n    public CompleteTurn(id: string): DialogServiceTurnState {\r\n        if (!this.privTurnMap.has(id)) {\r\n            throw new InvalidOperationError(\"Service error: Received turn end for an unknown turn id:\" + id);\r\n        }\r\n        const turnState = this.privTurnMap.get(id);\r\n        turnState.complete();\r\n        this.privTurnMap.delete(id);\r\n        return turnState;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}