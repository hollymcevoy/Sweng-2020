{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createDirectLine;\n\nvar _botframeworkDirectlinejs = require(\"botframework-directlinejs\");\n\nfunction createDirectLine(_ref) {\n  var botAgent = _ref.botAgent,\n      conversationId = _ref.conversationId,\n      conversationStartProperties = _ref.conversationStartProperties,\n      domain = _ref.domain,\n      fetch = _ref.fetch,\n      pollingInterval = _ref.pollingInterval,\n      secret = _ref.secret,\n      streamUrl = _ref.streamUrl,\n      token = _ref.token,\n      watermark = _ref.watermark,\n      webSocket = _ref.webSocket; // TODO: [P3] Checks if DLJS supports ponyfilling fetch.\n\n  return new _botframeworkDirectlinejs.DirectLine({\n    botAgent: botAgent,\n    conversationId: conversationId,\n    conversationStartProperties: conversationStartProperties,\n    domain: domain,\n    fetch: fetch,\n    pollingInterval: pollingInterval,\n    secret: secret,\n    streamUrl: streamUrl,\n    token: token,\n    watermark: watermark,\n    webSocket: webSocket,\n    createFormData: function createFormData(attachments) {\n      var formData = new FormData();\n      attachments.forEach(function (_ref2) {\n        var contentType = _ref2.contentType,\n            data = _ref2.data,\n            filename = _ref2.filename,\n            name = _ref2.name;\n        formData.append(name, new Blob(data, {\n          type: contentType\n        }), filename);\n      });\n      return formData;\n    }\n  });\n}","map":{"version":3,"mappings":";;;;;;;AAAA;;AAgBe,SAASA,gBAAT,OAYa;AAAA,MAX1BC,QAW0B,QAX1BA,QAW0B;AAAA,MAV1BC,cAU0B,QAV1BA,cAU0B;AAAA,MAT1BC,2BAS0B,QAT1BA,2BAS0B;AAAA,MAR1BC,MAQ0B,QAR1BA,MAQ0B;AAAA,MAP1BC,KAO0B,QAP1BA,KAO0B;AAAA,MAN1BC,eAM0B,QAN1BA,eAM0B;AAAA,MAL1BC,MAK0B,QAL1BA,MAK0B;AAAA,MAJ1BC,SAI0B,QAJ1BA,SAI0B;AAAA,MAH1BC,KAG0B,QAH1BA,KAG0B;AAAA,MAF1BC,SAE0B,QAF1BA,SAE0B;AAAA,MAD1BC,SAC0B,QAD1BA,SAC0B,EAC1B;;AACA,SAAO,IAAIC,oCAAJ,CAAe;AACpBX,YAAQ,EAARA,QADoB;AAEpBC,kBAAc,EAAdA,cAFoB;AAGpBC,+BAA2B,EAA3BA,2BAHoB;AAIpBC,UAAM,EAANA,MAJoB;AAKpBC,SAAK,EAALA,KALoB;AAMpBC,mBAAe,EAAfA,eANoB;AAOpBC,UAAM,EAANA,MAPoB;AAQpBC,aAAS,EAATA,SARoB;AASpBC,SAAK,EAALA,KAToB;AAUpBC,aAAS,EAATA,SAVoB;AAWpBC,aAAS,EAATA,SAXoB;AAYpBE,kBAAc,EAAE,qCAAe;AAC7B,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AAEAC,iBAAW,CAACC,OAAZD,CACE,iBAUM;AAAA,YATJE,WASI,SATJA,WASI;AAAA,YARJC,IAQI,SARJA,IAQI;AAAA,YAPJC,QAOI,SAPJA,QAOI;AAAA,YANJC,IAMI,SANJA,IAMI;AACJP,gBAAQ,CAACQ,MAATR,CAAgBO,IAAhBP,EAAsB,IAAIS,IAAJ,CAASJ,IAAT,EAAe;AAAEK,cAAI,EAAEN;AAAR,SAAf,CAAtBJ,EAA6DM,QAA7DN;AAZJ;AAgBA,aAAOA,QAAP;AACD;AAhCmB,GAAf,CAAP;AAkCD","names":["createDirectLine","botAgent","conversationId","conversationStartProperties","domain","fetch","pollingInterval","secret","streamUrl","token","watermark","webSocket","DirectLine","createFormData","formData","FormData","attachments","forEach","contentType","data","filename","name","append","Blob","type"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat/lib/src/createDirectLine.ts"],"sourcesContent":["import { DirectLine } from 'botframework-directlinejs';\n\ntype CreateDirectLineOptions = {\n  botAgent?: string;\n  conversationId?: string;\n  conversationStartProperties?: any;\n  domain?: string;\n  fetch?: typeof window.fetch;\n  pollingInterval?: number;\n  secret?: string;\n  streamUrl?: string;\n  token?: string;\n  watermark?: string;\n  webSocket?: typeof WebSocket;\n};\n\nexport default function createDirectLine({\n  botAgent,\n  conversationId,\n  conversationStartProperties,\n  domain,\n  fetch,\n  pollingInterval,\n  secret,\n  streamUrl,\n  token,\n  watermark,\n  webSocket\n}: CreateDirectLineOptions) {\n  // TODO: [P3] Checks if DLJS supports ponyfilling fetch.\n  return new DirectLine({\n    botAgent,\n    conversationId,\n    conversationStartProperties,\n    domain,\n    fetch,\n    pollingInterval,\n    secret,\n    streamUrl,\n    token,\n    watermark,\n    webSocket,\n    createFormData: attachments => {\n      const formData = new FormData();\n\n      attachments.forEach(\n        ({\n          contentType,\n          data,\n          filename,\n          name\n        }: {\n          contentType?: string;\n          data: BlobPart[];\n          filename?: string;\n          name?: string;\n        }) => {\n          formData.append(name, new Blob(data, { type: contentType }), filename);\n        }\n      );\n\n      return formData;\n    }\n  } as any);\n}\n"]},"metadata":{},"sourceType":"script"}