{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime2 = require(\"@babel/runtime/regenerator\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = startSpeakActivityOnPostActivitySaga;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _effects = require(\"redux-saga/effects\");\n\nvar _postActivity = require(\"../actions/postActivity\");\n\nvar _startSpeakingActivity = _interopRequireDefault(require(\"../actions/startSpeakingActivity\"));\n\nvar _whileConnected = _interopRequireDefault(require(\"./effects/whileConnected\"));\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime2.mark(startSpeakActivityOnPostActivity),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime2.mark(startSpeakActivityOnPostActivitySaga);\n\nfunction startSpeakActivityOnPostActivity() {\n  return _regenerator[\"default\"].wrap(function startSpeakActivityOnPostActivity$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return (0, _effects.takeEvery)(function (_ref) {\n            var meta = _ref.meta,\n                payload = _ref.payload,\n                type = _ref.type;\n            return type === _postActivity.POST_ACTIVITY_PENDING && meta.method === 'speech' && payload.activity.type === 'message';\n          }, /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n            return _regenerator[\"default\"].wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return (0, _effects.put)((0, _startSpeakingActivity[\"default\"])());\n\n                  case 2:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction startSpeakActivityOnPostActivitySaga() {\n  return _regenerator[\"default\"].wrap(function startSpeakActivityOnPostActivitySaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return (0, _whileConnected[\"default\"])(startSpeakActivityOnPostActivity);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;qDAEUA;sDAUeC;;AAVzB,SAAUD,gCAAV;AAAA;AAAA;AAAA;AAAA;AAAAE;AACE,iBAAM,wBACJ;AAAA,gBAAGC,IAAH,QAAGA,IAAH;AAAA,gBAASC,OAAT,QAASA,OAAT;AAAA,gBAAkBC,IAAlB,QAAkBA,IAAlB;AAAA,mBACEA,IAAI,KAAKC,mCAATD,IAAkCF,IAAI,CAACI,MAALJ,KAAgB,QAAlDE,IAA8DD,OAAO,CAACI,QAARJ,CAAiBC,IAAjBD,KAA0B,SAD1F;AADI,uDAGJ;AAAA;AAAA;AAAA;AAAA;AAAAK;AACE,2BAAM,kBAAI,wCAAJ,CAAN;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHI,aAAN;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUe,SAAUR,oCAAV;AAAA;AAAA;AAAA;AAAA;AAAAS;AACb,iBAAM,gCAAeV,gCAAf,CAAN;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","names":["startSpeakActivityOnPostActivity","startSpeakActivityOnPostActivitySaga","_context2","meta","payload","type","POST_ACTIVITY_PENDING","method","activity","_context","_context3"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-core/lib/src/sagas/startSpeakActivityOnPostActivitySaga.js"],"sourcesContent":["import { put, takeEvery } from 'redux-saga/effects';\n\nimport { POST_ACTIVITY_PENDING } from '../actions/postActivity';\nimport startSpeakingActivity from '../actions/startSpeakingActivity';\nimport whileConnected from './effects/whileConnected';\n\nfunction* startSpeakActivityOnPostActivity() {\n  yield takeEvery(\n    ({ meta, payload, type }) =>\n      type === POST_ACTIVITY_PENDING && meta.method === 'speech' && payload.activity.type === 'message',\n    function* () {\n      yield put(startSpeakingActivity());\n    }\n  );\n}\n\nexport default function* startSpeakActivityOnPostActivitySaga() {\n  yield whileConnected(startSpeakActivityOnPostActivity);\n}\n"]},"metadata":{},"sourceType":"script"}