{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.useSendBoxSpeechInterimsVisible = useSendBoxSpeechInterimsVisible;\n\nvar _botframeworkWebchatCore = require(\"botframework-webchat-core\");\n\nvar _botframeworkWebchatApi = require(\"botframework-webchat-api\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _DictationInterims = _interopRequireDefault(require(\"./SendBox/DictationInterims\"));\n\nvar _MicrophoneButton = _interopRequireDefault(require(\"./SendBox/MicrophoneButton\"));\n\nvar _SendButton = _interopRequireDefault(require(\"./SendBox/SendButton\"));\n\nvar _SuggestedActions = _interopRequireDefault(require(\"./SendBox/SuggestedActions\"));\n\nvar _TextBox = _interopRequireDefault(require(\"./SendBox/TextBox\"));\n\nvar _UploadButton = _interopRequireDefault(require(\"./SendBox/UploadButton\"));\n\nvar _useStyleSet3 = _interopRequireDefault(require(\"./hooks/useStyleSet\"));\n\nvar _useStyleToEmotionObject = _interopRequireDefault(require(\"./hooks/internal/useStyleToEmotionObject\"));\n\nvar _useWebSpeechPonyfill5 = _interopRequireDefault(require(\"./hooks/useWebSpeechPonyfill\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar _Constants$DictateSta = _botframeworkWebchatCore.Constants.DictateState,\n    DICTATING = _Constants$DictateSta.DICTATING,\n    STARTING = _Constants$DictateSta.STARTING;\nvar useActivities = _botframeworkWebchatApi.hooks.useActivities,\n    useDirection = _botframeworkWebchatApi.hooks.useDirection,\n    useDictateState = _botframeworkWebchatApi.hooks.useDictateState,\n    useStyleOptions = _botframeworkWebchatApi.hooks.useStyleOptions;\nvar ROOT_STYLE = {\n  '&.webchat__send-box': {\n    '& .webchat__send-box__button': {\n      flexShrink: 0\n    },\n    '& .webchat__send-box__dictation-interims': {\n      flex: 10000\n    },\n    '& .webchat__send-box__main': {\n      display: 'flex'\n    },\n    '& .webchat__send-box__microphone-button': {\n      flex: 1\n    },\n    '& .webchat__send-box__text-box': {\n      flex: 10000\n    }\n  }\n}; // TODO: [P3] We should consider exposing core/src/definitions and use it instead\n\nfunction activityIsSpeakingOrQueuedToSpeak(_ref) {\n  var _ref$channelData = _ref.channelData;\n  _ref$channelData = _ref$channelData === void 0 ? {} : _ref$channelData;\n  var speak = _ref$channelData.speak;\n  return !!speak;\n}\n\nfunction useSendBoxSpeechInterimsVisible() {\n  var _useActivities = useActivities(),\n      _useActivities2 = _slicedToArray(_useActivities, 1),\n      activities = _useActivities2[0];\n\n  var _useDictateState = useDictateState(),\n      _useDictateState2 = _slicedToArray(_useDictateState, 1),\n      dictateState = _useDictateState2[0];\n\n  return [(dictateState === STARTING || dictateState === DICTATING) && !activities.filter(activityIsSpeakingOrQueuedToSpeak).length];\n}\n\nvar BasicSendBox = function BasicSendBox(_ref2) {\n  var className = _ref2.className;\n\n  var _useStyleOptions = useStyleOptions(),\n      _useStyleOptions2 = _slicedToArray(_useStyleOptions, 1),\n      _useStyleOptions2$ = _useStyleOptions2[0],\n      hideUploadButton = _useStyleOptions2$.hideUploadButton,\n      sendBoxButtonAlignment = _useStyleOptions2$.sendBoxButtonAlignment;\n\n  var _useStyleSet = (0, _useStyleSet3.default)(),\n      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),\n      sendBoxStyleSet = _useStyleSet2[0].sendBox;\n\n  var _useWebSpeechPonyfill = (0, _useWebSpeechPonyfill5.default)(),\n      _useWebSpeechPonyfill2 = _slicedToArray(_useWebSpeechPonyfill, 1),\n      _useWebSpeechPonyfill3 = _useWebSpeechPonyfill2[0];\n\n  _useWebSpeechPonyfill3 = _useWebSpeechPonyfill3 === void 0 ? {} : _useWebSpeechPonyfill3;\n  var _useWebSpeechPonyfill4 = _useWebSpeechPonyfill3.SpeechRecognition,\n      SpeechRecognition = _useWebSpeechPonyfill4 === void 0 ? undefined : _useWebSpeechPonyfill4;\n\n  var _useDirection = useDirection(),\n      _useDirection2 = _slicedToArray(_useDirection, 1),\n      direction = _useDirection2[0];\n\n  var _useSendBoxSpeechInte = useSendBoxSpeechInterimsVisible(),\n      _useSendBoxSpeechInte2 = _slicedToArray(_useSendBoxSpeechInte, 1),\n      speechInterimsVisible = _useSendBoxSpeechInte2[0];\n\n  var styleToEmotionObject = (0, _useStyleToEmotionObject.default)();\n  var rootClassName = styleToEmotionObject(ROOT_STYLE) + '';\n  var supportSpeechRecognition = !!SpeechRecognition;\n  var buttonClassName = (0, _classnames.default)('webchat__send-box__button', {\n    'webchat__send-box__button--align-bottom': sendBoxButtonAlignment === 'bottom',\n    'webchat__send-box__button--align-stretch': sendBoxButtonAlignment !== 'bottom' && sendBoxButtonAlignment !== 'top',\n    'webchat__send-box__button--align-top': sendBoxButtonAlignment === 'top'\n  });\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: (0, _classnames.default)('webchat__send-box', sendBoxStyleSet + '', rootClassName + '', (className || '') + ''),\n    dir: direction,\n    role: \"form\"\n  }, /*#__PURE__*/_react.default.createElement(_SuggestedActions.default, null), /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__send-box__main\"\n  }, !hideUploadButton && /*#__PURE__*/_react.default.createElement(_UploadButton.default, {\n    className: buttonClassName\n  }), speechInterimsVisible ? /*#__PURE__*/_react.default.createElement(_DictationInterims.default, {\n    className: \"webchat__send-box__dictation-interims\"\n  }) : /*#__PURE__*/_react.default.createElement(_TextBox.default, {\n    className: \"webchat__send-box__text-box\"\n  }), supportSpeechRecognition ? /*#__PURE__*/_react.default.createElement(_MicrophoneButton.default, {\n    className: (0, _classnames.default)(buttonClassName, 'webchat__send-box__microphone-button')\n  }) : /*#__PURE__*/_react.default.createElement(_SendButton.default, {\n    className: buttonClassName\n  })));\n};\n\nBasicSendBox.defaultProps = {\n  className: ''\n};\nBasicSendBox.propTypes = {\n  className: _propTypes.default.string\n};\nvar _default = BasicSendBox;\nexports.default = _default;","map":{"version":3,"mappings":"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","names":["Constants","DictateState","DICTATING","STARTING","useActivities","hooks","useDirection","useDictateState","useStyleOptions","ROOT_STYLE","flexShrink","flex","display","activityIsSpeakingOrQueuedToSpeak","channelData","_ref$channelData","speak","useSendBoxSpeechInterimsVisible","activities","dictateState","filter","length","BasicSendBox","className","hideUploadButton","sendBoxButtonAlignment","sendBoxStyleSet","sendBox","_useWebSpeechPonyfill3","SpeechRecognition","undefined","direction","speechInterimsVisible","styleToEmotionObject","rootClassName","supportSpeechRecognition","buttonClassName","_react","dir","role","_SuggestedActions","_UploadButton","_DictationInterims","_TextBox","_MicrophoneButton","_SendButton","defaultProps","propTypes","PropTypes","string"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-component/lib/src/BasicSendBox.tsx"],"sourcesContent":["import { Constants } from 'botframework-webchat-core';\nimport { hooks } from 'botframework-webchat-api';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\n\nimport DictationInterims from './SendBox/DictationInterims';\nimport MicrophoneButton from './SendBox/MicrophoneButton';\nimport SendButton from './SendBox/SendButton';\nimport SuggestedActions from './SendBox/SuggestedActions';\nimport TextBox from './SendBox/TextBox';\nimport UploadButton from './SendBox/UploadButton';\nimport useStyleSet from './hooks/useStyleSet';\nimport useStyleToEmotionObject from './hooks/internal/useStyleToEmotionObject';\nimport useWebSpeechPonyfill from './hooks/useWebSpeechPonyfill';\n\nconst {\n  DictateState: { DICTATING, STARTING }\n} = Constants;\n\nconst { useActivities, useDirection, useDictateState, useStyleOptions } = hooks;\n\nconst ROOT_STYLE = {\n  '&.webchat__send-box': {\n    '& .webchat__send-box__button': { flexShrink: 0 },\n    '& .webchat__send-box__dictation-interims': { flex: 10000 },\n    '& .webchat__send-box__main': { display: 'flex' },\n    '& .webchat__send-box__microphone-button': { flex: 1 },\n    '& .webchat__send-box__text-box': { flex: 10000 }\n  }\n};\n\n// TODO: [P3] We should consider exposing core/src/definitions and use it instead\nfunction activityIsSpeakingOrQueuedToSpeak({ channelData: { speak } = {} }: { channelData: { speak?: any } }) {\n  return !!speak;\n}\n\nfunction useSendBoxSpeechInterimsVisible(): [boolean] {\n  const [activities] = useActivities();\n  const [dictateState] = useDictateState();\n\n  return [\n    (dictateState === STARTING || dictateState === DICTATING) &&\n      !activities.filter(activityIsSpeakingOrQueuedToSpeak).length\n  ];\n}\n\ntype BasicSendBoxProps = {\n  className?: string;\n};\n\nconst BasicSendBox: FC<BasicSendBoxProps> = ({ className }) => {\n  const [{ hideUploadButton, sendBoxButtonAlignment }] = useStyleOptions();\n  const [{ sendBox: sendBoxStyleSet }] = useStyleSet();\n  const [{ SpeechRecognition = undefined } = {}] = useWebSpeechPonyfill();\n  const [direction] = useDirection();\n  const [speechInterimsVisible] = useSendBoxSpeechInterimsVisible();\n  const styleToEmotionObject = useStyleToEmotionObject();\n\n  const rootClassName = styleToEmotionObject(ROOT_STYLE) + '';\n\n  const supportSpeechRecognition = !!SpeechRecognition;\n\n  const buttonClassName = classNames('webchat__send-box__button', {\n    'webchat__send-box__button--align-bottom': sendBoxButtonAlignment === 'bottom',\n    'webchat__send-box__button--align-stretch': sendBoxButtonAlignment !== 'bottom' && sendBoxButtonAlignment !== 'top',\n    'webchat__send-box__button--align-top': sendBoxButtonAlignment === 'top'\n  });\n\n  return (\n    <div\n      className={classNames('webchat__send-box', sendBoxStyleSet + '', rootClassName + '', (className || '') + '')}\n      dir={direction}\n      role=\"form\"\n    >\n      <SuggestedActions />\n      <div className=\"webchat__send-box__main\">\n        {!hideUploadButton && <UploadButton className={buttonClassName} />}\n        {speechInterimsVisible ? (\n          <DictationInterims className=\"webchat__send-box__dictation-interims\" />\n        ) : (\n          <TextBox className=\"webchat__send-box__text-box\" />\n        )}\n        {supportSpeechRecognition ? (\n          <MicrophoneButton className={classNames(buttonClassName, 'webchat__send-box__microphone-button')} />\n        ) : (\n          <SendButton className={buttonClassName} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nBasicSendBox.defaultProps = {\n  className: ''\n};\n\nBasicSendBox.propTypes = {\n  className: PropTypes.string\n};\n\nexport default BasicSendBox;\n\nexport { useSendBoxSpeechInterimsVisible };\n"]},"metadata":{},"sourceType":"script"}