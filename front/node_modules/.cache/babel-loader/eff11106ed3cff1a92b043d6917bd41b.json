{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _botframeworkWebchatComponent = require(\"botframework-webchat-component\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _AdaptiveCardBuilder = _interopRequireDefault(require(\"./AdaptiveCardBuilder\"));\n\nvar _AdaptiveCardRenderer = _interopRequireDefault(require(\"./AdaptiveCardRenderer\"));\n\nvar _useAdaptiveCardsPackage = _interopRequireDefault(require(\"../hooks/useAdaptiveCardsPackage\"));\n\nvar _useStyleOptions3 = _interopRequireDefault(require(\"../../hooks/useStyleOptions\"));\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n/* eslint no-magic-numbers: [\"error\", { \"ignore\": [25, 75] }] */\n\n\nvar useDirection = _botframeworkWebchatComponent.hooks.useDirection;\n\nvar ThumbnailCardContent = function ThumbnailCardContent(_ref) {\n  var actionPerformedClassName = _ref.actionPerformedClassName,\n      content = _ref.content,\n      disabled = _ref.disabled;\n\n  var _useAdaptiveCardsPack = (0, _useAdaptiveCardsPackage.default)(),\n      _useAdaptiveCardsPack2 = (0, _slicedToArray2.default)(_useAdaptiveCardsPack, 1),\n      adaptiveCardsPackage = _useAdaptiveCardsPack2[0];\n\n  var _useDirection = useDirection(),\n      _useDirection2 = (0, _slicedToArray2.default)(_useDirection, 1),\n      direction = _useDirection2[0];\n\n  var _useStyleOptions = (0, _useStyleOptions3.default)(),\n      _useStyleOptions2 = (0, _slicedToArray2.default)(_useStyleOptions, 1),\n      styleOptions = _useStyleOptions2[0];\n\n  var builtCard = (0, _react.useMemo)(function () {\n    if (content) {\n      var builder = new _AdaptiveCardBuilder.default(adaptiveCardsPackage, styleOptions, direction);\n      var TextSize = adaptiveCardsPackage.TextSize,\n          TextWeight = adaptiveCardsPackage.TextWeight;\n      var buttons = content.buttons,\n          images = content.images,\n          subtitle = content.subtitle,\n          text = content.text,\n          title = content.title;\n      var richCardWrapTitle = styleOptions.richCardWrapTitle;\n\n      if (images && images.length) {\n        var _builder$addColumnSet = builder.addColumnSet([75, 25]),\n            _builder$addColumnSet2 = (0, _slicedToArray2.default)(_builder$addColumnSet, 2),\n            firstColumn = _builder$addColumnSet2[0],\n            lastColumn = _builder$addColumnSet2[1];\n\n        var _images = (0, _slicedToArray2.default)(images, 1),\n            _images$ = _images[0],\n            alt = _images$.alt,\n            tap = _images$.tap,\n            url = _images$.url;\n\n        builder.addTextBlock(title, {\n          size: TextSize.Medium,\n          weight: TextWeight.Bolder,\n          wrap: richCardWrapTitle\n        }, firstColumn);\n        builder.addTextBlock(subtitle, {\n          isSubtle: true,\n          wrap: richCardWrapTitle\n        }, firstColumn);\n        builder.addImage(url, lastColumn, tap, alt);\n        builder.addTextBlock(text, {\n          wrap: true\n        });\n        builder.addButtons(buttons);\n      } else {\n        builder.addCommon(content);\n      }\n\n      return builder.card;\n    }\n  }, [adaptiveCardsPackage, direction, content, styleOptions]);\n  return /*#__PURE__*/_react.default.createElement(_AdaptiveCardRenderer.default, {\n    actionPerformedClassName: actionPerformedClassName,\n    adaptiveCard: builtCard,\n    disabled: disabled,\n    tapAction: content && content.tap\n  });\n};\n\nThumbnailCardContent.defaultProps = {\n  actionPerformedClassName: '',\n  disabled: undefined\n};\nThumbnailCardContent.propTypes = {\n  actionPerformedClassName: _propTypes.default.string,\n  content: _propTypes.default.shape({\n    buttons: _propTypes.default.array,\n    images: _propTypes.default.arrayOf(_propTypes.default.shape({\n      alt: _propTypes.default.string.isRequired,\n      tap: _propTypes.default.any,\n      url: _propTypes.default.string.isRequired\n    })),\n    subtitle: _propTypes.default.string,\n    tap: _propTypes.default.any,\n    text: _propTypes.default.string,\n    title: _propTypes.default.string\n  }).isRequired,\n  disabled: _propTypes.default.bool\n};\nvar _default = ThumbnailCardContent;\nexports.default = _default;","map":{"version":3,"mappings":"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","names":["useDirection","hooks","ThumbnailCardContent","actionPerformedClassName","content","disabled","adaptiveCardsPackage","direction","styleOptions","builtCard","builder","AdaptiveCardBuilder","TextSize","TextWeight","buttons","images","subtitle","text","title","richCardWrapTitle","length","addColumnSet","firstColumn","lastColumn","alt","tap","url","addTextBlock","size","Medium","weight","Bolder","wrap","isSubtle","addImage","addButtons","addCommon","card","_react","_AdaptiveCardRenderer","adaptiveCard","tapAction","defaultProps","undefined","propTypes","PropTypes","string","shape","array","arrayOf","isRequired","any","bool"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat/lib/src/adaptiveCards/Attachment/ThumbnailCardContent.tsx"],"sourcesContent":["/* eslint no-magic-numbers: [\"error\", { \"ignore\": [25, 75] }] */\n\nimport { DirectLineThumbnailCard } from 'botframework-webchat-core';\nimport { hooks } from 'botframework-webchat-component';\nimport PropTypes from 'prop-types';\nimport React, { FC, useMemo } from 'react';\n\nimport AdaptiveCardBuilder from './AdaptiveCardBuilder';\nimport AdaptiveCardRenderer from './AdaptiveCardRenderer';\nimport useAdaptiveCardsPackage from '../hooks/useAdaptiveCardsPackage';\nimport useStyleOptions from '../../hooks/useStyleOptions';\n\nconst { useDirection } = hooks;\n\ntype ThumbnailCardContentProps = {\n  actionPerformedClassName?: string;\n  content: DirectLineThumbnailCard;\n  disabled?: boolean;\n};\n\nconst ThumbnailCardContent: FC<ThumbnailCardContentProps> = ({ actionPerformedClassName, content, disabled }) => {\n  const [adaptiveCardsPackage] = useAdaptiveCardsPackage();\n  const [direction] = useDirection();\n  const [styleOptions] = useStyleOptions();\n\n  const builtCard = useMemo(() => {\n    if (content) {\n      const builder = new AdaptiveCardBuilder(adaptiveCardsPackage, styleOptions, direction);\n      const { TextSize, TextWeight } = adaptiveCardsPackage;\n      const { buttons, images, subtitle, text, title } = content;\n      const { richCardWrapTitle } = styleOptions;\n\n      if (images && images.length) {\n        const [firstColumn, lastColumn] = builder.addColumnSet([75, 25]);\n        const [{ alt, tap, url }] = images;\n\n        builder.addTextBlock(\n          title,\n          { size: TextSize.Medium, weight: TextWeight.Bolder, wrap: richCardWrapTitle },\n          firstColumn\n        );\n\n        builder.addTextBlock(subtitle, { isSubtle: true, wrap: richCardWrapTitle }, firstColumn);\n        builder.addImage(url, lastColumn, tap, alt);\n        builder.addTextBlock(text, { wrap: true });\n        builder.addButtons(buttons);\n      } else {\n        builder.addCommon(content);\n      }\n      return builder.card;\n    }\n  }, [adaptiveCardsPackage, direction, content, styleOptions]);\n\n  return (\n    <AdaptiveCardRenderer\n      actionPerformedClassName={actionPerformedClassName}\n      adaptiveCard={builtCard}\n      disabled={disabled}\n      tapAction={content && content.tap}\n    />\n  );\n};\n\nThumbnailCardContent.defaultProps = {\n  actionPerformedClassName: '',\n  disabled: undefined\n};\n\nThumbnailCardContent.propTypes = {\n  actionPerformedClassName: PropTypes.string,\n  content: PropTypes.shape({\n    buttons: PropTypes.array,\n    images: PropTypes.arrayOf(\n      PropTypes.shape({\n        alt: PropTypes.string.isRequired,\n        tap: PropTypes.any,\n        url: PropTypes.string.isRequired\n      })\n    ),\n    subtitle: PropTypes.string,\n    tap: PropTypes.any,\n    text: PropTypes.string,\n    title: PropTypes.string\n  }).isRequired,\n  disabled: PropTypes.bool\n};\n\nexport default ThumbnailCardContent;\n"]},"metadata":{},"sourceType":"script"}