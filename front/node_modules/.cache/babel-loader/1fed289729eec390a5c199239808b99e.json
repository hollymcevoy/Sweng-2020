{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _botframeworkWebchatApi = require(\"botframework-webchat-api\");\n\nvar _botframeworkWebchatCore = require(\"botframework-webchat-core\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _simpleUpdateIn = _interopRequireDefault(require(\"simple-update-in\"));\n\nvar _createCustomEvent = _interopRequireDefault(require(\"./createCustomEvent\"));\n\nvar _randomId = _interopRequireDefault(require(\"./randomId\"));\n\nvar _useInternalMarkdownIt = _interopRequireDefault(require(\"../hooks/internal/useInternalMarkdownIt\"));\n\nvar _useStyleToEmotionObject = _interopRequireDefault(require(\"../hooks/internal/useStyleToEmotionObject\"));\n\nvar _walkMarkdownTokens = _interopRequireDefault(require(\"./walkMarkdownTokens\"));\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar useStyleOptions = _botframeworkWebchatApi.hooks.useStyleOptions;\n\nfunction replaceAnchorWithButton(markdownTokens) {\n  return (0, _walkMarkdownTokens.default)(markdownTokens, function (markdownToken) {\n    markdownToken = _objectSpread({}, markdownToken);\n\n    switch (markdownToken.type) {\n      case 'link_open':\n        markdownToken.tag = 'button';\n        markdownToken.attrs = [].concat(_toConsumableArray((0, _simpleUpdateIn.default)(markdownToken.attrs, [function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              name = _ref2[0],\n              value = _ref2[1];\n\n          return name === 'href' && value.startsWith('#');\n        }], function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 2),\n              value = _ref4[1];\n\n          return ['data-markdown-href', value.substr(1)];\n        })), [['type', 'button']]);\n        break;\n\n      case 'link_close':\n        markdownToken.tag = 'button';\n        break;\n\n      default:\n        break;\n    }\n\n    return markdownToken;\n  });\n}\n\nvar InlineMarkdown = function InlineMarkdown(_ref5) {\n  var children = _ref5.children,\n      onReference = _ref5.onReference,\n      references = _ref5.references;\n\n  if (typeof children !== 'string') {\n    console.warn('botframework-webchat: \"children\" prop passed to <InlineMarkdown> must be of type string.');\n    children = '';\n  }\n\n  var _useInternalMarkdownI = (0, _useInternalMarkdownIt.default)(),\n      _useInternalMarkdownI2 = _slicedToArray(_useInternalMarkdownI, 1),\n      markdownIt = _useInternalMarkdownI2[0];\n\n  var _useStyleOptions = useStyleOptions(),\n      _useStyleOptions2 = _slicedToArray(_useStyleOptions, 1),\n      accent = _useStyleOptions2[0].accent;\n\n  var styleToClassName = (0, _useStyleToEmotionObject.default)(); // We inlined the style here because this style is:\n  // 1. Internal to Web Chat\n  // 2. Not customizable from developers (other than setting `styleOptions.accent`)\n\n  var className = (0, _react.useMemo)(function () {\n    return styleToClassName({\n      '& button[data-markdown-href]': {\n        appearance: 'none',\n        backgroundColor: 'transparent',\n        border: 0,\n        color: accent,\n        cursor: 'pointer',\n        fontFamily: 'inherit',\n        fontSize: 'inherit',\n        padding: 0\n      }\n    }) + '';\n  }, [accent, styleToClassName]); // Markdown-It only support references in uppercase.\n\n  references = references.map(function (reference) {\n    return reference.toUpperCase();\n  });\n\n  var _references$reduce = references.reduce(function (_ref6, ref) {\n    var hrefToRef = _ref6.hrefToRef,\n        refToHref = _ref6.refToHref;\n    var href = (0, _randomId.default)();\n    return {\n      hrefToRef: _objectSpread(_objectSpread({}, hrefToRef), {}, _defineProperty({}, href, ref)),\n      refToHref: _objectSpread(_objectSpread({}, refToHref), {}, _defineProperty({}, ref, href))\n    };\n  }, {\n    hrefToRef: {},\n    refToHref: {}\n  }),\n      hrefToRef = _references$reduce.hrefToRef,\n      refToHref = _references$reduce.refToHref;\n\n  var html = (0, _react.useMemo)(function () {\n    var tree = markdownIt.parseInline(children, {\n      references: references.reduce(function (references, key) {\n        return (// Mitigated through denylisting.\n          // eslint-disable-next-line security/detect-object-injection\n          (0, _botframeworkWebchatCore.isForbiddenPropertyName)(key) ? references : _objectSpread(_objectSpread({}, references), {}, _defineProperty({}, key, {\n            href: \"#\".concat(refToHref[key])\n          }))\n        );\n      }, {})\n    }); // Turn \"<a href=\"#retry\">Retry</a>\" into \"<button data-ref=\"retry\" type=\"button\">Retry</button>\"\n\n    var updatedTree = replaceAnchorWithButton(tree);\n    return {\n      __html: markdownIt.renderer.render(updatedTree)\n    };\n  }, [children, refToHref, markdownIt, references]);\n  var handleClick = (0, _react.useCallback)(function (event) {\n    event.stopPropagation();\n    var href = event.target.getAttribute('data-markdown-href');\n    href && onReference && onReference((0, _createCustomEvent.default)('reference', // Mitigated through denylisting.\n    // eslint-disable-next-line security/detect-object-injection\n    (0, _botframeworkWebchatCore.isForbiddenPropertyName)(href) ? {} : {\n      data: hrefToRef[href]\n    }));\n  }, [hrefToRef, onReference]);\n  return /*#__PURE__*/_react.default.createElement(\"span\", {\n    className: className,\n    dangerouslySetInnerHTML: html,\n    onClick: handleClick\n  });\n};\n\nInlineMarkdown.defaultProps = {\n  children: '',\n  onReference: undefined,\n  references: []\n};\nInlineMarkdown.propTypes = {\n  children: _propTypes.default.string,\n  onReference: _propTypes.default.func,\n  references: _propTypes.default.arrayOf(_propTypes.default.string)\n};\nvar _default = InlineMarkdown;\nexports.default = _default;","map":{"version":3,"mappings":"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","names":["useStyleOptions","hooks","replaceAnchorWithButton","markdownTokens","markdownToken","type","tag","attrs","name","value","startsWith","substr","InlineMarkdown","children","onReference","references","console","warn","markdownIt","accent","styleToClassName","className","appearance","backgroundColor","border","color","cursor","fontFamily","fontSize","padding","map","reference","toUpperCase","reduce","ref","hrefToRef","refToHref","href","html","tree","parseInline","key","updatedTree","__html","renderer","render","handleClick","event","stopPropagation","target","getAttribute","data","_react","dangerouslySetInnerHTML","onClick","defaultProps","undefined","propTypes","PropTypes","string","func","arrayOf"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-component/lib/src/Utils/InlineMarkdown.js"],"sourcesContent":["/* eslint react/no-danger: \"off\" */\n\nimport { hooks } from 'botframework-webchat-api';\nimport { isForbiddenPropertyName } from 'botframework-webchat-core';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useMemo } from 'react';\nimport updateIn from 'simple-update-in';\n\nimport createCustomEvent from './createCustomEvent';\nimport randomId from './randomId';\nimport useInternalMarkdownIt from '../hooks/internal/useInternalMarkdownIt';\nimport useStyleToEmotionObject from '../hooks/internal/useStyleToEmotionObject';\nimport walkMarkdownTokens from './walkMarkdownTokens';\n\nconst { useStyleOptions } = hooks;\n\nfunction replaceAnchorWithButton(markdownTokens) {\n  return walkMarkdownTokens(markdownTokens, markdownToken => {\n    markdownToken = { ...markdownToken };\n\n    switch (markdownToken.type) {\n      case 'link_open':\n        markdownToken.tag = 'button';\n        markdownToken.attrs = [\n          ...updateIn(\n            markdownToken.attrs,\n            [([name, value]) => name === 'href' && value.startsWith('#')],\n            ([, value]) => ['data-markdown-href', value.substr(1)]\n          ),\n          ['type', 'button']\n        ];\n        break;\n\n      case 'link_close':\n        markdownToken.tag = 'button';\n        break;\n\n      default:\n        break;\n    }\n\n    return markdownToken;\n  });\n}\n\nconst InlineMarkdown = ({ children, onReference, references }) => {\n  if (typeof children !== 'string') {\n    console.warn('botframework-webchat: \"children\" prop passed to <InlineMarkdown> must be of type string.');\n    children = '';\n  }\n\n  const [markdownIt] = useInternalMarkdownIt();\n  const [{ accent }] = useStyleOptions();\n  const styleToClassName = useStyleToEmotionObject();\n\n  // We inlined the style here because this style is:\n  // 1. Internal to Web Chat\n  // 2. Not customizable from developers (other than setting `styleOptions.accent`)\n  const className = useMemo(\n    () =>\n      styleToClassName({\n        '& button[data-markdown-href]': {\n          appearance: 'none',\n          backgroundColor: 'transparent',\n          border: 0,\n          color: accent,\n          cursor: 'pointer',\n          fontFamily: 'inherit',\n          fontSize: 'inherit',\n          padding: 0\n        }\n      }) + '',\n    [accent, styleToClassName]\n  );\n\n  // Markdown-It only support references in uppercase.\n  references = references.map(reference => reference.toUpperCase());\n\n  const { hrefToRef, refToHref } = references.reduce(\n    ({ hrefToRef, refToHref }, ref) => {\n      const href = randomId();\n\n      return {\n        hrefToRef: { ...hrefToRef, [href]: ref },\n        refToHref: { ...refToHref, [ref]: href }\n      };\n    },\n    { hrefToRef: {}, refToHref: {} }\n  );\n\n  const html = useMemo(() => {\n    const tree = markdownIt.parseInline(children, {\n      references: references.reduce(\n        (references, key) =>\n          // Mitigated through denylisting.\n          // eslint-disable-next-line security/detect-object-injection\n          isForbiddenPropertyName(key) ? references : { ...references, [key]: { href: `#${refToHref[key]}` } },\n        {}\n      )\n    });\n\n    // Turn \"<a href=\"#retry\">Retry</a>\" into \"<button data-ref=\"retry\" type=\"button\">Retry</button>\"\n    const updatedTree = replaceAnchorWithButton(tree);\n\n    return { __html: markdownIt.renderer.render(updatedTree) };\n  }, [children, refToHref, markdownIt, references]);\n\n  const handleClick = useCallback(\n    event => {\n      event.stopPropagation();\n\n      const href = event.target.getAttribute('data-markdown-href');\n\n      href &&\n        onReference &&\n        onReference(\n          createCustomEvent(\n            'reference',\n            // Mitigated through denylisting.\n            // eslint-disable-next-line security/detect-object-injection\n            isForbiddenPropertyName(href) ? {} : { data: hrefToRef[href] }\n          )\n        );\n    },\n    [hrefToRef, onReference]\n  );\n\n  return <span className={className} dangerouslySetInnerHTML={html} onClick={handleClick} />;\n};\n\nInlineMarkdown.defaultProps = {\n  children: '',\n  onReference: undefined,\n  references: []\n};\n\nInlineMarkdown.propTypes = {\n  children: PropTypes.string,\n  onReference: PropTypes.func,\n  references: PropTypes.arrayOf(PropTypes.string)\n};\n\nexport default InlineMarkdown;\n"]},"metadata":{},"sourceType":"script"}