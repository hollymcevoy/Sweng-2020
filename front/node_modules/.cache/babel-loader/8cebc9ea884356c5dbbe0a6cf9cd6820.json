{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = whileConnectedEffect;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _effects = require(\"redux-saga/effects\");\n\nvar _connect = require(\"../../actions/connect\");\n\nvar _disconnect = require(\"../../actions/disconnect\");\n\nvar _reconnect = require(\"../../actions/reconnect\");\n\nfunction whileConnectedEffect(fn) {\n  return (0, _effects.call)( /*#__PURE__*/_regenerator[\"default\"].mark(function whileConnected() {\n    var _yield$take, _yield$take$meta, userID, username, directLine, task;\n\n    return _regenerator[\"default\"].wrap(function whileConnected$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return (0, _effects.take)([_connect.CONNECT_FULFILLING, _reconnect.RECONNECT_FULFILLING]);\n\n          case 2:\n            _yield$take = _context.sent;\n            _yield$take$meta = _yield$take.meta;\n            userID = _yield$take$meta.userID;\n            username = _yield$take$meta.username;\n            directLine = _yield$take.payload.directLine;\n            _context.next = 9;\n            return (0, _effects.fork)(fn, {\n              directLine: directLine,\n              userID: userID,\n              username: username\n            });\n\n          case 9:\n            task = _context.sent;\n            _context.next = 12;\n            return (0, _effects.take)([_disconnect.DISCONNECT_PENDING, _reconnect.RECONNECT_PENDING]);\n\n          case 12:\n            _context.next = 14;\n            return (0, _effects.cancel)(task);\n\n          case 14:\n            _context.next = 0;\n            break;\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, whileConnected);\n  }));\n}","map":{"version":3,"mappings":";;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AAEe,SAASA,oBAAT,CAA8BC,EAA9B,EAAkC;AAC/C,SAAO,8DAAK,SAAUC,cAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAAC;AAKJ,mBAAM,mBAAK,CAACC,2BAAD,EAAqBC,+BAArB,CAAL,CAAN;;AALI;AAAAC;AAAAC,2CAGNC,IAHM;AAGEC,kBAHF,oBAGEA;AAAQC,oBAHV,oBAGUA;AACLC,sBAJL,eAINC,OAJM,CAIKD;AAJLR;AAMK,mBAAM,mBAAKF,EAAL,EAAS;AAAEU,wBAAU,EAAVA,UAAF;AAAcF,oBAAM,EAANA,MAAd;AAAsBC,sBAAQ,EAARA;AAAtB,aAAT,CAAN;;AANL;AAMFG,gBANE,gBAMFA;AANEV;AAUR,mBAAM,mBAAK,CAACW,8BAAD,EAAqBC,4BAArB,CAAL,CAAN;;AAVQ;AAAAZ;AAWR,mBAAM,qBAAOU,IAAP,CAAN;;AAXQ;AAAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAUD,cAAV;AAAL,KAAP;AAcD","names":["whileConnectedEffect","fn","whileConnected","_context","CONNECT_FULFILLING","RECONNECT_FULFILLING","_yield$take","_yield$take$meta","meta","userID","username","directLine","payload","task","DISCONNECT_PENDING","RECONNECT_PENDING"],"sources":["/Users/dylanmurray/Sweng-2022/front/node_modules/botframework-webchat-core/lib/src/sagas/effects/whileConnected.js"],"sourcesContent":["import { call, cancel, fork, take } from 'redux-saga/effects';\n\nimport { CONNECT_FULFILLING } from '../../actions/connect';\nimport { DISCONNECT_PENDING } from '../../actions/disconnect';\nimport { RECONNECT_PENDING, RECONNECT_FULFILLING } from '../../actions/reconnect';\n\nexport default function whileConnectedEffect(fn) {\n  return call(function* whileConnected() {\n    for (;;) {\n      const {\n        meta: { userID, username },\n        payload: { directLine }\n      } = yield take([CONNECT_FULFILLING, RECONNECT_FULFILLING]);\n      const task = yield fork(fn, { directLine, userID, username });\n\n      // When we receive DISCONNECT_PENDING or RECONNECT_PENDING, the Direct Line connection is currently busy and should not be used.\n\n      yield take([DISCONNECT_PENDING, RECONNECT_PENDING]);\n      yield cancel(task);\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"script"}